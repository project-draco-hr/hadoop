{
  File nodeLabelFsStoreDir=new File("target",this.getClass().getSimpleName() + "-testRMRestartRecoveringNodeLabelManager");
  if (nodeLabelFsStoreDir.exists()) {
    FileUtils.deleteDirectory(nodeLabelFsStoreDir);
  }
  nodeLabelFsStoreDir.deleteOnExit();
  String nodeLabelFsStoreDirURI=nodeLabelFsStoreDir.toURI().toString();
  conf.set(YarnConfiguration.FS_NODE_LABELS_STORE_ROOT_DIR,nodeLabelFsStoreDirURI);
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  MockRM rm1=new MockRM(conf,memStore){
    @Override protected RMNodeLabelsManager createNodeLabelManager(){
      RMNodeLabelsManager mgr=new RMNodeLabelsManager();
      mgr.init(getConfig());
      return mgr;
    }
  }
;
  rm1.init(conf);
  rm1.start();
  RMNodeLabelsManager nodeLabelManager=rm1.getRMContext().getNodeLabelManager();
  Set<String> clusterNodeLabels=new HashSet<String>();
  clusterNodeLabels.add("x");
  clusterNodeLabels.add("y");
  clusterNodeLabels.add("z");
  nodeLabelManager.addToCluserNodeLabels(clusterNodeLabels);
  NodeId n1=NodeId.newInstance("h1",0);
  nodeLabelManager.addLabelsToNode(ImmutableMap.of(n1,toSet("x")));
  clusterNodeLabels.remove("z");
  nodeLabelManager.removeFromClusterNodeLabels(toSet("z"));
  nodeLabelManager.replaceLabelsOnNode(ImmutableMap.of(n1,toSet("x","y")));
  int count=10;
  while (count-- > 0) {
    if (nodeLabelManager.getNodeLabels().size() > 0) {
      break;
    }
    Thread.sleep(500);
  }
  Assert.assertEquals(clusterNodeLabels.size(),nodeLabelManager.getClusterNodeLabels().size());
  Map<NodeId,Set<String>> nodeLabels=nodeLabelManager.getNodeLabels();
  Assert.assertEquals(1,nodeLabelManager.getNodeLabels().size());
  Assert.assertTrue(nodeLabels.get(n1).equals(toSet("x","y")));
  MockRM rm2=new MockRM(conf,memStore){
    @Override protected RMNodeLabelsManager createNodeLabelManager(){
      RMNodeLabelsManager mgr=new RMNodeLabelsManager();
      mgr.init(getConfig());
      return mgr;
    }
  }
;
  rm2.init(conf);
  rm2.start();
  nodeLabelManager=rm2.getRMContext().getNodeLabelManager();
  Assert.assertEquals(clusterNodeLabels.size(),nodeLabelManager.getClusterNodeLabels().size());
  nodeLabels=nodeLabelManager.getNodeLabels();
  Assert.assertEquals(1,nodeLabelManager.getNodeLabels().size());
  Assert.assertTrue(nodeLabels.get(n1).equals(toSet("x","y")));
  rm1.stop();
  rm2.stop();
}
