{
  MemoryRMStateStore memStore=new MemoryRMStateStore(){
    @Override public synchronized void storeApplicationAttemptStateInternal(    ApplicationAttemptId attemptId,    ApplicationAttemptStateData attemptStateData) throws Exception {
    }
    @Override public synchronized void updateApplicationAttemptStateInternal(    ApplicationAttemptId attemptId,    ApplicationAttemptStateData attemptStateData) throws Exception {
    }
  }
;
  memStore.init(conf);
  MockRM rm1=createMockRM(conf,memStore);
  rm1.start();
  RMApp app0=rm1.submitApp(200,"name","user",new HashMap<ApplicationAccessType,String>(),false,"default",-1,null,"MAPREDUCE",false);
  rm1.killApp(app0.getApplicationId());
  rm1.waitForState(app0.getApplicationId(),RMAppState.KILLED);
  MockRM rm2=createMockRM(conf,memStore);
  rm2.start();
  RMApp loadedApp0=rm2.getRMContext().getRMApps().get(app0.getApplicationId());
  rm2.waitForState(loadedApp0.getApplicationId(),RMAppState.KILLED);
  Assert.assertTrue(loadedApp0.getAppAttempts().size() == 0);
}
