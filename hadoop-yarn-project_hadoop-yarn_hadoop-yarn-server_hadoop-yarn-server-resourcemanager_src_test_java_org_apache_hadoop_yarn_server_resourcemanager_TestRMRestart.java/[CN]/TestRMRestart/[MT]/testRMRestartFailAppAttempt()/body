{
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);
  int maxAttempt=conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  RMState rmState=memStore.getState();
  Map<ApplicationId,ApplicationStateData> rmAppState=rmState.getApplicationState();
  MockRM rm1=createMockRM(conf,memStore);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app0=rm1.submitApp(200);
  MockAM am0=launchAM(app0,rm1,nm1);
  ApplicationId applicationId=app0.getApplicationId();
  ApplicationAttemptId appAttemptId1=app0.getCurrentAppAttempt().getAppAttemptId();
  Assert.assertEquals(1,appAttemptId1.getAttemptId());
  rm1.failApplicationAttempt(appAttemptId1);
  rm1.waitForState(appAttemptId1,RMAppAttemptState.FAILED);
  rm1.waitForState(applicationId,RMAppState.ACCEPTED);
  ApplicationAttemptId appAttemptId2=app0.getCurrentAppAttempt().getAppAttemptId();
  Assert.assertEquals(2,appAttemptId2.getAttemptId());
  rm1.waitForState(appAttemptId2,RMAppAttemptState.SCHEDULED);
  MockRM rm2=createMockRM(conf,memStore);
  rm2.start();
  RMApp loadedApp0=rm2.getRMContext().getRMApps().get(applicationId);
  rm2.waitForState(applicationId,RMAppState.ACCEPTED);
  rm2.waitForState(am0.getApplicationAttemptId(),RMAppAttemptState.FAILED);
  Thread.sleep(1000);
  Assert.assertEquals(2,loadedApp0.getAppAttempts().size());
  rm2.waitForState(appAttemptId2,RMAppAttemptState.SCHEDULED);
  appAttemptId2=loadedApp0.getCurrentAppAttempt().getAppAttemptId();
  Assert.assertEquals(2,appAttemptId2.getAttemptId());
  rm2.failApplicationAttempt(appAttemptId2);
  rm2.waitForState(appAttemptId2,RMAppAttemptState.FAILED);
  rm2.waitForState(applicationId,RMAppState.FAILED);
  Assert.assertEquals(maxAttempt,loadedApp0.getAppAttempts().size());
}
