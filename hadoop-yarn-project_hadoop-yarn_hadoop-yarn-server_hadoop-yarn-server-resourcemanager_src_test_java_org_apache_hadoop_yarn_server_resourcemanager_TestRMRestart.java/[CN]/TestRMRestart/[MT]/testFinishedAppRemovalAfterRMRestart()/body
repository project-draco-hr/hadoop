{
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  conf.setInt(YarnConfiguration.RM_MAX_COMPLETED_APPLICATIONS,1);
  memStore.init(conf);
  RMState rmState=memStore.getState();
  MockRM rm1=createMockRM(conf,memStore);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app0=rm1.submitApp(200);
  MockAM am0=launchAM(app0,rm1,nm1);
  finishApplicationMaster(app0,rm1,nm1,am0);
  MockRM rm2=createMockRM(conf,memStore);
  rm2.start();
  nm1.setResourceTrackerService(rm2.getResourceTrackerService());
  nm1=rm2.registerNode("127.0.0.1:1234",15120);
  Map<ApplicationId,ApplicationStateData> rmAppState=rmState.getApplicationState();
  Assert.assertEquals(RMAppState.FINISHED,rmAppState.get(app0.getApplicationId()).getState());
  rm2.waitForState(app0.getApplicationId(),RMAppState.FINISHED);
  RMApp app1=rm2.submitApp(200);
  MockAM am1=launchAM(app1,rm2,nm1);
  finishApplicationMaster(app1,rm2,nm1,am1);
  rm2.drainEvents();
  Assert.assertNull(rm2.getRMContext().getRMApps().get(app0.getApplicationId()));
  Assert.assertNull(rmAppState.get(app0.getApplicationId()));
}
