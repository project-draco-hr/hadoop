{
  Logger rootLogger=LogManager.getRootLogger();
  rootLogger.setLevel(Level.DEBUG);
  ExitUtil.disableSystemExit();
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.RECOVERY_ENABLED,"true");
  conf.set(YarnConfiguration.RM_STORE,MemoryRMStateStore.class.getName());
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,2);
  conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
  UserGroupInformation.setConfiguration(conf);
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  RMState rmState=memStore.getState();
  Map<ApplicationId,ApplicationState> rmAppState=rmState.getApplicationState();
  MockRM rm1=new TestSecurityMockRM(conf,memStore);
  rm1.start();
  HashSet<Token<RMDelegationTokenIdentifier>> tokenSet=new HashSet<Token<RMDelegationTokenIdentifier>>();
  Credentials ts=new Credentials();
  Text userText1=new Text("user1");
  RMDelegationTokenIdentifier dtId1=new RMDelegationTokenIdentifier(userText1,new Text("renewer1"),userText1);
  Token<RMDelegationTokenIdentifier> token1=new Token<RMDelegationTokenIdentifier>(dtId1,rm1.getRMDTSecretManager());
  ts.addToken(userText1,token1);
  tokenSet.add(token1);
  Text userText2=new Text("user2");
  RMDelegationTokenIdentifier dtId2=new RMDelegationTokenIdentifier(userText2,new Text("renewer2"),userText2);
  Token<RMDelegationTokenIdentifier> token2=new Token<RMDelegationTokenIdentifier>(dtId2,rm1.getRMDTSecretManager());
  ts.addToken(userText2,token2);
  tokenSet.add(token2);
  RMApp app=rm1.submitApp(200,"name","user",new HashMap<ApplicationAccessType,String>(),false,"default",1,ts);
  ApplicationState appState=rmAppState.get(app.getApplicationId());
  Assert.assertNotNull(appState);
  Assert.assertEquals(tokenSet,rm1.getRMContext().getDelegationTokenRenewer().getDelegationTokens());
  DataOutputBuffer dob=new DataOutputBuffer();
  ts.writeTokenStorageToStream(dob);
  ByteBuffer securityTokens=ByteBuffer.wrap(dob.getData(),0,dob.getLength());
  securityTokens.rewind();
  Assert.assertEquals(securityTokens,appState.getApplicationSubmissionContext().getAMContainerSpec().getTokens());
  MockRM rm2=new TestSecurityMockRM(conf,memStore);
  rm2.start();
  Assert.assertEquals(tokenSet,rm2.getRMContext().getDelegationTokenRenewer().getDelegationTokens());
  rm1.stop();
  rm2.stop();
}
