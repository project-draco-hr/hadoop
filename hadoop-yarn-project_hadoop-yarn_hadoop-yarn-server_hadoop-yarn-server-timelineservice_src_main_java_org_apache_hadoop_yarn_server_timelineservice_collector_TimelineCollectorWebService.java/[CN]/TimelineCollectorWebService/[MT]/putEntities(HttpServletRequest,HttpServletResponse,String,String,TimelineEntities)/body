{
  init(res);
  UserGroupInformation callerUgi=getUser(req);
  if (callerUgi == null) {
    String msg="The owner of the posted timeline entities is not set";
    LOG.error(msg);
    throw new ForbiddenException(msg);
  }
  boolean isAsync=async != null && async.trim().equalsIgnoreCase("true");
  try {
    ApplicationId appID=parseApplicationId(appId);
    if (appID == null) {
      return Response.status(Response.Status.BAD_REQUEST).build();
    }
    NodeTimelineCollectorManager collectorManager=(NodeTimelineCollectorManager)context.getAttribute(NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);
    TimelineCollector collector=collectorManager.get(appID);
    if (collector == null) {
      LOG.error("Application: " + appId + " is not found");
      throw new NotFoundException();
    }
    collector.putEntities(processTimelineEntities(entities),callerUgi);
    return Response.ok().build();
  }
 catch (  Exception e) {
    LOG.error("Error putting entities",e);
    throw new WebApplicationException(e,Response.Status.INTERNAL_SERVER_ERROR);
  }
}
