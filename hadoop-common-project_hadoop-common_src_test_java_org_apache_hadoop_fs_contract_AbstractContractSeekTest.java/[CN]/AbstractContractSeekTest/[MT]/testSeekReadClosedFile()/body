{
  instream=getFileSystem().open(smallSeekFile);
  getLog().debug("Stream is of type " + instream.getClass().getCanonicalName());
  instream.close();
  try {
    instream.seek(0);
    if (!isSupported(SUPPORTS_SEEK_ON_CLOSED_FILE)) {
      fail("seek succeeded on a closed stream");
    }
  }
 catch (  IOException e) {
  }
  try {
    int data=instream.available();
    if (!isSupported(SUPPORTS_AVAILABLE_ON_CLOSED_FILE)) {
      fail("available() succeeded on a closed stream, got " + data);
    }
  }
 catch (  IOException e) {
  }
  try {
    int data=instream.read();
    fail("read() succeeded on a closed stream, got " + data);
  }
 catch (  IOException e) {
  }
  try {
    byte[] buffer=new byte[1];
    int result=instream.read(buffer,0,1);
    fail("read(buffer, 0, 1) succeeded on a closed stream, got " + result);
  }
 catch (  IOException e) {
  }
  try {
    long offset=instream.getPos();
  }
 catch (  IOException e) {
  }
  instream.close();
}
