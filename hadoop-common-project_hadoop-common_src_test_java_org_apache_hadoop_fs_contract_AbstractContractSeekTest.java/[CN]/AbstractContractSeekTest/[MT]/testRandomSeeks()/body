{
  int limit=getContract().getLimit(TEST_RANDOM_SEEK_COUNT,DEFAULT_RANDOM_SEEK_COUNT);
  describe("Testing " + limit + " random seeks");
  int filesize=10 * 1024;
  byte[] buf=dataset(filesize,0,255);
  Path randomSeekFile=path("testrandomseeks.bin");
  createFile(getFileSystem(),randomSeekFile,false,buf);
  Random r=new Random();
  int[] seeks=new int[10];
  int[] reads=new int[10];
  try (FSDataInputStream stm=getFileSystem().open(randomSeekFile)){
    for (int i=0; i < limit; i++) {
      int seekOff=r.nextInt(buf.length);
      int toRead=r.nextInt(Math.min(buf.length - seekOff,32000));
      seeks[i % seeks.length]=seekOff;
      reads[i % reads.length]=toRead;
      verifyRead(stm,buf,seekOff,toRead);
    }
  }
 catch (  AssertionError afe) {
    StringBuilder sb=new StringBuilder();
    sb.append("Sequence of actions:\n");
    for (int j=0; j < seeks.length; j++) {
      sb.append("seek @ ").append(seeks[j]).append("  ").append("read ").append(reads[j]).append("\n");
    }
    LOG.error(sb.toString());
    throw afe;
  }
}
