{
  describe("readFully operations");
  assumeSupportsPositionedReadable();
  instream=getFileSystem().open(smallSeekFile);
  byte[] buffer=new byte[256];
  try {
    instream.readFully(0,buffer,0,-16);
    fail("Expected an exception");
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  try {
    instream.readFully(0,buffer,-1,16);
    fail("Expected an exception");
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  try {
    instream.readFully(-1,buffer);
    fail("Expected an exception");
  }
 catch (  EOFException e) {
    handleExpectedException(e);
  }
catch (  IOException|IllegalArgumentException|IndexOutOfBoundsException e) {
    handleRelaxedException("readFully with a negative position ","EOFException",e);
  }
  try {
    instream.readFully(0,buffer,buffer.length - 8,16);
    fail("Expected an exception");
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  assertEquals(0,instream.getPos());
  instream.readFully(0,buffer);
  assertEquals(0,instream.getPos());
  byte[] fullFile=new byte[TEST_FILE_LEN];
  instream.readFully(0,fullFile);
  assertEquals(0,instream.getPos());
  try {
    instream.readFully(16,fullFile);
    fail("Expected an exception");
  }
 catch (  EOFException e) {
    handleExpectedException(e);
  }
catch (  IOException e) {
    handleRelaxedException("readFully which reads past EOF ","EOFException",e);
  }
}
