{
  describe("PositionedRead.read operations");
  assumeSupportsPositionedReadable();
  instream=getFileSystem().open(smallSeekFile);
  byte[] buffer=new byte[256];
  int r;
  try {
    r=instream.read(0,buffer,0,-16);
    fail("Expected an exception, got " + r);
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  try {
    r=instream.read(0,buffer,-1,16);
    fail("Expected an exception, got " + r);
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  try {
    r=instream.read(-1,buffer,0,16);
    fail("Expected an exception, got " + r);
  }
 catch (  EOFException e) {
    handleExpectedException(e);
  }
catch (  IOException|IllegalArgumentException|IndexOutOfBoundsException e) {
    handleRelaxedException("read() with a negative position ","EOFException",e);
  }
  try {
    r=instream.read(0,buffer,buffer.length - 8,16);
    fail("Expected an exception, got " + r);
  }
 catch (  IllegalArgumentException|IndexOutOfBoundsException e) {
  }
  assertEquals(0,instream.getPos());
  instream.readFully(0,buffer);
  assertEquals(0,instream.getPos());
  byte[] fullFile=new byte[TEST_FILE_LEN];
  assertEquals(TEST_FILE_LEN,instream.read(0,fullFile,0,fullFile.length));
  assertEquals(0,instream.getPos());
  assertEquals(-1,instream.read(TEST_FILE_LEN + 16,buffer,0,1));
}
