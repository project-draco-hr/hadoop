{
  Configuration conf=new Configuration();
  LocalFileSystem localFs=FileSystem.getLocal(conf);
  Path testPath=new Path(TEST_ROOT_DIR,"testPath");
  Path testPath11=new Path(TEST_ROOT_DIR,"testPath11");
  FSDataOutputStream fout=localFs.create(testPath);
  fout.write("testing".getBytes());
  fout.close();
  fout=localFs.create(testPath11);
  fout.write("testing you".getBytes());
  fout.close();
  readFile(localFs,testPath,128);
  readFile(localFs,testPath,511);
  readFile(localFs,testPath,512);
  readFile(localFs,testPath,513);
  readFile(localFs,testPath,1023);
  readFile(localFs,testPath,1024);
  readFile(localFs,testPath,1025);
  localFs.delete(localFs.getChecksumFile(testPath),true);
  assertTrue("checksum deleted",!localFs.exists(localFs.getChecksumFile(testPath)));
  FileUtil.copy(localFs,localFs.getChecksumFile(testPath11),localFs,localFs.getChecksumFile(testPath),false,true,conf);
  assertTrue("checksum exists",localFs.exists(localFs.getChecksumFile(testPath)));
  boolean errorRead=false;
  try {
    readFile(localFs,testPath,1024);
  }
 catch (  ChecksumException ie) {
    errorRead=true;
  }
  assertTrue("error reading",errorRead);
  try {
    localFs.setVerifyChecksum(false);
    String str=readFile(localFs,testPath,1024).toString();
    assertTrue("read","testing".equals(str));
  }
  finally {
    localFs.setVerifyChecksum(true);
  }
}
