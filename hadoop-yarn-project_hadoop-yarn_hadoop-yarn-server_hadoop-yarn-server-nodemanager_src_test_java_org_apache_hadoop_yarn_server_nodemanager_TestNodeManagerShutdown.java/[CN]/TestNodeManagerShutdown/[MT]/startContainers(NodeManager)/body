{
  ContainerManagerImpl containerManager=nm.getContainerManager();
  File scriptFile=createUnhaltingScriptFile();
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  ContainerId cId=createContainerId();
  containerLaunchContext.setContainerId(cId);
  containerLaunchContext.setUser(user);
  URL localResourceUri=ConverterUtils.getYarnUrlFromPath(localFS.makeQualified(new Path(scriptFile.getAbsolutePath())));
  LocalResource localResource=recordFactory.newRecordInstance(LocalResource.class);
  localResource.setResource(localResourceUri);
  localResource.setSize(-1);
  localResource.setVisibility(LocalResourceVisibility.APPLICATION);
  localResource.setType(LocalResourceType.FILE);
  localResource.setTimestamp(scriptFile.lastModified());
  String destinationFile="dest_file";
  Map<String,LocalResource> localResources=new HashMap<String,LocalResource>();
  localResources.put(destinationFile,localResource);
  containerLaunchContext.setLocalResources(localResources);
  containerLaunchContext.setUser(containerLaunchContext.getUser());
  List<String> commands=new ArrayList<String>();
  commands.add("/bin/bash");
  commands.add(scriptFile.getAbsolutePath());
  containerLaunchContext.setCommands(commands);
  containerLaunchContext.setResource(recordFactory.newRecordInstance(Resource.class));
  containerLaunchContext.getResource().setMemory(1024);
  StartContainerRequest startRequest=recordFactory.newRecordInstance(StartContainerRequest.class);
  startRequest.setContainerLaunchContext(containerLaunchContext);
  containerManager.startContainer(startRequest);
  GetContainerStatusRequest request=recordFactory.newRecordInstance(GetContainerStatusRequest.class);
  request.setContainerId(cId);
  ContainerStatus containerStatus=containerManager.getContainerStatus(request).getStatus();
  Assert.assertEquals(ContainerState.RUNNING,containerStatus.getState());
}
