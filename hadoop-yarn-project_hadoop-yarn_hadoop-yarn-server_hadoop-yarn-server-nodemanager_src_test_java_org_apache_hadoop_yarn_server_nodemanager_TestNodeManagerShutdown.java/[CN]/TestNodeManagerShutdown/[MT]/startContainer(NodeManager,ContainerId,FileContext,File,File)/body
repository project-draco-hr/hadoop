{
  File scriptFile=createUnhaltingScriptFile(cId,scriptFileDir,processStartFile);
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  NodeId nodeId=BuilderUtils.newNodeId("localhost",1234);
  URL localResourceUri=ConverterUtils.getYarnUrlFromPath(localFS.makeQualified(new Path(scriptFile.getAbsolutePath())));
  LocalResource localResource=recordFactory.newRecordInstance(LocalResource.class);
  localResource.setResource(localResourceUri);
  localResource.setSize(-1);
  localResource.setVisibility(LocalResourceVisibility.APPLICATION);
  localResource.setType(LocalResourceType.FILE);
  localResource.setTimestamp(scriptFile.lastModified());
  String destinationFile="dest_file";
  Map<String,LocalResource> localResources=new HashMap<String,LocalResource>();
  localResources.put(destinationFile,localResource);
  containerLaunchContext.setLocalResources(localResources);
  List<String> commands=Arrays.asList(Shell.getRunScriptCommand(scriptFile));
  containerLaunchContext.setCommands(commands);
  Resource resource=BuilderUtils.newResource(1024,1);
  ContainerToken containerToken=BuilderUtils.newContainerToken(cId,nodeId.getHost(),nodeId.getPort(),user,resource,System.currentTimeMillis() + 10000L,123,"password".getBytes(),0);
  StartContainerRequest startRequest=recordFactory.newRecordInstance(StartContainerRequest.class);
  startRequest.setContainerLaunchContext(containerLaunchContext);
  startRequest.setContainerToken(containerToken);
  UserGroupInformation currentUser=UserGroupInformation.createRemoteUser(cId.toString());
  ContainerManager containerManager=currentUser.doAs(new PrivilegedAction<ContainerManager>(){
    @Override public ContainerManager run(){
      Configuration conf=new Configuration();
      YarnRPC rpc=YarnRPC.create(conf);
      InetSocketAddress containerManagerBindAddress=NetUtils.createSocketAddrForHost("127.0.0.1",12345);
      return (ContainerManager)rpc.getProxy(ContainerManager.class,containerManagerBindAddress,conf);
    }
  }
);
  containerManager.startContainer(startRequest);
  GetContainerStatusRequest request=recordFactory.newRecordInstance(GetContainerStatusRequest.class);
  request.setContainerId(cId);
  ContainerStatus containerStatus=containerManager.getContainerStatus(request).getStatus();
  Assert.assertEquals(ContainerState.RUNNING,containerStatus.getState());
}
