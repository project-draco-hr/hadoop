{
  FoldedTreeSet<Holder> set=new FoldedTreeSet<>();
  long[] longs=new long[32147];
  for (int i=0; i < longs.length; i++) {
    Holder val=new Holder(srand.nextLong());
    while (set.contains(val)) {
      val=new Holder(srand.nextLong());
    }
    longs[i]=val.getId();
    set.add(val);
  }
  assertEquals(longs.length,set.size());
  Comparator<Object> cmp=new Comparator<Object>(){
    @Override public int compare(    Object o1,    Object o2){
      long lookup=(long)o1;
      long stored=((Holder)o2).getId();
      return lookup < stored ? -1 : lookup > stored ? 1 : 0;
    }
  }
;
  for (  long val : longs) {
    assertEquals(val,set.get(val,cmp).getId());
  }
}
