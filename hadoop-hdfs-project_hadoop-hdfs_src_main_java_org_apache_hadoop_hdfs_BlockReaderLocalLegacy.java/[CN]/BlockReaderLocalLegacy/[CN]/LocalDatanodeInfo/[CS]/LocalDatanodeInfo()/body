{
  final int cacheSize=10000;
  final float hashTableLoadFactor=0.75f;
  int hashTableCapacity=(int)Math.ceil(cacheSize / hashTableLoadFactor) + 1;
  cache=Collections.synchronizedMap(new LinkedHashMap<ExtendedBlock,BlockLocalPathInfo>(hashTableCapacity,hashTableLoadFactor,true){
    private static final long serialVersionUID=1;
    @Override protected boolean removeEldestEntry(    Map.Entry<ExtendedBlock,BlockLocalPathInfo> eldest){
      return size() > cacheSize;
    }
  }
);
}
