{
  if (purgeInformation.size() > maxUniqueMessages) {
    ErrorAndWarningsCleanup cleanup=new ErrorAndWarningsCleanup();
    long cutoff=Time.now() - (messageAgeLimitSeconds * 1000);
    cutoff=(cutoff / 1000);
    cleanup.cleanupMessages(map,purgeInformation,cutoff,maxUniqueMessages);
  }
  List<Map<String,Element>> ret=new ArrayList<>(cutoffs.size());
  for (int i=0; i < cutoffs.size(); ++i) {
    ret.add(new HashMap<String,Element>());
  }
synchronized (lock) {
    for (    Map.Entry<String,SortedMap<Long,Integer>> element : map.entrySet()) {
      for (int i=0; i < cutoffs.size(); ++i) {
        Map<String,Element> retMap=ret.get(i);
        SortedMap<Long,Integer> qualifyingTimes=element.getValue().tailMap(cutoffs.get(i));
        long count=0;
        for (        Map.Entry<Long,Integer> entry : qualifyingTimes.entrySet()) {
          count+=entry.getValue();
        }
        if (!qualifyingTimes.isEmpty()) {
          retMap.put(element.getKey(),new Element(count,qualifyingTimes.lastKey()));
        }
      }
    }
  }
  return ret;
}
