{
  String message=event.getRenderedMessage();
  String[] throwableStr=event.getThrowableStrRep();
  if (throwableStr != null) {
    message=message + "\n" + StringUtils.join("\n",throwableStr);
    message=org.apache.commons.lang.StringUtils.left(message,MAX_MESSAGE_SIZE);
  }
  int level=event.getLevel().toInt();
  if (level == Level.WARN_INT || level == Level.ERROR_INT) {
    Long eventTimeSeconds=event.getTimeStamp() / 1000;
    Map<String,SortedMap<Long,Integer>> map;
    SortedMap<Long,Integer> timestampsCount;
    SortedSet<PurgeElement> purgeInformation;
    if (level == Level.WARN_INT) {
      map=warnings;
      timestampsCount=warningsTimestampCount;
      purgeInformation=warningsPurgeInformation;
    }
 else {
      map=errors;
      timestampsCount=errorsTimestampCount;
      purgeInformation=errorsPurgeInformation;
    }
    updateMessageDetails(message,eventTimeSeconds,map,timestampsCount,purgeInformation);
  }
}
