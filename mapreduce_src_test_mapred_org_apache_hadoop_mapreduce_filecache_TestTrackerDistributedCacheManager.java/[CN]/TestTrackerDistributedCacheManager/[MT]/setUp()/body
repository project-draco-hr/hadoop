{
  File TEST_ROOT=new File(TEST_ROOT_DIR);
  if (!TEST_ROOT.exists()) {
    TEST_ROOT.mkdirs();
  }
  conf=new Configuration();
  conf.set(FileSystem.FS_DEFAULT_NAME_KEY,"file:///");
  fs=FileSystem.get(conf);
  assertTrue("Test root directory " + TEST_ROOT + " and all of its "+ "parent directories must have a+x permissions",ClientDistributedCacheManager.ancestorsHaveExecutePermissions(fs,new Path(TEST_ROOT.toString())));
  ROOT_MAPRED_LOCAL_DIR=new File(TEST_ROOT_DIR,"mapred/local");
  ROOT_MAPRED_LOCAL_DIR.mkdirs();
  String[] localDirs=new String[numLocalDirs];
  for (int i=0; i < numLocalDirs; i++) {
    File localDir=new File(ROOT_MAPRED_LOCAL_DIR,"0_" + i);
    localDirs[i]=localDir.getPath();
    localDir.mkdir();
  }
  conf.setStrings(MRConfig.LOCAL_DIR,localDirs);
  Class<? extends TaskController> taskControllerClass=conf.getClass(TTConfig.TT_TASK_CONTROLLER,DefaultTaskController.class,TaskController.class);
  taskController=(TaskController)ReflectionUtils.newInstance(taskControllerClass,conf);
  taskController.setup();
  firstCacheFile=new Path(TEST_ROOT_DIR,"firstcachefile");
  secondCacheFile=new Path(TEST_ROOT_DIR,"secondcachefile");
  createPrivateTempFile(firstCacheFile);
  createPrivateTempFile(secondCacheFile);
}
