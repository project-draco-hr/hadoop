{
  doReturn(true).when(fsn).isRunning();
  DatanodeDescriptor node=nodes.get(0);
  DatanodeStorageInfo ds=node.getStorageInfos()[0];
  node.setAlive(true);
  DatanodeRegistration nodeReg=new DatanodeRegistration(node,null,null,"");
  bm.getDatanodeManager().registerDatanode(nodeReg);
  bm.getDatanodeManager().addDatanode(node);
  assertEquals(node,bm.getDatanodeManager().getDatanode(node));
  assertEquals(0,ds.getBlockReportCount());
  ArrayList<BlockInfo> blocks=new ArrayList<>();
  for (int id=24; id > 0; id--) {
    blocks.add(addBlockToBM(id));
  }
  assertEquals(0,ds.getBlockReportCount());
  bm.processReport(node,new DatanodeStorage(ds.getStorageID()),generateReport(blocks),new BlockReportContext(1,0,System.nanoTime(),0,false),false);
  assertEquals(1,ds.getBlockReportCount());
  for (  BlockInfo block : blocks) {
    assertTrue(bm.getStoredBlock(block).findStorageInfo(ds) >= 0);
  }
  bm.processReport(node,new DatanodeStorage(ds.getStorageID()),generateReport(blocks),new BlockReportContext(1,0,System.nanoTime(),0,false),false);
  assertEquals(2,ds.getBlockReportCount());
  for (  BlockInfo block : blocks) {
    assertTrue(bm.getStoredBlock(block).findStorageInfo(ds) >= 0);
  }
  Collections.sort(blocks);
  bm.processReport(node,new DatanodeStorage(ds.getStorageID()),generateReport(blocks),new BlockReportContext(1,0,System.nanoTime(),0,true),false);
  assertEquals(3,ds.getBlockReportCount());
  for (  BlockInfo block : blocks) {
    assertTrue(bm.getStoredBlock(block).findStorageInfo(ds) >= 0);
  }
}
