{
  List<Block> list_p1=new ArrayList<Block>();
  list_p1.add(block);
  List<List<Block>> list_all=new ArrayList<List<Block>>();
  list_all.add(new ArrayList<Block>());
  list_all.add(list_p1);
  assertEquals("Block not initially pending replication",0,bm.pendingReplications.getNumReplicas(block));
  assertEquals("computeReplicationWork should indicate replication is needed",1,bm.computeReplicationWorkForBlocks(list_all));
  assertTrue("replication is pending after work is computed",bm.pendingReplications.getNumReplicas(block) > 0);
  LinkedListMultimap<DatanodeDescriptor,BlockTargetPair> repls=getAllPendingReplications();
  assertEquals(1,repls.size());
  Entry<DatanodeDescriptor,BlockTargetPair> repl=repls.entries().iterator().next();
  DatanodeDescriptor[] targets=repl.getValue().targets;
  DatanodeDescriptor[] pipeline=new DatanodeDescriptor[1 + targets.length];
  pipeline[0]=repl.getKey();
  System.arraycopy(targets,0,pipeline,1,targets.length);
  return pipeline;
}
