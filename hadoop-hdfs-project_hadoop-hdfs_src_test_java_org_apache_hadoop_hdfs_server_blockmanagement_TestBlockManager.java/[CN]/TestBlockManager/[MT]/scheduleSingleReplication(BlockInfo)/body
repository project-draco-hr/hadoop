{
  List<BlockInfo> list_p1=new ArrayList<>();
  list_p1.add(block);
  List<List<BlockInfo>> list_all=new ArrayList<>();
  list_all.add(new ArrayList<BlockInfo>());
  list_all.add(list_p1);
  assertEquals("Block not initially pending replication",0,bm.pendingReplications.getNumReplicas(block));
  assertEquals("computeBlockReconstructionWork should indicate replication is needed",1,bm.computeReconstructionWorkForBlocks(list_all));
  assertTrue("replication is pending after work is computed",bm.pendingReplications.getNumReplicas(block) > 0);
  LinkedListMultimap<DatanodeStorageInfo,BlockTargetPair> repls=getAllPendingReplications();
  assertEquals(1,repls.size());
  Entry<DatanodeStorageInfo,BlockTargetPair> repl=repls.entries().iterator().next();
  DatanodeStorageInfo[] targets=repl.getValue().targets;
  DatanodeStorageInfo[] pipeline=new DatanodeStorageInfo[1 + targets.length];
  pipeline[0]=repl.getKey();
  System.arraycopy(targets,0,pipeline,1,targets.length);
  return pipeline;
}
