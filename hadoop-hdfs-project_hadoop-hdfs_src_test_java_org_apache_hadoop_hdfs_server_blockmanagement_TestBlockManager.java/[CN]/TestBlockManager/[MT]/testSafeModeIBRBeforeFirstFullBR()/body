{
  doReturn(true).when(fsn).isInStartupSafeMode();
  DatanodeDescriptor node=nodes.get(0);
  DatanodeStorageInfo ds=node.getStorageInfos()[0];
  node.isAlive=true;
  DatanodeRegistration nodeReg=new DatanodeRegistration(node,null,null,"");
  bm.getDatanodeManager().registerDatanode(nodeReg);
  bm.getDatanodeManager().addDatanode(node);
  assertEquals(node,bm.getDatanodeManager().getDatanode(node));
  assertEquals(0,ds.getBlockReportCount());
  List<ReceivedDeletedBlockInfo> rdbiList=new ArrayList<>();
  BlockListAsLongs.Builder builder=BlockListAsLongs.builder();
  long receivedBlockId=42;
  BlockInfoContiguous receivedBlock=addBlockToBM(receivedBlockId);
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(receivedBlock),ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,null));
  builder.add(new FinalizedReplica(receivedBlock,null,null));
  long receivingBlockId=43;
  BlockInfoContiguous receivingBlock=addUcBlockToBM(receivingBlockId);
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(receivingBlock),ReceivedDeletedBlockInfo.BlockStatus.RECEIVING_BLOCK,null));
  builder.add(new ReplicaBeingWritten(receivingBlock,null,null,null));
  long receivingReceivedBlockId=44;
  BlockInfoContiguous receivingReceivedBlock=addBlockToBM(receivingReceivedBlockId);
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(receivingReceivedBlock),ReceivedDeletedBlockInfo.BlockStatus.RECEIVING_BLOCK,null));
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(receivingReceivedBlock),ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,null));
  builder.add(new FinalizedReplica(receivingReceivedBlock,null,null));
  long ReceivedDeletedBlockId=45;
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(ReceivedDeletedBlockId),ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,null));
  rdbiList.add(new ReceivedDeletedBlockInfo(new Block(ReceivedDeletedBlockId),ReceivedDeletedBlockInfo.BlockStatus.DELETED_BLOCK,null));
  long existedBlockId=46;
  BlockInfoContiguous existedBlock=addBlockToBM(existedBlockId);
  builder.add(new FinalizedReplica(existedBlock,null,null));
  StorageReceivedDeletedBlocks srdb=new StorageReceivedDeletedBlocks(new DatanodeStorage(ds.getStorageID()),rdbiList.toArray(new ReceivedDeletedBlockInfo[rdbiList.size()]));
  bm.processIncrementalBlockReport(node,srdb);
  assertEquals(0,ds.getBlockReportCount());
  bm.processReport(node,new DatanodeStorage(ds.getStorageID()),builder.build(),null,false);
  assertEquals(1,ds.getBlockReportCount());
  assertTrue(bm.getStoredBlock(new Block(receivedBlockId)).findStorageInfo(ds) >= 0);
  assertTrue(((BlockInfoContiguousUnderConstruction)bm.getStoredBlock(new Block(receivingBlockId))).getNumExpectedLocations() > 0);
  assertTrue(bm.getStoredBlock(new Block(receivingReceivedBlockId)).findStorageInfo(ds) >= 0);
  assertNull(bm.getStoredBlock(new Block(ReceivedDeletedBlockId)));
  assertTrue(bm.getStoredBlock(new Block(existedBlock)).findStorageInfo(ds) >= 0);
}
