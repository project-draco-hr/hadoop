{
  final MRAppWithClientService app=new MRAppWithClientService(1,0,false);
  final Configuration conf=new Configuration();
  conf.setBoolean(MRConfig.MR_ACLS_ENABLED,true);
  conf.set(MRJobConfig.JOB_ACL_VIEW_JOB,"viewonlyuser");
  Job job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("Num tasks not correct",1,job.getTasks().size());
  Iterator<Task> it=job.getTasks().values().iterator();
  Task task=it.next();
  app.waitForState(task,TaskState.RUNNING);
  TaskAttempt attempt=task.getAttempts().values().iterator().next();
  app.waitForState(attempt,TaskAttemptState.RUNNING);
  UserGroupInformation viewOnlyUser=UserGroupInformation.createUserForTesting("viewonlyuser",new String[]{});
  Assert.assertTrue("viewonlyuser cannot view job",job.checkAccess(viewOnlyUser,JobACL.VIEW_JOB));
  Assert.assertFalse("viewonlyuser can modify job",job.checkAccess(viewOnlyUser,JobACL.MODIFY_JOB));
  MRClientProtocol client=viewOnlyUser.doAs(new PrivilegedExceptionAction<MRClientProtocol>(){
    @Override public MRClientProtocol run() throws Exception {
      YarnRPC rpc=YarnRPC.create(conf);
      return (MRClientProtocol)rpc.getProxy(MRClientProtocol.class,app.clientService.getBindAddress(),conf);
    }
  }
);
  KillJobRequest killJobRequest=recordFactory.newRecordInstance(KillJobRequest.class);
  killJobRequest.setJobId(app.getJobId());
  try {
    client.killJob(killJobRequest);
    fail("viewonlyuser killed job");
  }
 catch (  AccessControlException e) {
  }
  KillTaskRequest killTaskRequest=recordFactory.newRecordInstance(KillTaskRequest.class);
  killTaskRequest.setTaskId(task.getID());
  try {
    client.killTask(killTaskRequest);
    fail("viewonlyuser killed task");
  }
 catch (  AccessControlException e) {
  }
  KillTaskAttemptRequest killTaskAttemptRequest=recordFactory.newRecordInstance(KillTaskAttemptRequest.class);
  killTaskAttemptRequest.setTaskAttemptId(attempt.getID());
  try {
    client.killTaskAttempt(killTaskAttemptRequest);
    fail("viewonlyuser killed task attempt");
  }
 catch (  AccessControlException e) {
  }
  FailTaskAttemptRequest failTaskAttemptRequest=recordFactory.newRecordInstance(FailTaskAttemptRequest.class);
  failTaskAttemptRequest.setTaskAttemptId(attempt.getID());
  try {
    client.failTaskAttempt(failTaskAttemptRequest);
    fail("viewonlyuser killed task attempt");
  }
 catch (  AccessControlException e) {
  }
}
