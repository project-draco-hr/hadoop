{
  MRAppWithClientService app=new MRAppWithClientService(1,0,false);
  Configuration conf=new Configuration();
  Job job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("Num tasks not correct",1,job.getTasks().size());
  Iterator<Task> it=job.getTasks().values().iterator();
  Task task=it.next();
  app.waitForState(task,TaskState.RUNNING);
  TaskAttempt attempt=task.getAttempts().values().iterator().next();
  app.waitForState(attempt,TaskAttemptState.RUNNING);
  String diagnostic1="Diagnostic1";
  String diagnostic2="Diagnostic2";
  app.getContext().getEventHandler().handle(new TaskAttemptDiagnosticsUpdateEvent(attempt.getID(),diagnostic1));
  TaskAttemptStatus taskAttemptStatus=new TaskAttemptStatus();
  taskAttemptStatus.id=attempt.getID();
  taskAttemptStatus.progress=0.5f;
  taskAttemptStatus.stateString="RUNNING";
  taskAttemptStatus.taskState=TaskAttemptState.RUNNING;
  taskAttemptStatus.phase=Phase.MAP;
  app.getContext().getEventHandler().handle(new TaskAttemptStatusUpdateEvent(attempt.getID(),taskAttemptStatus));
  YarnRPC rpc=YarnRPC.create(conf);
  MRClientProtocol proxy=(MRClientProtocol)rpc.getProxy(MRClientProtocol.class,app.clientService.getBindAddress(),conf);
  GetCountersRequest gcRequest=recordFactory.newRecordInstance(GetCountersRequest.class);
  gcRequest.setJobId(job.getID());
  Assert.assertNotNull("Counters is null",proxy.getCounters(gcRequest).getCounters());
  GetJobReportRequest gjrRequest=recordFactory.newRecordInstance(GetJobReportRequest.class);
  gjrRequest.setJobId(job.getID());
  JobReport jr=proxy.getJobReport(gjrRequest).getJobReport();
  verifyJobReport(jr);
  GetTaskAttemptCompletionEventsRequest gtaceRequest=recordFactory.newRecordInstance(GetTaskAttemptCompletionEventsRequest.class);
  gtaceRequest.setJobId(job.getID());
  gtaceRequest.setFromEventId(0);
  gtaceRequest.setMaxEvents(10);
  Assert.assertNotNull("TaskCompletionEvents is null",proxy.getTaskAttemptCompletionEvents(gtaceRequest).getCompletionEventList());
  GetDiagnosticsRequest gdRequest=recordFactory.newRecordInstance(GetDiagnosticsRequest.class);
  gdRequest.setTaskAttemptId(attempt.getID());
  Assert.assertNotNull("Diagnostics is null",proxy.getDiagnostics(gdRequest).getDiagnosticsList());
  GetTaskAttemptReportRequest gtarRequest=recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);
  gtarRequest.setTaskAttemptId(attempt.getID());
  TaskAttemptReport tar=proxy.getTaskAttemptReport(gtarRequest).getTaskAttemptReport();
  verifyTaskAttemptReport(tar);
  GetTaskReportRequest gtrRequest=recordFactory.newRecordInstance(GetTaskReportRequest.class);
  gtrRequest.setTaskId(task.getID());
  Assert.assertNotNull("TaskReport is null",proxy.getTaskReport(gtrRequest).getTaskReport());
  GetTaskReportsRequest gtreportsRequest=recordFactory.newRecordInstance(GetTaskReportsRequest.class);
  gtreportsRequest.setJobId(job.getID());
  gtreportsRequest.setTaskType(TaskType.MAP);
  Assert.assertNotNull("TaskReports for map is null",proxy.getTaskReports(gtreportsRequest).getTaskReportList());
  gtreportsRequest=recordFactory.newRecordInstance(GetTaskReportsRequest.class);
  gtreportsRequest.setJobId(job.getID());
  gtreportsRequest.setTaskType(TaskType.REDUCE);
  Assert.assertNotNull("TaskReports for reduce is null",proxy.getTaskReports(gtreportsRequest).getTaskReportList());
  List<String> diag=proxy.getDiagnostics(gdRequest).getDiagnosticsList();
  Assert.assertEquals("Num diagnostics not correct",1,diag.size());
  Assert.assertEquals("Diag 1 not correct",diagnostic1,diag.get(0).toString());
  TaskReport taskReport=proxy.getTaskReport(gtrRequest).getTaskReport();
  Assert.assertEquals("Num diagnostics not correct",1,taskReport.getDiagnosticsCount());
  app.getContext().getEventHandler().handle(new TaskAttemptEvent(task.getAttempts().values().iterator().next().getID(),TaskAttemptEventType.TA_DONE));
  app.waitForState(job,JobState.SUCCEEDED);
  gtreportsRequest=recordFactory.newRecordInstance(GetTaskReportsRequest.class);
  gtreportsRequest.setJobId(TypeConverter.toYarn(JobID.forName("job_1415730144495_0001")));
  gtreportsRequest.setTaskType(TaskType.REDUCE);
  try {
    proxy.getTaskReports(gtreportsRequest);
    fail("IOException not thrown for invalid job id");
  }
 catch (  IOException e) {
  }
}
