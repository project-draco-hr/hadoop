{
  if (sortSpec == null) {
    return super.compare(b1,s1,l1,b2,s2,l2);
  }
  try {
    Text logline1=new Text();
    logline1.readFields(new DataInputStream(new ByteArrayInputStream(b1,s1,l1)));
    String line1=logline1.toString();
    String[] logColumns1=line1.split(columnSeparator);
    Text logline2=new Text();
    logline2.readFields(new DataInputStream(new ByteArrayInputStream(b2,s2,l2)));
    String line2=logline2.toString();
    String[] logColumns2=line2.split(columnSeparator);
    if (logColumns1 == null || logColumns2 == null) {
      return super.compare(b1,s1,l1,b2,s2,l2);
    }
    for (int i=0; i < sortSpec.length; ++i) {
      int column=(Integer.valueOf(sortSpec[i]).intValue());
      String c1=logColumns1[column];
      String c2=logColumns2[column];
      int comparision=super.compareBytes(c1.getBytes(),0,c1.length(),c2.getBytes(),0,c2.length());
      if (comparision != 0) {
        return comparision;
      }
    }
  }
 catch (  IOException ioe) {
    LOG.fatal("Caught " + ioe);
    return 0;
  }
  return 0;
}
