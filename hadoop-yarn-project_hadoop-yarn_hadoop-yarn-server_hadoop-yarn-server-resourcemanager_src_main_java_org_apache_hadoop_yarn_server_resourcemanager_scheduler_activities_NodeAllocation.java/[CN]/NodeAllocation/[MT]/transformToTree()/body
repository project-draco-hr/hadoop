{
  List<ActivityNode> allocationTree=new ArrayList<>();
  if (root == null) {
    Set<String> names=Collections.newSetFromMap(new ConcurrentHashMap<>());
    ListIterator<AllocationActivity> ite=allocationOperations.listIterator(allocationOperations.size());
    while (ite.hasPrevious()) {
      String name=ite.previous().getName();
      if (name != null) {
        if (!names.contains(name)) {
          names.add(name);
        }
 else {
          ite.remove();
        }
      }
    }
    for (    AllocationActivity allocationOperation : allocationOperations) {
      ActivityNode node=allocationOperation.createTreeNode();
      String name=node.getName();
      for (int i=allocationTree.size() - 1; i > -1; i--) {
        if (allocationTree.get(i).getParentName().equals(name)) {
          node.addChild(allocationTree.get(i));
          allocationTree.remove(i);
        }
 else {
          break;
        }
      }
      allocationTree.add(node);
    }
    root=allocationTree.get(0);
  }
}
