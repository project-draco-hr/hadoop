{
  FileUtil.fullyDelete(new File("target/logs"));
  Configuration configuration=getConfiguration();
  URL harUrl=ClassLoader.getSystemClassLoader().getResource("application_1440536969523_0001.har");
  assertNotNull(harUrl);
  String path="target/logs/admin/logs/application_1440536969523_0001" + "/application_1440536969523_0001.har";
  FileUtils.copyDirectory(new File(harUrl.getPath()),new File(path));
  AggregatedLogsBlockForTest aggregatedBlock=getAggregatedLogsBlockForTest(configuration,"admin","container_1440536969523_0001_01_000001","host1:1111");
  ByteArrayOutputStream data=new ByteArrayOutputStream();
  PrintWriter printWriter=new PrintWriter(data);
  HtmlBlock html=new HtmlBlockForTest();
  HtmlBlock.Block block=new BlockForTest(html,printWriter,10,false);
  aggregatedBlock.render(block);
  block.getWriter().flush();
  String out=data.toString();
  assertTrue(out.contains("Hello stderr"));
  assertTrue(out.contains("Hello stdout"));
  assertTrue(out.contains("Hello syslog"));
  aggregatedBlock=getAggregatedLogsBlockForTest(configuration,"admin","container_1440536969523_0001_01_000002","host2:2222");
  data=new ByteArrayOutputStream();
  printWriter=new PrintWriter(data);
  html=new HtmlBlockForTest();
  block=new BlockForTest(html,printWriter,10,false);
  aggregatedBlock.render(block);
  block.getWriter().flush();
  out=data.toString();
  assertTrue(out.contains("Goodbye stderr"));
  assertTrue(out.contains("Goodbye stdout"));
  assertTrue(out.contains("Goodbye syslog"));
}
