{
  int numReduces=conf.getNumReduceTasks();
  String oldMapperClass="mapred.mapper.class";
  String oldReduceClass="mapred.reducer.class";
  conf.setBooleanIfUnset("mapred.mapper.new-api",conf.get(oldMapperClass) == null);
  if (conf.getUseNewMapper()) {
    String mode="new map API";
    ensureNotSet("mapred.input.format.class",mode);
    ensureNotSet(oldMapperClass,mode);
    if (numReduces != 0) {
      ensureNotSet("mapred.partitioner.class",mode);
    }
 else {
      ensureNotSet("mapred.output.format.class",mode);
    }
  }
 else {
    String mode="map compatability";
    ensureNotSet(INPUT_FORMAT_CLASS_ATTR,mode);
    ensureNotSet(MAP_CLASS_ATTR,mode);
    if (numReduces != 0) {
      ensureNotSet(PARTITIONER_CLASS_ATTR,mode);
    }
 else {
      ensureNotSet(OUTPUT_FORMAT_CLASS_ATTR,mode);
    }
  }
  if (numReduces != 0) {
    conf.setBooleanIfUnset("mapred.reducer.new-api",conf.get(oldReduceClass) == null);
    if (conf.getUseNewReducer()) {
      String mode="new reduce API";
      ensureNotSet("mapred.output.format.class",mode);
      ensureNotSet(oldReduceClass,mode);
    }
 else {
      String mode="reduce compatability";
      ensureNotSet(OUTPUT_FORMAT_CLASS_ATTR,mode);
      ensureNotSet(REDUCE_CLASS_ATTR,mode);
    }
  }
}
