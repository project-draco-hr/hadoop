{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Processing heartbeat event " + event);
  }
  long now=event.getTimeStamp();
  progressTaskStatuses(now);
  List<TaskStatus> taskStatuses=collectAndCloneTaskStatuses();
  boolean askForNewTask=(usedMapSlots < maxMapSlots || usedReduceSlots < maxReduceSlots);
  TaskTrackerStatus taskTrackerStatus=new SimulatorTaskTrackerStatus(taskTrackerName,hostName,httpPort,taskStatuses,0,maxMapSlots,maxReduceSlots,now);
  garbageCollectCompletedTasks();
  HeartbeatResponse response=null;
  try {
    response=jobTracker.heartbeat(taskTrackerStatus,false,firstHeartbeat,askForNewTask,heartbeatResponseId);
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("Internal error",ioe);
  }
  firstHeartbeat=false;
  heartbeatResponseId=response.getResponseId();
  List<SimulatorEvent> events=handleHeartbeatResponse(response,now);
  int heartbeatInterval=response.getHeartbeatInterval();
  if (heartbeatIntervalFuzz > 1) {
    int randomFuzz=random.nextInt(2 * heartbeatIntervalFuzz - 1) - heartbeatIntervalFuzz;
    heartbeatInterval+=randomFuzz;
    heartbeatInterval=Math.max(1,heartbeatInterval);
  }
  events.add(new HeartbeatEvent(this,now + heartbeatInterval));
  return events;
}
