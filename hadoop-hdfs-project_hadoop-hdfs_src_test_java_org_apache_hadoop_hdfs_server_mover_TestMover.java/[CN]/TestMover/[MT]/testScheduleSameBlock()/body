{
  final Configuration conf=new HdfsConfiguration();
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(4).build();
  try {
    cluster.waitActive();
    final DistributedFileSystem dfs=cluster.getFileSystem();
    final String file="/testScheduleSameBlock/file";
{
      final FSDataOutputStream out=dfs.create(new Path(file));
      out.writeChars("testScheduleSameBlock");
      out.close();
    }
    final Mover mover=newMover(conf);
    mover.init();
    final Mover.Processor processor=mover.new Processor();
    final LocatedBlock lb=dfs.getClient().getLocatedBlocks(file,0).get(0);
    final List<MLocation> locations=MLocation.toLocations(lb);
    final MLocation ml=locations.get(0);
    final DBlock db=mover.newDBlock(lb,locations,null);
    final List<StorageType> storageTypes=new ArrayList<StorageType>(Arrays.asList(StorageType.DEFAULT,StorageType.DEFAULT));
    Assert.assertTrue(processor.scheduleMoveReplica(db,ml,storageTypes));
    Assert.assertFalse(processor.scheduleMoveReplica(db,ml,storageTypes));
  }
  finally {
    cluster.shutdown();
  }
}
