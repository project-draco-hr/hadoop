{
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(3).storageTypes(new StorageType[]{StorageType.DISK,StorageType.ARCHIVE}).build();
  try {
    cluster.waitActive();
    final DistributedFileSystem dfs=cluster.getFileSystem();
    final String file="/testScheduleWithinSameNode/file";
    Path dir=new Path("/testScheduleWithinSameNode");
    dfs.mkdirs(dir);
    dfs.setStoragePolicy(dir,"HOT");
    final FSDataOutputStream out=dfs.create(new Path(file));
    out.writeChars("testScheduleWithinSameNode");
    out.close();
    LocatedBlock lb=dfs.getClient().getLocatedBlocks(file,0).get(0);
    StorageType[] storageTypes=lb.getStorageTypes();
    for (    StorageType storageType : storageTypes) {
      Assert.assertTrue(StorageType.DISK == storageType);
    }
    dfs.setStoragePolicy(dir,"COLD");
    int rc=ToolRunner.run(conf,new Mover.Cli(),new String[]{"-p",dir.toString()});
    Assert.assertEquals("Movement to ARCHIVE should be successful",0,rc);
    waitForLocatedBlockWithArchiveStorageType(dfs,file,3);
  }
  finally {
    cluster.shutdown();
  }
}
