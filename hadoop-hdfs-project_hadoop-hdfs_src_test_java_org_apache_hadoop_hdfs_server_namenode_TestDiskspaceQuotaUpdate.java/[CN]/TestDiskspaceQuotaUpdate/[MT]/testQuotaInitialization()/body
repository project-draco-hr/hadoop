{
  final int size=500;
  Path testDir=new Path(getParent(GenericTestUtils.getMethodName()),"testDir");
  long expectedSize=3 * BLOCKSIZE + BLOCKSIZE / 2;
  getDFS().mkdirs(testDir);
  getDFS().setQuota(testDir,size * 4,expectedSize * size * 2);
  Path[] testDirs=new Path[size];
  for (int i=0; i < size; i++) {
    testDirs[i]=new Path(testDir,"sub" + i);
    getDFS().mkdirs(testDirs[i]);
    getDFS().setQuota(testDirs[i],100,1000000);
    DFSTestUtil.createFile(getDFS(),new Path(testDirs[i],"a"),expectedSize,(short)1,1L);
  }
  INodeDirectory root=getFSDirectory().getRoot();
  HashMap<String,Long> nsMap=new HashMap<String,Long>();
  HashMap<String,Long> dsMap=new HashMap<String,Long>();
  scanDirsWithQuota(root,nsMap,dsMap,false);
  getFSDirectory().updateCountForQuota(1);
  scanDirsWithQuota(root,nsMap,dsMap,true);
  getFSDirectory().updateCountForQuota(2);
  scanDirsWithQuota(root,nsMap,dsMap,true);
  getFSDirectory().updateCountForQuota(4);
  scanDirsWithQuota(root,nsMap,dsMap,true);
}
