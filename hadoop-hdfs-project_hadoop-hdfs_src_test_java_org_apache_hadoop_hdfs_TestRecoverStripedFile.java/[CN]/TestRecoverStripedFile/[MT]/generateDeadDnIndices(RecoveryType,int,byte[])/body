{
  List<Integer> deadList=new ArrayList<>(deadNum);
  while (deadList.size() < deadNum) {
    int dead=random.nextInt(indices.length);
    boolean isOfType=true;
    if (type == RecoveryType.DataOnly) {
      isOfType=indices[dead] < dataBlkNum;
    }
 else     if (type == RecoveryType.ParityOnly) {
      isOfType=indices[dead] >= dataBlkNum;
    }
    if (isOfType && !deadList.contains(dead)) {
      deadList.add(dead);
    }
  }
  int[] d=new int[deadNum];
  for (int i=0; i < deadNum; i++) {
    d[i]=deadList.get(i);
  }
  return d;
}
