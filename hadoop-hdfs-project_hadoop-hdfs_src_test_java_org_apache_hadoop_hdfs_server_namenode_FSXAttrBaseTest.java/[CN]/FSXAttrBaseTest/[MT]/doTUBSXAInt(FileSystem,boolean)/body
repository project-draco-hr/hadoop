{
  try {
    userFs.setXAttr(path,security1,null,EnumSet.of(XAttrSetFlag.CREATE));
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("Can only set '" + SECURITY_XATTR_UNREADABLE_BY_SUPERUSER + "' on a file",e);
  }
  userFs.setXAttr(filePath,security1,null,EnumSet.of(XAttrSetFlag.CREATE));
  verifySecurityXAttrExists(userFs);
  userFs.setXAttr(filePath,security1,null,EnumSet.of(XAttrSetFlag.CREATE,XAttrSetFlag.REPLACE));
  verifySecurityXAttrExists(userFs);
  try {
    userFs.removeXAttr(filePath,security1);
    Assert.fail("Removing security xattr should fail.");
  }
 catch (  AccessControlException e) {
    GenericTestUtils.assertExceptionContains("The xattr '" + SECURITY_XATTR_UNREADABLE_BY_SUPERUSER + "' can not be deleted.",e);
  }
  verifySecurityXAttrExists(userFs);
  try {
    userFs.setXAttr(filePath,security1,value1,EnumSet.of(XAttrSetFlag.REPLACE));
    fail("Should have thrown on attempt to set value");
  }
 catch (  AccessControlException e) {
    GenericTestUtils.assertExceptionContains("Values are not allowed",e);
  }
  final List<String> xattrNames=userFs.listXAttrs(filePath);
  assertTrue(xattrNames.contains(security1));
  assertTrue(xattrNames.size() == 1);
  verifyFileAccess(userFs,expectOpenFailure);
  Path toPath=new Path(filePath.toString() + "x");
  userFs.rename(filePath,toPath);
  userFs.rename(toPath,filePath);
}
