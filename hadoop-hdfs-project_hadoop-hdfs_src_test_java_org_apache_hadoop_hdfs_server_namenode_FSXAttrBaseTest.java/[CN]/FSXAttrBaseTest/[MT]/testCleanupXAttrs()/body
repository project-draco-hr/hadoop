{
  FileSystem.mkdirs(fs,path,FsPermission.createImmutable((short)0750));
  fs.setXAttr(path,name1,value1,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name2,value2,EnumSet.of(XAttrSetFlag.CREATE));
  fs.removeXAttr(path,name1);
  fs.removeXAttr(path,name2);
  restart(true);
  initFileSystem();
  fs.setXAttr(path,name1,value1,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name2,value2,EnumSet.of(XAttrSetFlag.CREATE));
  fs.removeXAttr(path,name1);
  fs.removeXAttr(path,name2);
  restart(false);
  initFileSystem();
  fs.setXAttr(path,name1,value1,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name2,value2,EnumSet.of(XAttrSetFlag.CREATE));
  fs.removeXAttr(path,name1);
  fs.removeXAttr(path,name2);
  fs.setXAttr(path,name1,value1,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name2,value2,EnumSet.of(XAttrSetFlag.CREATE));
  Map<String,byte[]> xattrs=fs.getXAttrs(path);
  Assert.assertEquals(xattrs.size(),2);
  Assert.assertArrayEquals(value1,xattrs.get(name1));
  Assert.assertArrayEquals(value2,xattrs.get(name2));
}
