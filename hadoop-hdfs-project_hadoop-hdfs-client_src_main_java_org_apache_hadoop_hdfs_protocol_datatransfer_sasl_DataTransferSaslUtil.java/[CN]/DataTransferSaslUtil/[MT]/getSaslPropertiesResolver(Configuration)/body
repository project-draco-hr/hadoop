{
  String qops=conf.get(DFS_DATA_TRANSFER_PROTECTION_KEY);
  if (qops == null || qops.isEmpty()) {
    LOG.debug("DataTransferProtocol not using SaslPropertiesResolver, no " + "QOP found in configuration for {}",DFS_DATA_TRANSFER_PROTECTION_KEY);
    return null;
  }
  Configuration saslPropsResolverConf=new Configuration(conf);
  saslPropsResolverConf.set(HADOOP_RPC_PROTECTION,qops);
  Class<? extends SaslPropertiesResolver> resolverClass=conf.getClass(HADOOP_SECURITY_SASL_PROPS_RESOLVER_CLASS,SaslPropertiesResolver.class,SaslPropertiesResolver.class);
  resolverClass=conf.getClass(DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY,resolverClass,SaslPropertiesResolver.class);
  saslPropsResolverConf.setClass(HADOOP_SECURITY_SASL_PROPS_RESOLVER_CLASS,resolverClass,SaslPropertiesResolver.class);
  SaslPropertiesResolver resolver=SaslPropertiesResolver.getInstance(saslPropsResolverConf);
  LOG.debug("DataTransferProtocol using SaslPropertiesResolver, configured " + "QOP {} = {}, configured class {} = {}",DFS_DATA_TRANSFER_PROTECTION_KEY,qops,DFS_DATA_TRANSFER_SASL_PROPS_RESOLVER_CLASS_KEY,resolverClass);
  return resolver;
}
