{
  LeafQueue e=stubLeafQueue((LeafQueue)queues.get(E));
  final String user_e="user_e";
  final ApplicationAttemptId appAttemptId_0=TestUtils.getMockApplicationAttemptId(0,0);
  FiCaSchedulerApp app_0=new FiCaSchedulerApp(appAttemptId_0,user_e,e,mock(ActiveUsersManager.class),rmContext);
  e.submitApplicationAttempt(app_0,user_e);
  final ApplicationAttemptId appAttemptId_1=TestUtils.getMockApplicationAttemptId(1,0);
  FiCaSchedulerApp app_1=new FiCaSchedulerApp(appAttemptId_1,user_e,e,mock(ActiveUsersManager.class),rmContext);
  e.submitApplicationAttempt(app_1,user_e);
  final ApplicationAttemptId appAttemptId_2=TestUtils.getMockApplicationAttemptId(2,0);
  FiCaSchedulerApp app_2=new FiCaSchedulerApp(appAttemptId_2,user_e,e,mock(ActiveUsersManager.class),rmContext);
  e.submitApplicationAttempt(app_2,user_e);
  assertEquals(2,e.activeApplications.size());
  assertEquals(1,e.pendingApplications.size());
  csConf.setDouble(CapacitySchedulerConfiguration.MAXIMUM_APPLICATION_MASTERS_RESOURCE_PERCENT,CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_APPLICATIONMASTERS_RESOURCE_PERCENT * 2);
  Map<String,CSQueue> newQueues=new HashMap<String,CSQueue>();
  CSQueue newRoot=CapacityScheduler.parseQueue(csContext,csConf,null,CapacitySchedulerConfiguration.ROOT,newQueues,queues,TestUtils.spyHook);
  queues=newQueues;
  root.reinitialize(newRoot,cs.getClusterResource());
  assertEquals(3,e.activeApplications.size());
  assertEquals(0,e.pendingApplications.size());
}
