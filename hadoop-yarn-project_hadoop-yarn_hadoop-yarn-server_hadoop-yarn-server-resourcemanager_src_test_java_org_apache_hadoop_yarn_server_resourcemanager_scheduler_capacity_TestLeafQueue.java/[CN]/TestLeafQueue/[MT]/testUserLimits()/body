{
  LeafQueue a=stubLeafQueue((LeafQueue)queues.get(A));
  a.setMaxCapacity(1.0f);
  final String user_0="user_0";
  final String user_1="user_1";
  final ApplicationAttemptId appAttemptId_0=TestUtils.getMockApplicationAttemptId(0,0);
  FiCaSchedulerApp app_0=new FiCaSchedulerApp(appAttemptId_0,user_0,a,a.getActiveUsersManager(),rmContext);
  a.submitApplication(app_0,user_0,A);
  final ApplicationAttemptId appAttemptId_1=TestUtils.getMockApplicationAttemptId(1,0);
  FiCaSchedulerApp app_1=new FiCaSchedulerApp(appAttemptId_1,user_0,a,a.getActiveUsersManager(),rmContext);
  a.submitApplication(app_1,user_0,A);
  final ApplicationAttemptId appAttemptId_2=TestUtils.getMockApplicationAttemptId(2,0);
  FiCaSchedulerApp app_2=new FiCaSchedulerApp(appAttemptId_2,user_1,a,a.getActiveUsersManager(),rmContext);
  a.submitApplication(app_2,user_1,A);
  String host_0="127.0.0.1";
  FiCaSchedulerNode node_0=TestUtils.getMockNode(host_0,DEFAULT_RACK,0,8 * GB);
  String host_1="127.0.0.2";
  FiCaSchedulerNode node_1=TestUtils.getMockNode(host_1,DEFAULT_RACK,0,8 * GB);
  final int numNodes=2;
  Resource clusterResource=Resources.createResource(numNodes * (8 * GB),numNodes * 16);
  when(csContext.getNumClusterNodes()).thenReturn(numNodes);
  Priority priority=TestUtils.createMockPriority(1);
  app_0.updateResourceRequests(Collections.singletonList(TestUtils.createResourceRequest(ResourceRequest.ANY,2 * GB,1,true,priority,recordFactory)),null,null);
  app_1.updateResourceRequests(Collections.singletonList(TestUtils.createResourceRequest(ResourceRequest.ANY,1 * GB,2,true,priority,recordFactory)),null,null);
  a.setUserLimit(50);
  a.setUserLimitFactor(2);
  assertEquals("There should only be 1 active user!",1,a.getActiveUsersManager().getNumActiveUsers());
  a.assignContainers(clusterResource,node_0);
  assertEquals(2 * GB,a.getUsedResources().getMemory());
  assertEquals(2 * GB,app_0.getCurrentConsumption().getMemory());
  assertEquals(0 * GB,app_1.getCurrentConsumption().getMemory());
  a.assignContainers(clusterResource,node_0);
  assertEquals(3 * GB,a.getUsedResources().getMemory());
  assertEquals(2 * GB,app_0.getCurrentConsumption().getMemory());
  assertEquals(1 * GB,app_1.getCurrentConsumption().getMemory());
  a.assignContainers(clusterResource,node_1);
  assertEquals(4 * GB,a.getUsedResources().getMemory());
  assertEquals(2 * GB,app_0.getCurrentConsumption().getMemory());
  assertEquals(2 * GB,app_1.getCurrentConsumption().getMemory());
}
