{
  final Path dir=new Path("/TestSnapshot");
  hdfs.mkdirs(dir);
  hdfs.allowSnapshot(dir);
  hdfs.setQuota(dir,HdfsConstants.QUOTA_DONT_SET,HdfsConstants.QUOTA_DONT_SET);
  INode dirNode=fsdir.getINode4Write(dir.toString());
  assertTrue(dirNode instanceof INodeDirectorySnapshottable);
  assertEquals(0,((INodeDirectorySnapshottable)dirNode).getDiffs().asList().size());
  hdfs.setQuota(dir,HdfsConstants.QUOTA_DONT_SET - 1,HdfsConstants.QUOTA_DONT_SET - 1);
  dirNode=fsdir.getINode4Write(dir.toString());
  assertTrue(dirNode instanceof INodeDirectorySnapshottable);
  assertEquals(0,((INodeDirectorySnapshottable)dirNode).getDiffs().asList().size());
  hdfs.setQuota(dir,HdfsConstants.QUOTA_RESET,HdfsConstants.QUOTA_RESET);
  dirNode=fsdir.getINode4Write(dir.toString());
  assertTrue(dirNode instanceof INodeDirectorySnapshottable);
  assertEquals(0,((INodeDirectorySnapshottable)dirNode).getDiffs().asList().size());
  SnapshotTestHelper.createSnapshot(hdfs,dir,"s1");
  hdfs.setQuota(dir,HdfsConstants.QUOTA_RESET,HdfsConstants.QUOTA_RESET);
  dirNode=fsdir.getINode4Write(dir.toString());
  assertTrue(dirNode instanceof INodeDirectorySnapshottable);
  assertEquals(1,((INodeDirectorySnapshottable)dirNode).getDiffs().asList().size());
  SnapshottableDirectoryStatus[] status=hdfs.getSnapshottableDirListing();
  assertEquals(1,status.length);
  assertEquals(dir,status[0].getFullPath());
  final Path subDir=new Path(dir,"sub");
  hdfs.mkdirs(subDir);
  hdfs.createSnapshot(dir,"s2");
  final Path file=new Path(subDir,"file");
  DFSTestUtil.createFile(hdfs,file,BLOCKSIZE,REPLICATION,seed);
  hdfs.setQuota(dir,HdfsConstants.QUOTA_RESET,HdfsConstants.QUOTA_RESET);
  INode subNode=fsdir.getINode4Write(subDir.toString());
  assertTrue(subNode instanceof INodeDirectoryWithSnapshot);
  List<DirectoryDiff> diffList=((INodeDirectoryWithSnapshot)subNode).getDiffs().asList();
  assertEquals(1,diffList.size());
  assertEquals("s2",Snapshot.getSnapshotName(diffList.get(0).snapshot));
  List<INode> createdList=diffList.get(0).getChildrenDiff().getList(ListType.CREATED);
  assertEquals(1,createdList.size());
  assertSame(fsdir.getINode4Write(file.toString()),createdList.get(0));
}
