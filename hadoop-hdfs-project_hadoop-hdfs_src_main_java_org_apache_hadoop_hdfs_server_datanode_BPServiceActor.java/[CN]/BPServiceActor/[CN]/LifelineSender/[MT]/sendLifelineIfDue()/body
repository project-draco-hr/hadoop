{
  long startTime=scheduler.monotonicNow();
  if (!scheduler.isLifelineDue(startTime)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skipping sending lifeline for " + BPServiceActor.this + ", because it is not due.");
    }
    return;
  }
  if (dn.areHeartbeatsDisabledForTests()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skipping sending lifeline for " + BPServiceActor.this + ", because heartbeats are disabled for tests.");
    }
    return;
  }
  sendLifeline();
  dn.getMetrics().addLifeline(scheduler.monotonicNow() - startTime);
  scheduler.scheduleNextLifeline(scheduler.monotonicNow());
}
