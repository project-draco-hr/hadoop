{
  for (  Map.Entry<String,PerStoragePendingIncrementalBR> entry : pendingIncrementalBRperStorage.entrySet()) {
    final String storageUuid=entry.getKey();
    final PerStoragePendingIncrementalBR perStorageMap=entry.getValue();
    ReceivedDeletedBlockInfo[] receivedAndDeletedBlockArray=null;
synchronized (pendingIncrementalBRperStorage) {
      if (perStorageMap.getBlockInfoCount() > 0) {
        receivedAndDeletedBlockArray=perStorageMap.dequeueBlockInfos();
        pendingReceivedRequests-=receivedAndDeletedBlockArray.length;
      }
    }
    if (receivedAndDeletedBlockArray != null) {
      StorageReceivedDeletedBlocks[] report={new StorageReceivedDeletedBlocks(storageUuid,receivedAndDeletedBlockArray)};
      boolean success=false;
      try {
        bpNamenode.blockReceivedAndDeleted(bpRegistration,bpos.getBlockPoolId(),report);
        success=true;
      }
  finally {
synchronized (pendingIncrementalBRperStorage) {
          if (!success) {
            perStorageMap.putMissingBlockInfos(receivedAndDeletedBlockArray);
            pendingReceivedRequests+=perStorageMap.getBlockInfoCount();
          }
        }
      }
    }
  }
}
