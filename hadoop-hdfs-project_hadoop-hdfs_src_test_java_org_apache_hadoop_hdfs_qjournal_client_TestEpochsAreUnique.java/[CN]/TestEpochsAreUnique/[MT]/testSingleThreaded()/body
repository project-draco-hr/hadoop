{
  Configuration conf=new Configuration();
  MiniJournalCluster cluster=new MiniJournalCluster.Builder(conf).build();
  URI uri=cluster.getQuorumJournalURI(JID);
  QuorumJournalManager qjm=new QuorumJournalManager(conf,uri,FAKE_NSINFO);
  try {
    qjm.format(FAKE_NSINFO);
  }
  finally {
    qjm.close();
  }
  try {
    for (int i=0; i < 5; i++) {
      qjm=new QuorumJournalManager(conf,uri,FAKE_NSINFO);
      try {
        qjm.createNewUniqueEpoch();
        assertEquals(i + 1,qjm.getLoggerSetForTests().getEpoch());
      }
  finally {
        qjm.close();
      }
    }
    long prevEpoch=5;
    for (int i=0; i < 20; i++) {
      long newEpoch=-1;
      while (true) {
        qjm=new QuorumJournalManager(conf,uri,FAKE_NSINFO,new FaultyLoggerFactory());
        try {
          qjm.createNewUniqueEpoch();
          newEpoch=qjm.getLoggerSetForTests().getEpoch();
          break;
        }
 catch (        IOException ioe) {
        }
 finally {
          qjm.close();
        }
      }
      LOG.info("Created epoch " + newEpoch);
      assertTrue("New epoch " + newEpoch + " should be greater than previous "+ prevEpoch,newEpoch > prevEpoch);
      prevEpoch=newEpoch;
    }
  }
  finally {
    cluster.shutdown();
  }
}
