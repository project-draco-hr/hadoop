{
  Configuration conf=new Configuration();
  MiniJournalCluster cluster=new MiniJournalCluster.Builder(conf).build();
  URI uri=cluster.getQuorumJournalURI(JID);
  QuorumJournalManager qjm=new QuorumJournalManager(conf,uri,FAKE_NSINFO);
  qjm.format(FAKE_NSINFO);
  try {
    for (int i=0; i < 5; i++) {
      AsyncLoggerSet als=new AsyncLoggerSet(QuorumJournalManager.createLoggers(conf,uri,FAKE_NSINFO,IPCLoggerChannel.FACTORY));
      als.createNewUniqueEpoch(FAKE_NSINFO);
      assertEquals(i + 1,als.getEpoch());
    }
    long prevEpoch=5;
    for (int i=0; i < 20; i++) {
      AsyncLoggerSet als=new AsyncLoggerSet(makeFaulty(QuorumJournalManager.createLoggers(conf,uri,FAKE_NSINFO,IPCLoggerChannel.FACTORY)));
      long newEpoch=-1;
      while (true) {
        try {
          als.createNewUniqueEpoch(FAKE_NSINFO);
          newEpoch=als.getEpoch();
          break;
        }
 catch (        IOException ioe) {
        }
      }
      LOG.info("Created epoch " + newEpoch);
      assertTrue("New epoch " + newEpoch + " should be greater than previous "+ prevEpoch,newEpoch > prevEpoch);
      prevEpoch=newEpoch;
    }
  }
  finally {
    cluster.shutdown();
  }
}
