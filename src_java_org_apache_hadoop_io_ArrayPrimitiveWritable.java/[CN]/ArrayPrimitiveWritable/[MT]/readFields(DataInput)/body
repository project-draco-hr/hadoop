{
  @SuppressWarnings("deprecation") String className=UTF8.readString(in);
  Class<?> componentType=getPrimitiveClass(className);
  if (componentType == null) {
    throw new IOException("encoded array component type " + className + " is not a candidate primitive type");
  }
  checkDeclaredComponentType(componentType);
  this.componentType=componentType;
  int length=in.readInt();
  if (length < 0) {
    throw new IOException("encoded array length is negative " + length);
  }
  this.length=length;
  value=Array.newInstance(componentType,length);
  if (componentType == Boolean.TYPE) {
    readBooleanArray(in);
  }
 else   if (componentType == Character.TYPE) {
    readCharArray(in);
  }
 else   if (componentType == Byte.TYPE) {
    readByteArray(in);
  }
 else   if (componentType == Short.TYPE) {
    readShortArray(in);
  }
 else   if (componentType == Integer.TYPE) {
    readIntArray(in);
  }
 else   if (componentType == Long.TYPE) {
    readLongArray(in);
  }
 else   if (componentType == Float.TYPE) {
    readFloatArray(in);
  }
 else   if (componentType == Double.TYPE) {
    readDoubleArray(in);
  }
 else {
    throw new IOException("Encoded type " + className + " converted to valid component type "+ componentType.toString()+ " but no encoding is implemented for this type.");
  }
}
