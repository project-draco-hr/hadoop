{
  if (!spreading) {
    return;
  }
  if (taskTimes.getTotalCount() <= 1) {
    return;
  }
  int[] endpoints=new int[2];
  endpoints[0]=spreadMin;
  endpoints[1]=spreadMax;
  long[] endpointKeys=taskTimes.getCDF(1000,endpoints);
  int smallResultOffset=(taskTimes.getTotalCount() < SMALL_SPREAD_COMPENSATION_THRESHOLD ? 1 : 0);
  Histogram myTotal=spreadTo[outcome.ordinal()][jtype.ordinal()];
  long dividend=endpointKeys[2 + smallResultOffset];
  long divisor=endpointKeys[1 - smallResultOffset];
  if (divisor > 0) {
    long mytotalRatio=dividend * 1000000L / divisor;
    myTotal.enter(mytotalRatio);
  }
}
