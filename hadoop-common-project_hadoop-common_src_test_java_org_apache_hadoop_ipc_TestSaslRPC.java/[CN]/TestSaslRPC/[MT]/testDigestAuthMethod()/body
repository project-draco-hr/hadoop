{
  TestTokenSecretManager sm=new TestTokenSecretManager();
  Server server=RPC.getServer(TestSaslProtocol.class,new TestSaslImpl(),ADDRESS,0,5,true,conf,sm);
  server.start();
  final UserGroupInformation current=UserGroupInformation.getCurrentUser();
  final InetSocketAddress addr=NetUtils.getConnectAddress(server);
  TestTokenIdentifier tokenId=new TestTokenIdentifier(new Text(current.getUserName()));
  Token<TestTokenIdentifier> token=new Token<TestTokenIdentifier>(tokenId,sm);
  SecurityUtil.setTokenService(token,addr);
  current.addToken(token);
  current.doAs(new PrivilegedExceptionAction<Object>(){
    public Object run() throws IOException {
      TestSaslProtocol proxy=null;
      try {
        proxy=(TestSaslProtocol)RPC.getProxy(TestSaslProtocol.class,TestSaslProtocol.versionID,addr,conf);
        Assert.assertEquals(AuthenticationMethod.TOKEN,proxy.getAuthMethod());
      }
  finally {
        if (proxy != null) {
          RPC.stopProxy(proxy);
        }
      }
      return null;
    }
  }
);
  server.stop();
}
