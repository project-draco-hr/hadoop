{
  inMemoryMapOutputs.add(mapOutput);
  LOG.info("closeInMemoryFile -> map-output of size: " + mapOutput.getSize() + ", inMemoryMapOutputs.size() -> "+ inMemoryMapOutputs.size()+ ", commitMemory -> "+ commitMemory+ ", usedMemory ->"+ usedMemory);
  commitMemory+=mapOutput.getSize();
  if (commitMemory >= mergeThreshold) {
    LOG.info("Starting inMemoryMerger's merge since commitMemory=" + commitMemory + " > mergeThreshold="+ mergeThreshold+ ". Current usedMemory="+ usedMemory);
    inMemoryMapOutputs.addAll(inMemoryMergedMapOutputs);
    inMemoryMergedMapOutputs.clear();
    inMemoryMerger.startMerge(inMemoryMapOutputs);
    commitMemory=0L;
  }
  if (memToMemMerger != null) {
    if (inMemoryMapOutputs.size() >= memToMemMergeOutputsThreshold) {
      memToMemMerger.startMerge(inMemoryMapOutputs);
    }
  }
}
