{
  JobID oldJobId=JobID.forName(JOB_ID);
  JobId jobId=TypeConverter.toYarn(oldJobId);
  long submitTime=Long.parseLong(SUBMIT_TIME);
  long finishTime=Long.parseLong(FINISH_TIME);
  int numMaps=Integer.parseInt(NUM_MAPS);
  int numReduces=Integer.parseInt(NUM_REDUCES);
  String jobHistoryFile=String.format(OLD_JOB_HISTORY_FILE_FORMATTER,JOB_ID,SUBMIT_TIME,USER_NAME,JOB_NAME,FINISH_TIME,NUM_MAPS,NUM_REDUCES,JOB_STATUS);
  JobIndexInfo info=FileNameIndexUtils.getIndexInfo(jobHistoryFile);
  Assert.assertEquals("Job id incorrect after decoding old history file",jobId,info.getJobId());
  Assert.assertEquals("Submit time incorrect after decoding old history file",submitTime,info.getSubmitTime());
  Assert.assertEquals("User incorrect after decoding old history file",USER_NAME,info.getUser());
  Assert.assertEquals("Job name incorrect after decoding old history file",JOB_NAME,info.getJobName());
  Assert.assertEquals("Finish time incorrect after decoding old history file",finishTime,info.getFinishTime());
  Assert.assertEquals("Num maps incorrect after decoding old history file",numMaps,info.getNumMaps());
  Assert.assertEquals("Num reduces incorrect after decoding old history file",numReduces,info.getNumReduces());
  Assert.assertEquals("Job status incorrect after decoding old history file",JOB_STATUS,info.getJobStatus());
  Assert.assertNull("Queue name incorrect after decoding old history file",info.getQueueName());
}
