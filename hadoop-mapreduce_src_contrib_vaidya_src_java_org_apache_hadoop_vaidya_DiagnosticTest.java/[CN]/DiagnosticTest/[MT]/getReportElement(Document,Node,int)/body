{
  if (!this.isEvaluated()) {
    throw new Exception("Test has not been evaluated");
  }
  if (i == 0) {
    Node reportElementx=doc.createElement("JobInformationElement");
    parent.appendChild(reportElementx);
    Node itemx=doc.createElement("JobTrackerID");
    reportElementx.appendChild(itemx);
    Node valuex=doc.createTextNode(this._jobExecutionStats.getStringValue(JobKeys.JOBTRACKERID));
    itemx.appendChild(valuex);
    itemx=doc.createElement("JobName");
    reportElementx.appendChild(itemx);
    valuex=doc.createTextNode(this._jobExecutionStats.getStringValue(JobKeys.JOBNAME));
    itemx.appendChild(valuex);
    itemx=doc.createElement("JobType");
    reportElementx.appendChild(itemx);
    valuex=doc.createTextNode(this._jobExecutionStats.getStringValue(JobKeys.JOBTYPE));
    itemx.appendChild(valuex);
    itemx=doc.createElement("User");
    reportElementx.appendChild(itemx);
    valuex=doc.createTextNode(this._jobExecutionStats.getStringValue(JobKeys.USER));
    itemx.appendChild(valuex);
    itemx=doc.createElement("SubmitTime");
    reportElementx.appendChild(itemx);
    String st1=(new Timestamp(Long.parseLong(this._jobExecutionStats.getStringValue(JobKeys.SUBMIT_TIME))).toString());
    valuex=doc.createTextNode(st1);
    itemx.appendChild(valuex);
    itemx=doc.createElement("LaunchTime");
    reportElementx.appendChild(itemx);
    String st2=(new Timestamp(Long.parseLong(this._jobExecutionStats.getStringValue(JobKeys.LAUNCH_TIME))).toString());
    valuex=doc.createTextNode(st2);
    itemx.appendChild(valuex);
    itemx=doc.createElement("FinishTime");
    reportElementx.appendChild(itemx);
    String st3=(new Timestamp(Long.parseLong(this._jobExecutionStats.getStringValue(JobKeys.FINISH_TIME))).toString());
    valuex=doc.createTextNode(st3);
    itemx.appendChild(valuex);
    itemx=doc.createElement("Status");
    reportElementx.appendChild(itemx);
    valuex=doc.createTextNode(this._jobExecutionStats.getStringValue(JobKeys.STATUS));
    itemx.appendChild(valuex);
  }
  Node reportElement=doc.createElement("TestReportElement");
  parent.appendChild(reportElement);
  Node item=doc.createElement("TestTitle");
  reportElement.appendChild(item);
  Node value=doc.createTextNode(this.getTitle());
  item.appendChild(value);
  item=doc.createElement("TestDescription");
  reportElement.appendChild(item);
  value=doc.createTextNode(this.getDescription());
  item.appendChild(value);
  item=doc.createElement("TestImportance");
  reportElement.appendChild(item);
  String imp;
  if (this.getImportance() == HIGHVAL) {
    imp="HIGH";
  }
 else   if (this.getImportance() == MEDIUMVAL) {
    imp="MEDIUM";
  }
 else {
    imp="LOW";
  }
  value=doc.createTextNode(imp);
  item.appendChild(value);
  item=doc.createElement("TestResult");
  reportElement.appendChild(item);
  if (this._testPassed) {
    value=doc.createTextNode("NEGATIVE(PASSED)");
  }
 else {
    value=doc.createTextNode("POSITIVE(FAILED)");
  }
  item.appendChild(value);
  item=doc.createElement("TestSeverity");
  reportElement.appendChild(item);
  value=doc.createTextNode("" + this.getSeverityLevel());
  item.appendChild(value);
  item=doc.createElement("ReferenceDetails");
  reportElement.appendChild(item);
  value=doc.createTextNode("" + this.getReferenceDetails());
  item.appendChild(value);
  item=doc.createElement("TestPrescription");
  String val=this.getPrescription();
  if (val == null) {
    val=XMLUtils.getElementValue("Prescription",this._testConfigElement);
  }
  reportElement.appendChild(item);
  value=doc.createTextNode("" + val);
  item.appendChild(value);
  return (Element)reportElement;
}
