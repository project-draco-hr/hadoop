{
  Configuration conf=new Configuration();
  conf.setStrings(YarnConfiguration.NM_AUX_SERVICES,new String[]{"Asrv","Bsrv"});
  conf.setClass(String.format(YarnConfiguration.NM_AUX_SERVICE_FMT,"Asrv"),ServiceA.class,Service.class);
  conf.setClass(String.format(YarnConfiguration.NM_AUX_SERVICE_FMT,"Bsrv"),ServiceB.class,Service.class);
  conf.setInt("A.expected.init",1);
  conf.setInt("B.expected.stop",1);
  final AuxServices aux=new AuxServices();
  aux.init(conf);
  aux.start();
  ApplicationId appId1=ApplicationId.newInstance(0,65);
  ByteBuffer buf=ByteBuffer.allocate(6);
  buf.putChar('A');
  buf.putInt(65);
  buf.flip();
  AuxServicesEvent event=new AuxServicesEvent(AuxServicesEventType.APPLICATION_INIT,"user0",appId1,"Asrv",buf);
  aux.handle(event);
  ApplicationId appId2=ApplicationId.newInstance(0,66);
  event=new AuxServicesEvent(AuxServicesEventType.APPLICATION_STOP,"user0",appId2,"Bsrv",null);
  aux.handle(event);
  Collection<AuxServices.AuxiliaryService> servs=aux.getServices();
  for (  AuxServices.AuxiliaryService serv : servs) {
    ArrayList<Integer> appIds=((LightService)serv).getAppIdsStopped();
    assertEquals("app not properly stopped",1,appIds.size());
    assertTrue("wrong app stopped",appIds.contains((Integer)66));
  }
}
