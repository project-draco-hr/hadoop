{
  OpenFileCtx toEvict=null;
synchronized (this) {
    Preconditions.checkState(openFileMap.size() <= this.maxStreams,"stream cache size " + openFileMap.size() + "  is larger than maximum"+ this.maxStreams);
    if (openFileMap.size() == this.maxStreams) {
      Entry<FileHandle,OpenFileCtx> pairs=getEntryToEvict();
      if (pairs == null) {
        return false;
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Evict stream ctx: " + pairs.getValue());
        }
        toEvict=openFileMap.remove(pairs.getKey());
        Preconditions.checkState(toEvict == pairs.getValue(),"The deleted entry is not the same as odlest found.");
      }
    }
    openFileMap.put(h,context);
  }
  if (toEvict != null) {
    toEvict.cleanup();
  }
  return true;
}
