{
  super(cs,queueName,parent,old);
  this.schedulerContext=cs;
  CapacitySchedulerConfiguration conf=cs.getConfiguration();
  String queuePath=super.getQueuePath();
  int maxAppsForReservation=conf.getMaximumApplicationsPerQueue(queuePath);
  showReservationsAsQueues=conf.getShowReservationAsQueues(queuePath);
  if (maxAppsForReservation < 0) {
    maxAppsForReservation=(int)(CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS * super.getAbsoluteCapacity());
  }
  int userLimit=conf.getUserLimit(queuePath);
  float userLimitFactor=conf.getUserLimitFactor(queuePath);
  int maxAppsPerUserForReservation=(int)(maxAppsForReservation * (userLimit / 100.0f) * userLimitFactor);
  updateQuotas(userLimit,userLimitFactor,maxAppsForReservation,maxAppsPerUserForReservation);
  StringBuffer queueInfo=new StringBuffer();
  queueInfo.append("Created Plan Queue: ").append(queueName).append("\nwith capacity: [").append(super.getCapacity()).append("]\nwith max capacity: [").append(super.getMaximumCapacity()).append("\nwith max reservation apps: [").append(maxAppsForReservation).append("]\nwith max reservation apps per user: [").append(maxAppsPerUserForReservation).append("]\nwith user limit: [").append(userLimit).append("]\nwith user limit factor: [").append(userLimitFactor).append("].");
  LOG.info(queueInfo.toString());
}
