{
  if (opts.getCommand() == null) {
    return 0;
  }
  String cmd=opts.getCommand().toString().toLowerCase();
  int exitCode=0;
  try {
switch (opts.getCommand()) {
case CHECKPOINT:
      long count=countUncheckpointedTxns();
    if (count > checkpointConf.getTxnCount() || opts.shouldForceCheckpoint()) {
      doCheckpoint();
    }
 else {
      System.err.println("EditLog size " + count + " transactions is "+ "smaller than configured checkpoint "+ "interval "+ checkpointConf.getTxnCount()+ " transactions.");
      System.err.println("Skipping checkpoint.");
    }
  break;
case GETEDITSIZE:
long uncheckpointed=countUncheckpointedTxns();
System.out.println("NameNode has " + uncheckpointed + " uncheckpointed transactions");
break;
default :
throw new AssertionError("bad command enum: " + opts.getCommand());
}
}
 catch (RemoteException e) {
exitCode=1;
try {
String[] content;
content=e.getLocalizedMessage().split("\n");
LOG.error(cmd + ": " + content[0]);
}
 catch (Exception ex) {
LOG.error(cmd + ": " + ex.getLocalizedMessage());
}
}
catch (IOException e) {
exitCode=1;
LOG.error(cmd + ": " + e.getLocalizedMessage());
}
 finally {
}
return exitCode;
}
