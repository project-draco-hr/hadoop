{
  final BlockInfoContiguous[] blocks=getBlocks();
  if (blocks == null || blocks.length == 0) {
    return 0;
  }
  int n=0;
  long size=0;
  for (; n < blocks.length && newLength > size; n++) {
    size+=blocks[n].getNumBytes();
  }
  final boolean onBoundary=size == newLength;
  long truncateSize=0;
  for (int i=(onBoundary ? n : n - 1); i < blocks.length; i++) {
    truncateSize+=blocks[i].getNumBytes();
  }
  FileWithSnapshotFeature sf=getFileWithSnapshotFeature();
  if (sf != null) {
    FileDiff diff=sf.getDiffs().getLast();
    BlockInfoContiguous[] sblocks=diff != null ? diff.getBlocks() : null;
    if (sblocks != null) {
      for (int i=(onBoundary ? n : n - 1); i < blocks.length && i < sblocks.length && blocks[i].equals(sblocks[i]); i++) {
        truncateSize-=blocks[i].getNumBytes();
      }
    }
  }
  return onBoundary ? -truncateSize : (getPreferredBlockSize() - truncateSize);
}
