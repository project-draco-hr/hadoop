{
  long nsDelta=1;
  final long dsDelta;
  if (this instanceof FileWithSnapshot) {
    FileDiffList fileDiffList=((FileWithSnapshot)this).getDiffs();
    Snapshot last=fileDiffList.getLastSnapshot();
    List<FileDiff> diffs=fileDiffList.asList();
    if (lastSnapshotId == Snapshot.INVALID_ID || last == null) {
      nsDelta+=diffs.size();
      dsDelta=diskspaceConsumed();
    }
 else     if (last.getId() < lastSnapshotId) {
      dsDelta=computeFileSize(true,false) * getFileReplication();
    }
 else {
      Snapshot s=fileDiffList.searchSnapshotById(lastSnapshotId);
      dsDelta=diskspaceConsumed(s);
    }
  }
 else {
    dsDelta=diskspaceConsumed();
  }
  counts.add(Quota.NAMESPACE,nsDelta);
  counts.add(Quota.DISKSPACE,dsDelta);
  return counts;
}
