{
  long nsDelta=1;
  final long dsDelta;
  FileWithSnapshotFeature sf=getFileWithSnapshotFeature();
  if (sf != null) {
    FileDiffList fileDiffList=sf.getDiffs();
    int last=fileDiffList.getLastSnapshotId();
    List<FileDiff> diffs=fileDiffList.asList();
    if (lastSnapshotId == Snapshot.CURRENT_STATE_ID || last == Snapshot.CURRENT_STATE_ID) {
      nsDelta+=diffs.size();
      dsDelta=diskspaceConsumed();
    }
 else     if (last < lastSnapshotId) {
      dsDelta=computeFileSize(true,false) * getFileReplication();
    }
 else {
      int sid=fileDiffList.getSnapshotById(lastSnapshotId);
      dsDelta=diskspaceConsumed(sid);
    }
  }
 else {
    dsDelta=diskspaceConsumed();
  }
  counts.add(Quota.NAMESPACE,nsDelta);
  counts.add(Quota.DISKSPACE,dsDelta);
  return counts;
}
