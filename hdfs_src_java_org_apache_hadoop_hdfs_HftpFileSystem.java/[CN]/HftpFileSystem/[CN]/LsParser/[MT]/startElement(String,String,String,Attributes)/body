{
  if ("listing".equals(qname))   return;
  if (!"file".equals(qname) && !"directory".equals(qname)) {
    if (RemoteException.class.getSimpleName().equals(qname)) {
      throw new SAXException(RemoteException.valueOf(attrs));
    }
    throw new SAXException("Unrecognized entry: " + qname);
  }
  long modif;
  long atime=0;
  try {
    final SimpleDateFormat ldf=df.get();
    modif=ldf.parse(attrs.getValue("modified")).getTime();
    String astr=attrs.getValue("accesstime");
    if (astr != null) {
      atime=ldf.parse(astr).getTime();
    }
  }
 catch (  ParseException e) {
    throw new SAXException(e);
  }
  FileStatus fs="file".equals(qname) ? new FileStatus(Long.valueOf(attrs.getValue("size")).longValue(),false,Short.valueOf(attrs.getValue("replication")).shortValue(),Long.valueOf(attrs.getValue("blocksize")).longValue(),modif,atime,FsPermission.valueOf(attrs.getValue("permission")),attrs.getValue("owner"),attrs.getValue("group"),HftpFileSystem.this.makeQualified(new Path(getUri().toString(),attrs.getValue("path")))) : new FileStatus(0L,true,0,0L,modif,atime,FsPermission.valueOf(attrs.getValue("permission")),attrs.getValue("owner"),attrs.getValue("group"),HftpFileSystem.this.makeQualified(new Path(getUri().toString(),attrs.getValue("path"))));
  fslist.add(fs);
}
