{
  for (  TaskCompletionEvent event : events) {
    TaskCompletionEvent.Status status=event.getStatus();
    if (profiling && shouldDownloadProfile() && (status == TaskCompletionEvent.Status.SUCCEEDED || status == TaskCompletionEvent.Status.FAILED)&& (event.isMapTask() ? mapRanges : reduceRanges).isIncluded(event.idWithinJob())) {
      downloadProfile(event);
    }
switch (filter) {
case NONE:
      break;
case SUCCEEDED:
    if (event.getStatus() == TaskCompletionEvent.Status.SUCCEEDED) {
      LOG.info(event.toString());
      displayTaskLogs(event.getTaskAttemptId(),event.getTaskTrackerHttp());
    }
  break;
case FAILED:
if (event.getStatus() == TaskCompletionEvent.Status.FAILED) {
  LOG.info(event.toString());
  TaskAttemptID taskId=event.getTaskAttemptId();
  String[] taskDiagnostics=getTaskDiagnostics(taskId);
  if (taskDiagnostics != null) {
    for (    String diagnostics : taskDiagnostics) {
      System.err.println(diagnostics);
    }
  }
  displayTaskLogs(event.getTaskAttemptId(),event.getTaskTrackerHttp());
}
break;
case KILLED:
if (event.getStatus() == TaskCompletionEvent.Status.KILLED) {
LOG.info(event.toString());
}
break;
case ALL:
LOG.info(event.toString());
displayTaskLogs(event.getTaskAttemptId(),event.getTaskTrackerHttp());
break;
}
}
}
