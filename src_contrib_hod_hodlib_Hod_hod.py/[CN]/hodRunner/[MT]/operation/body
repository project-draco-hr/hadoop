def operation(self):
    operation = self.__cfg['hod']['operation']
    try:
        opList = self.__check_operation(operation)
        if (self.__opCode == 0):
            if (not self.__userState.checkStateFile(CLUSTER_DATA_FILE, (os.R_OK,))):
                self.__log.critical((INVALID_STATE_FILE_MSGS[0] % self.__userState.get_state_file()))
                self.__opCode = 1
                return self.__opCode
            getattr(self, ('_op_%s' % opList[0]))(opList)
    except HodInterruptException as h:
        self.__log.critical(('op: %s failed because of a process interrupt.' % operation))
        self.__opCode = HOD_INTERRUPTED_CODE
    except:
        self.__log.critical(('op: %s failed: %s' % (operation, get_exception_error_string())))
        self.__log.debug(get_exception_string())
    self.__cleanup()
    self.__log.debug(('return code: %s' % self.__opCode))
    return self.__opCode
