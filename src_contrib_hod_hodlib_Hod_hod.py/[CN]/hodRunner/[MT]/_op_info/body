def _op_info(self, args):
    operation = 'info'
    argLength = len(args)
    if (argLength == 2):
        clusterDir = self.__norm_cluster_dir(args[1])
        if os.path.isdir(clusterDir):
            self.__setup_cluster_state(clusterDir)
            clusterInfo = self.__clusterState.read()
            if (clusterInfo == {}):
                self.__handle_invalid_cluster_directory(clusterDir)
            else:
                clusterStatus = self.__cluster.check_cluster(clusterInfo)
                if (clusterStatus == 12):
                    self.__print_cluster_info(clusterInfo)
                    self.__log.info(('hadoop-site.xml at %s' % clusterDir))
                elif (clusterStatus == 10):
                    self.__log.critical(('%s cluster is dead' % clusterDir))
                elif (clusterStatus == 13):
                    self.__log.warn(('%s cluster hdfs is dead' % clusterDir))
                elif (clusterStatus == 14):
                    self.__log.warn(('%s cluster mapred is dead' % clusterDir))
                if (clusterStatus != 12):
                    if (clusterStatus == 15):
                        self.__log.critical(('Cluster %s not allocated.' % clusterDir))
                    else:
                        self.__print_cluster_info(clusterInfo)
                        self.__log.info(('hadoop-site.xml at %s' % clusterDir))
                    self.__opCode = clusterStatus
        else:
            self.__handle_invalid_cluster_directory(clusterDir)
    else:
        print self.__hodhelp.help(operation)
        self.__log.critical((('%s operation requires one argument. ' % operation) + 'A cluster path.'))
        self.__opCode = 3
