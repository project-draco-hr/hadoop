def _op_deallocate(self, args):
    operation = 'deallocate'
    argLength = len(args)
    if (argLength == 2):
        clusterDir = self.__norm_cluster_dir(args[1])
        if os.path.isdir(clusterDir):
            self.__setup_cluster_state(clusterDir)
            clusterInfo = self.__clusterState.read()
            if (clusterInfo == {}):
                self.__handle_invalid_cluster_directory(clusterDir, cleanUp=True)
            else:
                self.__opCode = self.__cluster.deallocate(clusterDir, clusterInfo)
                self.__clusterState.clear()
                if (not self.__userState.checkStateFile(CLUSTER_DATA_FILE, (os.W_OK,))):
                    self.__log.critical((INVALID_STATE_FILE_MSGS[3] % self.__userState.get_state_file()))
                    self.__opCode = 1
                    return
                self.__remove_cluster(clusterDir)
        else:
            self.__handle_invalid_cluster_directory(clusterDir, cleanUp=True)
    else:
        print self.__hodhelp.help(operation)
        self.__log.critical((('%s operation requires one argument. ' % operation) + 'A cluster path.'))
        self.__opCode = 3
