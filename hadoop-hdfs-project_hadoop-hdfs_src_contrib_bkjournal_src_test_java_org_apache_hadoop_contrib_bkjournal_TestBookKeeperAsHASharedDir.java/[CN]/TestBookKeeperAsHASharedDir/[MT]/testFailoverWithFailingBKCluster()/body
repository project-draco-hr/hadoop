{
  int ensembleSize=numBookies + 1;
  BookieServer newBookie=bkutil.newBookie();
  assertEquals("New bookie didn't start",ensembleSize,bkutil.checkBookiesUp(ensembleSize,10));
  BookieServer replacementBookie=null;
  MiniDFSCluster cluster=null;
  try {
    Configuration conf=getConf();
    conf.set(DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY,BKJMUtil.createJournalURI("/hotfailoverWithFail").toString());
    conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_ENSEMBLE_SIZE,ensembleSize);
    conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_QUORUM_SIZE,ensembleSize);
    BKJMUtil.addJournalManagerDefinition(conf);
    cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(0).manageNameDfsSharedDirs(false).checkExitOnShutdown(false).build();
    NameNode nn1=cluster.getNameNode(0);
    NameNode nn2=cluster.getNameNode(1);
    cluster.waitActive();
    cluster.transitionToActive(0);
    Path p1=new Path("/testBKJMFailingBKCluster1");
    Path p2=new Path("/testBKJMFailingBKCluster2");
    FileSystem fs=HATestUtil.configureFailoverFs(cluster,conf);
    fs.mkdirs(p1);
    newBookie.shutdown();
    assertEquals("New bookie didn't stop",numBookies,bkutil.checkBookiesUp(numBookies,10));
    try {
      fs.mkdirs(p2);
      fail("mkdirs should result in the NN exiting");
    }
 catch (    RemoteException re) {
      assertTrue(re.getClassName().contains("ExitException"));
    }
    cluster.shutdownNameNode(0);
    try {
      cluster.transitionToActive(1);
      fail("Shouldn't have been able to transition with bookies down");
    }
 catch (    ExitException ee) {
      assertTrue("Should shutdown due to required journal failure",ee.getMessage().contains("starting log segment 3 failed for required journal"));
    }
    replacementBookie=bkutil.newBookie();
    assertEquals("Replacement bookie didn't start",ensembleSize,bkutil.checkBookiesUp(ensembleSize,10));
    cluster.transitionToActive(1);
    assertTrue(fs.exists(p1));
    assertFalse(fs.exists(p2));
  }
  finally {
    newBookie.shutdown();
    if (replacementBookie != null) {
      replacementBookie.shutdown();
    }
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
