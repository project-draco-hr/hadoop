{
  final String user_0="user_0";
  int APPLICATION_ID=0;
  FiCaSchedulerApp app_0=getMockApplication(APPLICATION_ID++,user_0,Resources.createResource(4 * GB,0));
  queue.submitApplicationAttempt(app_0,user_0);
  assertEquals(1,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertTrue(queue.activeApplications.contains(app_0));
  FiCaSchedulerApp app_1=getMockApplication(APPLICATION_ID++,user_0,Resources.createResource(4 * GB,0));
  queue.submitApplicationAttempt(app_1,user_0);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertTrue(queue.activeApplications.contains(app_1));
  FiCaSchedulerApp app_2=getMockApplication(APPLICATION_ID++,user_0,Resources.createResource(4 * GB,0));
  queue.submitApplicationAttempt(app_2,user_0);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(1,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(1,queue.getNumPendingApplications(user_0));
  assertTrue(queue.pendingApplications.contains(app_2));
  FiCaSchedulerApp app_3=getMockApplication(APPLICATION_ID++,user_0,Resources.createResource(4 * GB,0));
  queue.submitApplicationAttempt(app_3,user_0);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(2,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(2,queue.getNumPendingApplications(user_0));
  assertTrue(queue.pendingApplications.contains(app_3));
  queue.finishApplicationAttempt(app_2,A);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(1,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(1,queue.getNumPendingApplications(user_0));
  assertFalse(queue.pendingApplications.contains(app_2));
  assertFalse(queue.activeApplications.contains(app_2));
  queue.finishApplicationAttempt(app_0,A);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertTrue(queue.activeApplications.contains(app_3));
  assertFalse(queue.pendingApplications.contains(app_3));
  assertFalse(queue.activeApplications.contains(app_0));
  queue.finishApplicationAttempt(app_1,A);
  assertEquals(1,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertFalse(queue.activeApplications.contains(app_1));
  queue.finishApplicationAttempt(app_3,A);
  assertEquals(0,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(0,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertFalse(queue.activeApplications.contains(app_3));
}
