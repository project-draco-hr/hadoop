{
  final String user_0="user_0";
  final String user_1="user_1";
  queue.updateClusterResource(Resource.newInstance(80 * GB,40));
  ActiveUsersManager activeUsersManager=mock(ActiveUsersManager.class);
  when(queue.getActiveUsersManager()).thenReturn(activeUsersManager);
  assertEquals(Resource.newInstance(8 * GB,1),queue.getAMResourceLimit());
  assertEquals(Resource.newInstance(4 * GB,1),queue.getUserAMResourceLimit());
  int APPLICATION_ID=0;
  FiCaSchedulerApp app_0=getMockApplication(APPLICATION_ID++,user_0,Resource.newInstance(2 * GB,1));
  queue.submitApplicationAttempt(app_0,user_0);
  assertEquals(1,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  when(activeUsersManager.getNumActiveUsers()).thenReturn(1);
  FiCaSchedulerApp app_1=getMockApplication(APPLICATION_ID++,user_0,Resource.newInstance(2 * GB,1));
  queue.submitApplicationAttempt(app_1,user_0);
  assertEquals(2,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(2,queue.getNumActiveApplications(user_0));
  assertEquals(0,queue.getNumPendingApplications(user_0));
  assertEquals(Resource.newInstance(8 * GB,1),queue.getAMResourceLimit());
  assertEquals(Resource.newInstance(4 * GB,1),queue.getUserAMResourceLimit());
  FiCaSchedulerApp app_2=getMockApplication(APPLICATION_ID++,user_1,Resource.newInstance(2 * GB,1));
  queue.submitApplicationAttempt(app_2,user_1);
  assertEquals(3,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_1));
  assertEquals(0,queue.getNumPendingApplications(user_1));
  when(activeUsersManager.getNumActiveUsers()).thenReturn(2);
  assertEquals(Resource.newInstance(8 * GB,1),queue.getAMResourceLimit());
  assertEquals(Resource.newInstance(2 * GB,1),queue.getUserAMResourceLimit());
  FiCaSchedulerApp app_3=getMockApplication(APPLICATION_ID++,user_1,Resource.newInstance(2 * GB,1));
  queue.submitApplicationAttempt(app_3,user_1);
  assertEquals(3,queue.getNumActiveApplications());
  assertEquals(1,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_1));
  assertEquals(1,queue.getNumPendingApplications(user_1));
  queue.finishApplicationAttempt(app_2,A);
  assertEquals(3,queue.getNumActiveApplications());
  assertEquals(0,queue.getNumPendingApplications());
  assertEquals(1,queue.getNumActiveApplications(user_1));
  assertEquals(0,queue.getNumPendingApplications(user_1));
}
