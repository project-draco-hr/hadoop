{
  INodeSection.INodeFile.Builder b=buildINodeFile(n,parent.getSaverContext());
  BlockInfo[] blocks=n.getBlocks();
  if (blocks != null) {
    for (    Block block : n.getBlocks()) {
      b.addBlocks(PBHelper.convert(block));
    }
  }
  if (n.isStriped()) {
    if (blocks != null && blocks.length > 0) {
      BlockInfo firstBlock=blocks[0];
      Preconditions.checkState(firstBlock.isStriped());
      b.setStripingCellSize(((BlockInfoStriped)firstBlock).getCellSize());
    }
 else {
      b.setStripingCellSize(HdfsConstants.BLOCK_STRIPED_CELL_SIZE);
    }
  }
  FileUnderConstructionFeature uc=n.getFileUnderConstructionFeature();
  if (uc != null) {
    INodeSection.FileUnderConstructionFeature f=INodeSection.FileUnderConstructionFeature.newBuilder().setClientName(uc.getClientName()).setClientMachine(uc.getClientMachine()).build();
    b.setFileUC(f);
  }
  INodeSection.INode r=buildINodeCommon(n).setType(INodeSection.INode.Type.FILE).setFile(b).build();
  r.writeDelimitedTo(out);
}
