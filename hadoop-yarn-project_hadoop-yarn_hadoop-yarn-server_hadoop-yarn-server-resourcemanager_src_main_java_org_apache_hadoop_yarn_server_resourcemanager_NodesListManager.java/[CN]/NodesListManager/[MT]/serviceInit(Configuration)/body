{
  this.conf=conf;
  int nodeIpCacheTimeout=conf.getInt(YarnConfiguration.RM_NODE_IP_CACHE_EXPIRY_INTERVAL_SECS,YarnConfiguration.DEFAULT_RM_NODE_IP_CACHE_EXPIRY_INTERVAL_SECS);
  if (nodeIpCacheTimeout <= 0) {
    resolver=new DirectResolver();
  }
 else {
    resolver=new CachedResolver(SystemClock.getInstance(),nodeIpCacheTimeout);
    addIfService(resolver);
  }
  try {
    this.includesFile=conf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);
    this.excludesFile=conf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);
    this.hostsReader=createHostsFileReader(this.includesFile,this.excludesFile);
    setDecomissionedNMs();
    printConfiguredHosts();
  }
 catch (  YarnException ex) {
    disableHostsFileReader(ex);
  }
catch (  IOException ioe) {
    disableHostsFileReader(ioe);
  }
  super.serviceInit(conf);
}
