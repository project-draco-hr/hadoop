{
  RMNode eventNode=event.getNode();
switch (event.getType()) {
case NODE_UNUSABLE:
    LOG.debug(eventNode + " reported unusable");
  unusableRMNodesConcurrentSet.add(eventNode);
for (RMApp app : rmContext.getRMApps().values()) {
  this.rmContext.getDispatcher().getEventHandler().handle(new RMAppNodeUpdateEvent(app.getApplicationId(),eventNode,RMAppNodeUpdateType.NODE_UNUSABLE));
}
break;
case NODE_USABLE:
if (unusableRMNodesConcurrentSet.contains(eventNode)) {
LOG.debug(eventNode + " reported usable");
unusableRMNodesConcurrentSet.remove(eventNode);
for (RMApp app : rmContext.getRMApps().values()) {
this.rmContext.getDispatcher().getEventHandler().handle(new RMAppNodeUpdateEvent(app.getApplicationId(),eventNode,RMAppNodeUpdateType.NODE_USABLE));
}
}
 else {
LOG.warn(eventNode + " reported usable without first reporting unusable");
}
break;
default :
LOG.error("Ignoring invalid eventtype " + event.getType());
}
}
