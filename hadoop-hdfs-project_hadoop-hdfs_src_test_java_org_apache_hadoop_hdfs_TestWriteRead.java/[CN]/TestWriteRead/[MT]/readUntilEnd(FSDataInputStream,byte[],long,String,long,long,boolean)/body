{
  if (pos >= visibleLen || visibleLen <= 0)   return 0;
  int chunkNumber=0;
  long totalByteRead=0;
  long currentPosition=pos;
  int byteRead=0;
  long byteLeftToRead=visibleLen - pos;
  int byteToReadThisRound=0;
  if (!positionReadOption) {
    in.seek(pos);
    currentPosition=in.getPos();
  }
  if (verboseOption)   LOG.info("reader begin: position: " + pos + " ; currentOffset = "+ currentPosition+ " ; bufferSize ="+ buffer.length+ " ; Filename = "+ fname);
  try {
    while (byteLeftToRead > 0 && currentPosition < visibleLen) {
      byteToReadThisRound=(int)(byteLeftToRead >= buffer.length ? buffer.length : byteLeftToRead);
      if (positionReadOption) {
        byteRead=in.read(currentPosition,buffer,0,byteToReadThisRound);
      }
 else {
        byteRead=in.read(buffer,0,byteToReadThisRound);
      }
      if (byteRead <= 0)       break;
      chunkNumber++;
      totalByteRead+=byteRead;
      currentPosition+=byteRead;
      byteLeftToRead-=byteRead;
      if (verboseOption) {
        LOG.info("reader: Number of byte read: " + byteRead + " ; totalByteRead = "+ totalByteRead+ " ; currentPosition="+ currentPosition+ " ; chunkNumber ="+ chunkNumber+ "; File name = "+ fname);
      }
    }
  }
 catch (  IOException e) {
    throw new IOException("#### Exception caught in readUntilEnd: reader  currentOffset = " + currentPosition + " ; totalByteRead ="+ totalByteRead+ " ; latest byteRead = "+ byteRead+ "; visibleLen= "+ visibleLen+ " ; bufferLen = "+ buffer.length+ " ; Filename = "+ fname,e);
  }
  if (verboseOption)   LOG.info("reader end:   position: " + pos + " ; currentOffset = "+ currentPosition+ " ; totalByteRead ="+ totalByteRead+ " ; Filename = "+ fname);
  return totalByteRead;
}
