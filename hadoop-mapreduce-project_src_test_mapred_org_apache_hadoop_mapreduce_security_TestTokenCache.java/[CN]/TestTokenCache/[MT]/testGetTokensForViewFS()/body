{
  Configuration conf=new Configuration(jConf);
  FileSystem dfs=dfsCluster.getFileSystem();
  String serviceName=dfs.getCanonicalServiceName();
  Path p1=new Path("/mount1");
  Path p2=new Path("/mount2");
  p1=dfs.makeQualified(p1);
  p2=dfs.makeQualified(p2);
  conf.set("fs.viewfs.mounttable.default.link./dir1",p1.toString());
  conf.set("fs.viewfs.mounttable.default.link./dir2",p2.toString());
  Credentials credentials=new Credentials();
  Path lp1=new Path("viewfs:///dir1");
  Path lp2=new Path("viewfs:///dir2");
  Path[] paths=new Path[2];
  paths[0]=lp1;
  paths[1]=lp2;
  TokenCache.obtainTokensForNamenodesInternal(credentials,paths,conf);
  Collection<Token<? extends TokenIdentifier>> tns=credentials.getAllTokens();
  assertEquals("number of tokens is not 1",1,tns.size());
  boolean found=false;
  for (  Token<? extends TokenIdentifier> tt : tns) {
    System.out.println("token=" + tt);
    if (tt.getKind().equals(DelegationTokenIdentifier.HDFS_DELEGATION_KIND) && tt.getService().equals(new Text(serviceName))) {
      found=true;
    }
    assertTrue("didn't find token for [" + lp1 + ", "+ lp2+ "]",found);
  }
}
