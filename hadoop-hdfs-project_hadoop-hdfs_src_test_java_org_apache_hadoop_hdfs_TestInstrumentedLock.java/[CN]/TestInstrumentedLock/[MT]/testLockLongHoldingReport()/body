{
  String testname=name.getMethodName();
  final AtomicLong time=new AtomicLong(0);
  Timer mclock=new Timer(){
    @Override public long monotonicNow(){
      return time.get();
    }
  }
;
  Lock mlock=mock(Lock.class);
  final AtomicLong wlogged=new AtomicLong(0);
  final AtomicLong wsuppresed=new AtomicLong(0);
  InstrumentedLock lock=new InstrumentedLock(testname,LOG,mlock,2000,300,mclock){
    @Override void logWarning(    long lockHeldTime,    long suppressed){
      wlogged.incrementAndGet();
      wsuppresed.set(suppressed);
    }
  }
;
  lock.lock();
  time.set(200);
  lock.unlock();
  assertEquals(0,wlogged.get());
  assertEquals(0,wsuppresed.get());
  lock.lock();
  time.set(700);
  lock.unlock();
  assertEquals(1,wlogged.get());
  assertEquals(0,wsuppresed.get());
  lock.lock();
  time.set(1100);
  lock.unlock();
  assertEquals(1,wlogged.get());
  assertEquals(0,wsuppresed.get());
  time.set(2400);
  lock.lock();
  time.set(2800);
  lock.unlock();
  assertEquals(2,wlogged.get());
  assertEquals(1,wsuppresed.get());
}
