{
  Path nmPrivateContainerTokensPath=ctx.getNmPrivateContainerTokens();
  InetSocketAddress nmAddr=ctx.getNmAddr();
  String user=ctx.getUser();
  String appId=ctx.getAppId();
  String locId=ctx.getLocId();
  LocalDirsHandlerService dirsHandler=ctx.getDirsHandler();
  List<String> localDirs=dirsHandler.getLocalDirs();
  List<String> logDirs=dirsHandler.getLogDirs();
  verifyUsernamePattern(user);
  String runAsUser=getRunAsUser(user);
  PrivilegedOperation initializeContainerOp=new PrivilegedOperation(PrivilegedOperation.OperationType.INITIALIZE_CONTAINER,(String)null);
  List<String> prefixCommands=new ArrayList<>();
  addSchedPriorityCommand(prefixCommands);
  initializeContainerOp.appendArgs(runAsUser,user,Integer.toString(PrivilegedOperation.RunAsUserCommand.INITIALIZE_CONTAINER.getValue()),appId,nmPrivateContainerTokensPath.toUri().getPath().toString(),StringUtils.join(PrivilegedOperation.LINUX_FILE_PATH_SEPARATOR,localDirs),StringUtils.join(PrivilegedOperation.LINUX_FILE_PATH_SEPARATOR,logDirs));
  File jvm=new File(new File(System.getProperty("java.home"),"bin"),"java");
  initializeContainerOp.appendArgs(jvm.toString());
  initializeContainerOp.appendArgs("-classpath");
  initializeContainerOp.appendArgs(System.getProperty("java.class.path"));
  String javaLibPath=System.getProperty("java.library.path");
  if (javaLibPath != null) {
    initializeContainerOp.appendArgs("-Djava.library.path=" + javaLibPath);
  }
  initializeContainerOp.appendArgs(ContainerLocalizer.getJavaOpts(getConf()));
  List<String> localizerArgs=new ArrayList<>();
  buildMainArgs(localizerArgs,user,appId,locId,nmAddr,localDirs);
  initializeContainerOp.appendArgs(localizerArgs);
  try {
    Configuration conf=super.getConf();
    PrivilegedOperationExecutor privilegedOperationExecutor=PrivilegedOperationExecutor.getInstance(conf);
    privilegedOperationExecutor.executePrivilegedOperation(prefixCommands,initializeContainerOp,null,null,false);
  }
 catch (  PrivilegedOperationException e) {
    int exitCode=e.getExitCode();
    LOG.warn("Exit code from container " + locId + " startLocalizer is : "+ exitCode,e);
    throw new IOException("Application " + appId + " initialization failed"+ " (exitCode="+ exitCode+ ") with output: "+ e.getOutput(),e);
  }
}
