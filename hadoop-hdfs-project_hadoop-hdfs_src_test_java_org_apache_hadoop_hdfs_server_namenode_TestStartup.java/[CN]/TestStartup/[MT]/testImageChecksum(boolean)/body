{
  MiniDFSCluster cluster=null;
  if (compress) {
    config.setBoolean(DFSConfigKeys.DFS_IMAGE_COMPRESSION_CODEC_KEY,true);
  }
  try {
    LOG.info("\n===========================================\n" + "Starting empty cluster");
    cluster=new MiniDFSCluster.Builder(config).numDataNodes(0).format(true).build();
    cluster.waitActive();
    FileSystem fs=cluster.getFileSystem();
    fs.mkdirs(new Path("/test"));
    LOG.info("Shutting down cluster #1");
    cluster.shutdown();
    cluster=null;
    corruptFSImageMD5(true);
    final LogVerificationAppender appender=new LogVerificationAppender();
    final Logger logger=Logger.getRootLogger();
    logger.addAppender(appender);
    LOG.info("\n===========================================\n" + "Starting same cluster after simulated crash");
    try {
      cluster=new MiniDFSCluster.Builder(config).numDataNodes(0).format(false).build();
      fail("Should not have successfully started with corrupt image");
    }
 catch (    IOException ioe) {
      GenericTestUtils.assertExceptionContains("Failed to load FSImage file",ioe);
      int md5failures=appender.countExceptionsWithMessage(" is corrupt with MD5 checksum of ");
      assertEquals(2,md5failures);
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
