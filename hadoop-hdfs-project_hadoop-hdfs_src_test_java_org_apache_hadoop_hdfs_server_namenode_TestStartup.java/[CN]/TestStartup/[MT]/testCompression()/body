{
  LOG.info("Test compressing image.");
  Configuration conf=new Configuration();
  FileSystem.setDefaultUri(conf,"hdfs://localhost:0");
  conf.set(DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY,"127.0.0.1:0");
  File base_dir=new File(PathUtils.getTestDir(getClass()),"dfs/");
  conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,new File(base_dir,"name").getPath());
  conf.setBoolean(DFSConfigKeys.DFS_PERMISSIONS_ENABLED_KEY,false);
  DFSTestUtil.formatNameNode(conf);
  LOG.info("Create an uncompressed fsimage");
  NameNode namenode=new NameNode(conf);
  namenode.getNamesystem().mkdirs("/test",new PermissionStatus("hairong",null,FsPermission.getDefault()),true);
  NamenodeProtocols nnRpc=namenode.getRpcServer();
  assertTrue(nnRpc.getFileInfo("/test").isDir());
  nnRpc.setSafeMode(SafeModeAction.SAFEMODE_ENTER,false);
  nnRpc.saveNamespace(0,0);
  namenode.stop();
  namenode.join();
  namenode.joinHttpServer();
  LOG.info("Read an uncomressed image and store it compressed using default codec.");
  conf.setBoolean(DFSConfigKeys.DFS_IMAGE_COMPRESS_KEY,true);
  checkNameSpace(conf);
  LOG.info("Read a compressed image and store it using a different codec.");
  conf.set(DFSConfigKeys.DFS_IMAGE_COMPRESSION_CODEC_KEY,"org.apache.hadoop.io.compress.GzipCodec");
  checkNameSpace(conf);
  LOG.info("Read a compressed image and store it as uncompressed.");
  conf.setBoolean(DFSConfigKeys.DFS_IMAGE_COMPRESS_KEY,false);
  checkNameSpace(conf);
  LOG.info("Read an uncompressed image and store it as uncompressed.");
  checkNameSpace(conf);
}
