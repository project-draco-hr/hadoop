{
  Configuration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=null;
  try {
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MAX_XATTR_SIZE_KEY,-1);
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build();
    fail("Expected exception with negative xattr size");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("The maximum size of an xattr should be > 0",e);
  }
 finally {
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MAX_XATTR_SIZE_KEY,DFSConfigKeys.DFS_NAMENODE_MAX_XATTR_SIZE_DEFAULT);
    if (cluster != null) {
      cluster.shutdown();
    }
  }
  try {
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MAX_XATTRS_PER_INODE_KEY,-1);
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build();
    fail("Expected exception with negative # xattrs per inode");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("Cannot set a negative limit on the number of xattrs per inode",e);
  }
 finally {
    conf.setInt(DFSConfigKeys.DFS_NAMENODE_MAX_XATTRS_PER_INODE_KEY,DFSConfigKeys.DFS_NAMENODE_MAX_XATTRS_PER_INODE_DEFAULT);
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
