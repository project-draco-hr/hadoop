{
  final Path foo=new Path("/foo");
  final Path f1=new Path(foo,"f1");
  DFSTestUtil.createFile(dfs,f1,BLOCKSIZE,REPLICATION,0L);
  final Path bar=new Path(foo,"bar");
  dfs.mkdirs(bar);
  final Path f2=new Path(bar,"f2");
  DFSTestUtil.createFile(dfs,f2,BLOCKSIZE,REPLICATION,0L);
  INode f1Node=fsdir.getINode4Write(f1.toString());
  INode f2Node=fsdir.getINode4Write(f2.toString());
  SnapshotTestHelper.createSnapshot(dfs,foo,"s1");
  dfs.delete(bar,true);
  SnapshotTestHelper.createSnapshot(dfs,foo,"s2");
  dfs.delete(f1,true);
  byte[][] f1Components=FSDirectory.getPathComponentsWithSnapshot(f1Node);
  byte[][] f2Components=FSDirectory.getPathComponentsWithSnapshot(f2Node);
  String f1Snapshot=SnapshotTestHelper.getSnapshotPath(foo,"s2",f1.getName()).toString();
  String f2Snapshot=SnapshotTestHelper.getSnapshotPath(foo,"s1","bar/f2").toString();
  DFSTestUtil.checkComponentsEquals(INode.getPathComponents(f1Snapshot),f1Components);
  DFSTestUtil.checkComponentsEquals(INode.getPathComponents(f2Snapshot),f2Components);
  dfs.deleteSnapshot(foo,"s2");
  f1Snapshot=SnapshotTestHelper.getSnapshotPath(foo,"s1",f1.getName()).toString();
  f1Components=FSDirectory.getPathComponentsWithSnapshot(f1Node);
  DFSTestUtil.checkComponentsEquals(INode.getPathComponents(f1Snapshot),f1Components);
}
