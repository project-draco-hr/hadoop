{
  DrainDispatcher dispatcher=new DrainDispatcher();
  dispatcher.init(null);
  try {
    dispatcher.start();
    EventHandler<LocalizationEvent> localizerBus=mock(EventHandler.class);
    dispatcher.register(LocalizationEventType.class,localizerBus);
    EventHandler<ContainersLauncherEvent> launcherBus=mock(EventHandler.class);
    dispatcher.register(ContainersLauncherEventType.class,launcherBus);
    ContainerLaunchContext ctxt=mock(ContainerLaunchContext.class);
    ContainerId cId=getMockContainerId(8,314159265358979L,4344);
    when(ctxt.getUser()).thenReturn("yak");
    when(ctxt.getContainerId()).thenReturn(cId);
    Random r=new Random();
    long seed=r.nextLong();
    r.setSeed(seed);
    System.out.println("testLocalizationLaunch seed: " + seed);
    final Map<String,LocalResource> localResources=createLocalResources(r);
    when(ctxt.getAllLocalResources()).thenReturn(localResources);
    final Container c=newContainer(dispatcher,ctxt);
    assertEquals(ContainerState.NEW,c.getContainerState());
    c.handle(new ContainerEvent(cId,ContainerEventType.INIT_CONTAINER));
    dispatcher.await();
    Path cache=new Path("file:///cache");
    Map<Path,String> localPaths=new HashMap<Path,String>();
    for (    Entry<String,LocalResource> rsrc : localResources.entrySet()) {
      assertEquals(ContainerState.LOCALIZING,c.getContainerState());
      LocalResourceRequest req=new LocalResourceRequest(rsrc.getValue());
      Path p=new Path(cache,rsrc.getKey());
      localPaths.put(p,rsrc.getKey());
      c.handle(new ContainerResourceLocalizedEvent(c.getContainerID(),req,p));
    }
    dispatcher.await();
    assertEquals(ContainerState.LOCALIZED,c.getContainerState());
    for (    Entry<Path,String> loc : c.getLocalizedResources().entrySet()) {
      assertEquals(localPaths.remove(loc.getKey()),loc.getValue());
    }
    assertTrue(localPaths.isEmpty());
    ArgumentMatcher<ContainersLauncherEvent> matchesContainerLaunch=new ArgumentMatcher<ContainersLauncherEvent>(){
      @Override public boolean matches(      Object o){
        ContainersLauncherEvent launchEvent=(ContainersLauncherEvent)o;
        return c == launchEvent.getContainer();
      }
    }
;
    verify(launcherBus).handle(argThat(matchesContainerLaunch));
  }
  finally {
    dispatcher.stop();
  }
}
