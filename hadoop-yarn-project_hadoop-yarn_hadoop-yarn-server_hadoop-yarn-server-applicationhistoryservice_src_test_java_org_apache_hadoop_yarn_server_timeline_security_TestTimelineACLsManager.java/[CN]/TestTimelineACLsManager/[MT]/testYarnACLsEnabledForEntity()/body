{
  Configuration conf=new YarnConfiguration();
  conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE,true);
  conf.set(YarnConfiguration.YARN_ADMIN_ACL,"admin");
  TimelineACLsManager timelineACLsManager=new TimelineACLsManager(conf);
  timelineACLsManager.setTimelineStore(new TestTimelineStore());
  TimelineEntity entity=new TimelineEntity();
  entity.addPrimaryFilter(TimelineStore.SystemFilter.ENTITY_OWNER.toString(),"owner");
  entity.setDomainId("domain_id_1");
  Assert.assertTrue("Owner should be allowed to view",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("owner"),ApplicationAccessType.VIEW_APP,entity));
  Assert.assertTrue("Reader should be allowed to view",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("reader"),ApplicationAccessType.VIEW_APP,entity));
  Assert.assertFalse("Other shouldn't be allowed to view",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("other"),ApplicationAccessType.VIEW_APP,entity));
  Assert.assertTrue("Admin should be allowed to view",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("admin"),ApplicationAccessType.VIEW_APP,entity));
  Assert.assertTrue("Owner should be allowed to modify",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("owner"),ApplicationAccessType.MODIFY_APP,entity));
  Assert.assertTrue("Writer should be allowed to modify",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("writer"),ApplicationAccessType.MODIFY_APP,entity));
  Assert.assertFalse("Other shouldn't be allowed to modify",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("other"),ApplicationAccessType.MODIFY_APP,entity));
  Assert.assertTrue("Admin should be allowed to modify",timelineACLsManager.checkAccess(UserGroupInformation.createRemoteUser("admin"),ApplicationAccessType.MODIFY_APP,entity));
}
