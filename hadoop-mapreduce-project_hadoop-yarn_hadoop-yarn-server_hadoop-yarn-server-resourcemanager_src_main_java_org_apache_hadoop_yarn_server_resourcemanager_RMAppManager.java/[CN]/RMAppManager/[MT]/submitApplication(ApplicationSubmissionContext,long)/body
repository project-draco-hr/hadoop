{
  ApplicationId applicationId=submissionContext.getApplicationId();
  RMApp application=null;
  try {
    String clientTokenStr=null;
    String user=UserGroupInformation.getCurrentUser().getShortUserName();
    if (UserGroupInformation.isSecurityEnabled()) {
      Token<ApplicationTokenIdentifier> clientToken=new Token<ApplicationTokenIdentifier>(new ApplicationTokenIdentifier(applicationId),this.clientToAMSecretManager);
      clientTokenStr=clientToken.encodeToUrlString();
      LOG.debug("Sending client token as " + clientTokenStr);
    }
    if (submissionContext.getQueue() == null) {
      submissionContext.setQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);
    }
    if (submissionContext.getApplicationName() == null) {
      submissionContext.setApplicationName(YarnConfiguration.DEFAULT_APPLICATION_NAME);
    }
    ApplicationStore appStore=rmContext.getApplicationsStore().createApplicationStore(submissionContext.getApplicationId(),submissionContext);
    application=new RMAppImpl(applicationId,rmContext,this.conf,submissionContext.getApplicationName(),user,submissionContext.getQueue(),submissionContext,clientTokenStr,appStore,this.scheduler,this.masterService,submitTime);
    if (rmContext.getRMApps().putIfAbsent(applicationId,application) != null) {
      String message="Application with id " + applicationId + " is already present! Cannot add a duplicate!";
      LOG.info(message);
      throw RPCUtil.getRemoteException(message);
    }
    this.applicationACLsManager.addApplication(applicationId,submissionContext.getAMContainerSpec().getApplicationACLs());
    if (UserGroupInformation.isSecurityEnabled()) {
      this.rmContext.getDelegationTokenRenewer().addApplication(applicationId,parseCredentials(submissionContext));
    }
    this.rmContext.getDispatcher().getEventHandler().handle(new RMAppEvent(applicationId,RMAppEventType.START));
  }
 catch (  IOException ie) {
    LOG.info("RMAppManager submit application exception",ie);
    if (application != null) {
      this.rmContext.getDispatcher().getEventHandler().handle(new RMAppRejectedEvent(applicationId,ie.getMessage()));
    }
  }
}
