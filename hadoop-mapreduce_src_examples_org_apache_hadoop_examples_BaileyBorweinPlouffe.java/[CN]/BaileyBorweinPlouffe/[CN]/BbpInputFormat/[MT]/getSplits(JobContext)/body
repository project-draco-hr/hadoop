{
  final int startDigit=context.getConfiguration().getInt(DIGIT_START_PROPERTY,1);
  final int nDigits=context.getConfiguration().getInt(DIGIT_SIZE_PROPERTY,100);
  final int nMaps=context.getConfiguration().getInt(DIGIT_PARTS_PROPERTY,1);
  final List<InputSplit> splits=new ArrayList<InputSplit>(nMaps);
  final int[] parts=partition(startDigit - 1,nDigits,nMaps);
  for (int i=0; i < parts.length; ++i) {
    final int k=i < parts.length - 1 ? parts[i + 1] : nDigits + startDigit - 1;
    splits.add(new BbpSplit(i,parts[i],k - parts[i]));
  }
  return splits;
}
