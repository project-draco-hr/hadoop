{
  boolean enabled=false;
  SharedFileDescriptorFactory shmFactory=null;
  DomainSocketWatcher watcher=null;
  try {
    String loadingFailureReason=SharedFileDescriptorFactory.getLoadingFailureReason();
    if (loadingFailureReason != null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Disabling ShortCircuitRegistry because " + loadingFailureReason);
      }
      return;
    }
    String shmPath=conf.get(DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATH,DFS_DATANODE_SHARED_FILE_DESCRIPTOR_PATH_DEFAULT);
    if (shmPath.isEmpty()) {
      LOG.debug("Disabling ShortCircuitRegistry because shmPath was not set.");
      return;
    }
    int interruptCheck=conf.getInt(DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS,DFS_SHORT_CIRCUIT_SHARED_MEMORY_WATCHER_INTERRUPT_CHECK_MS_DEFAULT);
    if (interruptCheck <= 0) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Disabling ShortCircuitRegistry because " + "interruptCheckMs was set to " + interruptCheck);
      }
      return;
    }
    shmFactory=new SharedFileDescriptorFactory("HadoopShortCircuitShm_",shmPath);
    watcher=new DomainSocketWatcher(interruptCheck);
    enabled=true;
    if (LOG.isDebugEnabled()) {
      LOG.debug("created new ShortCircuitRegistry with interruptCheck=" + interruptCheck + ", shmPath="+ shmPath);
    }
  }
  finally {
    this.enabled=enabled;
    this.shmFactory=shmFactory;
    this.watcher=watcher;
  }
}
