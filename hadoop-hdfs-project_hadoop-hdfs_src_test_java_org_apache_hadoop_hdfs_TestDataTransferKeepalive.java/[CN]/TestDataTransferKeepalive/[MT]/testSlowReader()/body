{
  final long CLIENT_EXPIRY_MS=600000L;
  Configuration clientConf=new Configuration(conf);
  clientConf.setLong(DFS_CLIENT_SOCKET_CACHE_EXPIRY_MSEC_KEY,CLIENT_EXPIRY_MS);
  clientConf.set(DFS_CLIENT_CONTEXT,"testSlowReader");
  DistributedFileSystem fs=(DistributedFileSystem)FileSystem.get(cluster.getURI(),clientConf);
  DataNodeProperties props=cluster.stopDataNode(0);
  props.conf.setInt(DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY,WRITE_TIMEOUT);
  props.conf.setInt(DFS_DATANODE_SOCKET_REUSE_KEEPALIVE_KEY,120000);
  assertTrue(cluster.restartDataNode(props,true));
  dn=cluster.getDataNodes().get(0);
  cluster.triggerHeartbeats();
  DFSTestUtil.createFile(fs,TEST_FILE,1024 * 1024 * 8L,(short)1,0L);
  FSDataInputStream stm=fs.open(TEST_FILE);
  stm.read();
  assertXceiverCount(1);
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    public Boolean get(){
      return getXceiverCountWithoutServer() == 0;
    }
  }
,500,50000);
  IOUtils.closeStream(stm);
}
