{
  UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
  NodeId nodeId=NodeId.newInstance("localhost",1234);
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  ApplicationAttemptReport mockAttemptReport=mock(ApplicationAttemptReport.class);
  doReturn(appAttemptId).when(mockAttemptReport).getApplicationAttemptId();
  List<ApplicationAttemptReport> attemptReports=Arrays.asList(mockAttemptReport);
  ContainerId containerId1=ContainerId.newContainerId(appAttemptId,1);
  ContainerReport mockContainerReport1=mock(ContainerReport.class);
  doReturn(containerId1).when(mockContainerReport1).getContainerId();
  doReturn(nodeId).when(mockContainerReport1).getAssignedNode();
  doReturn("http://localhost:2345").when(mockContainerReport1).getNodeHttpAddress();
  ContainerId containerId2=ContainerId.newContainerId(appAttemptId,2);
  ContainerReport mockContainerReport2=mock(ContainerReport.class);
  doReturn(containerId2).when(mockContainerReport2).getContainerId();
  doReturn(nodeId).when(mockContainerReport2).getAssignedNode();
  doReturn("http://localhost:2345").when(mockContainerReport2).getNodeHttpAddress();
  List<ContainerReport> containerReports=Arrays.asList(mockContainerReport1,mockContainerReport2);
  YarnClient mockYarnClient=createMockYarnClient(YarnApplicationState.RUNNING,ugi.getShortUserName(),true,attemptReports,containerReports);
  LogsCLI cli=spy(new LogsCLIForTest(mockYarnClient));
  doReturn(0).when(cli).printContainerLogsFromRunningApplication(any(Configuration.class),any(ContainerLogsRequest.class),any(LogCLIHelpers.class));
  cli.setConf(new YarnConfiguration());
  int exitCode=cli.run(new String[]{"-applicationId",appId.toString()});
  assertTrue(exitCode == 0);
  ArgumentCaptor<ContainerLogsRequest> logsRequestCaptor=ArgumentCaptor.forClass(ContainerLogsRequest.class);
  verify(cli,times(2)).printContainerLogsFromRunningApplication(any(Configuration.class),logsRequestCaptor.capture(),any(LogCLIHelpers.class));
  List<ContainerLogsRequest> capturedRequests=logsRequestCaptor.getAllValues();
  Assert.assertEquals(2,capturedRequests.size());
  List<String> logTypes0=capturedRequests.get(0).getLogTypes();
  List<String> logTypes1=capturedRequests.get(1).getLogTypes();
  Assert.assertEquals(".*",logTypes0.get(0));
  Assert.assertEquals(".*",logTypes1.get(0));
}
