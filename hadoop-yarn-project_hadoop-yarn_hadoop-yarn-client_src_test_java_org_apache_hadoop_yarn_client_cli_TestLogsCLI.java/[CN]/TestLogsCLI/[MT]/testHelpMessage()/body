{
  Configuration conf=new YarnConfiguration();
  YarnClient mockYarnClient=createMockYarnClient(YarnApplicationState.FINISHED);
  LogsCLI dumper=new LogsCLIForTest(mockYarnClient);
  dumper.setConf(conf);
  int exitCode=dumper.run(new String[]{});
  assertTrue(exitCode == -1);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PrintWriter pw=new PrintWriter(baos);
  pw.println("Retrieve logs for completed YARN applications.");
  pw.println("usage: yarn logs -applicationId <application ID> [OPTIONS]");
  pw.println();
  pw.println("general options are:");
  pw.println(" -am <AM Containers>             Prints the AM Container logs for this");
  pw.println("                                 application. Specify comma-separated");
  pw.println("                                 value to get logs for related AM");
  pw.println("                                 Container. For example, If we specify -am");
  pw.println("                                 1,2, we will get the logs for the first");
  pw.println("                                 AM Container as well as the second AM");
  pw.println("                                 Container. To get logs for all AM");
  pw.println("                                 Containers, use -am ALL. To get logs for");
  pw.println("                                 the latest AM Container, use -am -1. By");
  pw.println("                                 default, it will only print out syslog.");
  pw.println("                                 Work with -logFiles to get other logs");
  pw.println(" -appOwner <Application Owner>   AppOwner (assumed to be current user if");
  pw.println("                                 not specified)");
  pw.println(" -containerId <Container ID>     ContainerId. By default, it will only");
  pw.println("                                 print syslog if the application is");
  pw.println("                                 runing. Work with -logFiles to get other");
  pw.println("                                 logs.");
  pw.println(" -help                           Displays help for all commands.");
  pw.println(" -logFiles <Log File Name>       Work with -am/-containerId and specify");
  pw.println("                                 comma-separated value to get specified");
  pw.println("                                 Container log files");
  pw.println(" -nodeAddress <Node Address>     NodeAddress in the format nodename:port");
  pw.close();
  String appReportStr=baos.toString("UTF-8");
  Assert.assertEquals(appReportStr,sysOutStream.toString());
}
