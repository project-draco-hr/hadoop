{
  super(conf);
  this.usersWithLocalPathAccess=Arrays.asList(conf.getTrimmedStrings(DFSConfigKeys.DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY));
  this.connectToDnViaHostname=conf.getBoolean(DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME,DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);
  this.getHdfsBlockLocationsEnabled=conf.getBoolean(DFSConfigKeys.DFS_HDFS_BLOCKS_METADATA_ENABLED,DFSConfigKeys.DFS_HDFS_BLOCKS_METADATA_ENABLED_DEFAULT);
  if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY,DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT)) {
    String reason=DomainSocket.getLoadingFailureReason();
    if (reason != null) {
      LOG.warn("File descriptor passing is disabled because " + reason);
      this.fileDescriptorPassingDisabledReason=reason;
    }
 else {
      LOG.info("File descriptor passing is enabled.");
      this.fileDescriptorPassingDisabledReason=null;
    }
  }
 else {
    this.fileDescriptorPassingDisabledReason="File descriptor passing was not configured.";
    LOG.debug(this.fileDescriptorPassingDisabledReason);
  }
  try {
    hostName=getHostName(conf);
    LOG.info("Configured hostname is " + hostName);
    startDataNode(conf,dataDirs,resources);
  }
 catch (  IOException ie) {
    shutdown();
    throw ie;
  }
}
