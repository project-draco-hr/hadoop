{
  StartupOption startOpt=StartupOption.REGULAR;
  int i=0;
  if (args != null && args.length != 0) {
    String cmd=args[i++];
    if ("-r".equalsIgnoreCase(cmd) || "--rack".equalsIgnoreCase(cmd)) {
      LOG.error("-r, --rack arguments are not supported anymore. RackID " + "resolution is handled by the NameNode.");
      return false;
    }
 else     if (StartupOption.ROLLBACK.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.ROLLBACK;
    }
 else     if (StartupOption.REGULAR.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.REGULAR;
    }
 else     if (StartupOption.ROLLINGUPGRADE.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.ROLLINGUPGRADE;
      if ((i < args.length) && (args[i].equalsIgnoreCase(RollingUpgradeStartupOption.ROLLBACK.toString()))) {
        startOpt.setRollingUpgradeStartupOption(args[i++]);
      }
 else {
        LOG.error("Missing or unrecognized option to " + StartupOption.ROLLINGUPGRADE);
        return false;
      }
      LOG.info("Rolling upgrade rollback requested via startup option");
    }
 else {
      return false;
    }
  }
  setStartupOption(conf,startOpt);
  return (args == null || i == args.length);
}
