{
  Configuration conf=new Configuration();
  conf.set(DFS_DATANODE_DATA_DIR_KEY,newVolumes);
  List<StorageLocation> locations=getStorageLocations(conf);
  if (locations.isEmpty()) {
    throw new IOException("No directory is specified.");
  }
  Map<String,StorageLocation> existingLocations=new HashMap<>();
  for (  StorageLocation loc : getStorageLocations(this.conf)) {
    existingLocations.put(loc.getFile().getCanonicalPath(),loc);
  }
  ChangedVolumes results=new ChangedVolumes();
  results.newLocations.addAll(locations);
  for (Iterator<Storage.StorageDirectory> it=storage.dirIterator(); it.hasNext(); ) {
    Storage.StorageDirectory dir=it.next();
    boolean found=false;
    for (Iterator<StorageLocation> sl=results.newLocations.iterator(); sl.hasNext(); ) {
      StorageLocation location=sl.next();
      if (location.getFile().getCanonicalPath().equals(dir.getRoot().getCanonicalPath())) {
        sl.remove();
        StorageLocation old=existingLocations.get(location.getFile().getCanonicalPath());
        if (old != null && old.getStorageType() != location.getStorageType()) {
          throw new IOException("Changing storage type is not allowed.");
        }
        results.unchangedLocations.add(location);
        found=true;
        break;
      }
    }
    if (!found) {
      results.deactivateLocations.add(StorageLocation.parse(dir.getRoot().toString()));
    }
  }
  return results;
}
