{
  ExportedBlockKeys keys=bpRegistration.getExportedKeys();
  if (!hasAnyBlockPoolRegistered) {
    hasAnyBlockPoolRegistered=true;
    isBlockTokenEnabled=keys.isBlockTokenEnabled();
  }
 else {
    if (isBlockTokenEnabled != keys.isBlockTokenEnabled()) {
      throw new RuntimeException("Inconsistent configuration of block access" + " tokens. Either all block pools must be configured to use block" + " tokens, or none may be.");
    }
  }
  if (!isBlockTokenEnabled)   return;
  if (!blockPoolTokenSecretManager.isBlockPoolRegistered(blockPoolId)) {
    long blockKeyUpdateInterval=keys.getKeyUpdateInterval();
    long blockTokenLifetime=keys.getTokenLifetime();
    LOG.info("Block token params received from NN: for block pool " + blockPoolId + " keyUpdateInterval="+ blockKeyUpdateInterval / (60 * 1000) + " min(s), tokenLifetime=" + blockTokenLifetime / (60 * 1000) + " min(s)");
    final BlockTokenSecretManager secretMgr=new BlockTokenSecretManager(0,blockTokenLifetime,blockPoolId,dnConf.encryptionAlgorithm);
    blockPoolTokenSecretManager.addBlockPool(blockPoolId,secretMgr);
  }
}
