{
  ExportedBlockKeys keys=bpRegistration.getExportedKeys();
  isBlockTokenEnabled=keys.isBlockTokenEnabled();
  if (!isBlockTokenEnabled)   return;
  if (!blockPoolTokenSecretManager.isBlockPoolRegistered(blockPoolId)) {
    long blockKeyUpdateInterval=keys.getKeyUpdateInterval();
    long blockTokenLifetime=keys.getTokenLifetime();
    LOG.info("Block token params received from NN: for block pool " + blockPoolId + " keyUpdateInterval="+ blockKeyUpdateInterval / (60 * 1000) + " min(s), tokenLifetime=" + blockTokenLifetime / (60 * 1000) + " min(s)");
    final BlockTokenSecretManager secretMgr=new BlockTokenSecretManager(false,0,blockTokenLifetime);
    blockPoolTokenSecretManager.addBlockPool(blockPoolId,secretMgr);
  }
  blockPoolTokenSecretManager.setKeys(blockPoolId,bpRegistration.getExportedKeys());
  bpRegistration.setExportedKeys(ExportedBlockKeys.DUMMY_KEYS);
}
