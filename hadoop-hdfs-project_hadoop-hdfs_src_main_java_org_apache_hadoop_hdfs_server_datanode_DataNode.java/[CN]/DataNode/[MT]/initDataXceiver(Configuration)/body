{
  TcpPeerServer tcpPeerServer;
  if (secureResources != null) {
    tcpPeerServer=new TcpPeerServer(secureResources);
  }
 else {
    tcpPeerServer=new TcpPeerServer(dnConf.socketWriteTimeout,DataNode.getStreamingAddr(conf));
  }
  tcpPeerServer.setReceiveBufferSize(HdfsConstants.DEFAULT_DATA_SOCKET_SIZE);
  streamingAddr=tcpPeerServer.getStreamingAddr();
  LOG.info("Opened streaming server at " + streamingAddr);
  this.threadGroup=new ThreadGroup("dataXceiverServer");
  xserver=new DataXceiverServer(tcpPeerServer,conf,this);
  this.dataXceiverServer=new Daemon(threadGroup,xserver);
  this.threadGroup.setDaemon(true);
  if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY,DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT) || conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC,DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) {
    DomainPeerServer domainPeerServer=getDomainPeerServer(conf,streamingAddr.getPort());
    if (domainPeerServer != null) {
      this.localDataXceiverServer=new Daemon(threadGroup,new DataXceiverServer(domainPeerServer,conf,this));
      LOG.info("Listening on UNIX domain socket: " + domainPeerServer.getBindPath());
    }
  }
  this.shortCircuitRegistry=new ShortCircuitRegistry(conf);
}
