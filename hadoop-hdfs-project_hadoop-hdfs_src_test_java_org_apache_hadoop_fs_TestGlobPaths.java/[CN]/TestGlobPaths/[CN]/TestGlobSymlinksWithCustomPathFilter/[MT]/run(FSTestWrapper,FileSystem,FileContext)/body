{
  wrap.mkdir(new Path("/alpha"),FsPermission.getDirDefault(),false);
  wrap.createSymlink(new Path("/alpha"),new Path("/alphaLinkz"),false);
  wrap.mkdir(new Path("/alpha/beta"),FsPermission.getDirDefault(),false);
  wrap.mkdir(new Path("/alpha/betaz"),FsPermission.getDirDefault(),false);
  FileStatus statuses[]=wrap.globStatus(new Path("/alpha/beta"),new AcceptPathsEndingInZ());
  Assert.assertNull(statuses);
  statuses=wrap.globStatus(new Path("/alphaLinkz/betaz"),new AcceptPathsEndingInZ());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals("/alphaLinkz/betaz",statuses[0].getPath().toUri().getPath());
  statuses=wrap.globStatus(new Path("/*/*"),new AcceptPathsEndingInZ());
  Assert.assertEquals("/alpha/betaz;/alphaLinkz/betaz",TestPath.mergeStatuses(statuses));
  statuses=wrap.globStatus(new Path("/*/*"),new AcceptAllPathFilter());
  Assert.assertEquals("/alpha/beta;/alpha/betaz;" + "/alphaLinkz/beta;/alphaLinkz/betaz",TestPath.mergeStatuses(statuses));
}
