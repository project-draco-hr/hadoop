{
  wrap.mkdir(new Path(USER_DIR + "/alpha"),FsPermission.getDirDefault(),false);
  wrap.createSymlink(new Path(USER_DIR + "/alpha"),new Path(USER_DIR + "/alphaLink"),false);
  wrap.mkdir(new Path(USER_DIR + "/alphaLink/beta"),FsPermission.getDirDefault(),false);
  FileStatus[] statuses=wrap.globStatus(new Path(USER_DIR + "/alpha/*"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alpha/beta",statuses[0].getPath().toUri().getPath());
  statuses=wrap.globStatus(new Path(USER_DIR + "/alphaLink/*"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alphaLink/beta",statuses[0].getPath().toUri().getPath());
  wrap.createSymlink(new Path("beta"),new Path(USER_DIR + "/alphaLink/betaLink"),false);
  statuses=wrap.globStatus(new Path(USER_DIR + "/alpha/betaLi*"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alpha/betaLink",statuses[0].getPath().toUri().getPath());
}
