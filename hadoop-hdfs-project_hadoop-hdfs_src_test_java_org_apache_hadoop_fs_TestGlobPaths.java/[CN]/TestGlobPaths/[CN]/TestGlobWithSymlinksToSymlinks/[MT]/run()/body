{
  wrap.mkdir(new Path(USER_DIR + "/alpha"),FsPermission.getDirDefault(),false);
  wrap.createSymlink(new Path(USER_DIR + "/alpha"),new Path(USER_DIR + "/alphaLink"),false);
  wrap.createSymlink(new Path(USER_DIR + "/alphaLink"),new Path(USER_DIR + "/alphaLinkLink"),false);
  wrap.mkdir(new Path(USER_DIR + "/alpha/beta"),FsPermission.getDirDefault(),false);
  FileStatus statuses[]=wrap.globStatus(new Path(USER_DIR + "/alphaLinkLink"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alphaLinkLink",statuses[0].getPath().toUri().getPath());
  statuses=wrap.globStatus(new Path(USER_DIR + "/alphaLinkLink/*"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alphaLinkLink/beta",statuses[0].getPath().toUri().getPath());
  wrap.createSymlink(new Path(USER_DIR + "theta"),new Path(USER_DIR + "/alpha/kappa"),false);
  statuses=wrap.globStatus(new Path(USER_DIR + "/alpha/kappa/kappa"),new AcceptAllPathFilter());
  Assert.assertNull(statuses);
  wrap.createFile(USER_DIR + "/alpha/beta/gamma");
  wrap.createSymlink(new Path(USER_DIR + "gamma"),new Path(USER_DIR + "/alpha/beta/gammaLink"),false);
  wrap.createSymlink(new Path(USER_DIR + "gammaLink"),new Path(USER_DIR + "/alpha/beta/gammaLinkLink"),false);
  wrap.createSymlink(new Path(USER_DIR + "gammaLinkLink"),new Path(USER_DIR + "/alpha/beta/gammaLinkLinkLink"),false);
  statuses=wrap.globStatus(new Path(USER_DIR + "/alpha/*/gammaLinkLinkLink"),new AcceptAllPathFilter());
  Assert.assertEquals(1,statuses.length);
  Assert.assertEquals(USER_DIR + "/alpha/beta/gammaLinkLinkLink",statuses[0].getPath().toUri().getPath());
  statuses=wrap.globStatus(new Path(USER_DIR + "/alpha/beta/*"),new AcceptAllPathFilter());
  Assert.assertEquals(USER_DIR + "/alpha/beta/gamma;" + USER_DIR+ "/alpha/beta/gammaLink;"+ USER_DIR+ "/alpha/beta/gammaLinkLink;"+ USER_DIR+ "/alpha/beta/gammaLinkLinkLink",TestPath.mergeStatuses(statuses));
  wrap.createSymlink(new Path(USER_DIR + "tweedledee"),new Path(USER_DIR + "/tweedledum"),false);
  wrap.createSymlink(new Path(USER_DIR + "tweedledum"),new Path(USER_DIR + "/tweedledee"),false);
  statuses=wrap.globStatus(new Path(USER_DIR + "/tweedledee/unobtainium"),new AcceptAllPathFilter());
  Assert.assertNull(statuses);
}
