{
  FileStatus[] status;
  Path d1=new Path(USER_DIR,"dir1");
  Path d11=new Path(d1,"subdir1");
  Path d12=new Path(d1,"subdir2");
  Path f111=new Path(d11,"f1");
  fs.createNewFile(f111);
  Path f112=new Path(d11,"f2");
  fs.createNewFile(f112);
  Path f121=new Path(d12,"f1");
  fs.createNewFile(f121);
  Path d2=new Path(USER_DIR,"dir2");
  Path d21=new Path(d2,"subdir1");
  fs.mkdirs(d21);
  Path d22=new Path(d2,"subdir2");
  Path f221=new Path(d22,"f1");
  fs.createNewFile(f221);
  Path d3=new Path(USER_DIR,"dir3");
  Path f31=new Path(d3,"f1");
  fs.createNewFile(f31);
  Path d32=new Path(d3,"f2");
  fs.mkdirs(d32);
  Path f32=new Path(d3,"subdir2");
  fs.createNewFile(f32);
  Path d33=new Path(d3,"subdir3");
  Path f333=new Path(d33,"f3");
  fs.createNewFile(f333);
  Path d331=new Path(d33,"f1");
  Path f3311=new Path(d331,"f1");
  fs.createNewFile(f3311);
  Path d4=new Path(USER_DIR,"dir4");
  fs.mkdirs(d4);
  Path root=new Path(USER_DIR);
  status=fs.globStatus(root);
  checkStatus(status,root);
  status=fs.globStatus(new Path(USER_DIR,"x"));
  assertNull(status);
  status=fs.globStatus(new Path("x"));
  assertNull(status);
  status=fs.globStatus(new Path(USER_DIR,"x/x"));
  assertNull(status);
  status=fs.globStatus(new Path("x/x"));
  assertNull(status);
  status=fs.globStatus(new Path(USER_DIR,"*"));
  checkStatus(status,d1,d2,d3,d4);
  status=fs.globStatus(new Path("*"));
  checkStatus(status,d1,d2,d3,d4);
  status=fs.globStatus(new Path(USER_DIR,"*/x"));
  checkStatus(status);
  status=fs.globStatus(new Path("*/x"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"x/*"));
  checkStatus(status);
  status=fs.globStatus(new Path("x/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"x/x/x/*"));
  checkStatus(status);
  status=fs.globStatus(new Path("x/x/x/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"*/*"));
  checkStatus(status,d11,d12,d21,d22,f31,d32,f32,d33);
  status=fs.globStatus(new Path("*/*"));
  checkStatus(status,d11,d12,d21,d22,f31,d32,f32,d33);
  status=fs.globStatus(new Path(USER_DIR,"dir*/*"));
  checkStatus(status,d11,d12,d21,d22,f31,d32,f32,d33);
  status=fs.globStatus(new Path("dir*/*"));
  checkStatus(status,d11,d12,d21,d22,f31,d32,f32,d33);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*"));
  checkStatus(status,d11,d12,d21,d22,f32,d33);
  status=fs.globStatus(new Path("dir*/subdir*"));
  checkStatus(status,d11,d12,d21,d22,f32,d33);
  status=fs.globStatus(new Path(USER_DIR,"dir*/f*"));
  checkStatus(status,f31,d32);
  status=fs.globStatus(new Path("dir*/f*"));
  checkStatus(status,f31,d32);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1"));
  checkStatus(status,d11,d21);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/*"));
  checkStatus(status,f111,f112);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/*/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/x"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/x*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir2"));
  checkStatus(status,d12,d22,f32);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir2/*"));
  checkStatus(status,f121,f221);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir2/*/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir3"));
  checkStatus(status,d33);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir3/*"));
  checkStatus(status,d331,f333);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir3/*/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir3/*/*/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f1"));
  checkStatus(status,f111);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f1*"));
  checkStatus(status,f111);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f1/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f1*/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1"));
  checkStatus(status,f111,f121,f221,d331);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1*"));
  checkStatus(status,f111,f121,f221,d331);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1*/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1*/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1*/x"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f1*/*/*"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*"));
  checkStatus(status,d11,d12,d21,d22,f32,d33);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/*"));
  checkStatus(status,f111,f112,f121,f221,d331,f333);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f*"));
  checkStatus(status,f111,f112,f121,f221,d331,f333);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/f*/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/*/f1"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir*/*/*"));
  checkStatus(status,f3311);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f3"));
  checkStatus(status);
  status=fs.globStatus(new Path(USER_DIR,"dir*/subdir1/f3*"));
  checkStatus(status);
  status=fs.globStatus(new Path("{x}"));
  checkStatus(status);
  status=fs.globStatus(new Path("{x,y}"));
  checkStatus(status);
  status=fs.globStatus(new Path("dir*/{x,y}"));
  checkStatus(status);
  status=fs.globStatus(new Path("dir*/{f1,y}"));
  checkStatus(status,f31);
  status=fs.globStatus(new Path("{x,y}"));
  checkStatus(status);
  status=fs.globStatus(new Path("/{x/x,y/y}"));
  checkStatus(status);
  status=fs.globStatus(new Path("{x/x,y/y}"));
  checkStatus(status);
  status=fs.globStatus(new Path(Path.CUR_DIR));
  checkStatus(status,new Path(USER_DIR));
  status=fs.globStatus(new Path(USER_DIR + "{/dir1}"));
  checkStatus(status,d1);
  status=fs.globStatus(new Path(USER_DIR + "{/dir*}"));
  checkStatus(status,d1,d2,d3,d4);
  PathFilter trueFilter=new PathFilter(){
    @Override public boolean accept(    Path path){
      return true;
    }
  }
;
  status=fs.globStatus(new Path(Path.SEPARATOR),trueFilter);
  checkStatus(status,new Path(Path.SEPARATOR));
  status=fs.globStatus(new Path(Path.CUR_DIR),trueFilter);
  checkStatus(status,new Path(USER_DIR));
  status=fs.globStatus(d1,trueFilter);
  checkStatus(status,d1);
  status=fs.globStatus(new Path(USER_DIR),trueFilter);
  checkStatus(status,new Path(USER_DIR));
  status=fs.globStatus(new Path(USER_DIR,"*"),trueFilter);
  checkStatus(status,d1,d2,d3,d4);
  status=fs.globStatus(new Path("/x/*"),trueFilter);
  checkStatus(status);
  status=fs.globStatus(new Path("/x"),trueFilter);
  assertNull(status);
  status=fs.globStatus(new Path("/x/x"),trueFilter);
  assertNull(status);
  PathFilter falseFilter=new PathFilter(){
    @Override public boolean accept(    Path path){
      return false;
    }
  }
;
  status=fs.globStatus(new Path(Path.SEPARATOR),falseFilter);
  assertNull(status);
  status=fs.globStatus(new Path(Path.CUR_DIR),falseFilter);
  assertNull(status);
  status=fs.globStatus(new Path(USER_DIR),falseFilter);
  assertNull(status);
  status=fs.globStatus(new Path(USER_DIR,"*"),falseFilter);
  checkStatus(status);
  status=fs.globStatus(new Path("/x/*"),falseFilter);
  checkStatus(status);
  status=fs.globStatus(new Path("/x"),falseFilter);
  assertNull(status);
  status=fs.globStatus(new Path("/x/x"),falseFilter);
  assertNull(status);
}
