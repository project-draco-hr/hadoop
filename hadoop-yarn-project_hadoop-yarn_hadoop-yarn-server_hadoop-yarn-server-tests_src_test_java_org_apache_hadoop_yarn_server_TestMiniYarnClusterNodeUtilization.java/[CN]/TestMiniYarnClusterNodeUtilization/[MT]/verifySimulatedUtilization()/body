{
  ResourceManager rm=cluster.getResourceManager(0);
  RMContext rmContext=rm.getRMContext();
  ResourceUtilization containersUtilization=nodeStatus.getContainersUtilization();
  ResourceUtilization nodeUtilization=nodeStatus.getNodeUtilization();
  for (int i=0; i < 100; i++) {
    for (    RMNode ni : rmContext.getRMNodes().values()) {
      if (ni.getNodeUtilization().equals(nodeUtilization)) {
        break;
      }
    }
    Thread.sleep(100);
  }
  for (  RMNode ni : rmContext.getRMNodes().values()) {
    ResourceUtilization cu=ni.getAggregatedContainersUtilization();
    assertEquals("Containers Utillization not propagated to RMNode",containersUtilization,cu);
    ResourceUtilization nu=ni.getNodeUtilization();
    assertEquals("Node Utillization not propagated to RMNode",nodeUtilization,nu);
    SchedulerNode scheduler=rmContext.getScheduler().getSchedulerNode(ni.getNodeID());
    cu=scheduler.getAggregatedContainersUtilization();
    assertEquals("Containers Utillization not propagated to SchedulerNode",containersUtilization,cu);
    nu=scheduler.getNodeUtilization();
    assertEquals("Node Utillization not propagated to SchedulerNode",nodeUtilization,nu);
  }
}
