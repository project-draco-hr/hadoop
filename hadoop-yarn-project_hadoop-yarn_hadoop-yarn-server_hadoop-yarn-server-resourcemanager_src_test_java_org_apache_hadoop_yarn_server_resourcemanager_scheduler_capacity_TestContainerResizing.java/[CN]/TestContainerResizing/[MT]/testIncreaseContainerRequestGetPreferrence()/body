{
  MockRM rm1=new MockRM(){
    @Override public RMNodeLabelsManager createNodeLabelManager(){
      return mgr;
    }
  }
;
  rm1.start();
  MockNM nm1=rm1.registerNode("h1:1234",10 * GB);
  RMApp app1=rm1.submitApp(1 * GB,"app","user",null,"default");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  FiCaSchedulerApp app=getFiCaSchedulerApp(rm1,app1.getApplicationId());
  ApplicationAttemptId attemptId=am1.getApplicationAttemptId();
  allocateAndLaunchContainers(am1,nm1,rm1,2,1 * GB,3,2);
  allocateAndLaunchContainers(am1,nm1,rm1,2,1 * GB,2,4);
  allocateAndLaunchContainers(am1,nm1,rm1,2,1 * GB,4,6);
  List<ContainerResourceChangeRequest> increaseRequests=new ArrayList<>();
  for (int cId=2; cId <= 7; cId++) {
    ContainerId containerId=ContainerId.newContainerId(am1.getApplicationAttemptId(),cId);
    increaseRequests.add(ContainerResourceChangeRequest.newInstance(containerId,Resources.createResource(2 * GB)));
  }
  am1.sendContainerResizingRequest(increaseRequests,null);
  checkPendingResource(rm1,"default",6 * GB,null);
  Assert.assertEquals(6 * GB,app.getAppAttemptResourceUsage().getPending().getMemory());
  CapacityScheduler cs=(CapacityScheduler)rm1.getResourceScheduler();
  RMNode rmNode1=rm1.getRMContext().getRMNodes().get(nm1.getNodeId());
  cs.handle(new NodeUpdateSchedulerEvent(rmNode1));
  AllocateResponse allocateResponse=am1.allocate(null,null);
  Assert.assertEquals(3,allocateResponse.getIncreasedContainers().size());
  verifyContainerIncreased(allocateResponse,ContainerId.newContainerId(attemptId,4),2 * GB);
  verifyContainerIncreased(allocateResponse,ContainerId.newContainerId(attemptId,5),2 * GB);
  verifyContainerIncreased(allocateResponse,ContainerId.newContainerId(attemptId,2),2 * GB);
  checkPendingResource(rm1,"default",3 * GB,null);
  Assert.assertEquals(3 * GB,app.getAppAttemptResourceUsage().getPending().getMemory());
  checkUsedResource(rm1,"default",10 * GB,null);
  Assert.assertEquals(10 * GB,((LeafQueue)cs.getQueue("default")).getUser("user").getUsed().getMemory());
  Assert.assertEquals(0 * GB,app.getAppAttemptResourceUsage().getReserved().getMemory());
  Assert.assertEquals(10 * GB,app.getAppAttemptResourceUsage().getUsed().getMemory());
  rm1.close();
}
