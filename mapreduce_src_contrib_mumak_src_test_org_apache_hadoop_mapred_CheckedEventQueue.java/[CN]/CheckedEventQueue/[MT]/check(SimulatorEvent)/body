{
  for (Iterator<Map.Entry<Long,List<SimulatorEvent>>> it=expectedEvents.entrySet().iterator(); it.hasNext(); ) {
    Map.Entry<Long,List<SimulatorEvent>> entry=it.next();
    long insertTime=entry.getKey();
    Assert.assertTrue(insertTime <= now);
    if (insertTime < now) {
      List<SimulatorEvent> events=entry.getValue();
      if (!events.isEmpty()) {
        Assert.fail("There are " + events.size() + " events at time "+ insertTime+ " before "+ now+ ". First event: "+ events.get(0));
      }
      it.remove();
    }
 else {
      break;
    }
  }
  List<SimulatorEvent> expected=expectedEvents.get(now);
  boolean found=false;
  for (  SimulatorEvent ee : expected) {
    if (isSameEvent(ee,event)) {
      expected.remove(ee);
      found=true;
      break;
    }
  }
  Assert.assertTrue("Unexpected event to enqueue, now=" + now + ", event="+ event+ ", expecting="+ expected,found);
}
