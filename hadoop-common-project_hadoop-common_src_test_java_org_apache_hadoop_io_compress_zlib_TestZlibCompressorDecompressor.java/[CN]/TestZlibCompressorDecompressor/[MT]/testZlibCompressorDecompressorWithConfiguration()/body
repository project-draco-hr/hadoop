{
  Configuration conf=new Configuration();
  conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY,true);
  if (ZlibFactory.isNativeZlibLoaded(conf)) {
    byte[] rawData;
    int tryNumber=5;
    int BYTE_SIZE=10 * 1024;
    Compressor zlibCompressor=ZlibFactory.getZlibCompressor(conf);
    Decompressor zlibDecompressor=ZlibFactory.getZlibDecompressor(conf);
    rawData=generate(BYTE_SIZE);
    try {
      for (int i=0; i < tryNumber; i++)       compressDecompressZlib(rawData,(ZlibCompressor)zlibCompressor,(ZlibDecompressor)zlibDecompressor);
      zlibCompressor.reinit(conf);
    }
 catch (    Exception ex) {
      fail("testZlibCompressorDecompressorWithConfiguration ex error " + ex);
    }
  }
 else {
    assertTrue("ZlibFactory is using native libs against request",ZlibFactory.isNativeZlibLoaded(conf));
  }
}
