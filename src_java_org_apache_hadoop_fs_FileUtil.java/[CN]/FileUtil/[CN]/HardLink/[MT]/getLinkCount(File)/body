{
  int len=getLinkCountCommand.length;
  String[] cmd=new String[len + 1];
  for (int i=0; i < len; i++) {
    cmd[i]=getLinkCountCommand[i];
  }
  cmd[len]=fileName.toString();
  String inpMsg="";
  String errMsg="";
  int exitValue=-1;
  BufferedReader in=null;
  BufferedReader err=null;
  Process process=Runtime.getRuntime().exec(cmd);
  try {
    exitValue=process.waitFor();
    in=new BufferedReader(new InputStreamReader(process.getInputStream()));
    inpMsg=in.readLine();
    if (inpMsg == null)     inpMsg="";
    err=new BufferedReader(new InputStreamReader(process.getErrorStream()));
    errMsg=err.readLine();
    if (errMsg == null)     errMsg="";
    if (exitValue != 0) {
      throw new IOException(inpMsg + errMsg);
    }
    if (getOSType() == OSType.OS_TYPE_SOLARIS) {
      String[] result=inpMsg.split("\\s+");
      return Integer.parseInt(result[1]);
    }
 else {
      return Integer.parseInt(inpMsg);
    }
  }
 catch (  NumberFormatException e) {
    throw new IOException(StringUtils.stringifyException(e) + inpMsg + errMsg+ " on file:"+ fileName);
  }
catch (  InterruptedException e) {
    throw new IOException(StringUtils.stringifyException(e) + inpMsg + errMsg+ " on file:"+ fileName);
  }
 finally {
    process.destroy();
    if (in != null)     in.close();
    if (err != null)     err.close();
  }
}
