{
  int pivot=-1;
  for (int i=0; i < aclBuilder.size(); ++i) {
    if (aclBuilder.get(i).getScope() == DEFAULT) {
      pivot=i;
      break;
    }
  }
  if (pivot > -1) {
    List<AclEntry> accessEntries=aclBuilder.subList(0,pivot);
    List<AclEntry> defaultEntries=aclBuilder.subList(pivot,aclBuilder.size());
    List<AclEntry> copiedEntries=Lists.newArrayListWithCapacity(3);
    for (    AclEntryType type : EnumSet.of(USER,GROUP,OTHER)) {
      AclEntry defaultEntryKey=new AclEntry.Builder().setScope(DEFAULT).setType(type).build();
      int defaultEntryIndex=Collections.binarySearch(defaultEntries,defaultEntryKey,ACL_ENTRY_COMPARATOR);
      if (defaultEntryIndex < 0) {
        AclEntry accessEntryKey=new AclEntry.Builder().setScope(ACCESS).setType(type).build();
        int accessEntryIndex=Collections.binarySearch(accessEntries,accessEntryKey,ACL_ENTRY_COMPARATOR);
        if (accessEntryIndex >= 0) {
          copiedEntries.add(new AclEntry.Builder().setScope(DEFAULT).setType(type).setPermission(accessEntries.get(accessEntryIndex).getPermission()).build());
        }
      }
    }
    aclBuilder.addAll(copiedEntries);
  }
}
