{
  Collections.sort(aclBuilder,ACL_ENTRY_COMPARATOR);
  ScopedAclEntries scopedEntries=new ScopedAclEntries(aclBuilder);
  if (!scopedEntries.getDefaultEntries().isEmpty()) {
    List<AclEntry> accessEntries=scopedEntries.getAccessEntries();
    List<AclEntry> defaultEntries=scopedEntries.getDefaultEntries();
    List<AclEntry> copiedEntries=Lists.newArrayListWithCapacity(3);
    for (    AclEntryType type : EnumSet.of(USER,GROUP,OTHER)) {
      AclEntry defaultEntryKey=new AclEntry.Builder().setScope(DEFAULT).setType(type).build();
      int defaultEntryIndex=Collections.binarySearch(defaultEntries,defaultEntryKey,ACL_ENTRY_COMPARATOR);
      if (defaultEntryIndex < 0) {
        AclEntry accessEntryKey=new AclEntry.Builder().setScope(ACCESS).setType(type).build();
        int accessEntryIndex=Collections.binarySearch(accessEntries,accessEntryKey,ACL_ENTRY_COMPARATOR);
        if (accessEntryIndex >= 0) {
          copiedEntries.add(new AclEntry.Builder().setScope(DEFAULT).setType(type).setPermission(accessEntries.get(accessEntryIndex).getPermission()).build());
        }
      }
    }
    aclBuilder.addAll(copiedEntries);
  }
}
