{
  File testTGZ=new File(testWorkDir,"test.tgz");
  FileOutputStream out=new FileOutputStream(testTGZ);
  out.write(0);
  out.close();
  Configuration conf=new Configuration();
  conf.setBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM,true);
  Job job=Job.getInstance(conf);
  conf=job.getConfiguration();
  String testTGZQualifiedPath=FileSystem.getLocal(conf).makeQualified(new Path(testTGZ.getAbsolutePath())).toString();
  conf.set(MRJobConfig.CLASSPATH_ARCHIVES,testTGZQualifiedPath);
  conf.set(MRJobConfig.CACHE_ARCHIVES,testTGZQualifiedPath + "#testTGZ");
  Map<String,String> environment=new HashMap<String,String>();
  MRApps.setClasspath(environment,conf);
  assertTrue(environment.get("CLASSPATH").startsWith(ApplicationConstants.Environment.PWD.$$() + ApplicationConstants.CLASS_PATH_SEPARATOR));
  String confClasspath=job.getConfiguration().get(YarnConfiguration.YARN_APPLICATION_CLASSPATH,StringUtils.join(",",YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH));
  if (confClasspath != null) {
    confClasspath=confClasspath.replaceAll(",\\s*",ApplicationConstants.CLASS_PATH_SEPARATOR).trim();
  }
  assertTrue(environment.get("CLASSPATH").contains(confClasspath));
  assertTrue(environment.get("CLASSPATH").contains("testTGZ"));
}
