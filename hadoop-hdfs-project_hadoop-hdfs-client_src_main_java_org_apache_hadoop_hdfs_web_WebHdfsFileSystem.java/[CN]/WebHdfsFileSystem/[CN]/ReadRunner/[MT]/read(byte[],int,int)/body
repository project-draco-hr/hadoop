{
  if (runnerState == RunnerState.CLOSED) {
    throw new IOException("Stream closed");
  }
  if (pos >= fileLength && readBuffer != null) {
    return -1;
  }
  if (runnerState == RunnerState.SEEK) {
    try {
      final URL rurl=new URL(resolvedUrl + "&" + new OffsetParam(pos));
      cachedConnection=new URLRunner(GetOpParam.Op.OPEN,rurl,true).run();
    }
 catch (    IOException ioe) {
      closeInputStream(RunnerState.DISCONNECTED);
    }
  }
  readBuffer=b;
  readOffset=off;
  readLength=len;
  int count=-1;
  count=this.run();
  if (count >= 0) {
    statistics.incrementBytesRead(count);
    pos+=count;
  }
 else   if (pos < fileLength) {
    throw new EOFException("Premature EOF: pos=" + pos + " < filelength="+ fileLength);
  }
  return count;
}
