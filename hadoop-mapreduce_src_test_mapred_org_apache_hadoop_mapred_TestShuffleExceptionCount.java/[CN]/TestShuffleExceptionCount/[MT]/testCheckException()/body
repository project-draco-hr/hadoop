{
  TestMapOutputServlet testServlet=new TestMapOutputServlet();
  JobConf conf=new JobConf();
  conf.setUser("testuser");
  conf.setJobName("testJob");
  conf.setSessionId("testSession");
  ContextFactory factory=ContextFactory.getFactory();
  factory.setAttribute("mapred.class","org.apache.hadoop.metrics.spi.NoEmitMetricsContext");
  TaskTracker tt=new TaskTracker();
  tt.setConf(conf);
  ShuffleServerMetrics shuffleMetrics=tt.new ShuffleServerMetrics(conf);
  String exceptionMsgRegex="Broken pipe";
  String exceptionStackRegex=null;
  IOException ie=new IOException("EOFException");
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  MetricsContext context=factory.getContext("mapred");
  shuffleMetrics.doUpdates(context);
  Map<String,Collection<OutputRecord>> records=context.getAllRecords();
  Collection<OutputRecord> col=records.get("shuffleOutput");
  OutputRecord outputRecord=col.iterator().next();
  assertEquals(0,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  ie=new IOException("Broken pipe");
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(1,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionStackRegex=null;
  exceptionMsgRegex=null;
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(2,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionStackRegex=".*\\.doesnt\\$SelectSet\\.wakeup.*";
  exceptionMsgRegex=null;
  ie.setStackTrace(constructStackTrace());
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(2,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionStackRegex=".*\\.SelectorManager\\$SelectSet\\.wakeup.*";
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(3,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionMsgRegex="Broken pipe";
  ie.setStackTrace(constructStackTraceTwo());
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(4,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionStackRegex=".*[1-9]+BOGUSREGEX";
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(4,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
  exceptionStackRegex=".*\\.SelectorManager\\$SelectSet\\.wakeup.*";
  exceptionMsgRegex="EOFException";
  testServlet.checkException(ie,exceptionMsgRegex,exceptionStackRegex,shuffleMetrics);
  shuffleMetrics.doUpdates(context);
  assertEquals(4,outputRecord.getMetric("shuffle_exceptions_caught").intValue());
}
