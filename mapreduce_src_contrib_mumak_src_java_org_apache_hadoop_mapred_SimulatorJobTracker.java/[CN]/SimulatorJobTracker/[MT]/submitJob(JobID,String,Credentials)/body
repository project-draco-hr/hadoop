{
  boolean loggingEnabled=LOG.isDebugEnabled();
  if (loggingEnabled) {
    LOG.debug("submitJob for jobname = " + jobId);
  }
  if (jobs.containsKey(jobId)) {
    if (loggingEnabled) {
      LOG.debug("Job '" + jobId.getId() + "' already present ");
    }
    return jobs.get(jobId).getStatus();
  }
  JobStory jobStory=SimulatorJobCache.get(jobId);
  if (jobStory == null) {
    throw new IllegalArgumentException("Job not found in SimulatorJobCache: " + jobId);
  }
  validateAndSetClock(jobStory.getSubmissionTime());
  SimulatorJobInProgress job=new SimulatorJobInProgress(jobId,jobSubmitDir,this,this.conf,jobStory);
  try {
    checkQueueValidity(job);
  }
 catch (  IOException ioe) {
    LOG.warn("Queue given for job " + job.getJobID() + " is not valid:"+ ioe);
    throw ioe;
  }
  try {
    checkMemoryRequirements(job);
  }
 catch (  IOException ioe) {
    LOG.warn("Exception in checking Memory requirements of jobId: " + jobId + ioe);
  }
  return addJob(jobId,job);
}
