{
  final ShortCircuitCache cache=new ShortCircuitCache(2,1,1,10000000,1,10000,0);
  final TestFileDescriptorPair pair=new TestFileDescriptorPair();
  ShortCircuitReplicaInfo replicaInfo1=cache.fetchOrCreate(new ExtendedBlockId(123,"test_bp1"),new SimpleReplicaCreator(123,cache,pair));
  Preconditions.checkNotNull(replicaInfo1.getReplica());
  Preconditions.checkState(replicaInfo1.getInvalidTokenException() == null);
  pair.compareWith(replicaInfo1.getReplica().getDataStream(),replicaInfo1.getReplica().getMetaStream());
  replicaInfo1.getReplica().unref();
  final MutableBoolean triedToCreate=new MutableBoolean(false);
  do {
    Thread.sleep(10);
    ShortCircuitReplicaInfo replicaInfo2=cache.fetchOrCreate(new ExtendedBlockId(123,"test_bp1"),new ShortCircuitReplicaCreator(){
      @Override public ShortCircuitReplicaInfo createShortCircuitReplicaInfo(){
        triedToCreate.setValue(true);
        return null;
      }
    }
);
    if ((replicaInfo2 != null) && (replicaInfo2.getReplica() != null)) {
      replicaInfo2.getReplica().unref();
    }
  }
 while (triedToCreate.isFalse());
  cache.close();
}
