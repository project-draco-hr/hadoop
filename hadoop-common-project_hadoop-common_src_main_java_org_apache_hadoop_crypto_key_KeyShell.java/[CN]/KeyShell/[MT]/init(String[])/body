{
  final Options options=KeyProvider.options(getConf());
  for (int i=0; i < args.length; i++) {
    boolean moreTokens=(i < args.length - 1);
    if (args[i].equals("create")) {
      String keyName="--help";
      if (moreTokens) {
        keyName=args[++i];
      }
      command=new CreateCommand(keyName,options);
      if ("--help".equals(keyName)) {
        printKeyShellUsage();
        return -1;
      }
    }
 else     if (args[i].equals("delete")) {
      String keyName="--help";
      if (moreTokens) {
        keyName=args[++i];
      }
      command=new DeleteCommand(keyName);
      if ("--help".equals(keyName)) {
        printKeyShellUsage();
        return -1;
      }
    }
 else     if (args[i].equals("roll")) {
      String keyName="--help";
      if (moreTokens) {
        keyName=args[++i];
      }
      command=new RollCommand(keyName);
      if ("--help".equals(keyName)) {
        printKeyShellUsage();
        return -1;
      }
    }
 else     if ("list".equals(args[i])) {
      command=new ListCommand();
    }
 else     if ("--size".equals(args[i]) && moreTokens) {
      options.setBitLength(Integer.parseInt(args[++i]));
    }
 else     if ("--cipher".equals(args[i]) && moreTokens) {
      options.setCipher(args[++i]);
    }
 else     if ("--description".equals(args[i]) && moreTokens) {
      options.setDescription(args[++i]);
    }
 else     if ("--provider".equals(args[i]) && moreTokens) {
      userSuppliedProvider=true;
      getConf().set(KeyProviderFactory.KEY_PROVIDER_PATH,args[++i]);
    }
 else     if ("--metadata".equals(args[i])) {
      getConf().setBoolean(LIST_METADATA,true);
    }
 else     if ("-i".equals(args[i]) || ("--interactive".equals(args[i]))) {
      interactive=true;
    }
 else     if ("--help".equals(args[i])) {
      printKeyShellUsage();
      return -1;
    }
 else {
      printKeyShellUsage();
      ToolRunner.printGenericCommandUsage(System.err);
      return -1;
    }
  }
  if (command == null) {
    printKeyShellUsage();
    return -1;
  }
  return 0;
}
