{
  if (in == null) {
    return null;
  }
  DataInputStream dataIn=new DataInputStream(in);
  FileType fileType=INode.FILE_TYPES[dataIn.readByte()];
switch (fileType) {
case DIRECTORY:
    in.close();
  return INode.DIRECTORY_INODE;
case FILE:
int numBlocks=dataIn.readInt();
Block[] blocks=new Block[numBlocks];
for (int i=0; i < numBlocks; i++) {
long id=dataIn.readLong();
long length=dataIn.readLong();
blocks[i]=new Block(id,length);
}
in.close();
return new INode(fileType,blocks);
default :
throw new IllegalArgumentException("Cannot deserialize inode.");
}
}
