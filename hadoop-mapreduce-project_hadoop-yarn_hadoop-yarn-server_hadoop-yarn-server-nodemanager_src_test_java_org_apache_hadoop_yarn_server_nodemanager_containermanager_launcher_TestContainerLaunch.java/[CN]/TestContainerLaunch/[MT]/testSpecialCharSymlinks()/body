{
  String rootDir=new File(System.getProperty("test.build.data","/tmp")).getAbsolutePath();
  File shellFile=null;
  File tempFile=null;
  String badSymlink="foo@zz%_#*&!-+= bar()";
  File symLinkFile=null;
  try {
    shellFile=new File(rootDir,"hello.sh");
    tempFile=new File(rootDir,"temp.sh");
    String timeoutCommand="echo \"hello\"";
    PrintWriter writer=new PrintWriter(new FileOutputStream(shellFile));
    shellFile.setExecutable(true);
    writer.println(timeoutCommand);
    writer.close();
    Map<Path,String> resources=new HashMap<Path,String>();
    Path path=new Path(shellFile.getAbsolutePath());
    resources.put(path,badSymlink);
    FileOutputStream fos=new FileOutputStream(tempFile);
    Map<String,String> env=new HashMap<String,String>();
    List<String> commands=new ArrayList<String>();
    commands.add("/bin/sh ./\\\"" + badSymlink + "\\\"");
    ContainerLaunch.writeLaunchEnv(fos,env,resources,commands);
    fos.flush();
    fos.close();
    tempFile.setExecutable(true);
    File rootDirFile=new File(rootDir);
    Shell.ShellCommandExecutor shexc=new Shell.ShellCommandExecutor(new String[]{tempFile.getAbsolutePath()},rootDirFile);
    shexc.execute();
    assertEquals(shexc.getExitCode(),0);
    assert(shexc.getOutput().contains("hello"));
    symLinkFile=new File(rootDir,badSymlink);
  }
  finally {
    if (shellFile != null && shellFile.exists()) {
      shellFile.delete();
    }
    if (tempFile != null && tempFile.exists()) {
      tempFile.delete();
    }
    if (symLinkFile != null && symLinkFile.exists()) {
      symLinkFile.delete();
    }
  }
}
