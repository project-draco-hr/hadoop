{
  long maxLowVolumeCanReceive=(long)((currentSet.getIdealUsed() * lowVolume.computeEffectiveCapacity()) - lowVolume.getUsed());
  if (maxLowVolumeCanReceive <= 0) {
    LOG.debug("{} Skipping disk from computation. Maximum data size " + "achieved.",lowVolume.getPath());
    lowVolume.setSkip(true);
  }
  long maxHighVolumeCanGive=highVolume.getUsed() - (long)(currentSet.getIdealUsed() * highVolume.computeEffectiveCapacity());
  if (maxHighVolumeCanGive <= 0) {
    LOG.debug(" {} Skipping disk from computation. Minimum data size " + "achieved.",highVolume.getPath());
    highVolume.setSkip(true);
  }
  long bytesToMove=Math.min(maxLowVolumeCanReceive,maxHighVolumeCanGive);
  Step nextStep=null;
  if (bytesToMove > 0) {
    nextStep=new MoveStep(highVolume,currentSet.getIdealUsed(),lowVolume,bytesToMove,currentSet.getSetID());
    LOG.debug(nextStep.toString());
  }
  return nextStep;
}
