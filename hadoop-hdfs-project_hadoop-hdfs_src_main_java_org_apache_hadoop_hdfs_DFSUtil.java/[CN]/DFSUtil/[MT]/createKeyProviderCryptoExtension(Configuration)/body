{
  final List<KeyProvider> providers=KeyProviderFactory.getProviders(conf);
  if (providers == null || providers.size() == 0) {
    return null;
  }
  if (providers.size() > 1) {
    StringBuilder builder=new StringBuilder();
    builder.append("Found multiple KeyProviders but only one is permitted [");
    String prefix=" ";
    for (    KeyProvider kp : providers) {
      builder.append(prefix + kp.toString());
      prefix=", ";
    }
    builder.append("]");
    throw new IOException(builder.toString());
  }
  KeyProviderCryptoExtension provider=KeyProviderCryptoExtension.createKeyProviderCryptoExtension(providers.get(0));
  if (provider.isTransient()) {
    throw new IOException("KeyProvider " + provider.toString() + " was found but it is a transient provider.");
  }
  return provider;
}
