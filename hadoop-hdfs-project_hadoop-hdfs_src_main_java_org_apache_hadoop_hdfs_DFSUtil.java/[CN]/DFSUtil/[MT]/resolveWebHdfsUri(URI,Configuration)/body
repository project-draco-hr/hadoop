{
  int defaultPort;
  String scheme=uri.getScheme();
  if (WebHdfsFileSystem.SCHEME.equals(scheme)) {
    defaultPort=DFSConfigKeys.DFS_NAMENODE_HTTP_PORT_DEFAULT;
  }
 else   if (SWebHdfsFileSystem.SCHEME.equals(scheme)) {
    defaultPort=DFSConfigKeys.DFS_NAMENODE_HTTPS_PORT_DEFAULT;
  }
 else {
    throw new IllegalArgumentException("Unsupported scheme: " + scheme);
  }
  ArrayList<InetSocketAddress> ret=new ArrayList<InetSocketAddress>();
  if (!HAUtil.isLogicalUri(conf,uri)) {
    InetSocketAddress addr=NetUtils.createSocketAddr(uri.getAuthority(),defaultPort);
    ret.add(addr);
  }
 else {
    Map<String,Map<String,InetSocketAddress>> addresses=DFSUtil.getHaNnWebHdfsAddresses(conf,scheme);
    for (    Map<String,InetSocketAddress> addrs : addresses.values()) {
      for (      InetSocketAddress addr : addrs.values()) {
        ret.add(addr);
      }
    }
  }
  InetSocketAddress[] r=new InetSocketAddress[ret.size()];
  return ret.toArray(r);
}
