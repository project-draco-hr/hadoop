{
  RetryPolicy timeoutPolicy=RetryPolicies.exponentialBackoffRetry(5,200,TimeUnit.MILLISECONDS);
  Map<Class<? extends Exception>,RetryPolicy> exceptionToPolicyMap=new HashMap<Class<? extends Exception>,RetryPolicy>();
  RetryPolicy methodPolicy=RetryPolicies.retryByException(timeoutPolicy,exceptionToPolicyMap);
  Map<String,RetryPolicy> methodNameToPolicyMap=new HashMap<String,RetryPolicy>();
  methodNameToPolicyMap.put("getBlocks",methodPolicy);
  methodNameToPolicyMap.put("getAccessKeys",methodPolicy);
  RPC.setProtocolEngine(conf,NamenodeProtocolPB.class,ProtobufRpcEngine.class);
  NamenodeProtocolPB proxy=RPC.getProxy(NamenodeProtocolPB.class,RPC.getProtocolVersion(NamenodeProtocolPB.class),address,ugi,conf,NetUtils.getDefaultSocketFactory(conf));
  NamenodeProtocolPB retryProxy=(NamenodeProtocolPB)RetryProxy.create(NamenodeProtocolPB.class,proxy,methodNameToPolicyMap);
  return new NamenodeProtocolTranslatorPB(retryProxy);
}
