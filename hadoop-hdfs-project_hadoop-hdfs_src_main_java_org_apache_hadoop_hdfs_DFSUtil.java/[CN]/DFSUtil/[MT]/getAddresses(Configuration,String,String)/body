{
  Collection<String> nameserviceIds=getNameServiceIds(conf);
  Collection<String> namenodeIds=getNameNodeIds(conf);
  List<InetSocketAddress> isas=new ArrayList<InetSocketAddress>();
  final boolean federationEnabled=nameserviceIds != null && !nameserviceIds.isEmpty();
  final boolean haEnabled=namenodeIds != null && !namenodeIds.isEmpty();
  if (!federationEnabled && !haEnabled) {
    String address=getConfValue(defaultAddress,null,conf,keys);
    if (address == null) {
      return null;
    }
    isas.add(NetUtils.createSocketAddr(address));
    return isas;
  }
  if (!federationEnabled) {
    nameserviceIds=new ArrayList<String>();
    nameserviceIds.add(null);
  }
  if (!haEnabled) {
    namenodeIds=new ArrayList<String>();
    namenodeIds.add(null);
  }
  for (  String nameserviceId : nameserviceIds) {
    for (    String nnId : namenodeIds) {
      String keySuffix=concatSuffixes(nameserviceId,nnId);
      String address=getConfValue(null,keySuffix,conf,keys);
      if (address == null) {
        return null;
      }
      isas.add(NetUtils.createSocketAddr(address));
    }
  }
  return isas;
}
