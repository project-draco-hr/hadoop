{
  String defaultAddress;
  try {
    defaultAddress=NetUtils.getHostPortString(NameNode.getAddress(conf));
  }
 catch (  IllegalArgumentException e) {
    defaultAddress=null;
  }
  Collection<String> parentNameServices=conf.getTrimmedStringCollection(DFSConfigKeys.DFS_INTERNAL_NAMESERVICES_KEY);
  if (parentNameServices.isEmpty()) {
    parentNameServices=conf.getTrimmedStringCollection(DFSConfigKeys.DFS_NAMESERVICES);
  }
 else {
    Set<String> availableNameServices=Sets.newHashSet(conf.getTrimmedStringCollection(DFSConfigKeys.DFS_NAMESERVICES));
    for (    String nsId : parentNameServices) {
      if (!availableNameServices.contains(nsId)) {
        throw new IOException("Unknown nameservice: " + nsId);
      }
    }
  }
  Map<String,Map<String,InetSocketAddress>> addressList=DFSUtilClient.getAddressesForNsIds(conf,parentNameServices,defaultAddress,DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,DFS_NAMENODE_RPC_ADDRESS_KEY);
  if (addressList.isEmpty()) {
    throw new IOException("Incorrect configuration: namenode address " + DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY + " or "+ DFS_NAMENODE_RPC_ADDRESS_KEY+ " is not configured.");
  }
  return addressList;
}
