{
  HttpConfig.Policy policy=getHttpPolicy(conf);
  HttpServer2.Builder builder=new HttpServer2.Builder().setName(name).setConf(conf).setACL(new AccessControlList(conf.get(DFS_ADMIN," "))).setSecurityEnabled(UserGroupInformation.isSecurityEnabled()).setUsernameConfKey(spnegoUserNameKey).setKeytabConfKey(getSpnegoKeytabKey(conf,spnegoKeytabFileKey));
  LOG.info("Starting web server as: " + SecurityUtil.getServerPrincipal(conf.get(spnegoUserNameKey),httpAddr.getHostName()));
  if (policy.isHttpEnabled()) {
    if (httpAddr.getPort() == 0) {
      builder.setFindPort(true);
    }
    URI uri=URI.create("http://" + NetUtils.getHostPortString(httpAddr));
    builder.addEndpoint(uri);
    LOG.info("Starting Web-server for " + name + " at: "+ uri);
  }
  if (policy.isHttpsEnabled() && httpsAddr != null) {
    Configuration sslConf=loadSslConfiguration(conf);
    loadSslConfToHttpServerBuilder(builder,sslConf);
    if (httpsAddr.getPort() == 0) {
      builder.setFindPort(true);
    }
    URI uri=URI.create("https://" + NetUtils.getHostPortString(httpsAddr));
    builder.addEndpoint(uri);
    LOG.info("Starting Web-server for " + name + " at: "+ uri);
  }
  return builder;
}
