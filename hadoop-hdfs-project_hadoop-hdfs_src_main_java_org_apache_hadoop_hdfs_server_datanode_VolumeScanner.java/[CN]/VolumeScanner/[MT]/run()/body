{
  this.startMinute=TimeUnit.MINUTES.convert(Time.monotonicNow(),TimeUnit.MILLISECONDS);
  this.curMinute=startMinute;
  try {
    LOG.trace("{}: thread starting.",this);
    resultHandler.setup(this);
    try {
      long timeout=0;
      while (true) {
synchronized (this) {
          if (stopping) {
            break;
          }
          if (timeout > 0) {
            wait(timeout);
            if (stopping) {
              break;
            }
          }
        }
        timeout=runLoop();
      }
    }
 catch (    InterruptedException e) {
      LOG.trace("{} exiting because of InterruptedException.",this);
    }
catch (    Throwable e) {
      LOG.error("{} exiting because of exception ",this,e);
    }
    LOG.info("{} exiting.",this);
    for (    BlockIterator iter : blockIters) {
      saveBlockIterator(iter);
      IOUtils.cleanup(null,iter);
    }
  }
  finally {
    IOUtils.cleanup(null,ref);
  }
}
