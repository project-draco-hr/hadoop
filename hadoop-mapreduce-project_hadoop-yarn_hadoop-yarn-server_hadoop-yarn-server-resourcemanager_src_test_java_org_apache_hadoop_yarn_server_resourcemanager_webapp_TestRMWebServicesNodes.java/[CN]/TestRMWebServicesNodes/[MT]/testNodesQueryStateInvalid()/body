{
  WebResource r=resource();
  rm.registerNode("h1:1234",5120);
  rm.registerNode("h2:1235",5121);
  try {
    r.path("ws").path("v1").path("cluster").path("nodes").queryParam("state","BOGUSSTATE").accept(MediaType.APPLICATION_JSON).get(JSONObject.class);
    fail("should have thrown exception querying invalid state");
  }
 catch (  UniformInterfaceException ue) {
    ClientResponse response=ue.getResponse();
    assertEquals(Status.BAD_REQUEST,response.getClientResponseStatus());
    assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    JSONObject msg=response.getEntity(JSONObject.class);
    JSONObject exception=msg.getJSONObject("RemoteException");
    assertEquals("incorrect number of elements",3,exception.length());
    String message=exception.getString("message");
    String type=exception.getString("exception");
    String classname=exception.getString("javaClassName");
    WebServicesTestUtils.checkStringMatch("exception message","No enum const class org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeState.BOGUSSTATE",message);
    WebServicesTestUtils.checkStringMatch("exception type","IllegalArgumentException",type);
    WebServicesTestUtils.checkStringMatch("exception classname","java.lang.IllegalArgumentException",classname);
  }
 finally {
    rm.stop();
  }
}
