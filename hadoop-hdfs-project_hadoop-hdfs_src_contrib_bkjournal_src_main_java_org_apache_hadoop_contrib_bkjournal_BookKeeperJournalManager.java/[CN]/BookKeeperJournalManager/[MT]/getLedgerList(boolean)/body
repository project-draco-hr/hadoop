{
  List<EditLogLedgerMetadata> ledgers=new ArrayList<EditLogLedgerMetadata>();
  try {
    List<String> ledgerNames=zkc.getChildren(ledgerPath,false);
    for (    String ledgerName : ledgerNames) {
      if (!inProgressOk && ledgerName.contains(BKJM_EDIT_INPROGRESS)) {
        continue;
      }
      String legderMetadataPath=ledgerPath + "/" + ledgerName;
      try {
        EditLogLedgerMetadata editLogLedgerMetadata=EditLogLedgerMetadata.read(zkc,legderMetadataPath);
        ledgers.add(editLogLedgerMetadata);
      }
 catch (      KeeperException.NoNodeException e) {
        LOG.warn("ZNode: " + legderMetadataPath + " might have finalized and deleted."+ " So ignoring NoNodeException.");
      }
    }
  }
 catch (  KeeperException e) {
    throw new IOException("Exception reading ledger list from zk",e);
  }
catch (  InterruptedException ie) {
    Thread.currentThread().interrupt();
    throw new IOException("Interrupted getting list of ledgers from zk",ie);
  }
  Collections.sort(ledgers,EditLogLedgerMetadata.COMPARATOR);
  return ledgers;
}
