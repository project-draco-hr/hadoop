{
  LedgerHandle lh=null;
  try {
    if (fence) {
      lh=bkc.openLedger(l.getLedgerId(),BookKeeper.DigestType.MAC,digestpw.getBytes());
    }
 else {
      lh=bkc.openLedgerNoRecovery(l.getLedgerId(),BookKeeper.DigestType.MAC,digestpw.getBytes());
    }
  }
 catch (  BKException bke) {
    throw new IOException("Exception opening ledger for " + l,bke);
  }
catch (  InterruptedException ie) {
    throw new IOException("Interrupted opening ledger for " + l,ie);
  }
  BookKeeperEditLogInputStream in=null;
  try {
    long lastAddConfirmed=lh.getLastAddConfirmed();
    if (lastAddConfirmed == -1) {
      throw new SegmentEmptyException();
    }
    in=new BookKeeperEditLogInputStream(lh,l,lastAddConfirmed);
    long endTxId=HdfsConstants.INVALID_TXID;
    FSEditLogOp op=in.readOp();
    while (op != null) {
      if (endTxId == HdfsConstants.INVALID_TXID || op.getTransactionId() == endTxId + 1) {
        endTxId=op.getTransactionId();
      }
      op=in.readOp();
    }
    return endTxId;
  }
  finally {
    if (in != null) {
      in.close();
    }
  }
}
