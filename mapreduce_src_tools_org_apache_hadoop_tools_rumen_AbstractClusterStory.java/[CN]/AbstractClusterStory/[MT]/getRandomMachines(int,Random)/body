{
  if (expected == 0) {
    return new MachineNode[0];
  }
  parseTopologyTree();
  int total=machineNodes.size();
  int select=Math.min(expected,total);
  if (mNodesFlattened == null) {
    mNodesFlattened=machineNodes.toArray(new MachineNode[total]);
  }
  MachineNode[] retval=new MachineNode[select];
  int i=0;
  while ((i != select) && (total != i + select)) {
    int index=random.nextInt(total - i);
    MachineNode tmp=mNodesFlattened[index];
    mNodesFlattened[index]=mNodesFlattened[total - i - 1];
    mNodesFlattened[total - i - 1]=tmp;
    ++i;
  }
  if (i == select) {
    System.arraycopy(mNodesFlattened,total - i,retval,0,select);
  }
 else {
    System.arraycopy(mNodesFlattened,0,retval,0,select);
  }
  return retval;
}
