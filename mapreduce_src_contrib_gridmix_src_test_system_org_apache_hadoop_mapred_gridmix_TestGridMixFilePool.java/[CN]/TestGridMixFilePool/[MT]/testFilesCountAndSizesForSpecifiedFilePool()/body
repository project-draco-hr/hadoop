{
  conf=remoteClient.getDaemonConf();
  final long inputSizeInMB=clusterSize * 200;
  int[] fileSizesInMB={50,100,400,50,300,10,60,40,20,10,500};
  long targetSize=Long.MAX_VALUE;
  final int expFileCount=clusterSize + 4;
  String[] runtimeValues={"LOADJOB",SubmitterUserResolver.class.getName(),"STRESS",inputSizeInMB + "m","file:///dev/null"};
  String[] otherArgs={"-D",GridMixConfig.GRIDMIX_DISTCACHE_ENABLE + "=false","-D",GridmixJob.GRIDMIX_HIGHRAM_EMULATION_ENABLE + "=false","-D",GridMixConfig.GRIDMIX_COMPRESSION_ENABLE + "=false"};
  int exitCode=UtilsForGridmix.runGridmixJob(gridmixDir,conf,GridMixRunMode.DATA_GENERATION.getValue(),runtimeValues,otherArgs);
  Assert.assertEquals("Data generation has failed.",0,exitCode);
  createFiles(new Path(gridmixDir,"input"),fileSizesInMB);
  conf.setLong(FilePool.GRIDMIX_MIN_FILE,100 * 1024 * 1024);
  FilePool fpool=new FilePool(conf,new Path(gridmixDir,"input"));
  fpool.refresh();
  verifyFilesSizeAndCountForSpecifiedPool(expFileCount,targetSize,fpool);
}
