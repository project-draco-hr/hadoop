{
  Runtime r=Runtime.getRuntime();
  String cp=System.getProperty("java.class.path");
  String buildTestDir=System.getProperty("build.test");
  String fuseCmd=buildTestDir + "/../fuse_dfs";
  String libHdfs=buildTestDir + "/../../../c++/lib";
  String arch=System.getProperty("os.arch");
  String jvm=System.getProperty("java.home") + "/lib/" + arch+ "/server";
  String lp=System.getProperty("LD_LIBRARY_PATH") + ":" + libHdfs+ ":"+ jvm;
  LOG.debug("LD_LIBRARY_PATH=" + lp);
  String nameNode="dfs://" + uri.getHost() + ":"+ String.valueOf(uri.getPort());
  String mountCmd[]={fuseCmd,nameNode,mountPoint,"-obig_writes","-oentry_timeout=0.1","-oattribute_timeout=0.1","-ononempty","-f","-ordbuffer=32768","rw"};
  String[] env={"CLASSPATH=" + cp,"LD_LIBRARY_PATH=" + lp,"PATH=/usr/bin:/bin"};
  execWaitRet("fusermount -u " + mountPoint);
  execAssertSucceeds("rm -rf " + mountPoint);
  execAssertSucceeds("mkdir -p " + mountPoint);
  String cmdStr="";
  for (  String c : mountCmd) {
    cmdStr+=(" " + c);
  }
  LOG.info("now mounting with:" + cmdStr);
  Process fuseProcess=r.exec(mountCmd,env);
  RedirectToStdoutThread stdoutThread=new RedirectToStdoutThread(fuseProcess.getInputStream());
  RedirectToStdoutThread stderrThread=new RedirectToStdoutThread(fuseProcess.getErrorStream());
  stdoutThread.start();
  stderrThread.start();
  try {
    Thread.sleep(50000);
  }
 catch (  InterruptedException e) {
  }
  return fuseProcess;
}
