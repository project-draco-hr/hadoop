{
  int pathLen=pathComponents.length;
  if (pathLen < 2)   return null;
  INode[] inodes=new INode[2];
  getExistingPathINodes(pathComponents,inodes,false);
  INode inode=inodes[0];
  if (inode == null) {
    throw new FileNotFoundException("Parent path does not exist: " + DFSUtil.byteArray2String(pathComponents));
  }
  if (!inode.isDirectory()) {
    throw new FileNotFoundException("Parent path is not a directory: " + DFSUtil.byteArray2String(pathComponents));
  }
  return (INodeDirectory)inode;
}
