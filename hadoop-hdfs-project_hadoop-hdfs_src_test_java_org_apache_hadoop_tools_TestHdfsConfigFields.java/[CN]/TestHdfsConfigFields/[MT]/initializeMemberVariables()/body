{
  xmlFilename=new String("hdfs-default.xml");
  configurationClasses=new Class[]{HdfsClientConfigKeys.class,DFSConfigKeys.class};
  errorIfMissingConfigProps=true;
  errorIfMissingXmlProps=true;
  configurationPropsToSkipCompare=new HashSet<String>();
  configurationPropsToSkipCompare.add("ignore.secure.ports.for.testing");
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_DF_INTERVAL_KEY);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_IMAGE_COMPRESSION_CODEC_DEFAULT);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_WEBHDFS_AUTHENTICATION_FILTER_DEFAULT);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_NAMENODE_MIN_SUPPORTED_DATANODE_VERSION_KEY);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_DATANODE_MIN_SUPPORTED_NAMENODE_VERSION_KEY);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_DATANODE_XCEIVER_STOP_TIMEOUT_MILLIS_KEY);
  configurationPropsToSkipCompare.add("dfs.corruptfilesreturned.max");
  configurationPropsToSkipCompare.add("dfs.datanode.hdfs-blocks-metadata.enabled");
  configurationPropsToSkipCompare.add("dfs.metrics.session-id");
  configurationPropsToSkipCompare.add("dfs.datanode.synconclose");
  configurationPropsToSkipCompare.add("dfs.datanode.non.local.lazy.persist");
  configurationPropsToSkipCompare.add("dfs.namenode.tolerate.heartbeat.multiplier");
  configurationPropsToSkipCompare.add("dfs.namenode.stripe.min");
  configurationPropsToSkipCompare.add("dfs.namenode.replqueue.threshold-pct");
  configurationPropsToSkipCompare.add("dfs.ha.log-roll.rpc.timeout");
  configurationPropsToSkipCompare.add("dfs.ha.namenodes");
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_DATANODE_DUPLICATE_REPLICA_DELETION);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_DATANODE_STARTUP_KEY);
  configurationPropsToSkipCompare.add(DFSConfigKeys.DFS_NAMENODE_STARTUP_KEY);
  xmlPropsToSkipCompare=new HashSet<String>();
  xmlPrefixToSkipCompare=new HashSet<String>();
  xmlPropsToSkipCompare.add("hadoop.fuse.timer.period");
  xmlPropsToSkipCompare.add("hadoop.fuse.connection.timeout");
  xmlPropsToSkipCompare.add("dfs.namenode.edits.journal-plugin.qjournal");
  xmlPropsToSkipCompare.add("hadoop.user.group.metrics.percentiles.intervals");
  xmlPropsToSkipCompare.add("hadoop.hdfs.configuration.version");
  xmlPropsToSkipCompare.add("dfs.webhdfs.enabled");
  xmlPropsToSkipCompare.add("dfs.client.short.circuit.replica.stale.threshold.ms");
  xmlPropsToSkipCompare.add("fs.client.htrace");
  xmlPropsToSkipCompare.add("hadoop.htrace");
  xmlPropsToSkipCompare.add("dfs.htrace.spanreceiver.classes");
  xmlPropsToSkipCompare.add("dfs.client.htrace.spanreceiver.classes");
  xmlPropsToSkipCompare.add(DFSConfigKeys.DFS_DF_INTERVAL_KEY);
  xmlPrefixToSkipCompare.add("nfs");
  xmlPrefixToSkipCompare.add("dfs.namenode.kerberos.principal.pattern");
  xmlPrefixToSkipCompare.add("dfs.ha.namenodes");
}
