{
  StringBuilder builder=new StringBuilder();
  builder.append(secureRegistry ? "secure registry; " : "insecure registry; ");
  builder.append("Curator service access policy: ").append(access);
  builder.append("; System ACLs: ").append(aclsToString(systemACLs));
  builder.append("User: ").append(UgiInfo.fromCurrentUser());
  builder.append("; Kerberos Realm: ").append(kerberosRealm);
  builder.append(describeProperty(Environment.JAAS_CONF_KEY));
  String sasl=System.getProperty(PROP_ZK_ENABLE_SASL_CLIENT,DEFAULT_ZK_ENABLE_SASL_CLIENT);
  boolean saslEnabled=Boolean.valueOf(sasl);
  builder.append(describeProperty(PROP_ZK_ENABLE_SASL_CLIENT,DEFAULT_ZK_ENABLE_SASL_CLIENT));
  if (saslEnabled) {
    builder.append("; JAAS Client Identity").append("=").append(jaasClientIdentity).append("; ");
    builder.append(KEY_REGISTRY_CLIENT_JAAS_CONTEXT).append("=").append(jaasClientContext).append("; ");
    builder.append(describeProperty(PROP_ZK_SASL_CLIENT_USERNAME));
    builder.append(describeProperty(PROP_ZK_SASL_CLIENT_CONTEXT));
  }
  builder.append(describeProperty(PROP_ZK_ALLOW_FAILED_SASL_CLIENTS,"(undefined but defaults to true)"));
  builder.append(describeProperty(PROP_ZK_SERVER_MAINTAIN_CONNECTION_DESPITE_SASL_FAILURE));
  return builder.toString();
}
