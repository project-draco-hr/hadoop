{
  try {
    int port=0;
    int oriPort=listener.getPort();
    while (true) {
      try {
        port=webServer.getConnectors()[0].getLocalPort();
        LOG.info("Port returned by webServer.getConnectors()[0]." + "getLocalPort() before open() is " + port + ". Opening the listener on "+ oriPort);
        listener.open();
        port=listener.getLocalPort();
        LOG.info("listener.getLocalPort() returned " + listener.getLocalPort() + " webServer.getConnectors()[0].getLocalPort() returned "+ webServer.getConnectors()[0].getLocalPort());
        if (port < 0) {
          Thread.sleep(100);
          int numRetries=1;
          while (port < 0) {
            LOG.warn("listener.getLocalPort returned " + port);
            if (numRetries++ > MAX_RETRIES) {
              throw new Exception(" listener.getLocalPort is returning " + "less than 0 even after " + numRetries + " resets");
            }
            for (int i=0; i < 2; i++) {
              LOG.info("Retrying listener.getLocalPort()");
              port=listener.getLocalPort();
              if (port > 0) {
                break;
              }
              Thread.sleep(200);
            }
            if (port > 0) {
              break;
            }
            LOG.info("Bouncing the listener");
            listener.close();
            Thread.sleep(1000);
            listener.setPort(oriPort == 0 ? 0 : (oriPort+=1));
            listener.open();
            Thread.sleep(100);
            port=listener.getLocalPort();
          }
        }
        LOG.info("Jetty bound to port " + port);
        webServer.start();
        port=listener.getLocalPort();
        if (port < 0) {
          LOG.warn("Bounds port is " + port + " after webserver start");
          for (int i=0; i < MAX_RETRIES / 2; i++) {
            try {
              webServer.stop();
            }
 catch (            Exception e) {
              LOG.warn("Can't stop  web-server",e);
            }
            Thread.sleep(1000);
            listener.setPort(oriPort == 0 ? 0 : (oriPort+=1));
            listener.open();
            Thread.sleep(100);
            webServer.start();
            LOG.info(i + "attempts to restart webserver");
            port=listener.getLocalPort();
            if (port > 0)             break;
          }
          if (port < 0)           throw new Exception("listener.getLocalPort() is returning " + "less than 0 even after " + MAX_RETRIES + " resets");
        }
        break;
      }
 catch (      IOException ex) {
        if (ex instanceof BindException) {
          if (!findPort) {
            BindException be=new BindException("Port in use: " + listener.getHost() + ":"+ listener.getPort());
            be.initCause(ex);
            throw be;
          }
        }
 else {
          LOG.info("HttpServer.start() threw a non Bind IOException");
          throw ex;
        }
      }
catch (      MultiException ex) {
        LOG.info("HttpServer.start() threw a MultiException");
        throw ex;
      }
      listener.setPort((oriPort+=1));
    }
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Exception e) {
    throw new IOException("Problem starting http server",e);
  }
}
