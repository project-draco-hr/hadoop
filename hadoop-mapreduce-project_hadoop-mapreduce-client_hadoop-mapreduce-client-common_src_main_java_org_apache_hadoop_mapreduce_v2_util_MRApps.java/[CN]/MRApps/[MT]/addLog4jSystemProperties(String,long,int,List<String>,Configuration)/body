{
  String log4jPropertyFile=conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE,"");
  if (log4jPropertyFile.isEmpty()) {
    vargs.add("-Dlog4j.configuration=container-log4j.properties");
  }
 else {
    URI log4jURI=null;
    try {
      log4jURI=new URI(log4jPropertyFile);
    }
 catch (    URISyntaxException e) {
      throw new IllegalArgumentException(e);
    }
    Path log4jPath=new Path(log4jURI);
    vargs.add("-Dlog4j.configuration=" + log4jPath.getName());
  }
  vargs.add("-D" + YarnConfiguration.YARN_APP_CONTAINER_LOG_DIR + "="+ ApplicationConstants.LOG_DIR_EXPANSION_VAR);
  vargs.add("-D" + YarnConfiguration.YARN_APP_CONTAINER_LOG_SIZE + "="+ logSize);
  if (logSize > 0L && numBackups > 0) {
    vargs.add("-D" + YarnConfiguration.YARN_APP_CONTAINER_LOG_BACKUPS + "="+ numBackups);
    vargs.add("-Dhadoop.root.logger=" + logLevel + ",CRLA");
  }
 else {
    vargs.add("-Dhadoop.root.logger=" + logLevel + ",CLA");
  }
}
