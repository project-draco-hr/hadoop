{
  ContainerId containerID=ContainerId.newContainerId(ApplicationAttemptId.newInstance(ApplicationId.newInstance(1,1),1),1);
  String hostName="host0";
  String appSubmitter="usr0";
  Resource r=Resource.newInstance(1024,1);
  long expiryTimeStamp=1000;
  int masterKeyId=1;
  long rmIdentifier=1;
  Priority priority=Priority.newInstance(1);
  long creationTime=1000;
  ContainerTokenIdentifier token=new ContainerTokenIdentifier(containerID,hostName,appSubmitter,r,expiryTimeStamp,masterKeyId,rmIdentifier,priority,creationTime,null,CommonNodeLabelsManager.NO_LABEL,ContainerType.APPLICATION_MASTER);
  ContainerTokenIdentifier anotherToken=new ContainerTokenIdentifier();
  byte[] tokenContent=token.getBytes();
  DataInputBuffer dib=new DataInputBuffer();
  dib.reset(tokenContent,tokenContent.length);
  anotherToken.readFields(dib);
  Assert.assertEquals(ContainerType.APPLICATION_MASTER,anotherToken.getContainerType());
  Assert.assertEquals(ExecutionType.GUARANTEED,anotherToken.getExecutionType());
  token=new ContainerTokenIdentifier(containerID,hostName,appSubmitter,r,expiryTimeStamp,masterKeyId,rmIdentifier,priority,creationTime,null,CommonNodeLabelsManager.NO_LABEL,ContainerType.TASK,ExecutionType.OPPORTUNISTIC);
  anotherToken=new ContainerTokenIdentifier();
  tokenContent=token.getBytes();
  dib=new DataInputBuffer();
  dib.reset(tokenContent,tokenContent.length);
  anotherToken.readFields(dib);
  Assert.assertEquals(ContainerType.TASK,anotherToken.getContainerType());
  Assert.assertEquals(ExecutionType.OPPORTUNISTIC,anotherToken.getExecutionType());
}
