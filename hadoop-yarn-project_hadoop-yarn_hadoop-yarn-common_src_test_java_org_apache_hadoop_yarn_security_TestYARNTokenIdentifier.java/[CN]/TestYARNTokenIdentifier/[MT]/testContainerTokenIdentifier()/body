{
  ContainerId containerID=ContainerId.newContainerId(ApplicationAttemptId.newInstance(ApplicationId.newInstance(1,1),1),1);
  String hostName="host0";
  String appSubmitter="usr0";
  Resource r=Resource.newInstance(1024,1);
  long expiryTimeStamp=1000;
  int masterKeyId=1;
  long rmIdentifier=1;
  Priority priority=Priority.newInstance(1);
  long creationTime=1000;
  ContainerTokenIdentifier token=new ContainerTokenIdentifier(containerID,hostName,appSubmitter,r,expiryTimeStamp,masterKeyId,rmIdentifier,priority,creationTime);
  ContainerTokenIdentifier anotherToken=new ContainerTokenIdentifier();
  byte[] tokenContent=token.getBytes();
  DataInputBuffer dib=new DataInputBuffer();
  dib.reset(tokenContent,tokenContent.length);
  anotherToken.readFields(dib);
  Assert.assertEquals("Token is not the same after serialization " + "and deserialization.",token,anotherToken);
  Assert.assertEquals("ContainerID from proto is not the same with original token",anotherToken.getContainerID(),containerID);
  Assert.assertEquals("Hostname from proto is not the same with original token",anotherToken.getNmHostAddress(),hostName);
  Assert.assertEquals("ApplicationSubmitter from proto is not the same with original token",anotherToken.getApplicationSubmitter(),appSubmitter);
  Assert.assertEquals("Resource from proto is not the same with original token",anotherToken.getResource(),r);
  Assert.assertEquals("expiryTimeStamp from proto is not the same with original token",anotherToken.getExpiryTimeStamp(),expiryTimeStamp);
  Assert.assertEquals("KeyId from proto is not the same with original token",anotherToken.getMasterKeyId(),masterKeyId);
  Assert.assertEquals("RMIdentifier from proto is not the same with original token",anotherToken.getRMIdentifier(),rmIdentifier);
  Assert.assertEquals("Priority from proto is not the same with original token",anotherToken.getPriority(),priority);
  Assert.assertEquals("CreationTime from proto is not the same with original token",anotherToken.getCreationTime(),creationTime);
  Assert.assertNull(anotherToken.getLogAggregationContext());
  Assert.assertEquals(CommonNodeLabelsManager.NO_LABEL,anotherToken.getNodeLabelExpression());
  Assert.assertEquals(ContainerType.TASK,anotherToken.getContainerType());
}
