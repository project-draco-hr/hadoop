{
  JobStory job=getNextJobFromTrace();
  while (job != null && (job.getOutcome() != Pre21JobHistoryConstants.Values.SUCCESS || job.getSubmissionTime() < 0)) {
    if (LOG.isDebugEnabled()) {
      String reason=null;
      if (job.getOutcome() != Pre21JobHistoryConstants.Values.SUCCESS) {
        reason="STATE (" + job.getOutcome().name() + ") ";
      }
      if (job.getSubmissionTime() < 0) {
        reason+="SUBMISSION-TIME (" + job.getSubmissionTime() + ")";
      }
      LOG.debug("Ignoring job " + job.getJobID() + " from the input trace."+ " Reason: "+ reason == null ? "N/A" : reason);
    }
    job=getNextJobFromTrace();
  }
  return null == job ? null : new FilterJobStory(job){
    @Override public TaskInfo getTaskInfo(    TaskType taskType,    int taskNumber){
      return new MinTaskInfo(this.job.getTaskInfo(taskType,taskNumber));
    }
  }
;
}
