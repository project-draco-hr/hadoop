{
  Map<String,List<Param<?>>> map=new HashMap<String,List<Param<?>>>();
  Map<String,List<String>> queryString=httpContext.getRequest().getQueryParameters();
  String str=((MultivaluedMap<String,String>)queryString).getFirst(driverParam);
  if (str == null) {
    throw new IllegalArgumentException(MessageFormat.format("Missing Operation parameter [{0}]",driverParam));
  }
  Enum op;
  try {
    op=Enum.valueOf(enumClass,str.toUpperCase());
  }
 catch (  IllegalArgumentException ex) {
    throw new IllegalArgumentException(MessageFormat.format("Invalid Operation [{0}]",str));
  }
  if (!paramsDef.containsKey(op)) {
    throw new IllegalArgumentException(MessageFormat.format("Unsupported Operation [{0}]",op));
  }
  for (  Class<Param<?>> paramClass : paramsDef.get(op)) {
    Param<?> param=newParam(paramClass);
    List<Param<?>> paramList=Lists.newArrayList();
    List<String> ps=queryString.get(param.getName());
    if (ps != null) {
      for (      String p : ps) {
        try {
          param.parseParam(p);
        }
 catch (        Exception ex) {
          throw new IllegalArgumentException(ex.toString(),ex);
        }
        paramList.add(param);
        param=newParam(paramClass);
      }
    }
 else {
      paramList.add(param);
    }
    map.put(param.getName(),paramList);
  }
  return new Parameters(map);
}
