{
  Map<String,Param<?>> map=new HashMap<String,Param<?>>();
  MultivaluedMap<String,String> queryString=httpContext.getRequest().getQueryParameters();
  String str=queryString.getFirst(driverParam);
  if (str == null) {
    throw new IllegalArgumentException(MessageFormat.format("Missing Operation parameter [{0}]",driverParam));
  }
  Enum op;
  try {
    op=Enum.valueOf(enumClass,str.toUpperCase());
  }
 catch (  IllegalArgumentException ex) {
    throw new IllegalArgumentException(MessageFormat.format("Invalid Operation [{0}]",str));
  }
  if (!paramsDef.containsKey(op)) {
    throw new IllegalArgumentException(MessageFormat.format("Unsupported Operation [{0}]",op));
  }
  for (  Class<Param<?>> paramClass : paramsDef.get(op)) {
    Param<?> param;
    try {
      param=paramClass.newInstance();
    }
 catch (    Exception ex) {
      throw new UnsupportedOperationException(MessageFormat.format("Param class [{0}] does not have default constructor",paramClass.getName()));
    }
    try {
      param.parseParam(queryString.getFirst(param.getName()));
    }
 catch (    Exception ex) {
      throw new IllegalArgumentException(ex.toString(),ex);
    }
    map.put(param.getName(),param);
  }
  return new Parameters(map);
}
