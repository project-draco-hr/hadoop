{
  LOG.debug("assignContainers:" + " node=" + node.getRMNode().getNodeAddress() + " #applications="+ applications.size());
  for (  Map.Entry<ApplicationId,SchedulerApplication> e : applications.entrySet()) {
    FiCaSchedulerApp application=(FiCaSchedulerApp)e.getValue().getCurrentAppAttempt();
    if (application == null) {
      continue;
    }
    LOG.debug("pre-assignContainers");
    application.showRequests();
synchronized (application) {
      if (SchedulerAppUtils.isBlacklisted(application,node,LOG)) {
        continue;
      }
      for (      Priority priority : application.getPriorities()) {
        int maxContainers=getMaxAllocatableContainers(application,priority,node,NodeType.OFF_SWITCH);
        if (maxContainers > 0) {
          int assignedContainers=assignContainersOnNode(node,application,priority);
          if (assignedContainers == 0) {
            break;
          }
        }
      }
    }
    LOG.debug("post-assignContainers");
    application.showRequests();
    if (Resources.lessThan(resourceCalculator,clusterResource,node.getAvailableResource(),minimumAllocation)) {
      break;
    }
  }
  for (  SchedulerApplication application : applications.values()) {
    FiCaSchedulerApp attempt=(FiCaSchedulerApp)application.getCurrentAppAttempt();
    if (attempt == null) {
      continue;
    }
    attempt.setHeadroom(Resources.subtract(clusterResource,usedResource));
  }
}
