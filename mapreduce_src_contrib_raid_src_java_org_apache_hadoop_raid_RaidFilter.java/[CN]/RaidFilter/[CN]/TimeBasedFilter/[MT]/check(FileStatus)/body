{
  if (!canChooseForCurrentPolicy(f)) {
    return false;
  }
  long blockSize=f.getBlockSize();
  if (2 * blockSize >= f.getLen()) {
    stats.numTooSmall++;
    stats.sizeTooSmall+=f.getLen();
    return false;
  }
  boolean select=false;
  try {
    Object ppair=RaidNode.getParityFile(raidDestPrefix,f.getPath(),getConf());
    if (ppair != null) {
      if (f.getReplication() != targetRepl) {
        select=true;
      }
 else {
        stats.numRaided++;
        select=false;
      }
    }
 else {
      if (f.getModificationTime() + modTimePeriod < startTime) {
        select=true;
      }
 else {
        select=false;
        stats.numTooNew++;
        stats.sizeTooNew+=f.getLen();
      }
    }
  }
 catch (  java.io.FileNotFoundException e) {
    select=true;
  }
catch (  java.io.IOException e) {
    DirectoryTraversal.LOG.error("Error while selecting " + StringUtils.stringifyException(e));
  }
  return select;
}
