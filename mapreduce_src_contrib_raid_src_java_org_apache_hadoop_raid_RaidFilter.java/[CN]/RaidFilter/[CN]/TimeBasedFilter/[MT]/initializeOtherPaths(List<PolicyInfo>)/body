{
  ArrayList<PolicyInfo> tmp=new ArrayList<PolicyInfo>(allPolicies);
  for (Iterator<PolicyInfo> it=tmp.iterator(); it.hasNext(); ) {
    String src=it.next().getSrcPath().toUri().getPath();
    if (src.compareTo(currentSrcPath) <= 0) {
      it.remove();
      continue;
    }
    int matchLen=matchingPrefixLength(src,currentSrcPath);
    if (matchLen < currentSrcPath.length()) {
      it.remove();
    }
  }
  Collections.sort(tmp,new Comparator(){
    public int compare(    Object o1,    Object o2){
      return 0 - ((PolicyInfo)o1).getSrcPath().toUri().getPath().compareTo(((PolicyInfo)o1).getSrcPath().toUri().getPath());
    }
  }
);
  otherSrcPaths=new String[tmp.size()];
  modTimePeriods=new long[otherSrcPaths.length];
  for (int i=0; i < otherSrcPaths.length; i++) {
    otherSrcPaths[i]=tmp.get(i).getSrcPath().toUri().getPath();
    modTimePeriods[i]=Long.parseLong(tmp.get(i).getProperty("modTimePeriod"));
  }
}
