{
  List<Class<? extends CryptoCodec>> klasses=getCodecClasses(conf,cipherSuite);
  if (klasses == null) {
    return null;
  }
  CryptoCodec codec=null;
  for (  Class<? extends CryptoCodec> klass : klasses) {
    try {
      CryptoCodec c=ReflectionUtils.newInstance(klass,conf);
      if (c.getCipherSuite().getName().equals(cipherSuite.getName())) {
        if (codec == null) {
          LOG.debug("Using crypto codec {}.",klass.getName());
          codec=c;
        }
      }
 else {
        LOG.warn("Crypto codec {} doesn't meet the cipher suite {}.",klass.getName(),cipherSuite.getName());
      }
    }
 catch (    Exception e) {
      LOG.warn("Crypto codec {} is not available.",klass.getName());
    }
  }
  if (codec != null) {
    return codec;
  }
  throw new RuntimeException("No available crypto codec which meets " + "the cipher suite " + cipherSuite.getName() + ".");
}
