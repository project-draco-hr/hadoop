{
  Class<? extends Speculator> speculatorClass;
  try {
    speculatorClass=conf.getClass(AMConstants.SPECULATOR_CLASS,DefaultSpeculator.class,Speculator.class);
    Constructor<? extends Speculator> speculatorConstructor=speculatorClass.getConstructor(Configuration.class,AppContext.class);
    Speculator result=speculatorConstructor.newInstance(conf,context);
    return result;
  }
 catch (  InstantiationException ex) {
    LOG.error("Can't make a speculator -- check " + AMConstants.SPECULATOR_CLASS + " "+ ex);
    throw new YarnException(ex);
  }
catch (  IllegalAccessException ex) {
    LOG.error("Can't make a speculator -- check " + AMConstants.SPECULATOR_CLASS + " "+ ex);
    throw new YarnException(ex);
  }
catch (  InvocationTargetException ex) {
    LOG.error("Can't make a speculator -- check " + AMConstants.SPECULATOR_CLASS + " "+ ex);
    throw new YarnException(ex);
  }
catch (  NoSuchMethodException ex) {
    LOG.error("Can't make a speculator -- check " + AMConstants.SPECULATOR_CLASS + " "+ ex);
    throw new YarnException(ex);
  }
}
