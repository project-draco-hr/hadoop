{
  try {
    mainStarted=true;
    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());
    String containerIdStr=System.getenv(Environment.CONTAINER_ID.name());
    String nodeHostString=System.getenv(Environment.NM_HOST.name());
    String nodePortString=System.getenv(Environment.NM_PORT.name());
    String nodeHttpPortString=System.getenv(Environment.NM_HTTP_PORT.name());
    String appSubmitTimeStr=System.getenv(ApplicationConstants.APP_SUBMIT_TIME_ENV);
    validateInputParam(containerIdStr,Environment.CONTAINER_ID.name());
    validateInputParam(nodeHostString,Environment.NM_HOST.name());
    validateInputParam(nodePortString,Environment.NM_PORT.name());
    validateInputParam(nodeHttpPortString,Environment.NM_HTTP_PORT.name());
    validateInputParam(appSubmitTimeStr,ApplicationConstants.APP_SUBMIT_TIME_ENV);
    ContainerId containerId=ContainerId.fromString(containerIdStr);
    ApplicationAttemptId applicationAttemptId=containerId.getApplicationAttemptId();
    if (applicationAttemptId != null) {
      CallerContext.setCurrent(new CallerContext.Builder("mr_appmaster_" + applicationAttemptId.toString()).build());
    }
    long appSubmitTime=Long.parseLong(appSubmitTimeStr);
    MRAppMaster appMaster=new MRAppMaster(applicationAttemptId,containerId,nodeHostString,Integer.parseInt(nodePortString),Integer.parseInt(nodeHttpPortString),appSubmitTime);
    ShutdownHookManager.get().addShutdownHook(new MRAppMasterShutdownHook(appMaster),SHUTDOWN_HOOK_PRIORITY);
    JobConf conf=new JobConf(new YarnConfiguration());
    conf.addResource(new Path(MRJobConfig.JOB_CONF_FILE));
    MRWebAppUtil.initialize(conf);
    String systemPropsToLog=MRApps.getSystemPropertiesToLog(conf);
    if (systemPropsToLog != null) {
      LOG.info(systemPropsToLog);
    }
    String jobUserName=System.getenv(ApplicationConstants.Environment.USER.name());
    conf.set(MRJobConfig.USER_NAME,jobUserName);
    initAndStartAppMaster(appMaster,conf,jobUserName);
  }
 catch (  Throwable t) {
    LOG.fatal("Error starting MRAppMaster",t);
    ExitUtil.terminate(1,t);
  }
}
