{
  try {
    String containerIdStr=System.getenv(ApplicationConstants.AM_CONTAINER_ID_ENV);
    String nodeHttpAddressStr=System.getenv(ApplicationConstants.NM_HTTP_ADDRESS_ENV);
    String appSubmitTimeStr=System.getenv(ApplicationConstants.APP_SUBMIT_TIME_ENV);
    if (containerIdStr == null) {
      String msg=ApplicationConstants.AM_CONTAINER_ID_ENV + " is null";
      LOG.error(msg);
      throw new IOException(msg);
    }
    if (nodeHttpAddressStr == null) {
      String msg=ApplicationConstants.NM_HTTP_ADDRESS_ENV + " is null";
      LOG.error(msg);
      throw new IOException(msg);
    }
    if (appSubmitTimeStr == null) {
      String msg=ApplicationConstants.APP_SUBMIT_TIME_ENV + " is null";
      LOG.error(msg);
      throw new IOException(msg);
    }
    ContainerId containerId=ConverterUtils.toContainerId(containerIdStr);
    ApplicationAttemptId applicationAttemptId=containerId.getApplicationAttemptId();
    InetSocketAddress nodeHttpInetAddr=NetUtils.createSocketAddr(nodeHttpAddressStr);
    long appSubmitTime=Long.parseLong(appSubmitTimeStr);
    MRAppMaster appMaster=new MRAppMaster(applicationAttemptId,containerId,nodeHttpInetAddr.getHostName(),nodeHttpInetAddr.getPort(),appSubmitTime);
    Runtime.getRuntime().addShutdownHook(new CompositeServiceShutdownHook(appMaster));
    YarnConfiguration conf=new YarnConfiguration(new JobConf());
    conf.addResource(new Path(MRJobConfig.JOB_CONF_FILE));
    String jobUserName=System.getenv(ApplicationConstants.Environment.USER.name());
    conf.set(MRJobConfig.USER_NAME,jobUserName);
    initAndStartAppMaster(appMaster,conf,jobUserName);
  }
 catch (  Throwable t) {
    LOG.fatal("Error starting MRAppMaster",t);
    System.exit(1);
  }
}
