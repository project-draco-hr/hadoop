{
  if (NameNode.stateChangeLog.isDebugEnabled()) {
    NameNode.stateChangeLog.debug("DIR* FSDirectory.delete: " + src);
  }
  waitForReady();
  long now=now();
  final int filesRemoved;
  writeLock();
  try {
    final INodesInPath inodesInPath=rootDir.getINodesInPath4Write(normalizePath(src),false);
    if (!deleteAllowed(inodesInPath,src)) {
      filesRemoved=-1;
    }
 else {
      final INode targetNode=inodesInPath.getLastINode();
      List<INodeDirectorySnapshottable> snapshottableDirs=new ArrayList<INodeDirectorySnapshottable>();
      INode snapshotNode=hasSnapshot(targetNode,snapshottableDirs);
      if (snapshotNode != null) {
        throw new IOException("The direcotry " + targetNode.getFullPathName() + " cannot be deleted since "+ snapshotNode.getFullPathName()+ " is snapshottable and already has snapshots");
      }
      filesRemoved=unprotectedDelete(inodesInPath,collectedBlocks,now);
      if (snapshottableDirs.size() > 0) {
        namesystem.removeSnapshottableDirs(snapshottableDirs);
      }
    }
  }
  finally {
    writeUnlock();
  }
  if (filesRemoved < 0) {
    return false;
  }
  fsImage.getEditLog().logDelete(src,now);
  incrDeletedFileCount(filesRemoved);
  getFSNamesystem().removePathAndBlocks(src,null);
  return true;
}
