{
  final INode[] inodes=inodesInPath.getINodes();
  final int pos=inodes.length - 1;
  INode removedNode=((INodeDirectory)inodes[pos - 1]).removeChild(inodes[pos],inodesInPath.getLatestSnapshot());
  if (removedNode != null) {
    Preconditions.checkState(removedNode == inodes[pos]);
    inodesInPath.setINode(pos - 1,removedNode.getParent());
    final Quota.Counts counts=removedNode.computeQuotaUsage();
    updateCountNoQuotaCheck(inodesInPath,pos,-counts.get(Quota.NAMESPACE),-counts.get(Quota.DISKSPACE));
  }
  return removedNode;
}
