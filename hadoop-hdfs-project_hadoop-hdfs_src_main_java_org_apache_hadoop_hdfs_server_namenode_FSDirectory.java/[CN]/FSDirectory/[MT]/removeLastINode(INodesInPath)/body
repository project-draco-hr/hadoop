{
  final int latestSnapshot=iip.getLatestSnapshotId();
  final INode last=iip.getLastINode();
  final INodeDirectory parent=iip.getINode(-2).asDirectory();
  if (!parent.removeChild(last,latestSnapshot)) {
    return -1;
  }
  if (!last.isInLatestSnapshot(latestSnapshot)) {
    final Quota.Counts counts=last.computeQuotaUsage();
    updateCountNoQuotaCheck(iip,iip.length() - 1,-counts.get(Quota.NAMESPACE),-counts.get(Quota.DISKSPACE));
    if (INodeReference.tryRemoveReference(last) > 0) {
      return 0;
    }
 else {
      return counts.get(Quota.NAMESPACE);
    }
  }
  return 1;
}
