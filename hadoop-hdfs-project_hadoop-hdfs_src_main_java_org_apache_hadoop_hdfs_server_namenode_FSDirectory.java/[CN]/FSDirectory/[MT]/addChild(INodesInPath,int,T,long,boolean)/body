{
  final INode[] inodes=inodesInPath.getINodes();
  if (checkQuota) {
    verifyFsLimits(inodes,pos,child);
  }
  INode.DirCounts counts=new INode.DirCounts();
  child.spaceConsumedInTree(counts);
  if (childDiskspace < 0) {
    childDiskspace=counts.getDsCount();
  }
  updateCount(inodesInPath,pos,counts.getNsCount(),childDiskspace,checkQuota);
  if (inodes[pos - 1] == null) {
    throw new NullPointerException("Panic: parent does not exist");
  }
  final T addedNode=((INodeDirectory)inodes[pos - 1]).addChild(child,true);
  if (addedNode == null) {
    updateCount(inodesInPath,pos,-counts.getNsCount(),-childDiskspace,true);
  }
  return addedNode;
}
