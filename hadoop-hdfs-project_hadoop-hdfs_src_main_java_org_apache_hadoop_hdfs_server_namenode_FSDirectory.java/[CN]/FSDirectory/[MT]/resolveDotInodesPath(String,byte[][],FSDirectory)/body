{
  final String inodeId=DFSUtil.bytes2String(pathComponents[3]);
  final long id;
  try {
    id=Long.parseLong(inodeId);
  }
 catch (  NumberFormatException e) {
    throw new FileNotFoundException("Invalid inode path: " + src);
  }
  if (id == INodeId.ROOT_INODE_ID && pathComponents.length == 4) {
    return Path.SEPARATOR;
  }
  INode inode=fsd.getInode(id);
  if (inode == null) {
    throw new FileNotFoundException("File for given inode path does not exist: " + src);
  }
  if ((pathComponents.length > 4) && DFSUtil.bytes2String(pathComponents[4]).equals("..")) {
    INode parent=inode.getParent();
    if (parent == null || parent.getId() == INodeId.ROOT_INODE_ID) {
      return Path.SEPARATOR;
    }
 else {
      return parent.getFullPathName();
    }
  }
  String path="";
  if (id != INodeId.ROOT_INODE_ID) {
    path=inode.getFullPathName();
  }
  return constructRemainingPath(path,pathComponents,4);
}
