{
  final INode[] inodes=inodesInPath.getINodes();
  if (pos == 1 && inodes[0] == rootDir && isReservedName(child)) {
    throw new HadoopIllegalArgumentException("File name \"" + child.getLocalName() + "\" is reserved and cannot "+ "be created. If this is during upgrade change the name of the "+ "existing file or directory to another name before upgrading "+ "to the new release.");
  }
  if (checkQuota) {
    verifyFsLimits(inodes,pos,child);
  }
  INode.DirCounts counts=new INode.DirCounts();
  child.spaceConsumedInTree(counts);
  updateCount(inodesInPath,pos,counts.getNsCount(),counts.getDsCount(),checkQuota);
  if (inodes[pos - 1] == null) {
    throw new NullPointerException("Panic: parent does not exist");
  }
  final boolean added=((INodeDirectory)inodes[pos - 1]).addChild(child,true);
  if (!added) {
    updateCount(inodesInPath,pos,-counts.getNsCount(),-counts.getDsCount(),true);
  }
 else {
    inodeMap.put(child);
  }
  return added;
}
