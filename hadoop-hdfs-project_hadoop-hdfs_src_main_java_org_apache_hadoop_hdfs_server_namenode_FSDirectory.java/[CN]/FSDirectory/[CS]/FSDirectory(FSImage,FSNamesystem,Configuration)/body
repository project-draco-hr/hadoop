{
  this.dirLock=new ReentrantReadWriteLock(true);
  this.cond=dirLock.writeLock().newCondition();
  rootDir=new INodeDirectoryWithQuota(INodeDirectory.ROOT_NAME,ns.createFsOwnerPermissions(new FsPermission((short)0755)),Integer.MAX_VALUE,UNKNOWN_DISK_SPACE);
  this.fsImage=fsImage;
  int configuredLimit=conf.getInt(DFSConfigKeys.DFS_LIST_LIMIT,DFSConfigKeys.DFS_LIST_LIMIT_DEFAULT);
  this.lsLimit=configuredLimit > 0 ? configuredLimit : DFSConfigKeys.DFS_LIST_LIMIT_DEFAULT;
  this.maxComponentLength=conf.getInt(DFSConfigKeys.DFS_NAMENODE_MAX_COMPONENT_LENGTH_KEY,DFSConfigKeys.DFS_NAMENODE_MAX_COMPONENT_LENGTH_DEFAULT);
  this.maxDirItems=conf.getInt(DFSConfigKeys.DFS_NAMENODE_MAX_DIRECTORY_ITEMS_KEY,DFSConfigKeys.DFS_NAMENODE_MAX_DIRECTORY_ITEMS_DEFAULT);
  int threshold=conf.getInt(DFSConfigKeys.DFS_NAMENODE_NAME_CACHE_THRESHOLD_KEY,DFSConfigKeys.DFS_NAMENODE_NAME_CACHE_THRESHOLD_DEFAULT);
  NameNode.LOG.info("Caching file names occuring more than " + threshold + " times ");
  nameCache=new NameCache<ByteArray>(threshold);
  namesystem=ns;
}
