{
  final ResourceHandler staticHandler=new ResourceHandler();
  staticHandler.setResourceBase("html");
  Handler handler=new AbstractHandler(){
    @Override public void handle(    String target,    HttpServletRequest request,    HttpServletResponse response,    int dispatch){
      try {
        int timeunit=1000;
        String timeunitLabel="second";
        if (request.getParameter("u") != null && request.getParameter("u").equalsIgnoreCase("m")) {
          timeunit=1000 * 60;
          timeunitLabel="minute";
        }
        if (target.equals("/")) {
          printPageIndex(request,response);
        }
 else         if (target.equals("/simulate")) {
          printPageSimulate(request,response,timeunit,timeunitLabel);
        }
 else         if (target.equals("/track")) {
          printPageTrack(request,response,timeunit,timeunitLabel);
        }
 else         if (target.startsWith("/js") || target.startsWith("/css")) {
          response.setCharacterEncoding("utf-8");
          staticHandler.handle(target,request,response,dispatch);
        }
 else         if (target.equals("/simulateMetrics")) {
          printJsonMetrics(request,response);
        }
 else         if (target.equals("/trackMetrics")) {
          printJsonTrack(request,response);
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
;
  server=new Server(port);
  server.setHandler(handler);
  server.start();
}
