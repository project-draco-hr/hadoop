{
  this.dataset=dataset;
  shouldRun=new AtomicBoolean(false);
  this.diskBandwidth=conf.getLong(DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT,DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT);
  this.blockTolerance=conf.getLong(DFSConfigKeys.DFS_DISK_BALANCER_BLOCK_TOLERANCE,DFSConfigKeys.DFS_DISK_BALANCER_BLOCK_TOLERANCE_DEFAULT);
  this.maxDiskErrors=conf.getLong(DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_ERRORS,DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_ERRORS_DEFAULT);
  if (this.diskBandwidth <= 0) {
    LOG.debug("Found 0 or less as max disk throughput, ignoring config " + "value. value : " + diskBandwidth);
    diskBandwidth=DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT;
  }
  if (this.blockTolerance <= 0) {
    LOG.debug("Found 0 or less for block tolerance value, ignoring config" + "value. value : " + blockTolerance);
    blockTolerance=DFSConfigKeys.DFS_DISK_BALANCER_BLOCK_TOLERANCE_DEFAULT;
  }
  if (this.maxDiskErrors < 0) {
    LOG.debug("Found  less than 0 for maxDiskErrors value, ignoring " + "config value. value : " + maxDiskErrors);
    maxDiskErrors=DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_ERRORS_DEFAULT;
  }
}
