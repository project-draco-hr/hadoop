{
  Preconditions.checkState(lock.isHeldByCurrentThread());
  workMap.clear();
  Map<String,String> storageIDToVolBasePathMap=getStorageIDToVolumeBasePathMap();
  for (  Step step : plan.getVolumeSetPlans()) {
    String sourceVolUuid=step.getSourceVolume().getUuid();
    String destVolUuid=step.getDestinationVolume().getUuid();
    String sourceVolBasePath=storageIDToVolBasePathMap.get(sourceVolUuid);
    if (sourceVolBasePath == null) {
      final String errMsg="Disk Balancer - Unable to find volume: " + step.getSourceVolume().getPath() + ". SubmitPlan failed.";
      LOG.error(errMsg);
      throw new DiskBalancerException(errMsg,DiskBalancerException.Result.INVALID_VOLUME);
    }
    String destVolBasePath=storageIDToVolBasePathMap.get(destVolUuid);
    if (destVolBasePath == null) {
      final String errMsg="Disk Balancer - Unable to find volume: " + step.getDestinationVolume().getPath() + ". SubmitPlan failed.";
      LOG.error(errMsg);
      throw new DiskBalancerException(errMsg,DiskBalancerException.Result.INVALID_VOLUME);
    }
    VolumePair volumePair=new VolumePair(sourceVolUuid,sourceVolBasePath,destVolUuid,destVolBasePath);
    createWorkPlan(volumePair,step);
  }
}
