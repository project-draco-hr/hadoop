{
  Path smallSeekFile=setPath("/test/smallSeekFile.txt");
  long size=5 * 1024 * 1024;
  ContractTestUtils.generateTestFile(this.fs,smallSeekFile,size,256,255);
  LOG.info("5MB file created: smallSeekFile.txt");
  FSDataInputStream instream=this.fs.open(smallSeekFile);
  int seekTimes=5;
  LOG.info("multiple fold position seeking test...:");
  for (int i=0; i < seekTimes; i++) {
    long pos=size / (seekTimes - i) - 1;
    LOG.info("begin seeking for pos: " + pos);
    instream.seek(pos);
    assertTrue("expected position at:" + pos + ", but got:"+ instream.getPos(),instream.getPos() == pos);
    LOG.info("completed seeking at pos: " + instream.getPos());
  }
  LOG.info("random position seeking test...:");
  Random rand=new Random();
  for (int i=0; i < seekTimes; i++) {
    long pos=Math.abs(rand.nextLong()) % size;
    LOG.info("begin seeking for pos: " + pos);
    instream.seek(pos);
    assertTrue("expected position at:" + pos + ", but got:"+ instream.getPos(),instream.getPos() == pos);
    LOG.info("completed seeking at pos: " + instream.getPos());
  }
  IOUtils.closeStream(instream);
}
