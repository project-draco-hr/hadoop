{
  final int bufLen=256;
  final int sizeFlag=5;
  String filename="readTestFile_" + sizeFlag + ".txt";
  Path readTestFile=setPath("/test/" + filename);
  long size=sizeFlag * 1024 * 1024;
  ContractTestUtils.generateTestFile(this.fs,readTestFile,size,256,255);
  LOG.info(sizeFlag + "MB file created: /test/" + filename);
  FSDataInputStream instream=this.fs.open(readTestFile);
  byte[] buf=new byte[bufLen];
  long bytesRead=0;
  while (bytesRead < size) {
    int bytes;
    if (size - bytesRead < bufLen) {
      int remaining=(int)(size - bytesRead);
      bytes=instream.read(buf,0,remaining);
    }
 else {
      bytes=instream.read(buf,0,bufLen);
    }
    bytesRead+=bytes;
    if (bytesRead % (1024 * 1024) == 0) {
      int available=instream.available();
      int remaining=(int)(size - bytesRead);
      assertTrue("expected remaining:" + remaining + ", but got:"+ available,remaining == available);
      LOG.info("Bytes read: " + Math.round((double)bytesRead / (1024 * 1024)) + " MB");
    }
  }
  assertTrue(instream.available() == 0);
  IOUtils.closeStream(instream);
}
