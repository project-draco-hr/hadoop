{
  try {
    user.doAs(new PrivilegedExceptionAction<Object>(){
      @Override public Object run() throws IOException {
        FileContext myfc=FileContext.getFileContext(conf);
        Path newlink=new Path(targetParent,"newlink");
        myfc.rename(link,newlink,Rename.NONE);
        return null;
      }
    }
);
    fail("Renamed link even though link's parent is not writable!");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("Permission denied",e);
  }
}
