{
  try {
    user.doAs(new PrivilegedExceptionAction<Object>(){
      @Override public Object run() throws IOException {
        FileContext myfc=FileContext.getFileContext(conf);
        myfc.delete(link,false);
        return null;
      }
    }
);
    fail("Deleted symlink without write permissions on parent!");
  }
 catch (  AccessControlException e) {
    GenericTestUtils.assertExceptionContains("Permission denied",e);
  }
}
