{
  fs.setPermission(target,new FsPermission((short)0002));
  fs.setAcl(target,Arrays.asList(aclEntry(ACCESS,USER,ALL),aclEntry(ACCESS,GROUP,NONE),aclEntry(ACCESS,USER,user.getShortUserName(),WRITE),aclEntry(ACCESS,OTHER,WRITE)));
  FileContext myfc=user.doAs(new PrivilegedExceptionAction<FileContext>(){
    @Override public FileContext run() throws IOException {
      return FileContext.getFileContext(conf);
    }
  }
);
  myfc.access(link,FsAction.WRITE);
  try {
    myfc.access(link,FsAction.ALL);
    fail("The access call should have failed.");
  }
 catch (  AccessControlException e) {
  }
  Path badPath=new Path(link,"bad");
  try {
    myfc.access(badPath,FsAction.READ);
    fail("The access call should have failed");
  }
 catch (  FileNotFoundException e) {
  }
}
