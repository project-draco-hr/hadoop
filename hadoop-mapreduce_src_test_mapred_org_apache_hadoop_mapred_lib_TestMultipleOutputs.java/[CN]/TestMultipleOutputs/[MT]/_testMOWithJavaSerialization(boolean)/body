{
  Path inDir=getDir(IN_DIR);
  Path outDir=getDir(OUT_DIR);
  JobConf conf=createJobConf();
  FileSystem fs=FileSystem.get(conf);
  DataOutputStream file=fs.create(new Path(inDir,"part-0"));
  file.writeBytes("a\nb\n\nc\nd\ne");
  file.close();
  fs.delete(inDir,true);
  fs.delete(outDir,true);
  file=fs.create(new Path(inDir,"part-1"));
  file.writeBytes("a\nb\n\nc\nd\ne");
  file.close();
  conf.setJobName("mo");
  conf.set("io.serializations","org.apache.hadoop.io.serializer.JavaSerialization," + "org.apache.hadoop.io.serializer.WritableSerialization");
  conf.setInputFormat(TextInputFormat.class);
  conf.setMapOutputKeyClass(Long.class);
  conf.setMapOutputValueClass(String.class);
  conf.setOutputKeyComparatorClass(JavaSerializationComparator.class);
  conf.setOutputKeyClass(Long.class);
  conf.setOutputValueClass(String.class);
  conf.setOutputFormat(TextOutputFormat.class);
  MultipleOutputs.addNamedOutput(conf,"text",TextOutputFormat.class,Long.class,String.class);
  MultipleOutputs.setCountersEnabled(conf,withCounters);
  conf.setMapperClass(MOJavaSerDeMap.class);
  conf.setReducerClass(MOJavaSerDeReduce.class);
  FileInputFormat.setInputPaths(conf,inDir);
  FileOutputFormat.setOutputPath(conf,outDir);
  JobClient jc=new JobClient(conf);
  RunningJob job=jc.submitJob(conf);
  while (!job.isComplete()) {
    Thread.sleep(100);
  }
  int namedOutputCount=0;
  FileStatus[] statuses=fs.listStatus(outDir);
  for (  FileStatus status : statuses) {
    if (status.getPath().getName().equals("text-m-00000") || status.getPath().getName().equals("text-r-00000")) {
      namedOutputCount++;
    }
  }
  assertEquals(2,namedOutputCount);
  BufferedReader reader=new BufferedReader(new InputStreamReader(fs.open(new Path(FileOutputFormat.getOutputPath(conf),"text-r-00000"))));
  int count=0;
  String line=reader.readLine();
  while (line != null) {
    assertTrue(line.endsWith("text"));
    line=reader.readLine();
    count++;
  }
  reader.close();
  assertFalse(count == 0);
  Counters.Group counters=job.getCounters().getGroup(MultipleOutputs.class.getName());
  if (!withCounters) {
    assertEquals(0,counters.size());
  }
 else {
    assertEquals(1,counters.size());
    assertEquals(2,counters.getCounter("text"));
  }
}
