{
  try {
    Configuration conf=new Configuration();
    Job job=Job.getInstance(conf,"TestValueIterReset");
    job.setJarByClass(TestValueIterReset.class);
    job.setMapperClass(TestMapper.class);
    job.setReducerClass(TestReducer.class);
    job.setNumReduceTasks(NUM_TESTS);
    job.setMapOutputKeyClass(IntWritable.class);
    job.setMapOutputValueClass(IntWritable.class);
    job.setOutputKeyClass(IntWritable.class);
    job.setOutputValueClass(IntWritable.class);
    job.getConfiguration().setInt(MRJobConfig.REDUCE_MARKRESET_BUFFER_SIZE,128);
    job.setInputFormatClass(TextInputFormat.class);
    job.setOutputFormatClass(TextOutputFormat.class);
    FileInputFormat.addInputPath(job,new Path(TEST_ROOT_DIR + "/in"));
    Path output=new Path(TEST_ROOT_DIR + "/out");
    localFs.delete(output,true);
    FileOutputFormat.setOutputPath(job,output);
    createInput();
    assertTrue(job.waitForCompletion(true));
    validateOutput();
  }
 catch (  Exception e) {
    e.printStackTrace();
    assertTrue(false);
  }
}
