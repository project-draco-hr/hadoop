{
  this.conf=conf;
  this.applicationAttemptId=appAttemptId;
  this.rmContext=rmContext;
  this.eventHandler=rmContext.getDispatcher().getEventHandler();
  this.submissionContext=submissionContext;
  this.scheduler=scheduler;
  this.masterService=masterService;
  if (UserGroupInformation.isSecurityEnabled()) {
    this.rmContext.getClientToAMTokenSecretManager().registerApplication(appAttemptId);
    Token<ClientTokenIdentifier> token=new Token<ClientTokenIdentifier>(new ClientTokenIdentifier(appAttemptId),this.rmContext.getClientToAMTokenSecretManager());
    this.clientToken=BuilderUtils.newClientToken(token.getIdentifier(),token.getKind().toString(),token.getPassword(),token.getService().toString());
  }
  ReentrantReadWriteLock lock=new ReentrantReadWriteLock();
  this.readLock=lock.readLock();
  this.writeLock=lock.writeLock();
  this.proxiedTrackingUrl=generateProxyUriWithoutScheme();
  this.stateMachine=stateMachineFactory.make(this);
}
