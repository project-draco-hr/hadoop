{
  ApplicationSubmissionContext subCtx=appAttempt.submissionContext;
  if (!subCtx.getUnmanagedAM()) {
    appAttempt.amReq.setNumContainers(1);
    appAttempt.amReq.setPriority(AM_CONTAINER_PRIORITY);
    appAttempt.amReq.setResourceName(ResourceRequest.ANY);
    appAttempt.amReq.setRelaxLocality(true);
    appAttempt.getAMBlacklistManager().refreshNodeHostCount(appAttempt.scheduler.getNumClusterNodes());
    ResourceBlacklistRequest amBlacklist=appAttempt.getAMBlacklistManager().getBlacklistUpdates();
    if (LOG.isDebugEnabled()) {
      LOG.debug("Using blacklist for AM: additions(" + amBlacklist.getBlacklistAdditions() + ") and removals("+ amBlacklist.getBlacklistRemovals()+ ")");
    }
    Allocation amContainerAllocation=appAttempt.scheduler.allocate(appAttempt.applicationAttemptId,Collections.singletonList(appAttempt.amReq),EMPTY_CONTAINER_RELEASE_LIST,amBlacklist.getBlacklistAdditions(),amBlacklist.getBlacklistRemovals(),null,null);
    if (amContainerAllocation != null && amContainerAllocation.getContainers() != null) {
      assert(amContainerAllocation.getContainers().size() == 0);
    }
    return RMAppAttemptState.SCHEDULED;
  }
 else {
    appAttempt.storeAttempt();
    return RMAppAttemptState.LAUNCHED_UNMANAGED_SAVING;
  }
}
