{
  UnreliableInterface unreliable=(UnreliableInterface)RetryProxy.create(UnreliableInterface.class,new FlipFlopProxyProvider(UnreliableInterface.class,new UnreliableImplementation("impl1",TypeOfExceptionToFailWith.IO_EXCEPTION),new UnreliableImplementation("impl2",TypeOfExceptionToFailWith.UNRELIABLE_EXCEPTION)),RetryPolicies.failoverOnNetworkException(1));
  assertEquals("impl1",unreliable.succeedsOnceThenFailsReturningString());
  try {
    assertEquals("impl2",unreliable.succeedsOnceThenFailsReturningString());
    fail("should not have succeeded twice");
  }
 catch (  IOException e) {
    assertEquals("impl1",e.getMessage());
  }
  assertEquals("impl1",unreliable.succeedsOnceThenFailsReturningStringIdempotent());
  assertEquals("impl2",unreliable.succeedsOnceThenFailsReturningStringIdempotent());
}
