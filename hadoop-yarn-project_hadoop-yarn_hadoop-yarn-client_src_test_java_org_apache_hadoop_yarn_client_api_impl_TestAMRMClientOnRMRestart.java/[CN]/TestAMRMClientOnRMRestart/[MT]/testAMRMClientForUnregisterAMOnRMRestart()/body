{
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  MyResourceManager rm1=new MyResourceManager(conf,memStore);
  rm1.start();
  DrainDispatcher dispatcher=(DrainDispatcher)rm1.getRMContext().getDispatcher();
  RMApp app=rm1.submitApp(1024);
  dispatcher.await();
  MockNM nm1=new MockNM("h1:1234",15120,rm1.getResourceTrackerService());
  nm1.registerNode();
  nm1.nodeHeartbeat(true);
  dispatcher.await();
  ApplicationAttemptId appAttemptId=app.getCurrentAppAttempt().getAppAttemptId();
  rm1.sendAMLaunched(appAttemptId);
  dispatcher.await();
  org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> token=rm1.getRMContext().getRMApps().get(appAttemptId.getApplicationId()).getRMAppAttempt(appAttemptId).getAMRMToken();
  UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
  ugi.addTokenIdentifier(token.decodeIdentifier());
  AMRMClient<ContainerRequest> amClient=new MyAMRMClientImpl(rm1);
  amClient.init(conf);
  amClient.start();
  amClient.registerApplicationMaster("h1",10000,"");
  amClient.allocate(0.1f);
  MyResourceManager rm2=new MyResourceManager(conf,memStore);
  rm2.start();
  nm1.setResourceTrackerService(rm2.getResourceTrackerService());
  ((MyAMRMClientImpl)amClient).updateRMProxy(rm2);
  dispatcher=(DrainDispatcher)rm2.getRMContext().getDispatcher();
  NodeHeartbeatResponse hbResponse=nm1.nodeHeartbeat(true);
  Assert.assertEquals(NodeAction.RESYNC,hbResponse.getNodeAction());
  nm1=new MockNM("h1:1234",10240,rm2.getResourceTrackerService());
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,1);
  NMContainerStatus containerReport=NMContainerStatus.newInstance(containerId,0,ContainerState.RUNNING,Resource.newInstance(1024,1),"recover container",0,Priority.newInstance(0),0);
  nm1.registerNode(Arrays.asList(containerReport),null);
  nm1.nodeHeartbeat(true);
  dispatcher.await();
  amClient.unregisterApplicationMaster(FinalApplicationStatus.SUCCEEDED,null,null);
  rm2.waitForState(appAttemptId,RMAppAttemptState.FINISHING);
  nm1.nodeHeartbeat(appAttemptId,1,ContainerState.COMPLETE);
  rm2.waitForState(appAttemptId,RMAppAttemptState.FINISHED);
  rm2.waitForState(app.getApplicationId(),RMAppState.FINISHED);
  amClient.stop();
  rm1.stop();
  rm2.stop();
}
