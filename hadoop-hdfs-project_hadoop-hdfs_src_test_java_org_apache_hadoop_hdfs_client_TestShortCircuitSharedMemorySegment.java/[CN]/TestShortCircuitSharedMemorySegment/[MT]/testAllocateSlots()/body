{
  File path=new File(TEST_BASE,"testAllocateSlots");
  path.mkdirs();
  SharedFileDescriptorFactory factory=new SharedFileDescriptorFactory("shm_",path.getAbsolutePath());
  FileInputStream stream=factory.createDescriptor(4096);
  ShortCircuitSharedMemorySegment shm=new ShortCircuitSharedMemorySegment(stream);
  int numSlots=0;
  ArrayList<Slot> slots=new ArrayList<Slot>();
  while (true) {
    Slot slot=shm.allocateNextSlot();
    if (slot == null) {
      LOG.info("allocated " + numSlots + " slots before running out.");
      break;
    }
    slots.add(slot);
    numSlots++;
  }
  int slotIdx=0;
  for (  Slot slot : slots) {
    Assert.assertFalse(slot.addAnchor());
    Assert.assertEquals(slotIdx++,slot.getIndex());
  }
  for (  Slot slot : slots) {
    slot.makeAnchorable();
  }
  for (  Slot slot : slots) {
    Assert.assertTrue(slot.addAnchor());
  }
  for (  Slot slot : slots) {
    slot.removeAnchor();
  }
  shm.close();
  for (  Slot slot : slots) {
    slot.close();
  }
  stream.close();
  FileUtil.fullyDelete(path);
}
