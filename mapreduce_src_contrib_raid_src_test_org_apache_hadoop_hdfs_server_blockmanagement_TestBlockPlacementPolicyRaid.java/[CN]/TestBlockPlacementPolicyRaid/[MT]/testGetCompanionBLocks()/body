{
  setupCluster();
  try {
    String file1="/dir/file1";
    String file2="/raid/dir/file2";
    String file3="/raidrs/dir/file3";
    setBlockPlacementPolicy(namesystem,new BlockPlacementPolicyDefault(conf,namesystem,namesystem.clusterMap));
    DFSTestUtil.createFile(fs,new Path(file1),3,(short)1,0L);
    DFSTestUtil.createFile(fs,new Path(file2),4,(short)1,0L);
    DFSTestUtil.createFile(fs,new Path(file3),8,(short)1,0L);
    Collection<LocatedBlock> companionBlocks;
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file1).get(0).getBlock());
    Assert.assertTrue(companionBlocks == null || companionBlocks.size() == 0);
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file1).get(2).getBlock());
    Assert.assertTrue(companionBlocks == null || companionBlocks.size() == 0);
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file2).get(0).getBlock());
    Assert.assertEquals(1,companionBlocks.size());
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file2).get(3).getBlock());
    Assert.assertEquals(1,companionBlocks.size());
    int rsParityLength=RaidNode.rsParityLength(conf);
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file3).get(0).getBlock());
    Assert.assertEquals(rsParityLength,companionBlocks.size());
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file3).get(4).getBlock());
    Assert.assertEquals(rsParityLength,companionBlocks.size());
    companionBlocks=getCompanionBlocks(namesystem,policy,getBlocks(namesystem,file3).get(6).getBlock());
    Assert.assertEquals(2,companionBlocks.size());
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
