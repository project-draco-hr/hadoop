{
  Path subdirDstPath=new Path(dstPath,srcPath.getName());
  String argv[]=null;
  lfs.delete(dstPath,true);
  assertFalse(lfs.exists(dstPath));
  argv=new String[]{"-put",srcPath.toString(),dstPath.toString()};
  assertEquals(0,shell.run(argv));
  assertTrue(lfs.exists(dstPath) && lfs.isFile(dstPath));
  lfs.delete(dstPath,true);
  assertFalse(lfs.exists(dstPath));
  lfs.delete(dstPath,true);
  for (  String suffix : new String[]{"/","/."}) {
    argv=new String[]{"-put",srcPath.toString(),dstPath.toString() + suffix};
    assertEquals(1,shell.run(argv));
    assertFalse(lfs.exists(dstPath));
    assertFalse(lfs.exists(subdirDstPath));
  }
  for (  String suffix : new String[]{"/","/."}) {
    lfs.delete(dstPath,true);
    lfs.mkdirs(dstPath);
    argv=new String[]{"-put",srcPath.toString(),dstPath.toString() + suffix};
    assertEquals(0,shell.run(argv));
    assertTrue(lfs.exists(subdirDstPath));
    assertTrue(lfs.isFile(subdirDstPath));
  }
  String dotdotDst=dstPath + "/foo/..";
  lfs.delete(dstPath,true);
  lfs.mkdirs(new Path(dstPath,"foo"));
  argv=new String[]{"-put",srcPath.toString(),dotdotDst};
  assertEquals(0,shell.run(argv));
  assertTrue(lfs.exists(subdirDstPath));
  assertTrue(lfs.isFile(subdirDstPath));
}
