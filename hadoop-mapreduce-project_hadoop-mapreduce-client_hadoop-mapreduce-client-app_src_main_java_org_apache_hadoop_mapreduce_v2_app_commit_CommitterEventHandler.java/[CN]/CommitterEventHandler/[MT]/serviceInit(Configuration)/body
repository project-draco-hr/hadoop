{
  super.serviceInit(conf);
  commitThreadCancelTimeoutMs=conf.getInt(MRJobConfig.MR_AM_COMMITTER_CANCEL_TIMEOUT_MS,MRJobConfig.DEFAULT_MR_AM_COMMITTER_CANCEL_TIMEOUT_MS);
  commitWindowMs=conf.getLong(MRJobConfig.MR_AM_COMMIT_WINDOW_MS,MRJobConfig.DEFAULT_MR_AM_COMMIT_WINDOW_MS);
  try {
    fs=FileSystem.get(conf);
    JobID id=TypeConverter.fromYarn(context.getApplicationID());
    JobId jobId=TypeConverter.toYarn(id);
    String user=UserGroupInformation.getCurrentUser().getShortUserName();
    startCommitFile=MRApps.getStartJobCommitFile(conf,user,jobId);
    endCommitSuccessFile=MRApps.getEndJobCommitSuccessFile(conf,user,jobId);
    endCommitFailureFile=MRApps.getEndJobCommitFailureFile(conf,user,jobId);
  }
 catch (  IOException e) {
    throw new YarnRuntimeException(e);
  }
}
