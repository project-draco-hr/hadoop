{
  RegisterNodeManagerResponse regNMResponse;
  Set<NodeLabel> nodeLabels=nodeLabelsHandler.getNodeLabelsForRegistration();
synchronized (this.context) {
    List<NMContainerStatus> containerReports=getNMContainerStatuses();
    RegisterNodeManagerRequest request=RegisterNodeManagerRequest.newInstance(nodeId,httpPort,totalResource,nodeManagerVersionId,containerReports,getRunningApplications(),nodeLabels);
    if (containerReports != null) {
      LOG.info("Registering with RM using containers :" + containerReports);
    }
    regNMResponse=resourceTracker.registerNodeManager(request);
    this.rmIdentifier=regNMResponse.getRMIdentifier();
  }
  if (NodeAction.SHUTDOWN.equals(regNMResponse.getNodeAction())) {
    String message="Message from ResourceManager: " + regNMResponse.getDiagnosticsMessage();
    throw new YarnRuntimeException("Recieved SHUTDOWN signal from Resourcemanager, Registration of NodeManager failed, " + message);
  }
  if (!minimumResourceManagerVersion.equals("NONE")) {
    if (minimumResourceManagerVersion.equals("EqualToNM")) {
      minimumResourceManagerVersion=nodeManagerVersionId;
    }
    String rmVersion=regNMResponse.getRMVersion();
    if (rmVersion == null) {
      String message="The Resource Manager's did not return a version. " + "Valid version cannot be checked.";
      throw new YarnRuntimeException("Shutting down the Node Manager. " + message);
    }
    if (VersionUtil.compareVersions(rmVersion,minimumResourceManagerVersion) < 0) {
      String message="The Resource Manager's version (" + rmVersion + ") is less than the minimum "+ "allowed version "+ minimumResourceManagerVersion;
      throw new YarnRuntimeException("Shutting down the Node Manager on RM " + "version error, " + message);
    }
  }
  this.registeredWithRM=true;
  MasterKey masterKey=regNMResponse.getContainerTokenMasterKey();
  if (masterKey != null) {
    this.context.getContainerTokenSecretManager().setMasterKey(masterKey);
  }
  masterKey=regNMResponse.getNMTokenMasterKey();
  if (masterKey != null) {
    this.context.getNMTokenSecretManager().setMasterKey(masterKey);
  }
  StringBuilder successfullRegistrationMsg=new StringBuilder();
  successfullRegistrationMsg.append("Registered with ResourceManager as ").append(this.nodeId).append(" with total resource of ").append(this.totalResource);
  successfullRegistrationMsg.append(nodeLabelsHandler.verifyRMRegistrationResponseForNodeLabels(regNMResponse));
  LOG.info(successfullRegistrationMsg);
  LOG.info("Notifying ContainerManager to unblock new container-requests");
  this.context.getContainerManager().setBlockNewContainerRequests(false);
}
