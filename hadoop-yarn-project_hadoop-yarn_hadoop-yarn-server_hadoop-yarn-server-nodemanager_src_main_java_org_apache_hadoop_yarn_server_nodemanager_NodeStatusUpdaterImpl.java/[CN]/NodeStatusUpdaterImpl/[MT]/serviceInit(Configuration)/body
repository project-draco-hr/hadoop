{
  int memoryMb=conf.getInt(YarnConfiguration.NM_PMEM_MB,YarnConfiguration.DEFAULT_NM_PMEM_MB);
  float vMemToPMem=conf.getFloat(YarnConfiguration.NM_VMEM_PMEM_RATIO,YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);
  int virtualMemoryMb=(int)Math.ceil(memoryMb * vMemToPMem);
  int virtualCores=conf.getInt(YarnConfiguration.NM_VCORES,YarnConfiguration.DEFAULT_NM_VCORES);
  this.totalResource=recordFactory.newRecordInstance(Resource.class);
  this.totalResource.setMemory(memoryMb);
  this.totalResource.setVirtualCores(virtualCores);
  metrics.addResource(totalResource);
  this.tokenKeepAliveEnabled=isTokenKeepAliveEnabled(conf);
  this.tokenRemovalDelayMs=conf.getInt(YarnConfiguration.RM_NM_EXPIRY_INTERVAL_MS,YarnConfiguration.DEFAULT_RM_NM_EXPIRY_INTERVAL_MS);
  LOG.info("Initialized nodemanager for " + nodeId + ":"+ " physical-memory="+ memoryMb+ " virtual-memory="+ virtualMemoryMb+ " virtual-cores="+ virtualCores);
  super.serviceInit(conf);
}
