{
switch (event.getType()) {
case STORE_APP_ATTEMPT:
{
      ApplicationAttemptState attemptState=((RMStateStoreAppAttemptEvent)event).getAppAttemptState();
      Exception storedException=null;
      ApplicationAttemptStateDataPBImpl attemptStateData=new ApplicationAttemptStateDataPBImpl();
      attemptStateData.setAttemptId(attemptState.getAttemptId());
      attemptStateData.setMasterContainer(attemptState.getMasterContainer());
      LOG.info("Storing info for attempt: " + attemptState.getAttemptId());
      try {
        storeApplicationAttemptState(attemptState.getAttemptId().toString(),attemptStateData);
      }
 catch (      Exception e) {
        LOG.error("Error storing appAttempt: " + attemptState.getAttemptId(),e);
        storedException=e;
      }
 finally {
        notifyDoneStoringApplicationAttempt(attemptState.getAttemptId(),storedException);
      }
    }
  break;
case REMOVE_APP:
{
  ApplicationState appState=((RMStateStoreRemoveAppEvent)event).getAppState();
  ApplicationId appId=appState.getAppId();
  LOG.info("Removing info for app: " + appId);
  try {
    removeApplicationState(appState);
  }
 catch (  Exception e) {
    LOG.error("Error removing app: " + appId,e);
  }
}
break;
default :
LOG.error("Unknown RMStateStoreEvent type: " + event.getType());
}
}
