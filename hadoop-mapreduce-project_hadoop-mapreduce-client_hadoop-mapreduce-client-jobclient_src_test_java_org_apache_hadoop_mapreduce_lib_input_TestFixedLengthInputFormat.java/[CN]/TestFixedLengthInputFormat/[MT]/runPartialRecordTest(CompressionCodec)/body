{
  localFs.delete(workDir,true);
  StringBuilder fileName=new StringBuilder("testFormat.txt");
  if (codec != null) {
    fileName.append(".gz");
    ReflectionUtils.setConf(codec,defaultConf);
  }
  writeFile(localFs,new Path(workDir,fileName.toString()),codec,"one  two  threefour five six  seveneightnine ten");
  FixedLengthInputFormat format=new FixedLengthInputFormat();
  format.setRecordLength(defaultConf,5);
  Job job=Job.getInstance(defaultConf);
  FileInputFormat.setInputPaths(job,workDir);
  List<InputSplit> splits=format.getSplits(job);
  if (codec != null) {
    assertEquals("compressed splits == 1",1,splits.size());
  }
  boolean exceptionThrown=false;
  for (  InputSplit split : splits) {
    try {
      List<String> results=readSplit(format,split,job);
    }
 catch (    IOException ioe) {
      exceptionThrown=true;
      LOG.info("Exception message:" + ioe.getMessage());
    }
  }
  assertTrue("Exception for partial record:",exceptionThrown);
}
