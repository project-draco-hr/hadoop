{
  final Configuration conf=new Configuration();
  final String keystoreDirAbsolutePath=conf.getResource("hdfs7067.keystore").getPath();
  final String ourUrl=JavaKeyStoreProvider.SCHEME_NAME + "://file@/" + keystoreDirAbsolutePath;
  conf.set(KeyProviderFactory.KEY_PROVIDER_PATH,ourUrl);
  final KeyProvider provider=KeyProviderFactory.getProviders(conf).get(0);
  @SuppressWarnings("unused") final KeyProvider.KeyVersion keyVersion=provider.getKeyVersion("testkey5@0");
  try {
    @SuppressWarnings("unused") final KeyProvider.KeyVersion keyVersionWrongKeyNameFormat=provider.getKeyVersion("testkey2");
    fail("should have thrown an exception");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("No version in key path",e);
  }
  try {
    @SuppressWarnings("unused") final KeyProvider.KeyVersion keyVersionCurrentKeyNotWrongKeyNameFormat=provider.getCurrentKey("testkey5@0");
    fail("should have thrown an exception getting testkey5@0");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("other non-Hadoop method",e);
  }
  try {
    @SuppressWarnings("unused") KeyProvider.KeyVersion keyVersionCurrentKeyNotReally=provider.getCurrentKey("testkey2");
    fail("should have thrown an exception getting testkey2");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("other non-Hadoop method",e);
  }
}
