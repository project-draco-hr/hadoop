{
  Configuration conf=new Configuration();
  conf.setInt(CommonConfigurationKeys.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY,1);
  conf.setInt(CommonConfigurationKeys.HA_HM_CHECK_INTERVAL_KEY,50);
  conf.setInt(CommonConfigurationKeys.HA_HM_CONNECT_RETRY_INTERVAL_KEY,50);
  conf.setInt(CommonConfigurationKeys.HA_HM_SLEEP_AFTER_DISCONNECT_KEY,50);
  svc=new DummyHAService(HAServiceState.ACTIVE,null);
  hm=new HealthMonitor(conf,svc){
    @Override protected HAServiceProtocol createProxy() throws IOException {
      createProxyCount.incrementAndGet();
      if (throwOOMEOnCreate) {
        throw new OutOfMemoryError("oome");
      }
      return super.createProxy();
    }
  }
;
  LOG.info("Starting health monitor");
  hm.start();
  LOG.info("Waiting for HEALTHY signal");
  waitForState(hm,HealthMonitor.State.SERVICE_HEALTHY);
}
