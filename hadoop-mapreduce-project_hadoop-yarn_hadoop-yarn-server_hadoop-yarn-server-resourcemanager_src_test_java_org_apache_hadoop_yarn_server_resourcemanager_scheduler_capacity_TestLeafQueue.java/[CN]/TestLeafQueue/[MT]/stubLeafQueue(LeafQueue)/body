{
  doAnswer(new Answer<Container>(){
    @Override public Container answer(    InvocationOnMock invocation) throws Throwable {
      final SchedulerApp application=(SchedulerApp)(invocation.getArguments()[0]);
      final ContainerId containerId=TestUtils.getMockContainerId(application);
      Container container=TestUtils.getMockContainer(containerId,((SchedulerNode)(invocation.getArguments()[1])).getNodeID(),(Resource)(invocation.getArguments()[2]));
      return container;
    }
  }
).when(queue).createContainer(any(SchedulerApp.class),any(SchedulerNode.class),any(Resource.class));
  CSQueue parent=queue.getParent();
  doNothing().when(parent).completedContainer(any(Resource.class),any(SchedulerApp.class),any(SchedulerNode.class),any(RMContainer.class),any(ContainerStatus.class),any(RMContainerEventType.class));
  return queue;
}
