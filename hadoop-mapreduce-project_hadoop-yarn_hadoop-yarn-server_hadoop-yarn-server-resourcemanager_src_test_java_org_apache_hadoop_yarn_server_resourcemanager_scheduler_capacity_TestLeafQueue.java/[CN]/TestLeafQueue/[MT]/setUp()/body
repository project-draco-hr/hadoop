{
  cs=new CapacityScheduler();
  rmContext=TestUtils.getMockRMContext();
  csConf=new CapacitySchedulerConfiguration();
  setupQueueConfiguration(csConf);
  csContext=mock(CapacitySchedulerContext.class);
  when(csContext.getConfiguration()).thenReturn(csConf);
  when(csContext.getMinimumResourceCapability()).thenReturn(Resources.createResource(GB));
  when(csContext.getMaximumResourceCapability()).thenReturn(Resources.createResource(16 * GB));
  when(csContext.getClusterResources()).thenReturn(Resources.createResource(100 * 16 * GB));
  root=CapacityScheduler.parseQueue(csContext,csConf,null,"root",queues,queues,CapacityScheduler.queueComparator,CapacityScheduler.applicationComparator,TestUtils.spyHook);
  cs.reinitialize(csConf,null,rmContext);
}
