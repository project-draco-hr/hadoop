{
  LeafQueue a=stubLeafQueue((LeafQueue)queues.get(B));
  final String user_0="user_0";
  final ApplicationAttemptId appAttemptId_0=TestUtils.getMockApplicationAttemptId(0,1);
  SchedulerApp app_0=new SchedulerApp(appAttemptId_0,user_0,a,null,rmContext,null);
  a.submitApplication(app_0,user_0,B);
  when(cs.getApplication(appAttemptId_0)).thenReturn(app_0);
  AppRemovedSchedulerEvent event=new AppRemovedSchedulerEvent(appAttemptId_0,RMAppAttemptState.FAILED);
  cs.handle(event);
  assertEquals(0,a.getMetrics().getAppsPending());
  assertEquals(1,a.getMetrics().getAppsFailed());
  final ApplicationAttemptId appAttemptId_1=TestUtils.getMockApplicationAttemptId(0,2);
  SchedulerApp app_1=new SchedulerApp(appAttemptId_1,user_0,a,null,rmContext,null);
  a.submitApplication(app_1,user_0,B);
  assertEquals(1,a.getMetrics().getAppsSubmitted());
  assertEquals(1,a.getMetrics().getAppsPending());
  when(cs.getApplication(appAttemptId_1)).thenReturn(app_0);
  event=new AppRemovedSchedulerEvent(appAttemptId_0,RMAppAttemptState.FINISHED);
  cs.handle(event);
  assertEquals(1,a.getMetrics().getAppsSubmitted());
  assertEquals(0,a.getMetrics().getAppsPending());
  assertEquals(0,a.getMetrics().getAppsFailed());
  assertEquals(1,a.getMetrics().getAppsCompleted());
  QueueMetrics userMetrics=a.getMetrics().getUserMetrics(user_0);
  assertEquals(1,userMetrics.getAppsSubmitted());
}
