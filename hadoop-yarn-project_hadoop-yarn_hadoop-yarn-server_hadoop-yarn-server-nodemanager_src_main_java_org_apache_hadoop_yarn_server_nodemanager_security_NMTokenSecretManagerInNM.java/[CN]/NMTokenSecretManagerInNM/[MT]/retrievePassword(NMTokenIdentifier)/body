{
  int keyId=identifier.getKeyId();
  ApplicationAttemptId appAttemptId=identifier.getApplicationAttemptId();
  MasterKeyData oldMasterKey=oldMasterKeys.get(appAttemptId);
  MasterKeyData masterKeyToUse=oldMasterKey;
  if (previousMasterKey != null && keyId == previousMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=previousMasterKey;
  }
 else   if (keyId == currentMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=currentMasterKey;
  }
  if (nodeId != null && !identifier.getNodeId().equals(nodeId)) {
    throw new InvalidToken("Given NMToken for application : " + appAttemptId.toString() + " is not valid for current node manager."+ "expected : "+ nodeId.toString()+ " found : "+ identifier.getNodeId().toString());
  }
  if (masterKeyToUse != null) {
    byte[] password=retrivePasswordInternal(identifier,masterKeyToUse);
    LOG.debug("NMToken password retrieved successfully!!");
    return password;
  }
  throw new InvalidToken("Given NMToken for application : " + appAttemptId.toString() + " seems to have been generated illegally.");
}
