{
  while (node != root && node.isBlack()) {
    if (node == node.parent.left) {
      Node<E> sibling=node.parent.right;
      if (sibling == null) {
        node=node.parent;
        continue;
      }
      if (sibling.isRed()) {
        sibling.color=BLACK;
        node.parent.color=RED;
        rotateLeft(node.parent);
        sibling=node.parent.right;
        if (sibling == null) {
          node=node.parent;
          continue;
        }
      }
      if ((sibling.left == null || !sibling.left.isRed()) && (sibling.right == null || !sibling.right.isRed())) {
        sibling.color=RED;
        node=node.parent;
      }
 else {
        if (sibling.right == null || !sibling.right.isRed()) {
          sibling.left.color=BLACK;
          sibling.color=RED;
          rotateRight(sibling);
          sibling=node.parent.right;
        }
        sibling.color=node.parent.color;
        node.parent.color=BLACK;
        sibling.right.color=BLACK;
        rotateLeft(node.parent);
        node=root;
      }
    }
 else {
      Node<E> sibling=node.parent.left;
      if (sibling == null) {
        node=node.parent;
        continue;
      }
      if (sibling.isRed()) {
        sibling.color=BLACK;
        node.parent.color=RED;
        rotateRight(node.parent);
        sibling=node.parent.left;
        if (sibling == null) {
          node=node.parent;
          continue;
        }
      }
      if ((sibling.left == null || sibling.left.isBlack()) && (sibling.right == null || sibling.right.isBlack())) {
        sibling.color=RED;
        node=node.parent;
      }
 else {
        if (sibling.left == null || sibling.left.isBlack()) {
          sibling.right.color=BLACK;
          sibling.color=RED;
          rotateLeft(sibling);
          sibling=node.parent.left;
        }
        sibling.color=node.parent.color;
        node.parent.color=BLACK;
        sibling.left.color=BLACK;
        rotateRight(node.parent);
        node=root;
      }
    }
  }
  node.color=BLACK;
}
