{
  final int dnIndex=0;
  cluster.restartDataNode(dnIndex);
  cluster.waitActive();
  ClusterConnector nameNodeConnector=ConnectorFactory.getCluster(cluster.getFileSystem(0).getUri(),conf);
  DiskBalancerCluster diskBalancerCluster=new DiskBalancerCluster(nameNodeConnector);
  diskBalancerCluster.readClusterInfo();
  Assert.assertEquals(cluster.getDataNodes().size(),diskBalancerCluster.getNodes().size());
  diskBalancerCluster.setNodesToProcess(diskBalancerCluster.getNodes());
  dataNode=cluster.getDataNodes().get(dnIndex);
  DiskBalancerDataNode node=diskBalancerCluster.getNodeByUUID(dataNode.getDatanodeUuid());
  GreedyPlanner planner=new GreedyPlanner(10.0f,node);
  plan=new NodePlan(node.getDataNodeName(),node.getDataNodePort());
  planner.balanceVolumeSet(node,node.getVolumeSets().get("DISK"),plan);
  planVersion=1;
  planHash=DigestUtils.shaHex(plan.toJson());
  return this;
}
