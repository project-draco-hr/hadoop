{
  Map<TaskID,JobHistoryParser.TaskInfo> tasks=job.getAllTasks();
  int finishedMaps=(int)job.getFinishedMaps();
  int finishedReduces=(int)job.getFinishedReduces();
  mapTasks=new JobHistoryParser.TaskAttemptInfo[finishedMaps];
  reduceTasks=new JobHistoryParser.TaskAttemptInfo[finishedReduces];
  int mapIndex=0, reduceIndex=0;
  avgMapTime=0;
  avgReduceTime=0;
  avgShuffleTime=0;
  for (  JobHistoryParser.TaskInfo task : tasks.values()) {
    Map<TaskAttemptID,JobHistoryParser.TaskAttemptInfo> attempts=task.getAllTaskAttempts();
    for (    JobHistoryParser.TaskAttemptInfo attempt : attempts.values()) {
      if (attempt.getTaskStatus().equals(TaskStatus.State.SUCCEEDED.toString())) {
        long avgFinishTime=(attempt.getFinishTime() - attempt.getStartTime());
        if (attempt.getTaskType().equals(TaskType.MAP)) {
          mapTasks[mapIndex++]=attempt;
          avgMapTime+=avgFinishTime;
        }
 else         if (attempt.getTaskType().equals(TaskType.REDUCE)) {
          reduceTasks[reduceIndex++]=attempt;
          avgShuffleTime+=(attempt.getShuffleFinishTime() - attempt.getStartTime());
          avgReduceTime+=(attempt.getFinishTime() - attempt.getShuffleFinishTime());
        }
        break;
      }
    }
  }
  if (finishedMaps > 0) {
    avgMapTime/=finishedMaps;
  }
  if (finishedReduces > 0) {
    avgReduceTime/=finishedReduces;
    avgShuffleTime/=finishedReduces;
  }
}
