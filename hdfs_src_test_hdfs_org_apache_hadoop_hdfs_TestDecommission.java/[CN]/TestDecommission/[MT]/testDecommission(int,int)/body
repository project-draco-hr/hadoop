{
  LOG.info("Starting test testDecommission");
  startCluster(numNamenodes,numDatanodes,conf);
  ArrayList<ArrayList<DatanodeInfo>> namenodeDecomList=new ArrayList<ArrayList<DatanodeInfo>>(numNamenodes);
  for (int i=0; i < numNamenodes; i++) {
    namenodeDecomList.add(i,new ArrayList<DatanodeInfo>(numDatanodes));
  }
  Path file1=new Path("testDecommission.dat");
  for (int iteration=0; iteration < numDatanodes - 1; iteration++) {
    int replicas=numDatanodes - iteration - 1;
    for (int i=0; i < numNamenodes; i++) {
      ArrayList<DatanodeInfo> decommissionedNodes=namenodeDecomList.get(i);
      FileSystem fileSys=cluster.getFileSystem(i);
      writeFile(fileSys,file1,replicas);
      DatanodeInfo decomNode=decommissionNode(i,decommissionedNodes,AdminStates.DECOMMISSIONED);
      decommissionedNodes.add(decomNode);
      DFSClient client=getDfsClient(cluster.getNameNode(i),conf);
      assertEquals("All datanodes must be alive",numDatanodes,client.datanodeReport(DatanodeReportType.LIVE).length);
      checkFile(fileSys,file1,replicas,decomNode.getName(),numDatanodes);
      cleanupFile(fileSys,file1);
    }
  }
  cluster.shutdown();
  startCluster(numNamenodes,numDatanodes,conf);
}
