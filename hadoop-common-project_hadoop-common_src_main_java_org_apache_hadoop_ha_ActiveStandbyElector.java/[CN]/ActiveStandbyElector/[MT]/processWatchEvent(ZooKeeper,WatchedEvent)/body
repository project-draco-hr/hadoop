{
  Event.EventType eventType=event.getType();
  if (isStaleClient(zk))   return;
  LOG.debug("Watcher event type: " + eventType + " with state:"+ event.getState()+ " for path:"+ event.getPath()+ " connectionState: "+ zkConnectionState+ " for "+ this);
  if (eventType == Event.EventType.None) {
switch (event.getState()) {
case SyncConnected:
      LOG.info("Session connected.");
    ConnectionState prevConnectionState=zkConnectionState;
  zkConnectionState=ConnectionState.CONNECTED;
if (prevConnectionState == ConnectionState.DISCONNECTED && wantToBeInElection) {
  monitorActiveStatus();
}
break;
case Disconnected:
LOG.info("Session disconnected. Entering neutral mode...");
zkConnectionState=ConnectionState.DISCONNECTED;
enterNeutralMode();
break;
case Expired:
LOG.info("Session expired. Entering neutral mode and rejoining...");
enterNeutralMode();
reJoinElection(0);
break;
case SaslAuthenticated:
LOG.info("Successfully authenticated to ZooKeeper using SASL.");
break;
default :
fatalError("Unexpected Zookeeper watch event state: " + event.getState());
break;
}
return;
}
String path=event.getPath();
if (path != null) {
switch (eventType) {
case NodeDeleted:
if (state == State.ACTIVE) {
enterNeutralMode();
}
joinElectionInternal();
break;
case NodeDataChanged:
monitorActiveStatus();
break;
default :
LOG.debug("Unexpected node event: " + eventType + " for path: "+ path);
monitorActiveStatus();
}
return;
}
fatalError("Unexpected watch error from Zookeeper");
}
