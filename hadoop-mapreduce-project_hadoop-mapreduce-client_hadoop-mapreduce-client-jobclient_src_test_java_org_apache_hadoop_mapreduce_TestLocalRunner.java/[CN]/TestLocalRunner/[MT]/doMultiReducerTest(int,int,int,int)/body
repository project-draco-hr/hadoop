{
  Path in=getNumberDirPath();
  Path out=getOutputPath();
  Configuration conf=new Configuration();
  FileSystem fs=FileSystem.getLocal(conf);
  if (fs.exists(out)) {
    fs.delete(out,true);
  }
  if (fs.exists(in)) {
    fs.delete(in,true);
  }
  for (int i=0; i < numMaps; i++) {
    makeNumberFile(i,100);
  }
  Job job=Job.getInstance();
  job.setNumReduceTasks(numReduces);
  job.setMapperClass(SequenceMapper.class);
  job.setOutputKeyClass(Text.class);
  job.setOutputValueClass(NullWritable.class);
  FileInputFormat.addInputPath(job,in);
  FileOutputFormat.setOutputPath(job,out);
  LocalJobRunner.setLocalMaxRunningMaps(job,parallelMaps);
  LocalJobRunner.setLocalMaxRunningReduces(job,parallelReduces);
  boolean result=job.waitForCompletion(true);
  assertTrue("Job failed!!",result);
  verifyNumberJob(numMaps);
}
