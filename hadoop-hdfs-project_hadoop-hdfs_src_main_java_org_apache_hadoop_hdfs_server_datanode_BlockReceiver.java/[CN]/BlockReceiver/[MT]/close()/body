{
  if (packetReceiver != null) {
    packetReceiver.close();
  }
  IOException ioe=null;
  if (syncOnClose && (out != null || checksumOut != null)) {
    datanode.metrics.incrFsyncCount();
  }
  long flushTotalNanos=0;
  boolean measuredFlushTime=false;
  try {
    if (checksumOut != null) {
      long flushStartNanos=System.nanoTime();
      checksumOut.flush();
      long flushEndNanos=System.nanoTime();
      if (syncOnClose) {
        long fsyncStartNanos=flushEndNanos;
        streams.syncChecksumOut();
        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);
      }
      flushTotalNanos+=flushEndNanos - flushStartNanos;
      measuredFlushTime=true;
      checksumOut.close();
      checksumOut=null;
    }
  }
 catch (  IOException e) {
    ioe=e;
  }
 finally {
    IOUtils.closeStream(checksumOut);
  }
  try {
    if (out != null) {
      long flushStartNanos=System.nanoTime();
      out.flush();
      long flushEndNanos=System.nanoTime();
      if (syncOnClose) {
        long fsyncStartNanos=flushEndNanos;
        streams.syncDataOut();
        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);
      }
      flushTotalNanos+=flushEndNanos - flushStartNanos;
      measuredFlushTime=true;
      out.close();
      out=null;
    }
  }
 catch (  IOException e) {
    ioe=e;
  }
 finally {
    IOUtils.closeStream(out);
  }
  if (measuredFlushTime) {
    datanode.metrics.addFlushNanos(flushTotalNanos);
  }
  if (ioe != null) {
    datanode.checkDiskError(ioe);
    throw ioe;
  }
}
