{
  String failureReason;
  SortedMapWritable mapA=new SortedMapWritable();
  SortedMapWritable mapB=new SortedMapWritable();
  failureReason="SortedMapWritable couldn't be initialized. Got null reference";
  assertNotNull(failureReason,mapA);
  assertNotNull(failureReason,mapB);
  assertFalse("equals method returns true when passed null",mapA.equals(null));
  assertTrue("Two empty SortedMapWritables are no longer equal",mapA.equals(mapB));
  Text[] keys={new Text("key1"),new Text("key2")};
  BytesWritable[] values={new BytesWritable("value1".getBytes()),new BytesWritable("value2".getBytes())};
  mapA.put(keys[0],values[0]);
  mapB.put(keys[1],values[1]);
  failureReason="Two SortedMapWritables with different data are now equal";
  assertTrue(failureReason,mapA.hashCode() != mapB.hashCode());
  assertTrue(failureReason,!mapA.equals(mapB));
  assertTrue(failureReason,!mapB.equals(mapA));
  mapA.put(keys[1],values[1]);
  mapB.put(keys[0],values[0]);
  failureReason="Two SortedMapWritables with same entry sets formed in different order are now different";
  assertEquals(failureReason,mapA.hashCode(),mapB.hashCode());
  assertTrue(failureReason,mapA.equals(mapB));
  assertTrue(failureReason,mapB.equals(mapA));
  mapA.put(keys[0],values[1]);
  mapA.put(keys[1],values[0]);
  failureReason="Two SortedMapWritables with different content are now equal";
  assertTrue(failureReason,mapA.hashCode() != mapB.hashCode());
  assertTrue(failureReason,!mapA.equals(mapB));
  assertTrue(failureReason,!mapB.equals(mapA));
}
