def testWorkersCount(self):
    self.serviceDict = {}
    self.serviceDict[self.hdfs.getName()] = self.hdfs
    self.serviceDict[self.mr.getName()] = self.mr
    self.rpcSet = _LogMasterSources(self.serviceDict, self.config, None, self.log, None)
    cmdList = self.rpcSet.getCommand('host1')
    self.assertEquals(len(cmdList), 2)
    self.assertEquals(cmdList[0].dict['argv'][0], 'namenode')
    self.assertEquals(cmdList[1].dict['argv'][0], 'namenode')
    addParams = ['fs.default.name=host1:51234', 'dfs.http.address=host1:5125']
    self.rpcSet.addMasterParams('host1', addParams)
    cmdList = self.rpcSet.getCommand('host2')
    self.assertEquals(len(cmdList), 1)
    self.assertEquals(cmdList[0].dict['argv'][0], 'jobtracker')
    addParams = ['mapred.job.tracker=host2:51236', 'mapred.job.tracker.http.address=host2:51237']
    self.rpcSet.addMasterParams('host2', addParams)
    cmdList = self.rpcSet.getCommand('host3')
    self.assertEquals(len(cmdList), (self.config['ringmaster']['workers_per_ring'] * 2))
    pass
