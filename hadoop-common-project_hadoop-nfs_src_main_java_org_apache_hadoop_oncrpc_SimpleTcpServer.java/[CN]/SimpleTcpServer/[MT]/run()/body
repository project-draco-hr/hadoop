{
  ChannelFactory factory;
  if (workerCount == 0) {
    factory=new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),Executors.newCachedThreadPool());
  }
 else {
    factory=new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),Executors.newCachedThreadPool(),workerCount);
  }
  ServerBootstrap bootstrap=new ServerBootstrap(factory);
  bootstrap.setPipelineFactory(new ChannelPipelineFactory(){
    @Override public ChannelPipeline getPipeline() throws Exception {
      return Channels.pipeline(RpcUtil.constructRpcFrameDecoder(),RpcUtil.STAGE_RPC_MESSAGE_PARSER,rpcProgram,RpcUtil.STAGE_RPC_TCP_RESPONSE);
    }
  }
);
  bootstrap.setOption("child.tcpNoDelay",true);
  bootstrap.setOption("child.keepAlive",true);
  bootstrap.bind(new InetSocketAddress(port));
  LOG.info("Started listening to TCP requests at port " + port + " for "+ rpcProgram+ " with workerCount "+ workerCount);
}
