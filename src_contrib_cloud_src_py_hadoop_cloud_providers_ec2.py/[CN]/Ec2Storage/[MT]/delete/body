def delete(self, role):
    storage_filename = self._get_storage_filename()
    volume_manager = JsonVolumeManager(storage_filename)
    mountable_volumes_list = volume_manager.get_instance_storage_for_role(role)
    ec2_volumes = self._get_ec2_volumes_dict(mountable_volumes_list)
    all_available = True
    for volume in ec2_volumes.itervalues():
        if (volume.status != 'available'):
            all_available = False
            logger.warning('Volume %s is not available.', volume)
    if (not all_available):
        logger.warning('Some volumes are still in use for role %s.        Aborting delete.', role)
        return
    for volume in ec2_volumes.itervalues():
        volume.delete()
    volume_manager.remove_instance_storage_for_role(role)
