{
  NMClient client=mock(NMClient.class);
switch (mode) {
case 0:
    when(client.startContainer(any(Container.class),any(ContainerLaunchContext.class))).thenReturn(Collections.<String,ByteBuffer>emptyMap());
  when(client.getContainerStatus(any(ContainerId.class),any(NodeId.class))).thenReturn(recordFactory.newRecordInstance(ContainerStatus.class));
doNothing().when(client).increaseContainerResource(any(Container.class));
doNothing().when(client).stopContainer(any(ContainerId.class),any(NodeId.class));
break;
case 1:
doThrow(RPCUtil.getRemoteException("Start Exception")).when(client).startContainer(any(Container.class),any(ContainerLaunchContext.class));
doThrow(RPCUtil.getRemoteException("Query Exception")).when(client).getContainerStatus(any(ContainerId.class),any(NodeId.class));
doThrow(RPCUtil.getRemoteException("Stop Exception")).when(client).stopContainer(any(ContainerId.class),any(NodeId.class));
break;
case 2:
when(client.startContainer(any(Container.class),any(ContainerLaunchContext.class))).thenReturn(Collections.<String,ByteBuffer>emptyMap());
when(client.getContainerStatus(any(ContainerId.class),any(NodeId.class))).thenReturn(recordFactory.newRecordInstance(ContainerStatus.class));
doThrow(RPCUtil.getRemoteException("Increase Resource Exception")).when(client).increaseContainerResource(any(Container.class));
doThrow(RPCUtil.getRemoteException("Stop Exception")).when(client).stopContainer(any(ContainerId.class),any(NodeId.class));
}
return client;
}
