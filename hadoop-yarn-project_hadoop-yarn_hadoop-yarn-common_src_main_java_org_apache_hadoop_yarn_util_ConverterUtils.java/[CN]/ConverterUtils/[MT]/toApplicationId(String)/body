{
  Iterator<String> it=_split(appIdStr).iterator();
  if (!it.next().equals(APPLICATION_PREFIX)) {
    throw new IllegalArgumentException("Invalid ApplicationId prefix: " + appIdStr + ". The valid ApplicationId should start with prefix "+ APPLICATION_PREFIX);
  }
  try {
    return toApplicationId(it);
  }
 catch (  NumberFormatException n) {
    throw new IllegalArgumentException("Invalid ApplicationId: " + appIdStr,n);
  }
}
