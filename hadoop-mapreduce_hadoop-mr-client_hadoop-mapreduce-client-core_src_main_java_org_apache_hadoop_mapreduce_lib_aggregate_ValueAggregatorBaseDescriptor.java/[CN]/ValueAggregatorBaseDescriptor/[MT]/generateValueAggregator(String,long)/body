{
  if (type.compareToIgnoreCase(LONG_VALUE_SUM) == 0) {
    return new LongValueSum();
  }
  if (type.compareToIgnoreCase(LONG_VALUE_MAX) == 0) {
    return new LongValueMax();
  }
 else   if (type.compareToIgnoreCase(LONG_VALUE_MIN) == 0) {
    return new LongValueMin();
  }
 else   if (type.compareToIgnoreCase(STRING_VALUE_MAX) == 0) {
    return new StringValueMax();
  }
 else   if (type.compareToIgnoreCase(STRING_VALUE_MIN) == 0) {
    return new StringValueMin();
  }
 else   if (type.compareToIgnoreCase(DOUBLE_VALUE_SUM) == 0) {
    return new DoubleValueSum();
  }
 else   if (type.compareToIgnoreCase(UNIQ_VALUE_COUNT) == 0) {
    return new UniqValueCount(uniqCount);
  }
 else   if (type.compareToIgnoreCase(VALUE_HISTOGRAM) == 0) {
    return new ValueHistogram();
  }
  return null;
}
