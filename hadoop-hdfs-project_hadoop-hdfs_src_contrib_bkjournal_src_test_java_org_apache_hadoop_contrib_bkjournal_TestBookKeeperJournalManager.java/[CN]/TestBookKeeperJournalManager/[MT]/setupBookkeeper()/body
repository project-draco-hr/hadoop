{
  final int numBookies=5;
  bkthread=new Thread(){
    public void run(){
      try {
        String[] args=new String[1];
        args[0]=String.valueOf(numBookies);
        LOG.info("Starting bk");
        LocalBookKeeper.main(args);
      }
 catch (      InterruptedException e) {
      }
catch (      Exception e) {
        LOG.error("Error starting local bk",e);
      }
    }
  }
;
  bkthread.start();
  if (!LocalBookKeeper.waitForServerUp(zkEnsemble,10000)) {
    throw new Exception("Error starting zookeeper/bookkeeper");
  }
  ZooKeeper zkc=connectZooKeeper(zkEnsemble);
  try {
    boolean up=false;
    for (int i=0; i < 10; i++) {
      try {
        List<String> children=zkc.getChildren("/ledgers/available",false);
        if (children.size() == numBookies) {
          up=true;
          break;
        }
      }
 catch (      KeeperException e) {
      }
      Thread.sleep(1000);
    }
    if (!up) {
      throw new IOException("Not enough bookies started");
    }
  }
  finally {
    zkc.close();
  }
}
