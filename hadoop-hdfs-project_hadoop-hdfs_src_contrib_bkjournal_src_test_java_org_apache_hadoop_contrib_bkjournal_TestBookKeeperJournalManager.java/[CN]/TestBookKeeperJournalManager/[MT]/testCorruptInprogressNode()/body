{
  URI uri=BKJMUtil.createJournalURI("/hdfsjournal-corruptInprogress");
  NamespaceInfo nsi=newNSInfo();
  BookKeeperJournalManager bkjm=new BookKeeperJournalManager(conf,uri,nsi);
  bkjm.format(nsi);
  EditLogOutputStream out=bkjm.startLogSegment(1,NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION);
  ;
  for (long i=1; i <= 100; i++) {
    FSEditLogOp op=FSEditLogTestUtil.getNoOpInstance();
    op.setTransactionId(i);
    out.write(op);
  }
  out.close();
  bkjm.finalizeLogSegment(1,100);
  out=bkjm.startLogSegment(101,NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION);
  out.close();
  bkjm.close();
  String inprogressZNode=bkjm.inprogressZNode(101);
  zkc.setData(inprogressZNode,"WholeLottaJunk".getBytes(),-1);
  bkjm=new BookKeeperJournalManager(conf,uri,nsi);
  try {
    bkjm.recoverUnfinalizedSegments();
    fail("Should have failed. There should be no way of creating" + " an empty inprogess znode");
  }
 catch (  IOException e) {
    assertTrue("Exception different than expected",e.getMessage().contains("has no field named"));
  }
 finally {
    bkjm.close();
  }
}
