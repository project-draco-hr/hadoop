{
  LogHandler logHandler=createLogHandler(conf,this.context,this.deletionService);
  addIfService(logHandler);
  dispatcher.register(LogHandlerEventType.class,logHandler);
  SharedCacheUploadService sharedCacheUploader=createSharedCacheUploaderService();
  addService(sharedCacheUploader);
  dispatcher.register(SharedCacheUploadEventType.class,sharedCacheUploader);
  amrmProxyEnabled=conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);
  if (amrmProxyEnabled) {
    LOG.info("AMRMProxyService is enabled. " + "All the AM->RM requests will be intercepted by the proxy");
    this.amrmProxyService=new AMRMProxyService(this.context,this.dispatcher);
    addService(this.amrmProxyService);
  }
 else {
    LOG.info("AMRMProxyService is disabled");
  }
  waitForContainersOnShutdownMillis=conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) + conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) + SHUTDOWN_CLEANUP_SLOP_MS;
  super.serviceInit(conf);
  recover();
}
