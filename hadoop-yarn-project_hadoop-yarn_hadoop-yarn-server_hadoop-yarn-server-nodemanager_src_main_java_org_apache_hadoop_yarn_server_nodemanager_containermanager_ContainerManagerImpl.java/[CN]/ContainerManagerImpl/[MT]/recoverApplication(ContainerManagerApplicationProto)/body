{
  ApplicationId appId=new ApplicationIdPBImpl(p.getId());
  Credentials creds=new Credentials();
  creds.readTokenStorageStream(new DataInputStream(p.getCredentials().newInput()));
  List<ApplicationACLMapProto> aclProtoList=p.getAclsList();
  Map<ApplicationAccessType,String> acls=new HashMap<ApplicationAccessType,String>(aclProtoList.size());
  for (  ApplicationACLMapProto aclProto : aclProtoList) {
    acls.put(ProtoUtils.convertFromProtoFormat(aclProto.getAccessType()),aclProto.getAcl());
  }
  LogAggregationContext logAggregationContext=null;
  if (p.getLogAggregationContext() != null) {
    logAggregationContext=new LogAggregationContextPBImpl(p.getLogAggregationContext());
  }
  LOG.info("Recovering application " + appId);
  ApplicationImpl app=new ApplicationImpl(dispatcher,p.getUser(),null,appId,creds,context,p.getAppLogAggregationInitedTime());
  context.getApplications().put(appId,app);
  app.handle(new ApplicationInitEvent(appId,acls,logAggregationContext));
}
