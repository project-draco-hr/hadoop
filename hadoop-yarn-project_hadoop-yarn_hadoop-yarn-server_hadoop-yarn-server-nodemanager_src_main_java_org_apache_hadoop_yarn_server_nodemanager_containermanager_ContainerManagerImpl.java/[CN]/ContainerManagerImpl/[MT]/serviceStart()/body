{
  Configuration conf=getConfig();
  YarnRPC rpc=YarnRPC.create(conf);
  InetSocketAddress initialAddress=conf.getSocketAddr(YarnConfiguration.NM_ADDRESS,YarnConfiguration.DEFAULT_NM_ADDRESS,YarnConfiguration.DEFAULT_NM_PORT);
  server=rpc.getServer(ContainerManager.class,this,initialAddress,conf,this.context.getContainerTokenSecretManager(),conf.getInt(YarnConfiguration.NM_CONTAINER_MGR_THREAD_COUNT,YarnConfiguration.DEFAULT_NM_CONTAINER_MGR_THREAD_COUNT));
  if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,false)) {
    refreshServiceAcls(conf,new NMPolicyProvider());
  }
  LOG.info("Blocking new container-requests as container manager rpc" + " server is still starting.");
  this.setBlockNewContainerRequests(true);
  server.start();
  InetSocketAddress connectAddress=NetUtils.getConnectAddress(server);
  NodeId nodeId=NodeId.newInstance(connectAddress.getHostName(),connectAddress.getPort());
  ((NodeManager.NMContext)context).setNodeId(nodeId);
  LOG.info("ContainerManager started at " + connectAddress);
  super.serviceStart();
}
