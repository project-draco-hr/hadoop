{
  authorizeStartRequest(nmTokenIdentifier,containerTokenIdentifier);
  if (containerTokenIdentifier.getRMIdentifer() != nodeStatusUpdater.getRMIdentifier()) {
    StringBuilder sb=new StringBuilder("\nContainer ");
    sb.append(containerTokenIdentifier.getContainerID().toString()).append(" rejected as it is allocated by a previous RM");
    throw new InvalidContainerException(sb.toString());
  }
  updateNMTokenIdentifier(nmTokenIdentifier);
  ContainerId containerId=containerTokenIdentifier.getContainerID();
  String containerIdStr=containerId.toString();
  String user=containerTokenIdentifier.getApplicationSubmitter();
  LOG.info("Start request for " + containerIdStr + " by user "+ user);
  ContainerLaunchContext launchContext=request.getContainerLaunchContext();
  Credentials credentials=parseCredentials(launchContext);
  Container container=new ContainerImpl(getConfig(),this.dispatcher,launchContext,credentials,metrics,containerTokenIdentifier);
  ApplicationId applicationID=containerId.getApplicationAttemptId().getApplicationId();
  if (context.getContainers().putIfAbsent(containerId,container) != null) {
    NMAuditLogger.logFailure(user,AuditConstants.START_CONTAINER,"ContainerManagerImpl","Container already running on this node!",applicationID,containerId);
    throw RPCUtil.getRemoteException("Container " + containerIdStr + " already is running on this node!!");
  }
  Application application=new ApplicationImpl(dispatcher,this.aclsManager,user,applicationID,credentials,context);
  if (null == context.getApplications().putIfAbsent(applicationID,application)) {
    LOG.info("Creating a new application reference for app " + applicationID);
    dispatcher.getEventHandler().handle(new ApplicationInitEvent(applicationID,container.getLaunchContext().getApplicationACLs()));
  }
  dispatcher.getEventHandler().handle(new ApplicationContainerInitEvent(container));
  this.context.getContainerTokenSecretManager().startContainerSuccessful(containerTokenIdentifier);
  NMAuditLogger.logSuccess(user,AuditConstants.START_CONTAINER,"ContainerManageImpl",applicationID,containerId);
  metrics.launchedContainer();
  metrics.allocateContainer(containerTokenIdentifier.getResource());
}
