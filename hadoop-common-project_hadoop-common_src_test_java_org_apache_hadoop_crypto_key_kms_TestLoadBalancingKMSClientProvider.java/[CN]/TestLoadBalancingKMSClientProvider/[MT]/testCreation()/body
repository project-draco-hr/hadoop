{
  Configuration conf=new Configuration();
  KeyProvider kp=new KMSClientProvider.Factory().createProvider(new URI("kms://http@host1/kms/foo"),conf);
  assertTrue(kp instanceof KMSClientProvider);
  assertEquals("http://host1/kms/foo/v1/",((KMSClientProvider)kp).getKMSUrl());
  kp=new KMSClientProvider.Factory().createProvider(new URI("kms://http@host1;host2;host3/kms/foo"),conf);
  assertTrue(kp instanceof LoadBalancingKMSClientProvider);
  KMSClientProvider[] providers=((LoadBalancingKMSClientProvider)kp).getProviders();
  assertEquals(3,providers.length);
  assertEquals(Sets.newHashSet("http://host1/kms/foo/v1/","http://host2/kms/foo/v1/","http://host3/kms/foo/v1/"),Sets.newHashSet(providers[0].getKMSUrl(),providers[1].getKMSUrl(),providers[2].getKMSUrl()));
  kp=new KMSClientProvider.Factory().createProvider(new URI("kms://http@host1;host2;host3:16000/kms/foo"),conf);
  assertTrue(kp instanceof LoadBalancingKMSClientProvider);
  providers=((LoadBalancingKMSClientProvider)kp).getProviders();
  assertEquals(3,providers.length);
  assertEquals(Sets.newHashSet("http://host1:16000/kms/foo/v1/","http://host2:16000/kms/foo/v1/","http://host3:16000/kms/foo/v1/"),Sets.newHashSet(providers[0].getKMSUrl(),providers[1].getKMSUrl(),providers[2].getKMSUrl()));
}
