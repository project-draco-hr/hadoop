{
  try {
    if (heartBeatID == 0) {
      Assert.assertEquals(request.getNodeStatus().getContainersStatuses().size(),0);
      Assert.assertEquals(context.getContainers().size(),0);
    }
 else     if (heartBeatID == 1) {
      Assert.assertEquals(request.getNodeStatus().getContainersStatuses().size(),5);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(0).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(0).getContainerId().getId() == 1);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(1).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(1).getContainerId().getId() == 2);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(2).getState() == ContainerState.COMPLETE && request.getNodeStatus().getContainersStatuses().get(2).getContainerId().getId() == 3);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(3).getState() == ContainerState.COMPLETE && request.getNodeStatus().getContainersStatuses().get(3).getContainerId().getId() == 4);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(4).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(4).getContainerId().getId() == 5);
      throw new YarnRuntimeException("Lost the heartbeat response");
    }
 else     if (heartBeatID == 2) {
      Assert.assertEquals(request.getNodeStatus().getContainersStatuses().size(),7);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(0).getState() == ContainerState.COMPLETE && request.getNodeStatus().getContainersStatuses().get(0).getContainerId().getId() == 3);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(1).getState() == ContainerState.COMPLETE && request.getNodeStatus().getContainersStatuses().get(1).getContainerId().getId() == 4);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(2).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(2).getContainerId().getId() == 1);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(3).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(3).getContainerId().getId() == 2);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(4).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(4).getContainerId().getId() == 5);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(5).getState() == ContainerState.RUNNING && request.getNodeStatus().getContainersStatuses().get(5).getContainerId().getId() == 6);
      Assert.assertTrue(request.getNodeStatus().getContainersStatuses().get(6).getState() == ContainerState.COMPLETE && request.getNodeStatus().getContainersStatuses().get(6).getContainerId().getId() == 7);
    }
  }
 catch (  AssertionError error) {
    LOG.info(error);
    containerStatusBackupSuccessfully=false;
  }
 finally {
    heartBeatID++;
  }
  NodeStatus nodeStatus=request.getNodeStatus();
  nodeStatus.setResponseId(heartBeatID);
  NodeHeartbeatResponse nhResponse=YarnServerBuilderUtils.newNodeHeartbeatResponse(heartBeatID,heartBeatNodeAction,null,null,null,1000L);
  return nhResponse;
}
