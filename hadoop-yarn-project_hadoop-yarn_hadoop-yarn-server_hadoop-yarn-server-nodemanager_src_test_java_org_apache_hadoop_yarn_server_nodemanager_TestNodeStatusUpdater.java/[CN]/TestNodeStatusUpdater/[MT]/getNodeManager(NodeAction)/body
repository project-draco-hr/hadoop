{
  return new NodeManager(){
    @Override protected NodeStatusUpdater createNodeStatusUpdater(    Context context,    Dispatcher dispatcher,    NodeHealthCheckerService healthChecker,    ContainerTokenSecretManager containerTokenSecretManager){
      MyNodeStatusUpdater myNodeStatusUpdater=new MyNodeStatusUpdater(context,dispatcher,healthChecker,metrics,containerTokenSecretManager);
      MyResourceTracker2 myResourceTracker2=new MyResourceTracker2();
      myResourceTracker2.heartBeatNodeAction=nodeHeartBeatAction;
      myNodeStatusUpdater.resourceTracker=myResourceTracker2;
      return myNodeStatusUpdater;
    }
    @Override NodeManager createNewNodeManager(){
      rebootedNodeManager=getNodeManager(NodeAction.NORMAL);
      return rebootedNodeManager;
    }
  }
;
}
