{
  NodeManager nm=new NodeManager();
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(NodeStatusUpdaterImpl.YARN_NODEMANAGER_DURATION_TO_TRACK_STOPPED_CONTAINERS,"10000");
  nm.init(conf);
  NodeStatusUpdaterImpl nodeStatusUpdater=(NodeStatusUpdaterImpl)nm.getNodeStatusUpdater();
  ApplicationId appId=ApplicationId.newInstance(0,0);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,0);
  ContainerId cId=ContainerId.newInstance(appAttemptId,1);
  Token containerToken=BuilderUtils.newContainerToken(cId,"anyHost",1234,"anyUser",BuilderUtils.newResource(1024,1),0,123,"password".getBytes(),0);
  Container anyCompletedContainer=new ContainerImpl(conf,null,null,null,null,null,BuilderUtils.newContainerTokenIdentifier(containerToken)){
    @Override public ContainerState getCurrentState(){
      return ContainerState.COMPLETE;
    }
    @Override public org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState getContainerState(){
      return org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.DONE;
    }
  }
;
  ContainerId runningContainerId=ContainerId.newInstance(appAttemptId,3);
  Token runningContainerToken=BuilderUtils.newContainerToken(runningContainerId,"anyHost",1234,"anyUser",BuilderUtils.newResource(1024,1),0,123,"password".getBytes(),0);
  Container runningContainer=new ContainerImpl(conf,null,null,null,null,null,BuilderUtils.newContainerTokenIdentifier(runningContainerToken)){
    @Override public ContainerState getCurrentState(){
      return ContainerState.RUNNING;
    }
    @Override public org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState getContainerState(){
      return org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerState.RUNNING;
    }
  }
;
  nm.getNMContext().getApplications().putIfAbsent(appId,mock(Application.class));
  nm.getNMContext().getContainers().put(cId,anyCompletedContainer);
  nm.getNMContext().getContainers().put(runningContainerId,runningContainer);
  Assert.assertEquals(2,nodeStatusUpdater.getContainerStatuses().size());
  List<ContainerId> ackedContainers=new ArrayList<ContainerId>();
  ackedContainers.add(cId);
  ackedContainers.add(runningContainerId);
  nodeStatusUpdater.removeOrTrackCompletedContainersFromContext(ackedContainers);
  Set<ContainerId> containerIdSet=new HashSet<ContainerId>();
  for (  ContainerStatus status : nodeStatusUpdater.getContainerStatuses()) {
    containerIdSet.add(status.getContainerId());
  }
  Assert.assertTrue(nodeStatusUpdater.getContainerStatuses().size() == 1);
  Assert.assertFalse(containerIdSet.contains(anyCompletedContainer));
  Assert.assertTrue(containerIdSet.contains(runningContainerId));
}
