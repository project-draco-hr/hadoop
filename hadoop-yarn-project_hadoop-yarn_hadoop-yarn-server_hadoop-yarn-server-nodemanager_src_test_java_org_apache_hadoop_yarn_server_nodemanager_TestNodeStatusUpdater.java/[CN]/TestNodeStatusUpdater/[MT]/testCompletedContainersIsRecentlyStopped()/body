{
  NodeManager nm=new NodeManager();
  nm.init(conf);
  NodeStatusUpdaterImpl nodeStatusUpdater=(NodeStatusUpdaterImpl)nm.getNodeStatusUpdater();
  ApplicationId appId=ApplicationId.newInstance(0,0);
  Application completedApp=mock(Application.class);
  when(completedApp.getApplicationState()).thenReturn(ApplicationState.FINISHED);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,0);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,1);
  Token containerToken=BuilderUtils.newContainerToken(containerId,0,"host",1234,"user",BuilderUtils.newResource(1024,1),0,123,"password".getBytes(),0);
  Container completedContainer=new ContainerImpl(conf,null,null,null,null,BuilderUtils.newContainerTokenIdentifier(containerToken),nm.getNMContext()){
    @Override public ContainerState getCurrentState(){
      return ContainerState.COMPLETE;
    }
  }
;
  nm.getNMContext().getApplications().putIfAbsent(appId,completedApp);
  nm.getNMContext().getContainers().put(containerId,completedContainer);
  Assert.assertEquals(1,nodeStatusUpdater.getContainerStatuses().size());
  Assert.assertTrue(nodeStatusUpdater.isContainerRecentlyStopped(containerId));
}
