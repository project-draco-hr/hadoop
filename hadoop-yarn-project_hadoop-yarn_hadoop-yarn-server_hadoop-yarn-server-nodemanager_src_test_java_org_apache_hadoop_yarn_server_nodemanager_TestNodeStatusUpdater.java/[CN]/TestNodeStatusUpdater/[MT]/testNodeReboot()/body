{
  nm=getNodeManager(NodeAction.REBOOT);
  YarnConfiguration conf=createNMConfig();
  nm.init(conf);
  Assert.assertEquals(STATE.INITED,nm.getServiceState());
  nm.start();
  int waitCount=0;
  while (heartBeatID < 1 && waitCount++ != 20) {
    Thread.sleep(500);
  }
  Assert.assertFalse(heartBeatID < 1);
  waitCount=0;
  while (nm.getServiceState() != STATE.STOPPED && waitCount++ != 20) {
    LOG.info("Waiting for NM to stop..");
    Thread.sleep(1000);
  }
  Assert.assertEquals(STATE.STOPPED,nm.getServiceState());
  waitCount=0;
  while (null == rebootedNodeManager && waitCount++ != 20) {
    LOG.info("Waiting for NM to reinitialize..");
    Thread.sleep(1000);
  }
  waitCount=0;
  while (rebootedNodeManager.getServiceState() != STATE.STARTED && waitCount++ != 20) {
    LOG.info("Waiting for NM to start..");
    Thread.sleep(1000);
  }
  Assert.assertEquals(STATE.STARTED,rebootedNodeManager.getServiceState());
  rebootedNodeManager.stop();
  waitCount=0;
  while (rebootedNodeManager.getServiceState() != STATE.STOPPED && waitCount++ != 20) {
    LOG.info("Waiting for NM to stop..");
    Thread.sleep(1000);
  }
  Assert.assertEquals(STATE.STOPPED,rebootedNodeManager.getServiceState());
}
