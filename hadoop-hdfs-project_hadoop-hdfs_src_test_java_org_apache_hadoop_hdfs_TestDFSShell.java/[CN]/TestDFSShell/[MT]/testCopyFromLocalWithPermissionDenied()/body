{
  Configuration conf=new Configuration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build();
  FsShell shell=null;
  FileSystem fs=null;
  PrintStream bak=null;
  final File localFile=new File(TEST_ROOT_DIR,"testFileWithNoReadPermissions");
  final String localfilepath=new Path(localFile.getAbsolutePath()).toUri().toString();
  final String testdir="/tmp/TestDFSShell-CopyFromLocalWithPermissionDenied-" + counter.getAndIncrement();
  final Path hdfsTestDir=new Path(testdir);
  try {
    fs=cluster.getFileSystem();
    fs.mkdirs(hdfsTestDir);
    localFile.createNewFile();
    localFile.setReadable(false);
    writeFile(fs,new Path(testdir,"testFileForPut"));
    shell=new FsShell();
    bak=System.err;
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    PrintStream tmp=new PrintStream(out);
    System.setErr(tmp);
    String[] argv=new String[]{"-put",localfilepath,testdir};
    int res=ToolRunner.run(shell,argv);
    assertEquals("put is working",ERROR,res);
    String returned=out.toString();
    assertTrue(" outputs Permission denied error message",(returned.lastIndexOf("Permission denied") != -1));
    argv=new String[]{"-copyFromLocal",localfilepath,testdir};
    res=ToolRunner.run(shell,argv);
    assertEquals("copyFromLocal -f is working",ERROR,res);
    returned=out.toString();
    assertTrue(" outputs Permission denied error message",(returned.lastIndexOf("Permission denied") != -1));
  }
  finally {
    if (bak != null) {
      System.setErr(bak);
    }
    if (null != shell)     shell.close();
    if (localFile.exists())     localFile.delete();
    if (null != fs) {
      fs.delete(hdfsTestDir,true);
      fs.close();
    }
    cluster.shutdown();
  }
}
