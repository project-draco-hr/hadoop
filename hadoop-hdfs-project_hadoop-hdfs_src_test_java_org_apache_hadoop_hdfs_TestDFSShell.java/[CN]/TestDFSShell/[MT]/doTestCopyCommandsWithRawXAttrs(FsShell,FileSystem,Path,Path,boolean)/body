{
  Path target;
  boolean srcIsRaw;
  if (src.isAbsolute()) {
    srcIsRaw=src.toString().contains("/.reserved/raw");
  }
 else {
    srcIsRaw=new Path(fs.getWorkingDirectory(),src).toString().contains("/.reserved/raw");
  }
  final boolean destIsRaw=hdfsTestDir.toString().contains("/.reserved/raw");
  final boolean srcDestMismatch=srcIsRaw ^ destIsRaw;
  if (srcDestMismatch) {
    doCopyAndTest(shell,hdfsTestDir,src,"-p",ERROR);
  }
 else {
    target=doCopyAndTest(shell,hdfsTestDir,src,"-p",SUCCESS);
    checkXAttrs(fs,target,expectRaw,false);
  }
  if (srcDestMismatch) {
    doCopyAndTest(shell,hdfsTestDir,src,"-px",ERROR);
  }
 else {
    target=doCopyAndTest(shell,hdfsTestDir,src,"-px",SUCCESS);
    checkXAttrs(fs,target,expectRaw,true);
  }
  if (srcDestMismatch) {
    doCopyAndTest(shell,hdfsTestDir,src,null,ERROR);
  }
 else {
    target=doCopyAndTest(shell,hdfsTestDir,src,null,SUCCESS);
    checkXAttrs(fs,target,expectRaw,false);
  }
}
