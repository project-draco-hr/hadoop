{
  final int replication=2;
  final Configuration conf=new HdfsConfiguration();
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(replication).build();
  final DistributedFileSystem dfs=cluster.getFileSystem();
  final PrintStream psBackup=System.out;
  final ByteArrayOutputStream out=new ByteArrayOutputStream();
  final PrintStream psOut=new PrintStream(out);
  System.setOut(psOut);
  final FsShell shell=new FsShell();
  shell.setConf(conf);
  try {
    cluster.waitActive();
    final Path parent=new Path("/test");
    final Path dir=new Path(parent,"dir");
    mkdir(dfs,dir);
    final Path file=new Path(dir,"file");
    writeFile(dfs,file);
    final Path file2=new Path(dir,"file2");
    writeFile(dfs,file2);
    final long fileLength=dfs.getFileStatus(file).getLen();
    final long file2Length=dfs.getFileStatus(file2).getLen();
    final Path dir2=new Path(parent,"dir2");
    mkdir(dfs,dir2);
    final String snapshotName="s1";
    final Path snapshotPath=new Path(parent,".snapshot/" + snapshotName);
    dfs.allowSnapshot(parent);
    assertThat(dfs.createSnapshot(parent,snapshotName),is(snapshotPath));
    rmr(dfs,file);
    rmr(dfs,dir2);
    final Path newFile=new Path(dir,"new file");
    writeFile(dfs,newFile);
    final Long newFileLength=dfs.getFileStatus(newFile).getLen();
    int val=-1;
    try {
      val=shell.run(new String[]{"-count","-v",parent.toString()});
    }
 catch (    Exception e) {
      System.err.println("Exception raised from DFSShell.run " + e.getLocalizedMessage());
    }
    assertEquals(0,val);
    String returnString=out.toString();
    LOG.info("-count return is:\n" + returnString);
    Scanner in=new Scanner(returnString);
    in.nextLine();
    assertEquals(3,in.nextLong());
    assertEquals(3,in.nextLong());
    assertEquals(fileLength + file2Length + newFileLength,in.nextLong());
    out.reset();
    val=-1;
    try {
      val=shell.run(new String[]{"-count","-x","-v",parent.toString()});
    }
 catch (    Exception e) {
      System.err.println("Exception raised from DFSShell.run " + e.getLocalizedMessage());
    }
    assertEquals(0,val);
    returnString=out.toString();
    LOG.info("-count -x return is:\n" + returnString);
    in=new Scanner(returnString);
    in.nextLine();
    assertEquals(2,in.nextLong());
    assertEquals(2,in.nextLong());
    assertEquals(file2Length + newFileLength,in.nextLong());
    out.reset();
  }
  finally {
    System.setOut(psBackup);
    cluster.shutdown();
  }
}
