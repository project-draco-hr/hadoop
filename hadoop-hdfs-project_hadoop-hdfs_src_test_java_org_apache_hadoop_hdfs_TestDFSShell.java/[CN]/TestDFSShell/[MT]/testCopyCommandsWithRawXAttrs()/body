{
  final Configuration conf=new Configuration();
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_XATTRS_ENABLED_KEY,true);
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build();
  FsShell shell=null;
  FileSystem fs=null;
  final String testdir="/tmp/TestDFSShell-testCopyCommandsWithRawXAttrs-" + counter.getAndIncrement();
  final Path hdfsTestDir=new Path(testdir);
  final Path rawHdfsTestDir=new Path("/.reserved/raw" + testdir);
  try {
    fs=cluster.getFileSystem();
    fs.mkdirs(hdfsTestDir);
    final Path src=new Path(hdfsTestDir,"srcfile");
    final String rawSrcBase="/.reserved/raw" + testdir;
    final Path rawSrc=new Path(rawSrcBase,"srcfile");
    fs.create(src).close();
    final Path srcDir=new Path(hdfsTestDir,"srcdir");
    final Path rawSrcDir=new Path("/.reserved/raw" + testdir,"srcdir");
    fs.mkdirs(srcDir);
    final Path srcDirFile=new Path(srcDir,"srcfile");
    final Path rawSrcDirFile=new Path("/.reserved/raw" + srcDirFile);
    fs.create(srcDirFile).close();
    final Path[] paths={rawSrc,rawSrcDir,rawSrcDirFile};
    final String[] xattrNames={USER_A1,RAW_A1};
    final byte[][] xattrVals={USER_A1_VALUE,RAW_A1_VALUE};
    for (int i=0; i < paths.length; i++) {
      for (int j=0; j < xattrNames.length; j++) {
        fs.setXAttr(paths[i],xattrNames[j],xattrVals[j]);
      }
    }
    shell=new FsShell(conf);
    doTestCopyCommandsWithRawXAttrs(shell,fs,src,hdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,rawSrc,hdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,src,rawHdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,rawSrc,rawHdfsTestDir,true);
    final Path savedWd=fs.getWorkingDirectory();
    try {
      fs.setWorkingDirectory(new Path(rawSrcBase));
      final Path relRawSrc=new Path("../srcfile");
      final Path relRawHdfsTestDir=new Path("..");
      doTestCopyCommandsWithRawXAttrs(shell,fs,relRawSrc,relRawHdfsTestDir,true);
    }
  finally {
      fs.setWorkingDirectory(savedWd);
    }
    doTestCopyCommandsWithRawXAttrs(shell,fs,srcDir,hdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,rawSrcDir,hdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,srcDir,rawHdfsTestDir,false);
    doTestCopyCommandsWithRawXAttrs(shell,fs,rawSrcDir,rawHdfsTestDir,true);
    final String relRawSrcDir="./.reserved/../.reserved/raw/../raw" + testdir + "/srcdir";
    final String relRawDstDir="./.reserved/../.reserved/raw/../raw" + testdir;
    doTestCopyCommandsWithRawXAttrs(shell,fs,new Path(relRawSrcDir),new Path(relRawDstDir),true);
  }
  finally {
    if (null != shell) {
      shell.close();
    }
    if (null != fs) {
      fs.delete(hdfsTestDir,true);
      fs.close();
    }
    cluster.shutdown();
  }
}
