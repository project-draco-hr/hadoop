{
  final TaskAttemptId taid=Records.newRecord(TaskAttemptId.class);
  taid.setTaskId(tid);
  taid.setId(i);
  final TaskAttemptReport report=newTaskAttemptReport(taid);
  final List<String> diags=Lists.newArrayList();
  diags.add(DIAGS.next());
  return new TaskAttempt(){
    @Override public TaskAttemptId getID(){
      return taid;
    }
    @Override public TaskAttemptReport getReport(){
      return report;
    }
    @Override public long getLaunchTime(){
      return 0;
    }
    @Override public long getFinishTime(){
      return 0;
    }
    @Override public Counters getCounters(){
      return report.getCounters();
    }
    @Override public float getProgress(){
      return report.getProgress();
    }
    @Override public TaskAttemptState getState(){
      return report.getTaskAttemptState();
    }
    @Override public boolean isFinished(){
switch (report.getTaskAttemptState()) {
case SUCCEEDED:
case FAILED:
case KILLED:
        return true;
    }
    return false;
  }
  @Override public ContainerId getAssignedContainerID(){
    ContainerId id=Records.newRecord(ContainerId.class);
    id.setAppId(taid.getTaskId().getJobId().getAppId());
    return id;
  }
  @Override public String getNodeHttpAddress(){
    return "localhost:9999";
  }
  @Override public List<String> getDiagnostics(){
    return diags;
  }
  @Override public String getAssignedContainerMgrAddress(){
    return "localhost:9998";
  }
}
;
}
