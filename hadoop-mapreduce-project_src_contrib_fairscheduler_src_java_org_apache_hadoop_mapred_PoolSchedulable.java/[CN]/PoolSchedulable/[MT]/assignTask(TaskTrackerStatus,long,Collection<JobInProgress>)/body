{
  int runningTasks=getRunningTasks();
  if (runningTasks >= poolMgr.getMaxSlots(pool.getName(),taskType)) {
    return null;
  }
  SchedulingMode mode=pool.getSchedulingMode();
  Comparator<Schedulable> comparator;
  if (mode == SchedulingMode.FIFO) {
    comparator=new SchedulingAlgorithms.FifoComparator();
  }
 else   if (mode == SchedulingMode.FAIR) {
    comparator=new SchedulingAlgorithms.FairShareComparator();
  }
 else {
    throw new RuntimeException("Unsupported pool scheduling mode " + mode);
  }
  Collections.sort(jobScheds,comparator);
  for (  JobSchedulable sched : jobScheds) {
    Task task=sched.assignTask(tts,currentTime,visited);
    if (task != null)     return task;
  }
  return null;
}
