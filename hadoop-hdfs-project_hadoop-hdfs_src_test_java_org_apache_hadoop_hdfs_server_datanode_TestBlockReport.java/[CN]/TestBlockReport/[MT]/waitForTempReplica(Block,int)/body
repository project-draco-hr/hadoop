{
  final boolean tooLongWait=false;
  final int TIMEOUT=40000;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Wait for datanode " + DN_N1 + " to appear");
  }
  while (cluster.getDataNodes().size() <= DN_N1) {
    waitTil(20);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Total number of DNs " + cluster.getDataNodes().size());
  }
  cluster.waitActive();
  String bpid=cluster.getNamesystem().getBlockPoolId();
  Replica r=((FSDataset)cluster.getDataNodes().get(DN_N1).getFSDataset()).fetchReplicaInfo(bpid,bl.getBlockId());
  long start=System.currentTimeMillis();
  int count=0;
  while (r == null) {
    waitTil(5);
    r=((FSDataset)cluster.getDataNodes().get(DN_N1).getFSDataset()).fetchReplicaInfo(bpid,bl.getBlockId());
    long waiting_period=System.currentTimeMillis() - start;
    if (count++ % 100 == 0)     if (LOG.isDebugEnabled()) {
      LOG.debug("Has been waiting for " + waiting_period + " ms.");
    }
    if (waiting_period > TIMEOUT)     assertTrue("Was waiting too long to get ReplicaInfo from a datanode",tooLongWait);
  }
  HdfsServerConstants.ReplicaState state=r.getState();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Replica state before the loop " + state.getValue());
  }
  start=System.currentTimeMillis();
  while (state != HdfsServerConstants.ReplicaState.TEMPORARY) {
    waitTil(5);
    state=r.getState();
    if (LOG.isDebugEnabled()) {
      LOG.debug("Keep waiting for " + bl.getBlockName() + " is in state "+ state.getValue());
    }
    if (System.currentTimeMillis() - start > TIMEOUT)     assertTrue("Was waiting too long for a replica to become TEMPORARY",tooLongWait);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Replica state after the loop " + state.getValue());
  }
}
