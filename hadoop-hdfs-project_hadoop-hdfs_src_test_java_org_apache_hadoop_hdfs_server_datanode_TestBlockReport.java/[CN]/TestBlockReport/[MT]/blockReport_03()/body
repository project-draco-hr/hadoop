{
  final String METHOD_NAME=GenericTestUtils.getMethodName();
  Path filePath=new Path("/" + METHOD_NAME + ".dat");
  ArrayList<Block> blocks=prepareForRide(filePath,METHOD_NAME,FILE_SIZE);
  blocks.get(0).setGenerationStamp(rand.nextLong());
  blocks.add(new Block());
  DataNode dn=cluster.getDataNodes().get(DN_N0);
  String poolId=cluster.getNamesystem().getBlockPoolId();
  DatanodeRegistration dnR=dn.getDNRegistrationForBP(poolId);
  StorageBlockReport[] report={new StorageBlockReport(dnR.getStorageID(),new BlockListAsLongs(blocks,null).getBlockListAsLongs())};
  DatanodeCommand dnCmd=cluster.getNameNodeRpc().blockReport(dnR,poolId,report);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Got the command: " + dnCmd);
  }
  printStats();
  assertEquals("Wrong number of CorruptedReplica+PendingDeletion " + "blocks is found",2,cluster.getNamesystem().getCorruptReplicaBlocks() + cluster.getNamesystem().getPendingDeletionBlocks());
}
