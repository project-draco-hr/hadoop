{
  Map<String,BlockListAsLongs> perVolumeBlockLists=dn.getFSDataset().getBlockReports(bpid);
  StorageBlockReport[] reports=new StorageBlockReport[perVolumeBlockLists.size()];
  boolean corruptedBlock=false;
  int i=0;
  for (  Map.Entry<String,BlockListAsLongs> kvPair : perVolumeBlockLists.entrySet()) {
    String storageID=kvPair.getKey();
    long[] blockList=kvPair.getValue().getBlockListAsLongs();
    if (!corruptedBlock) {
      blockList[4]=rand.nextInt();
      corruptedBlock=true;
    }
    DatanodeStorage dnStorage=new DatanodeStorage(storageID);
    reports[i++]=new StorageBlockReport(dnStorage,blockList);
  }
  return reports;
}
