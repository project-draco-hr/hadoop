{
  final String METHOD_NAME=GenericTestUtils.getMethodName();
  Path filePath=new Path("/" + METHOD_NAME + ".dat");
  DFSTestUtil.createFile(fs,filePath,FILE_SIZE,REPL_FACTOR,rand.nextLong());
  DataNode dn=cluster.getDataNodes().get(DN_N0);
  String poolId=cluster.getNamesystem().getBlockPoolId();
  ExtendedBlock b=new ExtendedBlock(poolId,rand.nextLong(),1024L,rand.nextLong());
  dn.getFSDataset().createRbw(b);
  DatanodeRegistration dnR=dn.getDNRegistrationForBP(poolId);
  StorageBlockReport[] reports=getBlockReports(dn,poolId,false,false);
  DatanodeCommand dnCmd=cluster.getNameNodeRpc().blockReport(dnR,poolId,reports);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Got the command: " + dnCmd);
  }
  printStats();
  assertThat("Wrong number of corrupt blocks",cluster.getNamesystem().getCorruptReplicaBlocks(),is(0L));
  assertThat("Wrong number of PendingDeletion blocks",cluster.getNamesystem().getPendingDeletionBlocks(),is(1L));
}
