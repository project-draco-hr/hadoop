{
  Map<String,BlockListAsLongs> perVolumeBlockLists=dn.getFSDataset().getBlockReports(bpid);
  StorageBlockReport[] reports=new StorageBlockReport[perVolumeBlockLists.size()];
  boolean corruptedGs=false;
  boolean corruptedLen=false;
  int reportIndex=0;
  for (  Map.Entry<String,BlockListAsLongs> kvPair : perVolumeBlockLists.entrySet()) {
    String storageID=kvPair.getKey();
    BlockListAsLongs blockList=kvPair.getValue();
    for (int i=0; i < blockList.getNumberOfBlocks(); ++i) {
      if (corruptOneBlockGs && !corruptedGs) {
        blockList.corruptBlockGSForTesting(i,rand);
        LOG.info("Corrupted the GS for block ID " + i);
        corruptedGs=true;
      }
 else       if (corruptOneBlockLen && !corruptedLen) {
        blockList.corruptBlockLengthForTesting(i,rand);
        LOG.info("Corrupted the length for block ID " + i);
        corruptedLen=true;
      }
 else {
        break;
      }
    }
    DatanodeStorage dnStorage=new DatanodeStorage(storageID);
    reports[reportIndex++]=new StorageBlockReport(dnStorage,blockList.getBlockListAsLongs());
  }
  return reports;
}
