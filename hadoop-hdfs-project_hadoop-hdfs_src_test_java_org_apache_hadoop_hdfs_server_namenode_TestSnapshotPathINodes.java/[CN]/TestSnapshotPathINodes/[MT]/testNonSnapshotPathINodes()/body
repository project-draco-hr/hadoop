{
  String[] names=INode.getPathNames(file1.toString());
  byte[][] components=INode.getPathComponents(names);
  INodesInPath nodesInPath=INodesInPath.resolve(fsdir.rootDir,components);
  INode[] inodes=nodesInPath.getINodes();
  assertEquals(inodes.length,components.length);
  assertSnapshot(nodesInPath,false,null,-1);
  assertTrue("file1=" + file1 + ", nodesInPath="+ nodesInPath,inodes[components.length - 1] != null);
  assertEquals(inodes[components.length - 1].getFullPathName(),file1.toString());
  assertEquals(inodes[components.length - 2].getFullPathName(),sub1.toString());
  assertEquals(inodes[components.length - 3].getFullPathName(),dir.toString());
  nodesInPath=INodesInPath.resolve(fsdir.rootDir,components,1,false);
  inodes=nodesInPath.getINodes();
  assertEquals(inodes.length,1);
  assertSnapshot(nodesInPath,false,null,-1);
  assertEquals(inodes[0].getFullPathName(),file1.toString());
  nodesInPath=INodesInPath.resolve(fsdir.rootDir,components,2,false);
  inodes=nodesInPath.getINodes();
  assertEquals(inodes.length,2);
  assertSnapshot(nodesInPath,false,null,-1);
  assertEquals(inodes[1].getFullPathName(),file1.toString());
  assertEquals(inodes[0].getFullPathName(),sub1.toString());
}
