{
  String[] names=INode.getPathNames(file1.toString());
  byte[][] components=INode.getPathComponents(names);
  INodesInPath nodesInPath=INodesInPath.resolve(fsdir.rootDir,components);
  assertEquals(nodesInPath.length(),components.length);
  assertSnapshot(nodesInPath,false,null,-1);
  assertTrue("file1=" + file1 + ", nodesInPath="+ nodesInPath,nodesInPath.getINode(components.length - 1) != null);
  assertEquals(nodesInPath.getINode(components.length - 1).getFullPathName(),file1.toString());
  assertEquals(nodesInPath.getINode(components.length - 2).getFullPathName(),sub1.toString());
  assertEquals(nodesInPath.getINode(components.length - 3).getFullPathName(),dir.toString());
  nodesInPath=INodesInPath.resolve(fsdir.rootDir,components,1,false);
  assertEquals(nodesInPath.length(),1);
  assertSnapshot(nodesInPath,false,null,-1);
  assertEquals(nodesInPath.getINode(0).getFullPathName(),file1.toString());
  nodesInPath=INodesInPath.resolve(fsdir.rootDir,components,2,false);
  assertEquals(nodesInPath.length(),2);
  assertSnapshot(nodesInPath,false,null,-1);
  assertEquals(nodesInPath.getINode(1).getFullPathName(),file1.toString());
  assertEquals(nodesInPath.getINode(0).getFullPathName(),sub1.toString());
}
