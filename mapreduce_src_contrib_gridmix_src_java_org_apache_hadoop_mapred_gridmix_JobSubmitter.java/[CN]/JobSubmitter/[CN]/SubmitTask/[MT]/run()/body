{
  try {
    try {
      job.buildSplits(inputDir);
    }
 catch (    IOException e) {
      LOG.warn("Failed to submit " + job.getJob().getJobName() + " as "+ job.getUgi(),e);
      monitor.submissionFailed(job.getJob());
      return;
    }
catch (    Exception e) {
      LOG.warn("Failed to submit " + job.getJob().getJobName() + " as "+ job.getUgi(),e);
      monitor.submissionFailed(job.getJob());
      return;
    }
    long nsDelay=job.getDelay(TimeUnit.NANOSECONDS);
    while (nsDelay > 0) {
      TimeUnit.NANOSECONDS.sleep(nsDelay);
      nsDelay=job.getDelay(TimeUnit.NANOSECONDS);
    }
    try {
      monitor.add(job.call());
      statistics.addJobStats(job.getJob(),job.getJobDesc());
      LOG.debug("SUBMIT " + job + "@"+ System.currentTimeMillis()+ " ("+ job.getJob().getJobID()+ ")");
    }
 catch (    IOException e) {
      LOG.warn("Failed to submit " + job.getJob().getJobName() + " as "+ job.getUgi(),e);
      if (e.getCause() instanceof ClosedByInterruptException) {
        throw new InterruptedException("Failed to submit " + job.getJob().getJobName());
      }
      monitor.submissionFailed(job.getJob());
    }
catch (    ClassNotFoundException e) {
      LOG.warn("Failed to submit " + job.getJob().getJobName(),e);
      monitor.submissionFailed(job.getJob());
    }
  }
 catch (  InterruptedException e) {
    GridmixJob.pullDescription(job.id());
    Thread.currentThread().interrupt();
    monitor.submissionFailed(job.getJob());
  }
catch (  Exception e) {
    LOG.info(" Job " + job.getJob().getJobID() + " submission failed ",e);
    monitor.submissionFailed(job.getJob());
  }
 finally {
    sem.release();
  }
}
