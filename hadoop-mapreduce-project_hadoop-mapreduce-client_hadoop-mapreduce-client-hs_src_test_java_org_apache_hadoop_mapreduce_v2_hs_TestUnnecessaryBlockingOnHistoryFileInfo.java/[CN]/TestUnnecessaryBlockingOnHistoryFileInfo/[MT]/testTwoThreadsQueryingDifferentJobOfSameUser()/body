{
  final Configuration config=new Configuration();
  config.set(JHAdminConfig.MR_HISTORY_INTERMEDIATE_DONE_DIR,INTERMEDIATE_DIR.getPath());
  config.setLong(JHAdminConfig.MR_HISTORY_MAX_AGE_MS,Long.MAX_VALUE);
  final JobId job1=createJobId(0);
  final JobId job2=createJobId(1);
  final HistoryFileManagerUnderContention historyFileManager=createHistoryFileManager(config,job1,job2);
  Thread webRequest1=null;
  Thread webRequest2=null;
  try {
    createJhistFile(job1);
    webRequest1=new Thread(new Runnable(){
      @Override public void run(){
        try {
          HistoryFileManager.HistoryFileInfo historyFileInfo=historyFileManager.getFileInfo(job1);
          historyFileInfo.loadJob();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
);
    webRequest1.start();
    historyFileManager.waitUntilIntermediateDirIsScanned(job1);
    createJhistFile(job2);
    webRequest2=new Thread(new Runnable(){
      @Override public void run(){
        try {
          HistoryFileManager.HistoryFileInfo historyFileInfo=historyFileManager.getFileInfo(job2);
          historyFileInfo.loadJob();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
);
    webRequest2.start();
    historyFileManager.waitUntilIntermediateDirIsScanned(job2);
    Assert.assertTrue("Thread 2 is blocked while it is trying to " + "load job2 by Thread 1 which is loading job1.",webRequest2.getState() != Thread.State.BLOCKED);
  }
  finally {
    if (webRequest1 != null) {
      webRequest1.interrupt();
    }
    if (webRequest2 != null) {
      webRequest2.interrupt();
    }
  }
}
