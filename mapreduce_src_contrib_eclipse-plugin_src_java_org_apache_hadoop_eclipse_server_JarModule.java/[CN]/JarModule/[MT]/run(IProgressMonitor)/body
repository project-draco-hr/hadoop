{
  log.fine("Build jar");
  JarPackageData jarrer=new JarPackageData();
  jarrer.setExportJavaFiles(true);
  jarrer.setExportClassFiles(true);
  jarrer.setExportOutputFolders(true);
  jarrer.setOverwrite(true);
  try {
    Object element=resource.getAdapter(IJavaElement.class);
    IType type=((ICompilationUnit)element).findPrimaryType();
    jarrer.setManifestMainClass(type);
    File baseDir=Activator.getDefault().getStateLocation().toFile();
    String prefix=String.format("%s_%s-",resource.getProject().getName(),resource.getName());
    File jarFile=File.createTempFile(prefix,".jar",baseDir);
    jarrer.setJarLocation(new Path(jarFile.getAbsolutePath()));
    jarrer.setElements(resource.getProject().members(IResource.FILE));
    IJarExportRunnable runnable=jarrer.createJarExportRunnable(Display.getDefault().getActiveShell());
    runnable.run(monitor);
    this.jarFile=jarFile;
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
}
