{
  MiniMRCluster mr=null;
  try {
    mr=new MiniMRCluster(2,"file:///",3);
    JobConf conf=mr.createJobConf();
    FileSystem fs=FileSystem.get(conf);
    fs.delete(new Path(TEST_ROOT_DIR + "/succeedfailkilljob"),true);
    Path inDir=new Path(TEST_ROOT_DIR + "/succeedfailkilljob/input");
    Path outDir=new Path(TEST_ROOT_DIR + "/succeedfailkilljob/output");
    RunningJob job=UtilsForTests.runJobSucceed(conf,inDir,outDir);
    JobHistory jobHistory=mr.getJobTrackerRunner().getJobTracker().getJobHistory();
    validateJobHistoryJobStatus(jobHistory,job.getID(),conf,JobStatus.getJobRunState(JobStatus.SUCCEEDED));
    job=UtilsForTests.runJobFail(conf,inDir,outDir);
    validateJobHistoryJobStatus(jobHistory,job.getID(),conf,JobStatus.getJobRunState(JobStatus.FAILED));
    job=UtilsForTests.runJobKill(conf,inDir,outDir);
    validateJobHistoryJobStatus(jobHistory,job.getID(),conf,JobStatus.getJobRunState(JobStatus.KILLED));
  }
  finally {
    if (mr != null) {
      cleanupLocalFiles(mr);
      mr.shutdown();
    }
  }
}
