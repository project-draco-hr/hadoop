{
  Map<TaskID,TaskInfo> tasks=job.getAllTasks();
  for (  TaskInfo task : tasks.values()) {
    TaskID tid=task.getTaskId();
    long startTime=task.getStartTime();
    assertTrue("Invalid Start time",startTime > 0);
    long finishTime=task.getFinishTime();
    assertTrue("Task FINISH_TIME is < START_TIME in history file",startTime < finishTime);
    TaskType type=task.getTaskType();
    assertTrue("Unknown Task type \"" + type + "\" is seen in "+ "history file for task "+ tid,(type.equals(TaskType.MAP) || type.equals(TaskType.REDUCE) || type.equals(TaskType.JOB_CLEANUP)|| type.equals(TaskType.JOB_SETUP)));
    if (type.equals(TaskType.MAP)) {
      String splits=task.getSplitLocations();
      if (!splitsCanBeEmpty || splits.length() != 0) {
        Matcher m=splitsPattern.matcher(splits);
        assertTrue("Unexpected format of SPLITS \"" + splits + "\" is seen"+ " in history file for task "+ tid,m.matches());
      }
    }
    String status=task.getTaskStatus();
    assertTrue("Unexpected TASK_STATUS \"" + status + "\" is seen in"+ " history file for task "+ tid,(status.equals("SUCCEEDED") || status.equals("FAILED") || status.equals("KILLED")));
  }
}
