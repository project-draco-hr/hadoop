{
  ApplicationId applicationId=options.getAppId();
  String jobOwner=options.getAppOwner();
  String containerId=options.getContainerId();
  String localDir=options.getOutputLocalDir();
  List<String> logType=options.getLogTypes();
  RemoteIterator<FileStatus> nodeFiles=getRemoteNodeFileDir(applicationId,jobOwner);
  if (nodeFiles == null) {
    return -1;
  }
  boolean foundContainerLogs=false;
  while (nodeFiles.hasNext()) {
    FileStatus thisNodeFile=nodeFiles.next();
    if (!thisNodeFile.getPath().getName().endsWith(LogAggregationUtils.TMP_FILE_SUFFIX)) {
      AggregatedLogFormat.LogReader reader=null;
      PrintStream out=System.out;
      try {
        reader=new AggregatedLogFormat.LogReader(getConf(),thisNodeFile.getPath());
        if (getContainerLogsStream(containerId,reader) == null) {
          continue;
        }
        reader=new AggregatedLogFormat.LogReader(getConf(),thisNodeFile.getPath());
        out=createPrintStream(localDir,thisNodeFile.getPath().getName(),containerId);
        out.println(containerId + " on " + thisNodeFile.getPath().getName());
        out.println(StringUtils.repeat("=",containerId.length()));
        if (logType == null || logType.isEmpty()) {
          if (dumpAContainerLogs(containerId,reader,out,thisNodeFile.getModificationTime(),options.getBytes()) > -1) {
            foundContainerLogs=true;
          }
        }
 else {
          if (dumpAContainerLogsForALogType(containerId,reader,out,thisNodeFile.getModificationTime(),logType,options.getBytes()) > -1) {
            foundContainerLogs=true;
          }
        }
      }
  finally {
        if (reader != null) {
          reader.close();
        }
        closePrintStream(out);
      }
    }
  }
  if (!foundContainerLogs) {
    containerLogNotFound(containerId);
    return -1;
  }
  return 0;
}
