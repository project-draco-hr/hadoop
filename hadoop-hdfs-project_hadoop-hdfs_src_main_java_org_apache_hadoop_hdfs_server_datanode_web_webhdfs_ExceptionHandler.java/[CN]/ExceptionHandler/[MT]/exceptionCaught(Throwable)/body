{
  Exception e=cause instanceof Exception ? (Exception)cause : new Exception(cause);
  if (LOG.isTraceEnabled()) {
    LOG.trace("GOT EXCEPTION",e);
  }
  if (e instanceof ParamException) {
    final ParamException paramexception=(ParamException)e;
    e=new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": "+ e.getCause().getMessage(),e);
  }
 else   if (e instanceof ContainerException || e instanceof SecurityException) {
    e=toCause(e);
  }
 else   if (e instanceof RemoteException) {
    e=((RemoteException)e).unwrapRemoteException();
  }
  final HttpResponseStatus s;
  if (e instanceof SecurityException) {
    s=FORBIDDEN;
  }
 else   if (e instanceof AuthorizationException) {
    s=FORBIDDEN;
  }
 else   if (e instanceof FileNotFoundException) {
    s=NOT_FOUND;
  }
 else   if (e instanceof IOException) {
    s=FORBIDDEN;
  }
 else   if (e instanceof UnsupportedOperationException) {
    s=BAD_REQUEST;
  }
 else   if (e instanceof IllegalArgumentException) {
    s=BAD_REQUEST;
  }
 else {
    LOG.warn("INTERNAL_SERVER_ERROR",e);
    s=INTERNAL_SERVER_ERROR;
  }
  final byte[] js=JsonUtil.toJsonString(e).getBytes(Charsets.UTF_8);
  DefaultFullHttpResponse resp=new DefaultFullHttpResponse(HTTP_1_1,s,Unpooled.wrappedBuffer(js));
  resp.headers().set(CONTENT_TYPE,APPLICATION_JSON_UTF8);
  resp.headers().set(CONTENT_LENGTH,js.length);
  return resp;
}
