{
  super(DistributedSchedulingService.class.getName(),rmContext,scheduler);
  int k=rmContext.getYarnConfiguration().getInt(YarnConfiguration.DIST_SCHEDULING_TOP_K,YarnConfiguration.DIST_SCHEDULING_TOP_K_DEFAULT);
  long topKComputationInterval=rmContext.getYarnConfiguration().getLong(YarnConfiguration.DIST_SCHEDULING_TOP_K_COMPUTE_INT_MS,YarnConfiguration.DIST_SCHEDULING_TOP_K_COMPUTE_INT_MS_DEFAULT);
  TopKNodeSelector.TopKComparator comparator=TopKNodeSelector.TopKComparator.valueOf(rmContext.getYarnConfiguration().get(YarnConfiguration.DIST_SCHEDULING_TOP_K_COMPARATOR,YarnConfiguration.DIST_SCHEDULING_TOP_K_COMPARATOR_DEFAULT));
  TopKNodeSelector topKSelector=new TopKNodeSelector(k,topKComputationInterval,comparator);
  this.clusterMonitor=topKSelector;
}
