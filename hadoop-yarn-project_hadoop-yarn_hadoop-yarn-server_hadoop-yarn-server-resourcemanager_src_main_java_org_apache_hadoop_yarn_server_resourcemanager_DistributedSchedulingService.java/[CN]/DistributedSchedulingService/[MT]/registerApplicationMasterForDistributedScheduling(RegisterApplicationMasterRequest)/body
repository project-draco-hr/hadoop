{
  RegisterApplicationMasterResponse response=registerApplicationMaster(request);
  DistSchedRegisterResponse dsResp=recordFactory.newRecordInstance(DistSchedRegisterResponse.class);
  dsResp.setRegisterResponse(response);
  dsResp.setMinAllocatableCapabilty(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MIN_MEMORY,YarnConfiguration.DIST_SCHEDULING_MIN_MEMORY_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MIN_VCORES,YarnConfiguration.DIST_SCHEDULING_MIN_VCORES_DEFAULT)));
  dsResp.setMaxAllocatableCapabilty(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MAX_MEMORY,YarnConfiguration.DIST_SCHEDULING_MAX_MEMORY_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MAX_VCORES,YarnConfiguration.DIST_SCHEDULING_MAX_VCORES_DEFAULT)));
  dsResp.setIncrAllocatableCapabilty(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_INCR_MEMORY,YarnConfiguration.DIST_SCHEDULING_INCR_MEMORY_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_INCR_VCORES,YarnConfiguration.DIST_SCHEDULING_INCR_VCORES_DEFAULT)));
  dsResp.setContainerTokenExpiryInterval(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS,YarnConfiguration.DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS_DEFAULT));
  dsResp.setContainerIdStart(this.rmContext.getEpoch() << ResourceManager.EPOCH_BIT_SHIFT);
  dsResp.setNodesForScheduling(new ArrayList<>(this.rmContext.getRMNodes().keySet()));
  return dsResp;
}
