{
  List<BlockRecord> syncList=new ArrayList<>(locs.length);
  int errorCount=0;
  for (  DatanodeID id : locs) {
    try {
      DatanodeID bpReg=datanode.getBPOfferService(bpid).bpRegistration;
      InterDatanodeProtocol proxyDN=bpReg.equals(id) ? datanode : DataNode.createInterDataNodeProtocolProxy(id,conf,dnConf.socketTimeout,dnConf.connectToDnViaHostname);
      ReplicaRecoveryInfo info=callInitReplicaRecovery(proxyDN,rBlock);
      if (info != null && info.getGenerationStamp() >= block.getGenerationStamp() && info.getNumBytes() > 0) {
        syncList.add(new BlockRecord(id,proxyDN,info));
      }
    }
 catch (    RecoveryInProgressException ripE) {
      InterDatanodeProtocol.LOG.warn("Recovery for replica " + block + " on data-node "+ id+ " is already in progress. Recovery id = "+ rBlock.getNewGenerationStamp()+ " is aborted.",ripE);
      return;
    }
catch (    IOException e) {
      ++errorCount;
      InterDatanodeProtocol.LOG.warn("Failed to obtain replica info for block (=" + block + ") from datanode (="+ id+ ")",e);
    }
  }
  if (errorCount == locs.length) {
    throw new IOException("All datanodes failed: block=" + block + ", datanodeids="+ Arrays.asList(locs));
  }
  syncBlock(syncList);
}
