{
  RollingFileSystemSink.flushQuickly=false;
  RollingFileSystemSink.hasFlushed=false;
  initKdc();
  MiniDFSCluster cluster=null;
  try {
    HdfsConfiguration conf=createSecureConfig("authentication,privacy");
    RollingFileSystemSink.suppliedConf=conf;
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATANODES).build();
    cluster.waitActive();
    UserGroupInformation sink=createDirectoriesSecurely(cluster);
    final String path="hdfs://" + cluster.getNameNode().getHostAndPort() + "/tmp/test";
    final MetricsSystem ms=initMetricsSystem(path,true,false,true);
    assertMetricsContents(sink.doAs(new PrivilegedExceptionAction<String>(){
      @Override public String run() throws Exception {
        return doWriteTest(ms,path,1);
      }
    }
));
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
    shutdownKdc();
    UserGroupInformation.setConfiguration(new Configuration());
    RollingFileSystemSink.suppliedConf=null;
    RollingFileSystemSink.suppliedFilesystem=null;
  }
}
