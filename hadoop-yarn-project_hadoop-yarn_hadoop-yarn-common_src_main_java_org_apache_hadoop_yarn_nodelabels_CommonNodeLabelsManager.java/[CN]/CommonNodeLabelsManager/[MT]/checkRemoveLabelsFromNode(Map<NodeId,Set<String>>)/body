{
  Set<String> knownLabels=labelCollections.keySet();
  for (  Entry<NodeId,Set<String>> entry : removeLabelsFromNode.entrySet()) {
    NodeId nodeId=entry.getKey();
    Set<String> labels=entry.getValue();
    if (!knownLabels.containsAll(labels)) {
      String msg="Not all labels being removed contained by known " + "label collections, please check" + ", removed labels=[" + StringUtils.join(labels,",") + "]";
      LOG.error(msg);
      throw new IOException(msg);
    }
    Set<String> originalLabels=null;
    boolean nodeExisted=false;
    if (WILDCARD_PORT != nodeId.getPort()) {
      Node nm=getNMInNodeSet(nodeId);
      if (nm != null) {
        originalLabels=nm.labels;
        nodeExisted=true;
      }
    }
 else {
      Host host=nodeCollections.get(nodeId.getHost());
      if (null != host) {
        originalLabels=host.labels;
        nodeExisted=true;
      }
    }
    if (!nodeExisted) {
      String msg="Try to remove labels from NM=" + nodeId + ", but the NM doesn't existed";
      LOG.error(msg);
      throw new IOException(msg);
    }
    if (labels.isEmpty()) {
      continue;
    }
    if (originalLabels == null || !originalLabels.containsAll(labels)) {
      String msg="Try to remove labels = [" + StringUtils.join(labels,",") + "], but not all labels contained by NM="+ nodeId;
      LOG.error(msg);
      throw new IOException(msg);
    }
  }
}
