{
  Preconditions.checkArgument(uri.getHost() != null,"Invalid hostname in URI " + uri);
  String userInfo=uri.getUserInfo();
  if (userInfo != null) {
    int index=userInfo.indexOf(':');
    if (index != -1) {
      accessKey=userInfo.substring(0,index);
      secretAccessKey=userInfo.substring(index + 1);
    }
 else {
      accessKey=userInfo;
    }
  }
  if (accessKey == null) {
    accessKey=conf.getTrimmed(S3_NATIVE_AWS_ACCESS_KEY_ID);
  }
  if (secretAccessKey == null) {
    final char[] pass=conf.getPassword(S3_NATIVE_AWS_SECRET_ACCESS_KEY);
    if (pass != null) {
      secretAccessKey=(new String(pass)).trim();
    }
  }
  final String scheme=uri.getScheme();
  Preconditions.checkArgument(!(accessKey == null && secretAccessKey == null),"AWS Access Key ID and Secret Access Key must be specified as the " + "username or password (respectively) of a " + scheme + " URL, or "+ "by setting the "+ S3_NATIVE_AWS_ACCESS_KEY_ID+ " or "+ S3_NATIVE_AWS_SECRET_ACCESS_KEY+ " properties (respectively).");
  Preconditions.checkArgument(accessKey != null,"AWS Access Key ID must be specified as the username of a " + scheme + " URL, or by setting the "+ S3_NATIVE_AWS_ACCESS_KEY_ID+ " property.");
  Preconditions.checkArgument(secretAccessKey != null,"AWS Secret Access Key must be specified as the password of a " + scheme + " URL, or by setting the "+ S3_NATIVE_AWS_SECRET_ACCESS_KEY+ " property.");
}
