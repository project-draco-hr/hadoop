{
  out.print("<" + SNAPSHOT_DIFF_SECTION_NAME + ">");
  while (true) {
    SnapshotDiffSection.DiffEntry e=SnapshotDiffSection.DiffEntry.parseDelimitedFrom(in);
    if (e == null) {
      break;
    }
switch (e.getType()) {
case FILEDIFF:
      out.print("<" + SNAPSHOT_DIFF_SECTION_FILE_DIFF_ENTRY + ">");
    break;
case DIRECTORYDIFF:
  out.print("<" + SNAPSHOT_DIFF_SECTION_DIR_DIFF_ENTRY + ">");
break;
default :
throw new IOException("unknown DiffEntry type " + e.getType());
}
o(SNAPSHOT_DIFF_SECTION_INODE_ID,e.getInodeId());
o(SNAPSHOT_DIFF_SECTION_COUNT,e.getNumOfDiff());
switch (e.getType()) {
case FILEDIFF:
{
for (int i=0; i < e.getNumOfDiff(); ++i) {
out.print("<" + SNAPSHOT_DIFF_SECTION_FILE_DIFF + ">");
SnapshotDiffSection.FileDiff f=SnapshotDiffSection.FileDiff.parseDelimitedFrom(in);
o(SNAPSHOT_DIFF_SECTION_SNAPSHOT_ID,f.getSnapshotId()).o(SNAPSHOT_DIFF_SECTION_SIZE,f.getFileSize()).o(SECTION_NAME,f.getName().toStringUtf8());
out.print("</" + SNAPSHOT_DIFF_SECTION_FILE_DIFF + ">\n");
}
}
break;
case DIRECTORYDIFF:
{
for (int i=0; i < e.getNumOfDiff(); ++i) {
out.print("<" + SNAPSHOT_DIFF_SECTION_DIR_DIFF + ">");
SnapshotDiffSection.DirectoryDiff d=SnapshotDiffSection.DirectoryDiff.parseDelimitedFrom(in);
o(SNAPSHOT_DIFF_SECTION_SNAPSHOT_ID,d.getSnapshotId()).o(SNAPSHOT_DIFF_SECTION_CHILDREN_SIZE,d.getChildrenSize()).o(SNAPSHOT_DIFF_SECTION_IS_SNAPSHOT_ROOT,d.getIsSnapshotRoot()).o(SECTION_NAME,d.getName().toStringUtf8()).o(SNAPSHOT_DIFF_SECTION_CREATED_LIST_SIZE,d.getCreatedListSize());
for (long did : d.getDeletedINodeList()) {
o(SNAPSHOT_DIFF_SECTION_DELETED_INODE,did);
}
for (int dRefid : d.getDeletedINodeRefList()) {
o(SNAPSHOT_DIFF_SECTION_DELETED_INODE_REF,dRefid);
}
for (int j=0; j < d.getCreatedListSize(); ++j) {
SnapshotDiffSection.CreatedListEntry ce=SnapshotDiffSection.CreatedListEntry.parseDelimitedFrom(in);
out.print("<" + SNAPSHOT_DIFF_SECTION_CREATED + ">");
o(SECTION_NAME,ce.getName().toStringUtf8());
out.print("</" + SNAPSHOT_DIFF_SECTION_CREATED + ">\n");
}
out.print("</" + SNAPSHOT_DIFF_SECTION_DIR_DIFF + ">\n");
}
break;
}
default :
break;
}
switch (e.getType()) {
case FILEDIFF:
out.print("</" + SNAPSHOT_DIFF_SECTION_FILE_DIFF_ENTRY + ">");
break;
case DIRECTORYDIFF:
out.print("</" + SNAPSHOT_DIFF_SECTION_DIR_DIFF_ENTRY + ">");
break;
default :
throw new IOException("unknown DiffEntry type " + e.getType());
}
}
out.print("</" + SNAPSHOT_DIFF_SECTION_NAME + ">\n");
}
