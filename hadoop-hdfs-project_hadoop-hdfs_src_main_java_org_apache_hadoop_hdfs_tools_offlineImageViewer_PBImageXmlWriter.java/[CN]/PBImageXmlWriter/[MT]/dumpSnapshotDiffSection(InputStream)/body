{
  out.print("<SnapshotDiffSection>");
  while (true) {
    SnapshotDiffSection.DiffEntry e=SnapshotDiffSection.DiffEntry.parseDelimitedFrom(in);
    if (e == null) {
      break;
    }
    out.print("<diff>");
    o("inodeid",e.getInodeId());
switch (e.getType()) {
case FILEDIFF:
{
        for (int i=0; i < e.getNumOfDiff(); ++i) {
          out.print("<filediff>");
          SnapshotDiffSection.FileDiff f=SnapshotDiffSection.FileDiff.parseDelimitedFrom(in);
          o("snapshotId",f.getSnapshotId()).o("size",f.getFileSize()).o("name",f.getName().toStringUtf8());
          out.print("</filediff>\n");
        }
      }
    break;
case DIRECTORYDIFF:
{
    for (int i=0; i < e.getNumOfDiff(); ++i) {
      out.print("<dirdiff>");
      SnapshotDiffSection.DirectoryDiff d=SnapshotDiffSection.DirectoryDiff.parseDelimitedFrom(in);
      o("snapshotId",d.getSnapshotId()).o("isSnapshotroot",d.getIsSnapshotRoot()).o("childrenSize",d.getChildrenSize()).o("name",d.getName().toStringUtf8());
      for (int j=0; j < d.getCreatedListSize(); ++j) {
        SnapshotDiffSection.CreatedListEntry ce=SnapshotDiffSection.CreatedListEntry.parseDelimitedFrom(in);
        out.print("<created>");
        o("name",ce.getName().toStringUtf8());
        out.print("</created>\n");
      }
      for (      long did : d.getDeletedINodeList()) {
        out.print("<deleted>");
        o("inode",did);
        out.print("</deleted>\n");
      }
      for (      int dRefid : d.getDeletedINodeRefList()) {
        out.print("<deleted>");
        o("inodereference-index",dRefid);
        out.print("</deleted>\n");
      }
      out.print("</dirdiff>\n");
    }
  }
break;
default :
break;
}
out.print("</diff>");
}
out.print("<SnapshotDiffSection>\n");
}
