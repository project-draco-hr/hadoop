{
  Path testPath=new Path(src);
  byte[] bytes=generateBytes(writeBytes);
  DFSTestUtil.writeFile(fs,testPath,new String(bytes));
  FileStatus status=fs.getFileStatus(testPath);
  long fileLength=status.getLen();
  Assert.assertEquals("File length should be the same",writeBytes,fileLength);
  try (FSDataInputStream fsdis=fs.open(new Path(src))){
    byte[] buf=new byte[writeBytes + 100];
    int readLen=fsdis.read(0,buf,0,buf.length);
    readLen=readLen >= 0 ? readLen : 0;
    Assert.assertEquals("The length of file should be the same to write size",writeBytes,readLen);
    for (int i=0; i < writeBytes; i++) {
      Assert.assertEquals("Byte at i should be the same",getByte(i),buf[i]);
    }
  }
   try (FSDataInputStream fsdis=fs.open(new Path(src))){
    byte[] buf=new byte[writeBytes + 100];
    int readLen=0;
    int ret;
    do {
      ret=fsdis.read(buf,readLen,buf.length - readLen);
      if (ret > 0) {
        readLen+=ret;
      }
    }
 while (ret >= 0);
    readLen=readLen >= 0 ? readLen : 0;
    Assert.assertEquals("The length of file should be the same to write size",writeBytes,readLen);
    for (int i=0; i < writeBytes; i++) {
      Assert.assertEquals("Byte at i should be the same",getByte(i),buf[i]);
    }
  }
   try (FSDataInputStream fsdis=fs.open(new Path(src))){
    ByteBuffer buf=ByteBuffer.allocate(writeBytes + 100);
    int readLen=0;
    int ret;
    do {
      ret=fsdis.read(buf);
      if (ret > 0) {
        readLen+=ret;
      }
    }
 while (ret >= 0);
    readLen=readLen >= 0 ? readLen : 0;
    Assert.assertEquals("The length of file should be the same to write size",writeBytes,readLen);
    for (int i=0; i < writeBytes; i++) {
      Assert.assertEquals("Byte at i should be the same",getByte(i),buf.array()[i]);
    }
  }
 }
