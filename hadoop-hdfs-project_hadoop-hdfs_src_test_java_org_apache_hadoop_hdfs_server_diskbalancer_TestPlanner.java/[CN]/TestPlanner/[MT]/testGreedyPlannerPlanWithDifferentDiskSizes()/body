{
  NullConnector nullConnector=new NullConnector();
  DiskBalancerCluster cluster=new DiskBalancerCluster(nullConnector);
  DiskBalancerDataNode node=new DiskBalancerDataNode(UUID.randomUUID().toString());
  DiskBalancerVolume volume1=createVolume("volume100",1000,100);
  DiskBalancerVolume volume2=createVolume("volume0-1",500,0);
  DiskBalancerVolume volume3=createVolume("volume0-2",250,0);
  node.addVolume(volume1);
  node.addVolume(volume2);
  node.addVolume(volume3);
  nullConnector.addNode(node);
  cluster.readClusterInfo();
  Assert.assertEquals(1,cluster.getNodes().size());
  GreedyPlanner newPlanner=new GreedyPlanner(01.0f,node);
  NodePlan newPlan=new NodePlan(node.getDataNodeName(),node.getDataNodePort());
  newPlanner.balanceVolumeSet(node,node.getVolumeSets().get("SSD"),newPlan);
  assertEquals(2,newPlan.getVolumeSetPlans().size());
  for (  Step step : newPlan.getVolumeSetPlans()) {
    if (step.getDestinationVolume().getPath().equals("volume0-1")) {
      assertEquals("volume100",step.getSourceVolume().getPath());
      assertEquals("28.6 G",step.getSizeString(step.getBytesToMove()));
    }
    if (step.getDestinationVolume().getPath().equals("volume0-2")) {
      assertEquals("volume100",step.getSourceVolume().getPath());
      assertEquals("14.3 G",step.getSizeString(step.getBytesToMove()));
    }
  }
  Step step=newPlan.getVolumeSetPlans().get(0);
  assertEquals(0.05714f,step.getIdealStorage(),0.001f);
}
