{
  setupDirs();
  long du=FileUtil.getDU(TEST_DIR);
  final long expected=2 * (3 + System.getProperty("line.separator").length());
  Assert.assertEquals(expected,du);
  final File doesNotExist=new File(tmp,"QuickBrownFoxJumpsOverTheLazyDog");
  long duDoesNotExist=FileUtil.getDU(doesNotExist);
  assertEquals(0,duDoesNotExist);
  File notADirectory=new File(partitioned,"part-r-00000");
  long duNotADirectoryActual=FileUtil.getDU(notADirectory);
  long duNotADirectoryExpected=3 + System.getProperty("line.separator").length();
  assertEquals(duNotADirectoryExpected,duNotADirectoryActual);
  try {
    try {
      FileUtil.chmod(notADirectory.getAbsolutePath(),"0000");
    }
 catch (    InterruptedException ie) {
      assertNull(ie);
    }
    assertFalse(FileUtil.canRead(notADirectory));
    final long du3=FileUtil.getDU(partitioned);
    assertEquals(expected,du3);
    try {
      FileUtil.chmod(partitioned.getAbsolutePath(),"0000");
    }
 catch (    InterruptedException ie) {
      assertNull(ie);
    }
    assertFalse(FileUtil.canRead(partitioned));
    final long du4=FileUtil.getDU(partitioned);
    assertEquals(0,du4);
  }
  finally {
    FileUtil.chmod(partitioned.getAbsolutePath(),"0777",true);
  }
}
