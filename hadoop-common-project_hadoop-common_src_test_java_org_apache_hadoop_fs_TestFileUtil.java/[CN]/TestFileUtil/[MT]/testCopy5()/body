{
  setupDirs();
  URI uri=tmp.toURI();
  Configuration conf=new Configuration();
  FileSystem fs=FileSystem.newInstance(uri,conf);
  final String content="some-content";
  File srcFile=createFile(tmp,"src",content);
  Path srcPath=new Path(srcFile.toURI());
  final File dest=new File(del,"dest");
  boolean result=FileUtil.copy(fs,srcPath,dest,false,conf);
  assertTrue(result);
  assertTrue(dest.exists());
  assertEquals(content.getBytes().length + System.getProperty("line.separator").getBytes().length,dest.length());
  assertTrue(srcFile.exists());
  dest.delete();
  assertTrue(!dest.exists());
  result=FileUtil.copy(fs,srcPath,dest,true,conf);
  assertTrue(result);
  assertTrue(dest.exists());
  assertEquals(content.getBytes().length + System.getProperty("line.separator").getBytes().length,dest.length());
  assertTrue(!srcFile.exists());
  dest.delete();
  assertTrue(!dest.exists());
  srcPath=new Path(partitioned.toURI());
  result=FileUtil.copy(fs,srcPath,dest,true,conf);
  assertTrue(result);
  assertTrue(dest.exists() && dest.isDirectory());
  File[] files=dest.listFiles();
  assertTrue(files != null);
  assertEquals(2,files.length);
  for (  File f : files) {
    assertEquals(3 + System.getProperty("line.separator").getBytes().length,f.length());
  }
  assertTrue(!partitioned.exists());
}
