{
  mgr.addToCluserNodeLabels(Arrays.asList(NodeLabel.newInstance("p1",true),NodeLabel.newInstance("p2",false),NodeLabel.newInstance("p3",true),NodeLabel.newInstance("p4",true),NodeLabel.newInstance("p5",true),NodeLabel.newInstance("p6",false)));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p1"),toNodeId("n2"),toSet("p2")));
  mgr.replaceLabelsOnNode((Map)ImmutableMap.of(toNodeId("n3"),toSet("p3"),toNodeId("n4"),toSet("p4"),toNodeId("n5"),toSet("p5"),toNodeId("n6"),toSet("p6"),toNodeId("n7"),toSet("p6")));
  mgr.removeFromClusterNodeLabels(toSet("p1"));
  mgr.removeFromClusterNodeLabels(Arrays.asList("p3","p5"));
  mgr.stop();
  mgr=new MockNodeLabelManager();
  mgr.init(conf);
  mgr.start();
  Assert.assertEquals(3,mgr.getClusterNodeLabelNames().size());
  Assert.assertTrue(mgr.getClusterNodeLabelNames().containsAll(Arrays.asList("p2","p4","p6")));
  assertMapContains(mgr.getNodeLabels(),ImmutableMap.of(toNodeId("n2"),toSet("p2"),toNodeId("n4"),toSet("p4"),toNodeId("n6"),toSet("p6"),toNodeId("n7"),toSet("p6")));
  assertLabelsToNodesEquals(mgr.getLabelsToNodes(),ImmutableMap.of("p6",toSet(toNodeId("n6"),toNodeId("n7")),"p4",toSet(toNodeId("n4")),"p2",toSet(toNodeId("n2"))));
  Assert.assertFalse(mgr.isExclusiveNodeLabel("p2"));
  Assert.assertTrue(mgr.isExclusiveNodeLabel("p4"));
  Assert.assertFalse(mgr.isExclusiveNodeLabel("p6"));
  mgr=new MockNodeLabelManager();
  mgr.init(conf);
  mgr.start();
  mgr.addToCluserNodeLabelsWithDefaultExclusivity(toSet("p7","p8"));
  mgr.stop();
  mgr=new MockNodeLabelManager();
  mgr.init(conf);
  mgr.start();
  mgr.addToCluserNodeLabelsWithDefaultExclusivity(toSet("p9"));
  mgr.stop();
  mgr=new MockNodeLabelManager();
  mgr.init(conf);
  mgr.start();
  Assert.assertEquals(6,mgr.getClusterNodeLabelNames().size());
  Assert.assertTrue(mgr.getClusterNodeLabelNames().containsAll(Arrays.asList("p2","p4","p6","p7","p8","p9")));
  mgr.stop();
}
