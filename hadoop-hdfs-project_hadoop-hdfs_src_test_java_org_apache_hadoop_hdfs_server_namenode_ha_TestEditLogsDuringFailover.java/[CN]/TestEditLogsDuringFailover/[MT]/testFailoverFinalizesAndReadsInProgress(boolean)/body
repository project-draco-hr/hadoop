{
  Configuration conf=new Configuration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(0).build();
  try {
    URI sharedUri=cluster.getSharedEditsDir(0,1);
    File sharedDir=new File(sharedUri.getPath(),"current");
    FSNamesystem fsn=cluster.getNamesystem(0);
    FSImageTestUtil.createAbortedLogWithMkdirs(sharedDir,NUM_DIRS_IN_LOG,1,fsn.getLastInodeId() + 1);
    assertEditFiles(Collections.singletonList(sharedUri),NNStorage.getInProgressEditsFileName(1));
    if (partialTxAtEnd) {
      FileOutputStream outs=null;
      try {
        File editLogFile=new File(sharedDir,NNStorage.getInProgressEditsFileName(1));
        outs=new FileOutputStream(editLogFile,true);
        outs.write(new byte[]{0x18,0x00,0x00,0x00});
        LOG.error("editLogFile = " + editLogFile);
      }
  finally {
        IOUtils.cleanup(LOG,outs);
      }
    }
    cluster.transitionToActive(0);
    String testPath="/dir" + NUM_DIRS_IN_LOG;
    assertNotNull(cluster.getNameNode(0).getRpcServer().getFileInfo(testPath));
    assertEditFiles(Collections.singletonList(sharedUri),NNStorage.getFinalizedEditsFileName(1,NUM_DIRS_IN_LOG + 1),NNStorage.getInProgressEditsFileName(NUM_DIRS_IN_LOG + 2));
  }
  finally {
    cluster.shutdown();
  }
}
