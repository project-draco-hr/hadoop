{
  try {
    long occurrences=this.getAndIncrement(identity);
    Map<Object,Integer> scheduleCache=scheduleCacheRef.get();
    if (scheduleCache != null) {
      Integer priority=scheduleCache.get(identity);
      if (priority != null) {
        return priority;
      }
    }
    return computePriorityLevel(occurrences);
  }
 catch (  InterruptedException ie) {
    LOG.warn("Caught InterruptedException, returning low priority queue");
    return numQueues - 1;
  }
}
