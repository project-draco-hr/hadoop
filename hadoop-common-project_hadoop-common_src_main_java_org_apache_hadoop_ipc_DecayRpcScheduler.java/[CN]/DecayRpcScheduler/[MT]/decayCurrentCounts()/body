{
  try {
    long totalDecayedCount=0;
    long totalRawCount=0;
    Iterator<Map.Entry<Object,List<AtomicLong>>> it=callCounts.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<Object,List<AtomicLong>> entry=it.next();
      AtomicLong decayedCount=entry.getValue().get(0);
      AtomicLong rawCount=entry.getValue().get(1);
      totalRawCount+=rawCount.get();
      long currentValue=decayedCount.get();
      long nextValue=(long)(currentValue * decayFactor);
      totalDecayedCount+=nextValue;
      decayedCount.set(nextValue);
      if (nextValue == 0) {
        it.remove();
      }
    }
    totalDecayedCallCount.set(totalDecayedCount);
    totalRawCallCount.set(totalRawCount);
    recomputeScheduleCache();
    updateAverageResponseTime(true);
  }
 catch (  Exception ex) {
    LOG.error("decayCurrentCounts exception: " + ExceptionUtils.getFullStackTrace(ex));
    throw ex;
  }
}
