{
  final int topCallerCount=10;
  TopN topNCallers=getTopCallers(topCallerCount);
  Map<Object,Integer> decisions=scheduleCacheRef.get();
  final int actualCallerCount=topNCallers.size();
  for (int i=0; i < actualCallerCount; i++) {
    NameValuePair entry=topNCallers.poll();
    String topCaller="Top." + (actualCallerCount - i) + "."+ "Caller("+ entry.getName()+ ")";
    String topCallerVolume=topCaller + ".Volume";
    String topCallerPriority=topCaller + ".Priority";
    rb.addCounter(Interns.info(topCallerVolume,topCallerVolume),entry.getValue());
    Integer priority=decisions.get(entry.getName());
    if (priority != null) {
      rb.addCounter(Interns.info(topCallerPriority,topCallerPriority),priority);
    }
  }
}
