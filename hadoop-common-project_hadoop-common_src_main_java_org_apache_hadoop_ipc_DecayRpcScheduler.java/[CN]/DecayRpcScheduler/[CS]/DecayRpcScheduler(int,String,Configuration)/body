{
  if (numLevels < 1) {
    throw new IllegalArgumentException("Number of Priority Levels must be " + "at least 1");
  }
  this.numLevels=numLevels;
  this.decayFactor=parseDecayFactor(ns,conf);
  this.decayPeriodMillis=parseDecayPeriodMillis(ns,conf);
  this.identityProvider=this.parseIdentityProvider(ns,conf);
  this.thresholds=parseThresholds(ns,conf,numLevels);
  this.backOffByResponseTimeEnabled=parseBackOffByResponseTimeEnabled(ns,conf);
  this.backOffResponseTimeThresholds=parseBackOffResponseTimeThreshold(ns,conf,numLevels);
  Timer timer=new Timer();
  DecayTask task=new DecayTask(this,timer);
  timer.scheduleAtFixedRate(task,decayPeriodMillis,decayPeriodMillis);
  responseTimeTotalInCurrWindow=new AtomicLongArray(numLevels);
  responseTimeCountInCurrWindow=new AtomicLongArray(numLevels);
  responseTimeAvgInLastWindow=new AtomicDoubleArray(numLevels);
  responseTimeCountInLastWindow=new AtomicLongArray(numLevels);
  MetricsProxy prox=MetricsProxy.getInstance(ns,numLevels);
  prox.setDelegate(this);
}
