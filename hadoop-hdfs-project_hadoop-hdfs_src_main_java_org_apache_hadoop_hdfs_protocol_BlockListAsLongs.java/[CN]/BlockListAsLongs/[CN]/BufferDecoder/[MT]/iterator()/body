{
  return new Iterator<BlockReportReplica>(){
    final BlockReportReplica block=new BlockReportReplica();
    final CodedInputStream cis=buffer.newCodedInput();
    private int currentBlockIndex=0;
    @Override public boolean hasNext(){
      return currentBlockIndex < numBlocks;
    }
    @Override public BlockReportReplica next(){
      currentBlockIndex++;
      try {
        block.setBlockId(cis.readSInt64());
        block.setNumBytes(cis.readRawVarint64() & NUM_BYTES_MASK);
        block.setGenerationStamp(cis.readRawVarint64());
        long state=cis.readRawVarint64() & REPLICA_STATE_MASK;
        block.setState(ReplicaState.getState((int)state));
      }
 catch (      IOException e) {
        throw new IllegalStateException(e);
      }
      return block;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
