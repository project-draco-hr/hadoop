{
  MRClientProtocol hsProxy=clientCache.getInitializedHSProxy();
  if (hsProxy != null) {
    if (conf.getBoolean(JobClient.HS_DELEGATION_TOKEN_REQUIRED,DEFAULT_HS_DELEGATION_TOKEN_REQUIRED)) {
      Token hsDT=getDelegationTokenFromHS(hsProxy,new Text(conf.get(JobClient.HS_DELEGATION_TOKEN_RENEWER)));
      ts.addToken(hsDT.getService(),hsDT);
    }
  }
  Path applicationTokensFile=new Path(jobSubmitDir,MRJobConfig.APPLICATION_TOKENS_FILE);
  try {
    ts.writeTokenStorageFile(applicationTokensFile,conf);
  }
 catch (  IOException e) {
    throw new YarnException(e);
  }
  ApplicationSubmissionContext appContext=createApplicationSubmissionContext(conf,jobSubmitDir,ts);
  ApplicationId applicationId=resMgrDelegate.submitApplication(appContext);
  ApplicationReport appMaster=resMgrDelegate.getApplicationReport(applicationId);
  String diagnostics=(appMaster == null ? "application report is null" : appMaster.getDiagnostics());
  if (appMaster == null || appMaster.getYarnApplicationState() == YarnApplicationState.FAILED || appMaster.getYarnApplicationState() == YarnApplicationState.KILLED) {
    throw new IOException("Failed to run job : " + diagnostics);
  }
  return clientCache.getClient(jobId).getJobStatus(jobId);
}
