{
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,MAX_APPS + 1);
  WebResource r=resource();
  ClientResponse response=r.path("ws").path("v1").path("applicationhistory").path("apps").path(appId.toString()).path("appattempts").path(appAttemptId.toString()).path("containers").path(containerId.toString()).queryParam("user.name",USERS[round]).accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  if (round == 1) {
    assertEquals(Status.FORBIDDEN,response.getClientResponseStatus());
    return;
  }
  assertEquals("404 not found expected",Status.NOT_FOUND,response.getClientResponseStatus());
}
