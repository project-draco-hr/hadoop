{
  LOG.debug("reading " + count + " records");
  SequenceFile.Reader reader=new SequenceFile.Reader(fs,file,conf);
  RandomDatum.Generator generator=new RandomDatum.Generator(seed);
  RandomDatum k=new RandomDatum();
  RandomDatum v=new RandomDatum();
  DataOutputBuffer rawKey=new DataOutputBuffer();
  SequenceFile.ValueBytes rawValue=reader.createValueBytes();
  for (int i=0; i < count; i++) {
    generator.next();
    RandomDatum key=generator.getKey();
    RandomDatum value=generator.getValue();
    try {
      if ((i % 5) == 0) {
        rawKey.reset();
        reader.nextRaw(rawKey,rawValue);
      }
 else {
        if ((i % 2) == 0) {
          reader.next(k);
          reader.getCurrentValue(v);
        }
 else {
          reader.next(k,v);
        }
        if (!k.equals(key))         throw new RuntimeException("wrong key at " + i);
        if (!v.equals(value))         throw new RuntimeException("wrong value at " + i);
      }
    }
 catch (    IOException ioe) {
      LOG.info("Problem on row " + i);
      LOG.info("Expected key = " + key);
      LOG.info("Expected len = " + key.getLength());
      LOG.info("Actual key = " + k);
      LOG.info("Actual len = " + k.getLength());
      LOG.info("Expected value = " + value);
      LOG.info("Expected len = " + value.getLength());
      LOG.info("Actual value = " + v);
      LOG.info("Actual len = " + v.getLength());
      LOG.info("Key equals: " + k.equals(key));
      LOG.info("value equals: " + v.equals(value));
      throw ioe;
    }
  }
  reader.close();
}
