{
  MiniDFSCluster cluster=null;
  SecondaryNameNode secondary=null;
  Configuration conf=new HdfsConfiguration();
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_KEY,10);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_KEY,1);
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build();
    FileSystem fs=cluster.getFileSystem();
    secondary=startSecondaryNameNode(conf);
    secondary.startCheckpointThread();
    final NNStorage storage=secondary.getFSImage().getStorage();
    GenericTestUtils.waitFor(new Supplier<Boolean>(){
      @Override public Boolean get(){
        LOG.info("Waiting for checkpoint txn id to go to 2");
        return storage.getMostRecentCheckpointTxId() == 2;
      }
    }
,200,15000);
    for (int i=0; i < 10; i++) {
      fs.mkdirs(new Path("/test" + i));
    }
    GenericTestUtils.waitFor(new Supplier<Boolean>(){
      @Override public Boolean get(){
        LOG.info("Waiting for checkpoint txn id to go > 2");
        return storage.getMostRecentCheckpointTxId() > 2;
      }
    }
,200,15000);
  }
  finally {
    cleanup(secondary);
    secondary=null;
    cleanup(cluster);
    cluster=null;
  }
}
