{
  Configuration conf=new HdfsConfiguration();
  String nameserviceId1="ns1";
  String nameserviceId2="ns2";
  conf.set(DFSConfigKeys.DFS_NAMESERVICES,nameserviceId1 + "," + nameserviceId2);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build();
  Configuration snConf1=new HdfsConfiguration(cluster.getConfiguration(0));
  Configuration snConf2=new HdfsConfiguration(cluster.getConfiguration(1));
  InetSocketAddress nn1RpcAddress=cluster.getNameNode(0).getNameNodeAddress();
  InetSocketAddress nn2RpcAddress=cluster.getNameNode(1).getNameNodeAddress();
  String nn1=nn1RpcAddress.getHostName() + ":" + nn1RpcAddress.getPort();
  String nn2=nn2RpcAddress.getHostName() + ":" + nn2RpcAddress.getPort();
  snConf1.set(DFSConfigKeys.DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"");
  snConf2.set(DFSConfigKeys.DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"");
  snConf1.set(DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,nameserviceId1),nn1);
  snConf2.set(DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,nameserviceId2),nn2);
  SecondaryNameNode secondary1=startSecondaryNameNode(snConf1);
  SecondaryNameNode secondary2=startSecondaryNameNode(snConf2);
  assertEquals(secondary1.getNameNodeAddress().getPort(),nn1RpcAddress.getPort());
  assertEquals(secondary2.getNameNodeAddress().getPort(),nn2RpcAddress.getPort());
  assertTrue(secondary1.getNameNodeAddress().getPort() != secondary2.getNameNodeAddress().getPort());
  secondary1.doCheckpoint();
  secondary2.doCheckpoint();
  secondary1.shutdown();
  secondary2.shutdown();
  cluster.shutdown();
}
