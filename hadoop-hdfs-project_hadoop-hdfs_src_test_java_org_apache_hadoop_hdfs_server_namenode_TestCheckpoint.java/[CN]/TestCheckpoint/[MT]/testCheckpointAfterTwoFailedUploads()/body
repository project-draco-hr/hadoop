{
  MiniDFSCluster cluster=null;
  SecondaryNameNode secondary=null;
  Configuration conf=new HdfsConfiguration();
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).format(true).build();
    secondary=startSecondaryNameNode(conf);
    Mockito.doThrow(new IOException("Injecting failure after rolling edit logs")).when(faultInjector).afterSecondaryCallsRollEditLog();
    try {
      secondary.doCheckpoint();
      fail("Should have failed upload");
    }
 catch (    IOException ioe) {
      LOG.info("Got expected failure",ioe);
      assertTrue(ioe.toString().contains("Injecting failure"));
    }
    try {
      secondary.doCheckpoint();
      fail("Should have failed upload");
    }
 catch (    IOException ioe) {
      LOG.info("Got expected failure",ioe);
      assertTrue(ioe.toString().contains("Injecting failure"));
    }
 finally {
      Mockito.reset(faultInjector);
    }
    secondary.doCheckpoint();
  }
  finally {
    cleanup(secondary);
    secondary=null;
    cleanup(cluster);
    cluster=null;
  }
}
