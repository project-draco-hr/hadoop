{
  LoadJob.LoadReducer test=new LoadJob.LoadReducer();
  Configuration conf=new Configuration();
  conf.setInt(JobContext.NUM_REDUCES,2);
  CompressionEmulationUtil.setCompressionEmulationEnabled(conf,true);
  conf.setBoolean(FileOutputFormat.COMPRESS,true);
  CompressionEmulationUtil.setCompressionEmulationEnabled(conf,true);
  conf.setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,true);
  TaskAttemptID taskid=new TaskAttemptID();
  RawKeyValueIterator input=new FakeRawKeyValueIterator();
  Counter counter=new GenericCounter();
  Counter inputValueCounter=new GenericCounter();
  LoadRecordWriter output=new LoadRecordWriter();
  OutputCommitter committer=new CustomOutputCommitter();
  StatusReporter reporter=new DummyReporter();
  RawComparator<GridmixKey> comparator=new FakeRawComparator();
  ReduceContext<GridmixKey,GridmixRecord,NullWritable,GridmixRecord> reduceContext=new ReduceContextImpl<GridmixKey,GridmixRecord,NullWritable,GridmixRecord>(conf,taskid,input,counter,inputValueCounter,output,committer,reporter,comparator,GridmixKey.class,GridmixRecord.class);
  reduceContext.nextKeyValue();
  org.apache.hadoop.mapreduce.Reducer<GridmixKey,GridmixRecord,NullWritable,GridmixRecord>.Context context=new WrappedReducer<GridmixKey,GridmixRecord,NullWritable,GridmixRecord>().getReducerContext(reduceContext);
  test.run(context);
  assertEquals(9,counter.getValue());
  assertEquals(10,inputValueCounter.getValue());
  assertEquals(1,output.getData().size());
  GridmixRecord record=output.getData().values().iterator().next();
  assertEquals(1593,record.getSize());
}
