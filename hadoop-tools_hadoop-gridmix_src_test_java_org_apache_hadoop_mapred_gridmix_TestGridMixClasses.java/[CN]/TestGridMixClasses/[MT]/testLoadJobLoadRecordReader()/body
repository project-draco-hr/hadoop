{
  LoadJob.LoadRecordReader test=new LoadJob.LoadRecordReader();
  Configuration conf=new Configuration();
  FileSystem fs1=mock(FileSystem.class);
  when(fs1.open((Path)anyObject())).thenReturn(new FakeFSDataInputStream(new FakeInputStream()));
  Path p1=mock(Path.class);
  when(p1.getFileSystem((JobConf)anyObject())).thenReturn(fs1);
  FileSystem fs2=mock(FileSystem.class);
  when(fs2.open((Path)anyObject())).thenReturn(new FakeFSDataInputStream(new FakeInputStream()));
  Path p2=mock(Path.class);
  when(p2.getFileSystem((JobConf)anyObject())).thenReturn(fs2);
  Path[] paths={p1,p2};
  long[] start={0,0};
  long[] lengths={1000,1000};
  String[] locations={"temp1","temp2"};
  CombineFileSplit cfsplit=new CombineFileSplit(paths,start,lengths,locations);
  double[] reduceBytes={100,100};
  double[] reduceRecords={2,2};
  long[] reduceOutputBytes={500,500};
  long[] reduceOutputRecords={2,2};
  ResourceUsageMetrics metrics=new ResourceUsageMetrics();
  ResourceUsageMetrics[] rMetrics={new ResourceUsageMetrics(),new ResourceUsageMetrics()};
  LoadSplit input=new LoadSplit(cfsplit,2,3,1500L,2L,3000L,2L,reduceBytes,reduceRecords,reduceOutputBytes,reduceOutputRecords,metrics,rMetrics);
  TaskAttemptID taskId=new TaskAttemptID();
  TaskAttemptContext ctx=new TaskAttemptContextImpl(conf,taskId);
  test.initialize(input,ctx);
  GridmixRecord gr=test.getCurrentValue();
  int counter=0;
  while (test.nextKeyValue()) {
    gr=test.getCurrentValue();
    if (counter == 0) {
      assertEquals(0.5,test.getProgress(),0.001);
    }
 else     if (counter == 1) {
      assertEquals(1.0,test.getProgress(),0.001);
    }
    assertEquals(1000,gr.getSize());
    counter++;
  }
  assertEquals(1000,gr.getSize());
  assertEquals(2,counter);
  test.close();
}
