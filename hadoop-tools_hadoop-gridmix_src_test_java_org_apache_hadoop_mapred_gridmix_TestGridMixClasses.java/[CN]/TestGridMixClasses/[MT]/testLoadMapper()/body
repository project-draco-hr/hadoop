{
  Configuration conf=new Configuration();
  conf.setInt(JobContext.NUM_REDUCES,2);
  CompressionEmulationUtil.setCompressionEmulationEnabled(conf,true);
  conf.setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,true);
  TaskAttemptID taskId=new TaskAttemptID();
  RecordReader<NullWritable,GridmixRecord> reader=new FakeRecordReader();
  LoadRecordGkGrWriter writer=new LoadRecordGkGrWriter();
  OutputCommitter committer=new CustomOutputCommitter();
  StatusReporter reporter=new TaskAttemptContextImpl.DummyReporter();
  LoadSplit split=getLoadSplit();
  MapContext<NullWritable,GridmixRecord,GridmixKey,GridmixRecord> mapContext=new MapContextImpl<NullWritable,GridmixRecord,GridmixKey,GridmixRecord>(conf,taskId,reader,writer,committer,reporter,split);
  Context ctx=new WrappedMapper<NullWritable,GridmixRecord,GridmixKey,GridmixRecord>().getMapContext(mapContext);
  reader.initialize(split,ctx);
  ctx.getConfiguration().setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,true);
  CompressionEmulationUtil.setCompressionEmulationEnabled(ctx.getConfiguration(),true);
  LoadJob.LoadMapper mapper=new LoadJob.LoadMapper();
  mapper.run(ctx);
  Map<GridmixKey,GridmixRecord> data=writer.getData();
  assertEquals(2,data.size());
}
