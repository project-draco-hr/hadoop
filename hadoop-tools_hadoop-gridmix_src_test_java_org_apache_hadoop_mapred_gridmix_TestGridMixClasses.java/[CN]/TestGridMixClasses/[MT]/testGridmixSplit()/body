{
  Path[] files={new Path("one"),new Path("two")};
  long[] start={1,2};
  long[] lengths={100,200};
  String[] locations={"locOne","loctwo"};
  CombineFileSplit cfSplit=new CombineFileSplit(files,start,lengths,locations);
  ResourceUsageMetrics metrics=new ResourceUsageMetrics();
  metrics.setCumulativeCpuUsage(200);
  double[] reduceBytes={8.1d,8.2d};
  double[] reduceRecords={9.1d,9.2d};
  long[] reduceOutputBytes={101L,102L};
  long[] reduceOutputRecords={111L,112L};
  GridmixSplit test=new GridmixSplit(cfSplit,2,3,4L,5L,6L,7L,reduceBytes,reduceRecords,reduceOutputBytes,reduceOutputRecords);
  ByteArrayOutputStream data=new ByteArrayOutputStream();
  DataOutputStream out=new DataOutputStream(data);
  test.write(out);
  GridmixSplit copy=new GridmixSplit();
  copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())));
  assertEquals(test.getId(),copy.getId());
  assertEquals(test.getMapCount(),copy.getMapCount());
  assertEquals(test.getInputRecords(),copy.getInputRecords());
  assertEquals(test.getOutputBytes()[0],copy.getOutputBytes()[0]);
  assertEquals(test.getOutputRecords()[0],copy.getOutputRecords()[0]);
  assertEquals(test.getReduceBytes(0),copy.getReduceBytes(0));
  assertEquals(test.getReduceRecords(0),copy.getReduceRecords(0));
}
