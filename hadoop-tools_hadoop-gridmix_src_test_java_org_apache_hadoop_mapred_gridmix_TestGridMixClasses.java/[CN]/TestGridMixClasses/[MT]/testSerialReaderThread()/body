{
  Configuration conf=new Configuration();
  File fin=new File("src" + File.separator + "test"+ File.separator+ "resources"+ File.separator+ "data"+ File.separator+ "wordcount2.json");
  JobStoryProducer jobProducer=new ZombieJobProducer(new Path(fin.getAbsolutePath()),null,conf);
  CountDownLatch startFlag=new CountDownLatch(1);
  UserResolver resolver=new SubmitterUserResolver();
  FakeJobSubmitter submitter=new FakeJobSubmitter();
  File ws=new File("target" + File.separator + this.getClass().getName());
  if (!ws.exists()) {
    Assert.assertTrue(ws.mkdirs());
  }
  SerialJobFactory jobFactory=new SerialJobFactory(submitter,jobProducer,new Path(ws.getAbsolutePath()),conf,startFlag,resolver);
  Path ioPath=new Path(ws.getAbsolutePath());
  jobFactory.setDistCacheEmulator(new DistributedCacheEmulator(conf,ioPath));
  Thread test=jobFactory.createReaderThread();
  test.start();
  Thread.sleep(1000);
  assertEquals(0,submitter.getJobs().size());
  startFlag.countDown();
  while (test.isAlive()) {
    Thread.sleep(1000);
    jobFactory.update(null);
  }
  assertEquals(2,submitter.getJobs().size());
}
