{
  GridmixJob.SpecGroupingComparator test=new GridmixJob.SpecGroupingComparator();
  ByteArrayOutputStream data=new ByteArrayOutputStream();
  DataOutputStream dos=new DataOutputStream(data);
  WritableUtils.writeVInt(dos,2);
  WritableUtils.writeVInt(dos,1);
  WritableUtils.writeVInt(dos,0);
  WritableUtils.writeVInt(dos,7);
  WritableUtils.writeVInt(dos,4);
  byte[] b1=data.toByteArray();
  byte[] b2=data.toByteArray();
  assertEquals(0,test.compare(b1,0,1,b2,0,1));
  b2[2]=1;
  assertEquals(-1,test.compare(b1,0,1,b2,0,1));
  b2[2]=1;
  assertEquals(-1,test.compare(b1,0,1,b2,0,1));
  assertEquals(0,test.compare(new GridmixKey(GridmixKey.DATA,100,2),new GridmixKey(GridmixKey.DATA,100,2)));
  assertEquals(-1,test.compare(new GridmixKey(GridmixKey.REDUCE_SPEC,100,2),new GridmixKey(GridmixKey.DATA,100,2)));
  assertEquals(1,test.compare(new GridmixKey(GridmixKey.DATA,100,2),new GridmixKey(GridmixKey.REDUCE_SPEC,100,2)));
  assertEquals(2,test.compare(new GridmixKey(GridmixKey.DATA,102,2),new GridmixKey(GridmixKey.DATA,100,2)));
}
