{
  long foundAMCompletedTime=0;
  final int timeToWaitMS=10000;
  StringBuilder expectedFinalState=new StringBuilder();
  boolean first=true;
  for (  YarnApplicationState state : finalState) {
    if (first) {
      first=false;
      expectedFinalState.append(state.name());
    }
 else {
      expectedFinalState.append("," + state.name());
    }
  }
  while (true) {
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      LOG.debug("Thread sleep in monitoring loop interrupted");
    }
    ApplicationReport report=rmClient.getApplicationReport(appId);
    LOG.info("Got application report from ASM for" + ", appId=" + appId.getId() + ", appAttemptId="+ report.getCurrentApplicationAttemptId()+ ", clientToken="+ report.getClientToken()+ ", appDiagnostics="+ report.getDiagnostics()+ ", appMasterHost="+ report.getHost()+ ", appQueue="+ report.getQueue()+ ", appMasterRpcPort="+ report.getRpcPort()+ ", appStartTime="+ report.getStartTime()+ ", yarnAppState="+ report.getYarnApplicationState().toString()+ ", distributedFinalState="+ report.getFinalApplicationStatus().toString()+ ", appTrackingUrl="+ report.getTrackingUrl()+ ", appUser="+ report.getUser());
    YarnApplicationState state=report.getYarnApplicationState();
    if (finalState.contains(state)) {
      return report;
    }
    if (amCompleted) {
      if (foundAMCompletedTime == 0) {
        foundAMCompletedTime=System.currentTimeMillis();
      }
 else       if ((System.currentTimeMillis() - foundAMCompletedTime) > timeToWaitMS) {
        LOG.warn("Waited " + timeToWaitMS / 1000 + " seconds after process completed for AppReport" + " to reach desired final state. Not waiting anymore." + "CurrentState = " + state + ", ExpectedStates = " + expectedFinalState.toString());
        throw new RuntimeException("Failed to receive final expected state" + " in ApplicationReport" + ", CurrentState=" + state + ", ExpectedStates="+ expectedFinalState.toString());
      }
    }
  }
}
