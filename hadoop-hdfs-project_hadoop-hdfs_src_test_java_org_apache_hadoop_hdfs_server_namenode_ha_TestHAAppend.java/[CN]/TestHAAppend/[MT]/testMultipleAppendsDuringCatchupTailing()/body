{
  Configuration conf=new Configuration();
  conf.set(DFSConfigKeys.DFS_HA_TAILEDITS_PERIOD_KEY,"5000");
  conf.setInt(DFSConfigKeys.DFS_HA_LOGROLL_PERIOD_KEY,-1);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(3).build();
  FileSystem fs=null;
  try {
    cluster.transitionToActive(0);
    fs=HATestUtil.configureFailoverFs(cluster,conf);
    Path fileToAppend=new Path("/FileToAppend");
    FSDataOutputStream out=fs.create(fileToAppend);
    out.writeBytes("/data");
    out.hflush();
    cluster.getNameNode(0).getRpcServer().rollEditLog();
    cluster.getNameNode(1).getNamesystem().getEditLogTailer().doTailEdits();
    out.close();
    for (int i=0; i < 5; i++) {
      DFSTestUtil.appendFile(fs,fileToAppend,"data");
    }
    cluster.triggerBlockReports();
    cluster.shutdownNameNode(0);
    cluster.transitionToActive(1);
    int rc=ToolRunner.run(new DFSck(cluster.getConfiguration(1)),new String[]{"/","-files","-blocks"});
    assertEquals(0,rc);
    assertEquals("CorruptBlocks should be empty.",0,cluster.getNameNode(1).getNamesystem().getCorruptReplicaBlocks());
  }
  finally {
    if (null != cluster) {
      cluster.shutdown();
    }
    if (null != fs) {
      fs.close();
    }
  }
}
