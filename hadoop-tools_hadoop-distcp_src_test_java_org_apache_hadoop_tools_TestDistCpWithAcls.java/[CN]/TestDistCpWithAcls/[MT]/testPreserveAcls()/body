{
  assertRunDistCp(DistCpConstants.SUCCESS,"/dstPreserveAcls");
  assertAclEntries("/dstPreserveAcls/dir1",new AclEntry[]{aclEntry(DEFAULT,USER,ALL),aclEntry(DEFAULT,USER,"bruce",ALL),aclEntry(DEFAULT,GROUP,READ_EXECUTE),aclEntry(DEFAULT,MASK,ALL),aclEntry(DEFAULT,OTHER,READ_EXECUTE)});
  assertPermission("/dstPreserveAcls/dir1",(short)0755);
  assertAclEntries("/dstPreserveAcls/dir1/subdir1",new AclEntry[]{});
  assertPermission("/dstPreserveAcls/dir1/subdir1",(short)0755);
  assertAclEntries("/dstPreserveAcls/dir2",new AclEntry[]{});
  assertPermission("/dstPreserveAcls/dir2",(short)0755);
  assertAclEntries("/dstPreserveAcls/dir2/file2",new AclEntry[]{aclEntry(ACCESS,GROUP,READ),aclEntry(ACCESS,GROUP,"sales",NONE)});
  assertPermission("/dstPreserveAcls/dir2/file2",(short)0644);
  assertAclEntries("/dstPreserveAcls/dir2/file3",new AclEntry[]{});
  assertPermission("/dstPreserveAcls/dir2/file3",(short)0660);
  assertAclEntries("/dstPreserveAcls/dir3sticky",new AclEntry[]{});
  assertPermission("/dstPreserveAcls/dir3sticky",(short)01777);
  assertAclEntries("/dstPreserveAcls/file1",new AclEntry[]{aclEntry(ACCESS,USER,"diana",READ),aclEntry(ACCESS,GROUP,READ)});
  assertPermission("/dstPreserveAcls/file1",(short)0644);
}
