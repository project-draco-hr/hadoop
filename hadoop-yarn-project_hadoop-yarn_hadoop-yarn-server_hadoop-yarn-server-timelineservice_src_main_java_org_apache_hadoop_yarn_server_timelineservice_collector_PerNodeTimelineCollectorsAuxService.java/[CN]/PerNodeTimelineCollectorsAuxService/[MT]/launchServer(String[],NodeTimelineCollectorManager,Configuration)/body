{
  Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());
  StringUtils.startupShutdownMessage(PerNodeTimelineCollectorsAuxService.class,args,LOG);
  PerNodeTimelineCollectorsAuxService auxService=null;
  try {
    auxService=collectorManager == null ? new PerNodeTimelineCollectorsAuxService() : new PerNodeTimelineCollectorsAuxService(collectorManager);
    ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),SHUTDOWN_HOOK_PRIORITY);
    auxService.init(conf);
    auxService.start();
  }
 catch (  Throwable t) {
    LOG.fatal("Error starting PerNodeTimelineCollectorServer",t);
    ExitUtil.terminate(-1,"Error starting PerNodeTimelineCollectorServer");
  }
  return auxService;
}
