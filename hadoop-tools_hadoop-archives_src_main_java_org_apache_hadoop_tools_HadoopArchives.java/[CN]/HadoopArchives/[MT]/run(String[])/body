{
  try {
    Options options=new Options();
    options.addOption(ARCHIVE_NAME,true,"Name of the Archive. This is mandatory option");
    options.addOption(PARENT_PATH,true,"Parent path of sources. This is mandatory option");
    options.addOption(REPLICATION,true,"Replication factor archive files");
    options.addOption(HELP,false,"Show the usage");
    Parser parser=new GnuParser();
    CommandLine commandLine=parser.parse(options,args,true);
    if (commandLine.hasOption(HELP)) {
      printUsage(options,true);
      return 0;
    }
    if (!commandLine.hasOption(ARCHIVE_NAME)) {
      printUsage(options,false);
      throw new IOException("Archive Name not specified.");
    }
    String archiveName=commandLine.getOptionValue(ARCHIVE_NAME);
    if (!checkValidName(archiveName)) {
      printUsage(options,false);
      throw new IOException("Invalid name for archives. " + archiveName);
    }
    if (!commandLine.hasOption(PARENT_PATH)) {
      printUsage(options,false);
      throw new IOException("Parent path not specified.");
    }
    Path parentPath=new Path(commandLine.getOptionValue(PARENT_PATH));
    if (!parentPath.isAbsolute()) {
      parentPath=parentPath.getFileSystem(getConf()).makeQualified(parentPath);
    }
    if (commandLine.hasOption(REPLICATION)) {
      repl=Short.parseShort(commandLine.getOptionValue(REPLICATION));
    }
    args=commandLine.getArgs();
    List<Path> srcPaths=new ArrayList<Path>();
    Path destPath=null;
    for (int i=0; i < args.length; i++) {
      if (i == (args.length - 1)) {
        destPath=new Path(args[i]);
        if (!destPath.isAbsolute()) {
          destPath=destPath.getFileSystem(getConf()).makeQualified(destPath);
        }
      }
 else {
        Path argPath=new Path(args[i]);
        if (argPath.isAbsolute()) {
          printUsage(options,false);
          throw new IOException("Source path " + argPath + " is not relative to "+ parentPath);
        }
        srcPaths.add(new Path(parentPath,argPath));
      }
    }
    if (destPath == null) {
      printUsage(options,false);
      throw new IOException("Destination path not specified.");
    }
    if (srcPaths.size() == 0) {
      srcPaths.add(parentPath);
    }
    List<Path> globPaths=new ArrayList<Path>();
    for (    Path p : srcPaths) {
      FileSystem fs=p.getFileSystem(getConf());
      FileStatus[] statuses=fs.globStatus(p);
      if (statuses != null) {
        for (        FileStatus status : statuses) {
          globPaths.add(fs.makeQualified(status.getPath()));
        }
      }
    }
    if (globPaths.isEmpty()) {
      throw new IOException("The resolved paths set is empty." + "  Please check whether the srcPaths exist, where srcPaths = " + srcPaths);
    }
    archive(parentPath,globPaths,archiveName,destPath);
  }
 catch (  IOException ie) {
    System.err.println(ie.getLocalizedMessage());
    return -1;
  }
  return 0;
}
