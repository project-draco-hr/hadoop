{
  final int badNodeIndex=errorState.getBadNodeIndex();
  if (badNodeIndex >= 0) {
    if (nodes.length <= 1) {
      lastException.set(new IOException("All datanodes " + Arrays.toString(nodes) + " are bad. Aborting..."));
      streamerClosed=true;
      return false;
    }
    LOG.warn("Error Recovery for " + block + " in pipeline "+ Arrays.toString(nodes)+ ": datanode "+ badNodeIndex+ "("+ nodes[badNodeIndex]+ ") is bad.");
    failed.add(nodes[badNodeIndex]);
    DatanodeInfo[] newnodes=new DatanodeInfo[nodes.length - 1];
    arraycopy(nodes,newnodes,badNodeIndex);
    final StorageType[] newStorageTypes=new StorageType[newnodes.length];
    arraycopy(storageTypes,newStorageTypes,badNodeIndex);
    final String[] newStorageIDs=new String[newnodes.length];
    arraycopy(storageIDs,newStorageIDs,badNodeIndex);
    setPipeline(newnodes,newStorageTypes,newStorageIDs);
    errorState.adjustState4RestartingNode();
    lastException.clear();
  }
  return true;
}
