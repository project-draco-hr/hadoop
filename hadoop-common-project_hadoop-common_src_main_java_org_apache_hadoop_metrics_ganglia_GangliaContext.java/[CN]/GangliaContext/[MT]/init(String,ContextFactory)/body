{
  super.init(contextName,factory);
  parseAndSetPeriod(PERIOD_PROPERTY);
  metricsServers=Util.parse(getAttribute(SERVERS_PROPERTY),DEFAULT_PORT);
  unitsTable=getAttributeTable(UNITS_PROPERTY);
  slopeTable=getAttributeTable(SLOPE_PROPERTY);
  tmaxTable=getAttributeTable(TMAX_PROPERTY);
  dmaxTable=getAttributeTable(DMAX_PROPERTY);
  multicastEnabled=Boolean.parseBoolean(getAttribute(MULTICAST_PROPERTY));
  String multicastTtlValue=getAttribute(MULTICAST_TTL_PROPERTY);
  if (multicastEnabled) {
    if (multicastTtlValue == null) {
      multicastTtl=DEFAULT_MULTICAST_TTL;
    }
 else {
      multicastTtl=Integer.parseInt(multicastTtlValue);
    }
  }
  try {
    if (multicastEnabled) {
      LOG.info("Enabling multicast for Ganglia with TTL " + multicastTtl);
      datagramSocket=new MulticastSocket();
      ((MulticastSocket)datagramSocket).setTimeToLive(multicastTtl);
    }
 else {
      datagramSocket=new DatagramSocket();
    }
  }
 catch (  IOException e) {
    LOG.error(e);
  }
}
