{
  DelayAnswer delayer=new DelayAnswer(LOG);
  Mockito.doAnswer(delayer).when(mockProxy).journal(Mockito.<RequestInfo>any(),Mockito.eq(1L),Mockito.eq(1),Mockito.same(FAKE_DATA));
  int numToQueue=LIMIT_QUEUE_SIZE_BYTES / FAKE_DATA.length;
  for (int i=1; i <= numToQueue; i++) {
    ch.sendEdits((long)i,1,FAKE_DATA);
  }
  assertEquals(LIMIT_QUEUE_SIZE_BYTES,ch.getQueuedEditsSize());
  try {
    ch.sendEdits(numToQueue + 1,1,FAKE_DATA).get(1,TimeUnit.SECONDS);
    fail("Did not fail to queue more calls after queue was full");
  }
 catch (  ExecutionException ee) {
    if (!(ee.getCause() instanceof LoggerTooFarBehindException)) {
      throw ee;
    }
  }
  delayer.proceed();
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      return ch.getQueuedEditsSize() == 0;
    }
  }
,10,1000);
}
