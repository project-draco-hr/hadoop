{
  target.setBoolean(FileOutputFormat.COMPRESS,source.getBoolean(FileOutputFormat.COMPRESS,false));
  String jobOutputCompressionCodec=source.get(FileOutputFormat.COMPRESS_CODEC);
  if (jobOutputCompressionCodec != null) {
    target.set(FileOutputFormat.COMPRESS_CODEC,jobOutputCompressionCodec);
  }
  String jobOutputCompressionType=source.get(FileOutputFormat.COMPRESS_TYPE);
  if (jobOutputCompressionType != null) {
    target.set(FileOutputFormat.COMPRESS_TYPE,jobOutputCompressionType);
  }
  target.setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,source.getBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,false));
  String mapOutputCompressionCodec=source.get(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC);
  if (mapOutputCompressionCodec != null) {
    target.set(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC,mapOutputCompressionCodec);
  }
  Path[] inputs=org.apache.hadoop.mapred.FileInputFormat.getInputPaths(new JobConf(source));
  boolean needsCompressedInput=false;
  CompressionCodecFactory compressionCodecs=new CompressionCodecFactory(source);
  for (  Path input : inputs) {
    CompressionCodec codec=compressionCodecs.getCodec(input);
    if (codec != null) {
      needsCompressedInput=true;
    }
  }
  setInputCompressionEmulationEnabled(target,needsCompressedInput);
}
