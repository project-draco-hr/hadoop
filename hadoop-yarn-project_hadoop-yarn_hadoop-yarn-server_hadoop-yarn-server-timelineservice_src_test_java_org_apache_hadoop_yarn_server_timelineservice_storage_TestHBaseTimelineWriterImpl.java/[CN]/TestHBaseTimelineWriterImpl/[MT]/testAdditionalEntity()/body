{
  TimelineEvent event=new TimelineEvent();
  String eventId=ApplicationMetricsConstants.CREATED_EVENT_TYPE;
  event.setId(eventId);
  Long expTs=1436512802000L;
  event.setTimestamp(expTs);
  String expKey="foo_event";
  Object expVal="test";
  event.addInfo(expKey,expVal);
  final TimelineEntity entity=new ApplicationEntity();
  entity.setId(ApplicationId.newInstance(0,1).toString());
  entity.addEvent(event);
  TimelineEntities entities=new TimelineEntities();
  entities.addEntity(entity);
  HBaseTimelineWriterImpl hbi=null;
  HBaseTimelineReaderImpl hbr=null;
  try {
    Configuration c1=util.getConfiguration();
    hbi=new HBaseTimelineWriterImpl(c1);
    hbi.init(c1);
    hbi.start();
    hbr=new HBaseTimelineReaderImpl();
    hbr.init(c1);
    hbr.start();
    String cluster="cluster2";
    String user="user2";
    String flow="other_flow_name";
    String flowVersion="1111F01C2287BA";
    long runid=1009876543218L;
    String appName="some app name";
    hbi.write(cluster,user,flow,flowVersion,runid,appName,entities);
    hbi.stop();
    Scan s=new Scan();
    byte[] startRow=EntityRowKey.getRowKeyPrefix(cluster,user,flow,runid,appName);
    s.setStartRow(startRow);
    Connection conn=ConnectionFactory.createConnection(c1);
    ResultScanner scanner=new EntityTable().getResultScanner(c1,conn,s);
    int rowCount=0;
    for (    Result result : scanner) {
      if (result != null && !result.isEmpty()) {
        rowCount++;
        byte[] row1=result.getRow();
        assertTrue(isRowKeyCorrect(row1,cluster,user,flow,runid,appName,entity));
        Map<String,Object> eventsResult=EntityColumnPrefix.EVENT.readResults(result);
        assertEquals(1,eventsResult.size());
        byte[] compoundColumnQualifierBytes=Separator.VALUES.join(Bytes.toBytes(eventId),Bytes.toBytes(TimelineWriterUtils.invert(expTs)),Bytes.toBytes(expKey));
        String valueKey=Bytes.toString(compoundColumnQualifierBytes);
        for (        Map.Entry<String,Object> e : eventsResult.entrySet()) {
          assertEquals(valueKey,e.getKey());
          Object value=e.getValue();
          assertEquals(expVal,value.toString());
        }
      }
    }
    assertEquals(1,rowCount);
    TimelineEntity e1=hbr.getEntity(user,cluster,flow,runid,appName,entity.getType(),entity.getId(),EnumSet.of(TimelineReader.Field.ALL));
    TimelineEntity e2=hbr.getEntity(user,cluster,null,null,appName,entity.getType(),entity.getId(),EnumSet.of(TimelineReader.Field.ALL));
    Set<TimelineEntity> es1=hbr.getEntities(user,cluster,flow,runid,appName,entity.getType(),null,null,null,null,null,null,null,null,null,null,null,EnumSet.of(TimelineReader.Field.ALL));
    Set<TimelineEntity> es2=hbr.getEntities(user,cluster,null,null,appName,entity.getType(),null,null,null,null,null,null,null,null,null,null,null,EnumSet.of(TimelineReader.Field.ALL));
    assertNotNull(e1);
    assertNotNull(e2);
    assertEquals(e1,e2);
    assertEquals(1,es1.size());
    assertEquals(1,es2.size());
    assertEquals(es1,es2);
  }
  finally {
    if (hbi != null) {
      hbi.stop();
      hbi.close();
    }
    if (hbr != null) {
      hbr.stop();
      hbr.close();
    }
  }
}
