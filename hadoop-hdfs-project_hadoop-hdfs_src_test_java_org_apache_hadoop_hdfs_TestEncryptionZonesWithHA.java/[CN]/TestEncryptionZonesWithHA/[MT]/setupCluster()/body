{
  conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_HA_TAILEDITS_PERIOD_KEY,1);
  HAUtil.setAllowStandbyReads(conf,true);
  fsHelper=new FileSystemTestHelper();
  String testRoot=fsHelper.getTestRootDir();
  testRootDir=new File(testRoot).getAbsoluteFile();
  conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH,JavaKeyStoreProvider.SCHEME_NAME + "://file" + new Path(testRootDir.toString(),"test.jks").toUri());
  cluster=new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(1).build();
  cluster.waitActive();
  cluster.transitionToActive(0);
  fs=(DistributedFileSystem)HATestUtil.configureFailoverFs(cluster,conf);
  DFSTestUtil.createKey(TEST_KEY,cluster,0,conf);
  DFSTestUtil.createKey(TEST_KEY,cluster,1,conf);
  nn0=cluster.getNameNode(0);
  nn1=cluster.getNameNode(1);
  dfsAdmin0=new HdfsAdmin(cluster.getURI(0),conf);
  dfsAdmin1=new HdfsAdmin(cluster.getURI(1),conf);
  KeyProviderCryptoExtension nn0Provider=cluster.getNameNode(0).getNamesystem().getProvider();
  fs.getClient().setKeyProvider(nn0Provider);
}
