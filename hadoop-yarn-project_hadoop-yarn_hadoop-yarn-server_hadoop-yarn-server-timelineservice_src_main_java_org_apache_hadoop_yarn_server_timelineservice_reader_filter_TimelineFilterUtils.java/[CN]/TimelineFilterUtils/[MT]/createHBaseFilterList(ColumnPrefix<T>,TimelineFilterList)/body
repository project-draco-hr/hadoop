{
  FilterList list=new FilterList(getHBaseOperator(filterList.getOperator()));
  for (  TimelineFilter filter : filterList.getFilterList()) {
switch (filter.getFilterType()) {
case LIST:
      list.addFilter(createHBaseFilterList(colPrefix,(TimelineFilterList)filter));
    break;
case PREFIX:
  list.addFilter(createHBaseColQualPrefixFilter(colPrefix,(TimelinePrefixFilter)filter));
break;
case COMPARE:
TimelineCompareFilter compareFilter=(TimelineCompareFilter)filter;
list.addFilter(createHBaseSingleColValueFilter(colPrefix.getColumnFamilyBytes(),colPrefix.getColumnPrefixBytes(compareFilter.getKey()),colPrefix.getValueConverter().encodeValue(compareFilter.getValue()),getHBaseCompareOp(compareFilter.getCompareOp()),compareFilter.getKeyMustExist()));
break;
case KEY_VALUE:
TimelineKeyValueFilter kvFilter=(TimelineKeyValueFilter)filter;
list.addFilter(createHBaseSingleColValueFilter(colPrefix.getColumnFamilyBytes(),colPrefix.getColumnPrefixBytes(kvFilter.getKey()),colPrefix.getValueConverter().encodeValue(kvFilter.getValue()),getHBaseCompareOp(kvFilter.getCompareOp()),kvFilter.getKeyMustExist()));
break;
default :
LOG.info("Unexpected filter type " + filter.getFilterType());
break;
}
}
return list;
}
