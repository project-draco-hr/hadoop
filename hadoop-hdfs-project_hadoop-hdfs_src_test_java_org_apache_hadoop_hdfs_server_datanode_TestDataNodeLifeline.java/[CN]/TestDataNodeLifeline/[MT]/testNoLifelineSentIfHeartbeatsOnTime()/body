{
  int numHeartbeats=10;
  CountDownLatch heartbeatsSent=new CountDownLatch(numHeartbeats);
  doAnswer(new LatchCountingAnswer<HeartbeatResponse>(heartbeatsSent)).when(namenode).sendHeartbeat(any(DatanodeRegistration.class),any(StorageReport[].class),anyLong(),anyLong(),anyInt(),anyInt(),anyInt(),any(VolumeFailureSummary.class),anyBoolean());
  while (!heartbeatsSent.await(1,SECONDS)) {
    assertEquals("Expect DataNode to be kept alive by lifeline.",1,namesystem.getNumLiveDataNodes());
    assertEquals("Expect DataNode not marked dead due to lifeline.",0,namesystem.getNumDeadDataNodes());
    assertEquals("Expect DataNode not marked stale due to lifeline.",0,namesystem.getNumStaleDataNodes());
  }
  verify(lifelineNamenode,never()).sendLifeline(any(DatanodeRegistration.class),any(StorageReport[].class),anyLong(),anyLong(),anyInt(),anyInt(),anyInt(),any(VolumeFailureSummary.class));
  assertEquals("Expect metrics to count no lifeline calls.",0,getLongCounter("LifelinesNumOps",getMetrics(metrics.name())));
}
