{
  try {
    testMiniKDC=new MiniKdc(MiniKdc.createConf(),testRootDir);
    testMiniKDC.start();
    testMiniKDC.createPrincipal(httpSpnegoKeytabFile,HTTP_USER + "/localhost");
  }
 catch (  Exception e) {
    assertTrue("Couldn't setup MiniKDC",false);
  }
  try {
    testTimelineServer=new ApplicationHistoryServer();
    conf=new Configuration(false);
    conf.setStrings(TimelineAuthenticationFilterInitializer.PREFIX + "type","kerberos");
    conf.set(TimelineAuthenticationFilterInitializer.PREFIX + KerberosAuthenticationHandler.PRINCIPAL,httpSpnegoPrincipal);
    conf.set(TimelineAuthenticationFilterInitializer.PREFIX + KerberosAuthenticationHandler.KEYTAB,httpSpnegoKeytabFile.getAbsolutePath());
    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
    conf.set(YarnConfiguration.TIMELINE_SERVICE_PRINCIPAL,httpSpnegoPrincipal);
    conf.set(YarnConfiguration.TIMELINE_SERVICE_KEYTAB,httpSpnegoKeytabFile.getAbsolutePath());
    conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    conf.setClass(YarnConfiguration.TIMELINE_SERVICE_STORE,MemoryTimelineStore.class,TimelineStore.class);
    conf.set(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,"localhost:10200");
    conf.set(YarnConfiguration.TIMELINE_SERVICE_WEBAPP_ADDRESS,"localhost:8188");
    conf.set(YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,"localhost:8190");
    conf.set("hadoop.proxyuser.HTTP.hosts","*");
    conf.set("hadoop.proxyuser.HTTP.users",FOO_USER);
    if (withSsl) {
      conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY,HttpConfig.Policy.HTTPS_ONLY.name());
      File base=new File(BASEDIR);
      FileUtil.fullyDelete(base);
      base.mkdirs();
      keystoresDir=new File(BASEDIR).getAbsolutePath();
      sslConfDir=KeyStoreTestUtil.getClasspathDir(TestTimelineAuthenticationFilter.class);
      KeyStoreTestUtil.setupSSLConfig(keystoresDir,sslConfDir,conf,false);
    }
    UserGroupInformation.setConfiguration(conf);
    testTimelineServer.init(conf);
    testTimelineServer.start();
  }
 catch (  Exception e) {
    assertTrue("Couldn't setup TimelineServer",false);
  }
  client=TimelineClient.createTimelineClient();
  client.init(conf);
  client.start();
}
