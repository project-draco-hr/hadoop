{
  TimelineEntity entity=new TimelineEntity();
  entity.setEntityType("OLD_ENTITY_TYPE_1");
  entity.setEntityId("OLD_ENTITY_ID_1");
  entity.setDomainId(TimelineDataManager.DEFAULT_DOMAIN_ID);
  entity.addOtherInfo("NEW_OTHER_INFO_KEY","NEW_OTHER_INFO_VALUE");
  TimelineEntities entities=new TimelineEntities();
  entities.addEntity(entity);
  TimelinePutResponse response=dataManaer.postEntities(entities,UserGroupInformation.getCurrentUser());
  Assert.assertEquals(0,response.getErrors().size());
  entity=store.getEntity("OLD_ENTITY_ID_1","OLD_ENTITY_TYPE_1",null);
  Assert.assertNotNull(entity);
  Assert.assertEquals(TimelineDataManager.DEFAULT_DOMAIN_ID,entity.getDomainId());
  Assert.assertEquals(1,entity.getOtherInfo().size());
  Assert.assertEquals("NEW_OTHER_INFO_KEY",entity.getOtherInfo().keySet().iterator().next());
  Assert.assertEquals("NEW_OTHER_INFO_VALUE",entity.getOtherInfo().values().iterator().next());
  entity=new TimelineEntity();
  entity.setEntityType("OLD_ENTITY_TYPE_1");
  entity.setEntityId("OLD_ENTITY_ID_2");
  entity.setDomainId("NON_DEFAULT");
  entity.addOtherInfo("NEW_OTHER_INFO_KEY","NEW_OTHER_INFO_VALUE");
  entities=new TimelineEntities();
  entities.addEntity(entity);
  response=dataManaer.postEntities(entities,UserGroupInformation.getCurrentUser());
  Assert.assertEquals(1,response.getErrors().size());
  Assert.assertEquals(TimelinePutResponse.TimelinePutError.ACCESS_DENIED,response.getErrors().get(0).getErrorCode());
  entity=store.getEntity("OLD_ENTITY_ID_2","OLD_ENTITY_TYPE_1",null);
  Assert.assertNotNull(entity);
  Assert.assertNull(entity.getDomainId());
  Assert.assertEquals(0,entity.getOtherInfo().size());
}
