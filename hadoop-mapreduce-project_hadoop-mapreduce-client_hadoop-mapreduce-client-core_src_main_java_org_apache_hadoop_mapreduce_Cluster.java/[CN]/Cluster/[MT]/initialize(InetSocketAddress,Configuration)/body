{
  initProviderList();
  final IOException initEx=new IOException("Cannot initialize Cluster. Please check your configuration for " + MRConfig.FRAMEWORK_NAME + " and the correspond server addresses.");
  for (  ClientProtocolProvider provider : providerList) {
    LOG.debug("Trying ClientProtocolProvider : " + provider.getClass().getName());
    ClientProtocol clientProtocol=null;
    try {
      if (jobTrackAddr == null) {
        clientProtocol=provider.create(conf);
      }
 else {
        clientProtocol=provider.create(jobTrackAddr,conf);
      }
      if (clientProtocol != null) {
        clientProtocolProvider=provider;
        client=clientProtocol;
        LOG.debug("Picked " + provider.getClass().getName() + " as the ClientProtocolProvider");
        break;
      }
 else {
        LOG.debug("Cannot pick " + provider.getClass().getName() + " as the ClientProtocolProvider - returned null protocol");
      }
    }
 catch (    Exception e) {
      final String errMsg="Failed to use " + provider.getClass().getName() + " due to error: ";
      initEx.addSuppressed(new IOException(errMsg,e));
      LOG.info(errMsg,e);
    }
  }
  if (null == clientProtocolProvider || null == client) {
    throw initEx;
  }
}
