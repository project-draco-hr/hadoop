{
  final Configuration conf=(Configuration)getServletContext().getAttribute(JspHelper.CURRENT_CONF);
  final UserGroupInformation ugi=getUGI(request,conf);
  try {
    ugi.doAs(new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws IOException {
        ClientProtocol nn=createNameNodeProxy();
        final String path=request.getPathInfo() != null ? request.getPathInfo() : "/";
        String delegationToken=request.getParameter(JspHelper.DELEGATION_PARAMETER_NAME);
        HdfsFileStatus info=nn.getFileInfo(path);
        if ((info != null) && !info.isDir()) {
          try {
            response.sendRedirect(createUri(path,info,ugi,nn,request,delegationToken).toURL().toString());
          }
 catch (          URISyntaxException e) {
            response.getWriter().println(e.toString());
          }
        }
 else         if (info == null) {
          response.sendError(400,"File not found " + path);
        }
 else {
          response.sendError(400,path + ": is a directory");
        }
        return null;
      }
    }
);
  }
 catch (  IOException e) {
    response.sendError(400,e.getMessage());
  }
catch (  InterruptedException e) {
    response.sendError(400,e.getMessage());
  }
}
