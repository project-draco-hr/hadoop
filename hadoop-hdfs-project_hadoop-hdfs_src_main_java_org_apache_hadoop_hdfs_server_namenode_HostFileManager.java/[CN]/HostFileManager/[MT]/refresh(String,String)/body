{
  MutableEntrySet newIncludes=new MutableEntrySet();
  IOException includeException=null;
  try {
    newIncludes.readFile("included",includeFile);
  }
 catch (  IOException e) {
    includeException=e;
  }
  MutableEntrySet newExcludes=new MutableEntrySet();
  IOException excludeException=null;
  try {
    newExcludes.readFile("excluded",excludeFile);
  }
 catch (  IOException e) {
    excludeException=e;
  }
synchronized (this) {
    if (includeException == null) {
      includes=newIncludes;
    }
    if (excludeException == null) {
      excludes=newExcludes;
    }
  }
  if (includeException == null) {
    LOG.info("read includes:\n" + newIncludes);
  }
 else {
    LOG.error("failed to read include file '" + includeFile + "'. "+ "Continuing to use previous include list.",includeException);
  }
  if (excludeException == null) {
    LOG.info("read excludes:\n" + newExcludes);
  }
 else {
    LOG.error("failed to read exclude file '" + excludeFile + "'."+ "Continuing to use previous exclude list.",excludeException);
  }
  if (includeException != null) {
    throw new IOException("error reading hosts file " + includeFile,includeException);
  }
  if (excludeException != null) {
    throw new IOException("error reading exclude file " + excludeFile,excludeException);
  }
}
