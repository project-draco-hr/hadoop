{
  if (result == null || result.isEmpty()) {
    return null;
  }
  TimelineEntity entity=new TimelineEntity();
  String entityType=EntityColumn.TYPE.readResult(result).toString();
  entity.setType(entityType);
  String entityId=EntityColumn.ID.readResult(result).toString();
  entity.setId(entityId);
  Number createdTime=(Number)EntityColumn.CREATED_TIME.readResult(result);
  entity.setCreatedTime(createdTime.longValue());
  if (!singleEntityRead && (entity.getCreatedTime() < createdTimeBegin || entity.getCreatedTime() > createdTimeEnd)) {
    return null;
  }
  boolean checkIsRelatedTo=isRelatedTo != null && isRelatedTo.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.IS_RELATED_TO) || checkIsRelatedTo) {
    readRelationship(entity,result,EntityColumnPrefix.IS_RELATED_TO,true);
    if (checkIsRelatedTo && !TimelineStorageUtils.matchRelations(entity.getIsRelatedToEntities(),isRelatedTo)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.IS_RELATED_TO)) {
      entity.getIsRelatedToEntities().clear();
    }
  }
  boolean checkRelatesTo=relatesTo != null && relatesTo.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.RELATES_TO) || checkRelatesTo) {
    readRelationship(entity,result,EntityColumnPrefix.RELATES_TO,false);
    if (checkRelatesTo && !TimelineStorageUtils.matchRelations(entity.getRelatesToEntities(),relatesTo)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.RELATES_TO)) {
      entity.getRelatesToEntities().clear();
    }
  }
  boolean checkInfo=infoFilters != null && infoFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.INFO) || checkInfo) {
    readKeyValuePairs(entity,result,EntityColumnPrefix.INFO,false);
    if (checkInfo && !TimelineStorageUtils.matchFilters(entity.getInfo(),infoFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.INFO)) {
      entity.getInfo().clear();
    }
  }
  boolean checkConfigs=configFilters != null && configFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.CONFIGS) || checkConfigs) {
    readKeyValuePairs(entity,result,EntityColumnPrefix.CONFIG,true);
    if (checkConfigs && !TimelineStorageUtils.matchFilters(entity.getConfigs(),configFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.CONFIGS)) {
      entity.getConfigs().clear();
    }
  }
  boolean checkEvents=eventFilters != null && eventFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.EVENTS) || checkEvents) {
    readEvents(entity,result,false);
    if (checkEvents && !TimelineStorageUtils.matchEventFilters(entity.getEvents(),eventFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.EVENTS)) {
      entity.getEvents().clear();
    }
  }
  boolean checkMetrics=metricFilters != null && metricFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.METRICS) || checkMetrics) {
    readMetrics(entity,result,EntityColumnPrefix.METRIC);
    if (checkMetrics && !TimelineStorageUtils.matchMetricFilters(entity.getMetrics(),metricFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.METRICS)) {
      entity.getMetrics().clear();
    }
  }
  return entity;
}
