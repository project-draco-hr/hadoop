{
  Map<NodeId,Set<String>> map=new HashMap<NodeId,Set<String>>();
  for (  String nodeToLabels : args.split("[ \n]")) {
    nodeToLabels=nodeToLabels.trim();
    if (nodeToLabels.isEmpty() || nodeToLabels.startsWith("#")) {
      continue;
    }
    String[] splits=nodeToLabels.split(",");
    String nodeIdStr=splits[0];
    if (nodeIdStr.trim().isEmpty()) {
      throw new IOException("node name cannot be empty");
    }
    String nodeName;
    int port;
    if (nodeIdStr.contains(":")) {
      nodeName=nodeIdStr.substring(0,nodeIdStr.indexOf(":"));
      port=Integer.valueOf(nodeIdStr.substring(nodeIdStr.indexOf(":") + 1));
    }
 else {
      nodeName=nodeIdStr;
      port=0;
    }
    NodeId nodeId=NodeId.newInstance(nodeName,port);
    map.put(nodeId,new HashSet<String>());
    for (int i=1; i < splits.length; i++) {
      if (!splits[i].trim().isEmpty()) {
        map.get(nodeId).add(splits[i].trim().toLowerCase());
      }
    }
  }
  return map;
}
