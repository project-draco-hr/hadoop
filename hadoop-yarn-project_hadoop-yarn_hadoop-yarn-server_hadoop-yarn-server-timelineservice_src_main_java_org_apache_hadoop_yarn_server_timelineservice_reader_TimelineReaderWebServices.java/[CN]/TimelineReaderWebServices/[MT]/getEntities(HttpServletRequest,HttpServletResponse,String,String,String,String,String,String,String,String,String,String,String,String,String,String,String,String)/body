{
  String url=req.getRequestURI() + (req.getQueryString() == null ? "" : QUERY_STRING_SEP + req.getQueryString());
  UserGroupInformation callerUGI=TimelineReaderWebServicesUtils.getUser(req);
  LOG.info("Received URL " + url + " from user "+ TimelineReaderWebServicesUtils.getUserName(callerUGI));
  long startTime=Time.monotonicNow();
  init(res);
  TimelineReaderManager timelineReaderManager=getTimelineReaderManager();
  Set<TimelineEntity> entities=null;
  try {
    entities=timelineReaderManager.getEntities(TimelineReaderWebServicesUtils.parseStr(userId),TimelineReaderWebServicesUtils.parseStr(clusterId),TimelineReaderWebServicesUtils.parseStr(flowName),TimelineReaderWebServicesUtils.parseLongStr(flowRunId),TimelineReaderWebServicesUtils.parseStr(appId),TimelineReaderWebServicesUtils.parseStr(entityType),TimelineReaderWebServicesUtils.parseLongStr(limit),TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),TimelineReaderWebServicesUtils.parseKeyStrValuesStr(relatesTo,COMMA_DELIMITER,COLON_DELIMITER),TimelineReaderWebServicesUtils.parseKeyStrValuesStr(isRelatedTo,COMMA_DELIMITER,COLON_DELIMITER),TimelineReaderWebServicesUtils.parseKeyStrValueObj(infofilters,COMMA_DELIMITER,COLON_DELIMITER),TimelineReaderWebServicesUtils.parseKeyStrValueStr(conffilters,COMMA_DELIMITER,COLON_DELIMITER),TimelineReaderWebServicesUtils.parseValuesStr(metricfilters,COMMA_DELIMITER),TimelineReaderWebServicesUtils.parseValuesStr(eventfilters,COMMA_DELIMITER),TimelineReaderWebServicesUtils.parseFieldsStr(fields,COMMA_DELIMITER));
  }
 catch (  Exception e) {
    handleException(e,url,startTime,"createdTime start/end or limit or flowrunid");
  }
  long endTime=Time.monotonicNow();
  if (entities == null) {
    entities=Collections.emptySet();
  }
  LOG.info("Processed URL " + url + " (Took "+ (endTime - startTime)+ " ms.)");
  return entities;
}
