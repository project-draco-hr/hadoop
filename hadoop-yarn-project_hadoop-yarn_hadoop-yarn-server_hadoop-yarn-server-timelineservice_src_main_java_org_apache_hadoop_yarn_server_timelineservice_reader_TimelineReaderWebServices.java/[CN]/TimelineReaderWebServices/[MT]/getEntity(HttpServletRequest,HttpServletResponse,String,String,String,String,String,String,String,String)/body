{
  init(res);
  TimelineReaderManager timelineReaderManager=getTimelineReaderManager();
  UserGroupInformation callerUGI=getUser(req);
  TimelineEntity entity=null;
  try {
    entity=timelineReaderManager.getEntity(callerUGI != null && (userId == null || userId.isEmpty()) ? callerUGI.getUserName().trim() : parseStr(userId),parseStr(clusterId),parseStr(flowId),parseLongStr(flowRunId),parseStr(appId),parseStr(entityType),parseStr(entityId),parseFieldsStr(fields,COMMA_DELIMITER));
  }
 catch (  NumberFormatException e) {
    throw new BadRequestException("flowRunId is not a numeric value.");
  }
catch (  IllegalArgumentException e) {
    throw new BadRequestException("Requested Invalid Field.");
  }
catch (  Exception e) {
    LOG.error("Error getting entity",e);
    throw new WebApplicationException(e,Response.Status.INTERNAL_SERVER_ERROR);
  }
  if (entity == null) {
    throw new NotFoundException("Timeline entity {id: " + parseStr(entityId) + ", type: "+ parseStr(entityType)+ " } is not found");
  }
  return entity;
}
