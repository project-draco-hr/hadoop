{
  ArrayList<File> dirs=new ArrayList<File>();
  StringBuilder invalidDirs=new StringBuilder();
  for (  URI dirURI : dataDirs) {
    if (!"file".equalsIgnoreCase(dirURI.getScheme())) {
      LOG.warn("Unsupported URI schema in " + dirURI + ". Ignoring ...");
      invalidDirs.append("\"").append(dirURI).append("\" ");
      continue;
    }
    File data=new File(dirURI.getPath());
    try {
      DiskChecker.checkDir(localFS,new Path(data.toURI()),permission);
      dirs.add(data);
    }
 catch (    IOException e) {
      LOG.warn("Invalid directory in: " + DFS_DATANODE_DATA_DIR_KEY + ": ",e);
      invalidDirs.append("\"").append(data.getCanonicalPath()).append("\" ");
    }
  }
  if (dirs.size() == 0)   throw new IOException("All directories in " + DFS_DATANODE_DATA_DIR_KEY + " are invalid: "+ invalidDirs);
  return dirs;
}
