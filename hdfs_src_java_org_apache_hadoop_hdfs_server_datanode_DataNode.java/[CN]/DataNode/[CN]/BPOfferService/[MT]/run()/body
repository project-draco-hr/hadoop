{
  LOG.info(bpRegistration + "In BPOfferService.run, data = " + data+ ";bp="+ blockPoolId);
  try {
    try {
      setupBP(conf,dataDirs);
      register();
    }
 catch (    IOException ioe) {
      LOG.fatal(bpRegistration + " initialization failed for block pool " + blockPoolId,ioe);
      return;
    }
    initialized=true;
    while (shouldRun && shouldServiceRun) {
      try {
        startDistributedUpgradeIfNeeded();
        offerService();
      }
 catch (      Exception ex) {
        LOG.error("Exception: " + StringUtils.stringifyException(ex));
        if (shouldRun && shouldServiceRun) {
          try {
            Thread.sleep(5000);
          }
 catch (          InterruptedException ie) {
            LOG.warn("Received exception: ",ie);
          }
        }
      }
    }
  }
 catch (  Throwable ex) {
    LOG.warn("Unexpected exception ",ex);
  }
 finally {
    LOG.warn(bpRegistration + " ending block pool service for: " + blockPoolId);
    cleanUp();
  }
}
