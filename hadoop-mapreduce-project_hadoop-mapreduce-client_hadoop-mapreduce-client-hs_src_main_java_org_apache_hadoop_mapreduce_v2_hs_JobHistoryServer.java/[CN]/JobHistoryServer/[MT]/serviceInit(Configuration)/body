{
  Configuration config=new YarnConfiguration(conf);
  config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY,true);
  MRWebAppUtil.initialize(getConfig());
  try {
    doSecureLogin(conf);
  }
 catch (  IOException ie) {
    throw new YarnRuntimeException("History Server Failed to login",ie);
  }
  jobHistoryService=new JobHistory();
  historyContext=(HistoryContext)jobHistoryService;
  stateStore=createStateStore(conf);
  this.jhsDTSecretManager=createJHSSecretManager(conf,stateStore);
  clientService=createHistoryClientService();
  aggLogDelService=new AggregatedLogDeletionService();
  hsAdminServer=new HSAdminServer(aggLogDelService,jobHistoryService);
  addService(stateStore);
  addService(new HistoryServerSecretManagerService());
  addService(jobHistoryService);
  addService(clientService);
  addService(aggLogDelService);
  addService(hsAdminServer);
  DefaultMetricsSystem.initialize("JobHistoryServer");
  JvmMetrics jm=JvmMetrics.initSingleton("JobHistoryServer",null);
  pauseMonitor=new JvmPauseMonitor();
  addService(pauseMonitor);
  jm.setPauseMonitor(pauseMonitor);
  super.serviceInit(config);
}
