{
  if (!LogLevel.isValidProtocol(bindProtocol)) {
    throw new Exception("Invalid server protocol " + bindProtocol);
  }
  if (!LogLevel.isValidProtocol(connectProtocol)) {
    throw new Exception("Invalid client protocol " + connectProtocol);
  }
  Level oldLevel=log.getEffectiveLevel();
  Assert.assertNotEquals("Get default Log Level which shouldn't be ERROR.",Level.ERROR,oldLevel);
  if (isSpnego) {
    conf.set(PRINCIPAL,KerberosTestUtils.getServerPrincipal());
    conf.set(KEYTAB,KerberosTestUtils.getKeytabFile());
    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
    conf.setBoolean(CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION,true);
    UserGroupInformation.setConfiguration(conf);
  }
  final HttpServer2 server=createServer(bindProtocol,isSpnego);
  final String authority=NetUtils.getHostPortString(server.getConnectorAddress(0));
  KerberosTestUtils.doAsClient(new Callable<Void>(){
    @Override public Void call() throws Exception {
      getLevel(connectProtocol,authority);
      setLevel(connectProtocol,authority,newLevel);
      return null;
    }
  }
);
  server.stop();
  GenericTestUtils.setLogLevel(log,oldLevel);
}
