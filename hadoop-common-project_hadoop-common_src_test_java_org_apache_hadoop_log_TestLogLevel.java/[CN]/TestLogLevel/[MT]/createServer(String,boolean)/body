{
  HttpServer2.Builder builder=new HttpServer2.Builder().setName("..").addEndpoint(new URI(protocol + "://localhost:0")).setFindPort(true).setConf(conf);
  if (isSpnego) {
    builder.setSecurityEnabled(true).setUsernameConfKey(PRINCIPAL).setKeytabConfKey(KEYTAB).setACL(new AccessControlList(clientPrincipal));
  }
  if (protocol.equals(LogLevel.PROTOCOL_HTTPS)) {
    builder=builder.keyPassword(sslConf.get("ssl.server.keystore.keypassword")).keyStore(sslConf.get("ssl.server.keystore.location"),sslConf.get("ssl.server.keystore.password"),sslConf.get("ssl.server.keystore.type","jks")).trustStore(sslConf.get("ssl.server.truststore.location"),sslConf.get("ssl.server.truststore.password"),sslConf.get("ssl.server.truststore.type","jks"));
  }
  HttpServer2 server=builder.build();
  if (isSpnego) {
    server.addInternalServlet("logLevel","/logLevel",LogLevel.Servlet.class,true);
  }
  server.start();
  return server;
}
