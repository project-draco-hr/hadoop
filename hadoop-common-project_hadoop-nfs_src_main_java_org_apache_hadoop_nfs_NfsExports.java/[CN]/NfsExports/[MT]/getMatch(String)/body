{
  String[] parts=line.split("\\s+");
  final String host;
  AccessPrivilege privilege=AccessPrivilege.READ_ONLY;
switch (parts.length) {
case 1:
    host=StringUtils.toLowerCase(parts[0]).trim();
  break;
case 2:
host=StringUtils.toLowerCase(parts[0]).trim();
String option=parts[1].trim();
if ("rw".equalsIgnoreCase(option)) {
privilege=AccessPrivilege.READ_WRITE;
}
break;
default :
throw new IllegalArgumentException("Incorrectly formatted line '" + line + "'");
}
if (host.equals("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("Using match all for '" + host + "' and "+ privilege);
}
return new AnonymousMatch(privilege);
}
 else if (CIDR_FORMAT_SHORT.matcher(host).matches()) {
if (LOG.isDebugEnabled()) {
LOG.debug("Using CIDR match for '" + host + "' and "+ privilege);
}
return new CIDRMatch(privilege,new SubnetUtils(host).getInfo());
}
 else if (CIDR_FORMAT_LONG.matcher(host).matches()) {
if (LOG.isDebugEnabled()) {
LOG.debug("Using CIDR match for '" + host + "' and "+ privilege);
}
String[] pair=host.split("/");
return new CIDRMatch(privilege,new SubnetUtils(pair[0],pair[1]).getInfo());
}
 else if (host.contains("*") || host.contains("?") || host.contains("[")|| host.contains("]")) {
if (LOG.isDebugEnabled()) {
LOG.debug("Using Regex match for '" + host + "' and "+ privilege);
}
return new RegexMatch(privilege,host);
}
 else if (HOSTNAME_FORMAT.matcher(host).matches()) {
if (LOG.isDebugEnabled()) {
LOG.debug("Using exact match for '" + host + "' and "+ privilege);
}
return new ExactMatch(privilege,host);
}
 else {
throw new IllegalArgumentException("Invalid hostname provided '" + host + "'");
}
}
