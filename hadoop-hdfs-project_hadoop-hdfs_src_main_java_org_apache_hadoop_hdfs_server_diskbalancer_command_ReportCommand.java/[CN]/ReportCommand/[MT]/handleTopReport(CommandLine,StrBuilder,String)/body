{
  Collections.sort(getCluster().getNodes(),Collections.reverseOrder());
  setTopNodes(parseTopNodes(cmd,result));
  final String outputLine=String.format("Reporting top %d DataNode(s) benefiting from running DiskBalancer.",getTopNodes());
  recordOutput(result,outputLine);
  ListIterator<DiskBalancerDataNode> li=getCluster().getNodes().listIterator();
  for (int i=0; i < getTopNodes() && li.hasNext(); i++) {
    DiskBalancerDataNode dbdn=li.next();
    result.appendln(String.format(nodeFormat,i + 1,getTopNodes(),dbdn.getDataNodeName(),dbdn.getDataNodeIP(),dbdn.getDataNodePort(),dbdn.getDataNodeUUID(),dbdn.getVolumeCount(),dbdn.getNodeDataDensity()));
  }
}
