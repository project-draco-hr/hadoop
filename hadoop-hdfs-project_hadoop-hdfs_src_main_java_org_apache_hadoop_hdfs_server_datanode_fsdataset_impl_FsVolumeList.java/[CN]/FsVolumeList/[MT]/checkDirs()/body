{
  try (AutoCloseableLock lock=checkDirsLock.acquire()){
    Set<File> failedVols=null;
    final List<FsVolumeImpl> volumeList=getVolumes();
    for (Iterator<FsVolumeImpl> i=volumeList.iterator(); i.hasNext(); ) {
      final FsVolumeImpl fsv=i.next();
      try (FsVolumeReference ref=fsv.obtainReference()){
        fsv.checkDirs();
      }
 catch (      DiskErrorException e) {
        FsDatasetImpl.LOG.warn("Removing failed volume " + fsv + ": ",e);
        if (failedVols == null) {
          failedVols=new HashSet<>(1);
        }
        failedVols.add(new File(fsv.getBasePath()).getAbsoluteFile());
        addVolumeFailureInfo(fsv);
        removeVolume(fsv);
      }
catch (      ClosedChannelException e) {
        FsDatasetImpl.LOG.debug("Caught exception when obtaining " + "reference count on closed volume",e);
      }
catch (      IOException e) {
        FsDatasetImpl.LOG.error("Unexpected IOException",e);
      }
    }
    if (failedVols != null && failedVols.size() > 0) {
      FsDatasetImpl.LOG.warn("Completed checkDirs. Found " + failedVols.size() + " failure volumes.");
    }
    waitVolumeRemoved(5000,checkDirsLockCondition);
    return failedVols;
  }
 }
