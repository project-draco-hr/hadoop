{
  Configuration conf=new HdfsConfiguration();
  conf.setBoolean(DFSConfigKeys.DFS_DISK_BALANCER_ENABLED,true);
  final int numDatanodes=2;
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).build();
  try {
    cluster.waitActive();
    ClusterConnector nameNodeConnector=ConnectorFactory.getCluster(cluster.getFileSystem(0).getUri(),conf);
    DiskBalancerCluster DiskBalancerCluster=new DiskBalancerCluster(nameNodeConnector);
    DiskBalancerCluster.readClusterInfo();
    assertEquals(DiskBalancerCluster.getNodes().size(),numDatanodes);
    DataNode dnNode=cluster.getDataNodes().get(0);
    DiskBalancerDataNode dbDnNode=DiskBalancerCluster.getNodeByUUID(dnNode.getDatanodeUuid());
    assertEquals(dnNode.getDatanodeUuid(),dbDnNode.getDataNodeUUID());
    assertEquals(dnNode.getDatanodeId().getIpAddr(),dbDnNode.getDataNodeIP());
    assertEquals(dnNode.getDatanodeId().getHostName(),dbDnNode.getDataNodeName());
    try (FsDatasetSpi.FsVolumeReferences ref=dnNode.getFSDataset().getFsVolumeReferences()){
      assertEquals(ref.size(),dbDnNode.getVolumeCount());
    }
   }
  finally {
    cluster.shutdown();
  }
}
