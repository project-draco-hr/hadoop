{
  SchedulerApp application=getApplication(applicationAttemptId);
  if (application == null) {
    LOG.info("Calling allocate on removed " + "or non existant application " + applicationAttemptId);
    return EMPTY_ALLOCATION;
  }
  normalizeRequests(ask);
  for (  ContainerId releasedContainerId : release) {
    completedContainer(getRMContainer(releasedContainerId),RMContainerEventType.RELEASED);
  }
synchronized (application) {
    if (!ask.isEmpty()) {
      LOG.info("DEBUG --- allocate: pre-update" + " applicationAttemptId=" + applicationAttemptId + " application="+ application);
      application.showRequests();
      application.updateResourceRequests(ask);
      LOG.info("DEBUG --- allocate: post-update");
      application.showRequests();
    }
    LOG.info("DEBUG --- allocate:" + " applicationAttemptId=" + applicationAttemptId + " #ask="+ ask.size());
    return new Allocation(application.pullNewlyAllocatedContainers(),application.getHeadroom());
  }
}
