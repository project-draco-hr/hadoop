{
  if (cmd == null)   return true;
switch (cmd.getAction()) {
case DatanodeProtocol.DNA_REGISTER:
    LOG.info("DatanodeCommand action from standby: DNA_REGISTER");
  actor.reRegister();
break;
case DatanodeProtocol.DNA_ACCESSKEYUPDATE:
LOG.info("DatanodeCommand action from standby: DNA_ACCESSKEYUPDATE");
if (dn.isBlockTokenEnabled) {
dn.blockPoolTokenSecretManager.addKeys(getBlockPoolId(),((KeyUpdateCommand)cmd).getExportedKeys());
}
break;
case DatanodeProtocol.DNA_TRANSFER:
case DatanodeProtocol.DNA_INVALIDATE:
case DatanodeProtocol.DNA_SHUTDOWN:
case DatanodeProtocol.DNA_RECOVERBLOCK:
case DatanodeProtocol.DNA_BALANCERBANDWIDTHUPDATE:
LOG.warn("Got a command from standby NN - ignoring command:" + cmd.getAction());
break;
default :
LOG.warn("Unknown DatanodeCommand action: " + cmd.getAction());
}
return true;
}
