{
  client().addFilter(new LoggingFilter(System.out));
  boolean isCapacityScheduler=rm.getResourceScheduler() instanceof CapacityScheduler;
  CapacitySchedulerConfiguration csconf=new CapacitySchedulerConfiguration();
  String[] queues={"default","test"};
  csconf.setQueues("root",queues);
  csconf.setCapacity("root.default",50.0f);
  csconf.setCapacity("root.test",50.0f);
  csconf.setAcl("root",QueueACL.ADMINISTER_QUEUE,"someuser");
  csconf.setAcl("root.default",QueueACL.ADMINISTER_QUEUE,"someuser");
  csconf.setAcl("root.test",QueueACL.ADMINISTER_QUEUE,"someuser");
  rm.getResourceScheduler().reinitialize(csconf,rm.getRMContext());
  rm.start();
  MockNM amNodeManager=rm.registerNode("127.0.0.1:1234",2048);
  String[] mediaTypes={MediaType.APPLICATION_JSON,MediaType.APPLICATION_XML};
  MediaType[] contentTypes={MediaType.APPLICATION_JSON_TYPE,MediaType.APPLICATION_XML_TYPE};
  for (  String mediaType : mediaTypes) {
    for (    MediaType contentType : contentTypes) {
      RMApp app=rm.submitApp(CONTAINER_MB,"",webserviceUserName);
      amNodeManager.nodeHeartbeat(true);
      AppQueue targetQueue=new AppQueue("test");
      Object entity;
      if (contentType.equals(MediaType.APPLICATION_JSON_TYPE)) {
        entity=appQueueToJSON(targetQueue);
      }
 else {
        entity=targetQueue;
      }
      ClientResponse response=this.constructWebResource("apps",app.getApplicationId().toString(),"queue").entity(entity,contentType).accept(mediaType).put(ClientResponse.class);
      if (!isAuthenticationEnabled()) {
        assertResponseStatusCode(Status.UNAUTHORIZED,response.getStatusInfo());
        continue;
      }
      assertResponseStatusCode(Status.OK,response.getStatusInfo());
      String expectedQueue="test";
      if (!isCapacityScheduler) {
        expectedQueue="root.test";
      }
      if (mediaType.equals(MediaType.APPLICATION_JSON)) {
        verifyAppQueueJson(response,expectedQueue);
      }
 else {
        verifyAppQueueXML(response,expectedQueue);
      }
      Assert.assertEquals(expectedQueue,app.getQueue());
      app=rm.submitApp(CONTAINER_MB,"","someuser");
      amNodeManager.nodeHeartbeat(true);
      response=this.constructWebResource("apps",app.getApplicationId().toString(),"queue").entity(entity,contentType).accept(mediaType).put(ClientResponse.class);
      assertResponseStatusCode(Status.FORBIDDEN,response.getStatusInfo());
      if (isCapacityScheduler) {
        Assert.assertEquals("default",app.getQueue());
      }
 else {
        Assert.assertEquals("root.someuser",app.getQueue());
      }
    }
  }
  rm.stop();
}
