{
  String urlPath="apps";
  rm.start();
  MockNM amNodeManager=rm.registerNode("127.0.0.1:1234",2048);
  amNodeManager.nodeHeartbeat(true);
  ApplicationSubmissionContextInfo appInfo=new ApplicationSubmissionContextInfo();
  appInfo.setApplicationName("test");
  appInfo.setPriority(3);
  appInfo.setMaxAppAttempts(2);
  appInfo.setQueue("testqueue");
  appInfo.setApplicationType("test-type");
  HashMap<String,LocalResourceInfo> lr=new HashMap<>();
  LocalResourceInfo y=new LocalResourceInfo();
  y.setUrl(new URI("http://www.test.com/file.txt"));
  y.setSize(100);
  y.setTimestamp(System.currentTimeMillis());
  y.setType(LocalResourceType.FILE);
  y.setVisibility(LocalResourceVisibility.APPLICATION);
  lr.put("example",y);
  appInfo.getContainerLaunchContextInfo().setResources(lr);
  appInfo.getResource().setMemory(1024);
  appInfo.getResource().setvCores(1);
  String body="<?xml version=\"1.0\" encoding=\"UTF-8\" " + "standalone=\"yes\"?><blah/>";
  ClientResponse response=this.constructWebResource(urlPath).accept(MediaType.APPLICATION_XML).entity(body,MediaType.APPLICATION_XML).post(ClientResponse.class);
  assertEquals(Status.BAD_REQUEST,response.getClientResponseStatus());
  body="{\"a\" : \"b\"}";
  response=this.constructWebResource(urlPath).accept(MediaType.APPLICATION_XML).entity(body,MediaType.APPLICATION_JSON).post(ClientResponse.class);
  validateResponseStatus(response,Status.BAD_REQUEST);
  rm.stop();
}
