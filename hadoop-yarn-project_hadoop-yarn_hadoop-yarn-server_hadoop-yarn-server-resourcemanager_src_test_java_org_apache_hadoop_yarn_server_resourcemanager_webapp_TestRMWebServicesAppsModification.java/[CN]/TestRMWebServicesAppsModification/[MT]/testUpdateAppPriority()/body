{
  client().addFilter(new LoggingFilter(System.out));
  if (!(rm.getResourceScheduler() instanceof CapacityScheduler)) {
    return;
  }
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  Configuration conf=new Configuration();
  conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY,10);
  cs.setClusterMaxPriority(conf);
  CapacitySchedulerConfiguration csconf=new CapacitySchedulerConfiguration();
  String[] queues={"default","test"};
  csconf.setQueues("root",queues);
  csconf.setCapacity("root.default",50.0f);
  csconf.setCapacity("root.test",50.0f);
  csconf.setAcl("root",QueueACL.ADMINISTER_QUEUE,"someuser");
  csconf.setAcl("root.default",QueueACL.ADMINISTER_QUEUE,"someuser");
  csconf.setAcl("root.test",QueueACL.ADMINISTER_QUEUE,"someuser");
  rm.getResourceScheduler().reinitialize(csconf,rm.getRMContext());
  rm.start();
  MockNM amNodeManager=rm.registerNode("127.0.0.1:1234",2048);
  String[] mediaTypes={MediaType.APPLICATION_JSON,MediaType.APPLICATION_XML};
  MediaType[] contentTypes={MediaType.APPLICATION_JSON_TYPE,MediaType.APPLICATION_XML_TYPE};
  for (  String mediaType : mediaTypes) {
    for (    MediaType contentType : contentTypes) {
      RMApp app=rm.submitApp(CONTAINER_MB,"",webserviceUserName);
      amNodeManager.nodeHeartbeat(true);
      int modifiedPriority=8;
      AppPriority priority=new AppPriority(modifiedPriority);
      Object entity;
      if (contentType.equals(MediaType.APPLICATION_JSON_TYPE)) {
        entity=appPriorityToJSON(priority);
      }
 else {
        entity=priority;
      }
      ClientResponse response=this.constructWebResource("apps",app.getApplicationId().toString(),"priority").entity(entity,contentType).accept(mediaType).put(ClientResponse.class);
      if (!isAuthenticationEnabled()) {
        assertResponseStatusCode(Status.UNAUTHORIZED,response.getStatusInfo());
        continue;
      }
      assertResponseStatusCode(Status.OK,response.getStatusInfo());
      if (mediaType.equals(MediaType.APPLICATION_JSON)) {
        verifyAppPriorityJson(response,modifiedPriority);
      }
 else {
        verifyAppPriorityXML(response,modifiedPriority);
      }
      response=this.constructWebResource("apps",app.getApplicationId().toString(),"priority").accept(mediaType).get(ClientResponse.class);
      assertResponseStatusCode(Status.OK,response.getStatusInfo());
      if (mediaType.equals(MediaType.APPLICATION_JSON)) {
        verifyAppPriorityJson(response,modifiedPriority);
      }
 else {
        verifyAppPriorityXML(response,modifiedPriority);
      }
      app=rm.submitApp(CONTAINER_MB,"","someuser");
      amNodeManager.nodeHeartbeat(true);
      response=this.constructWebResource("apps",app.getApplicationId().toString(),"priority").entity(entity,contentType).accept(mediaType).put(ClientResponse.class);
      assertResponseStatusCode(Status.FORBIDDEN,response.getStatusInfo());
    }
  }
  rm.stop();
}
