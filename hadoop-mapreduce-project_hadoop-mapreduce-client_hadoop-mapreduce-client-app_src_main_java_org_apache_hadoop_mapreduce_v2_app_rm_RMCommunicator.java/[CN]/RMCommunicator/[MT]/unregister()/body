{
  try {
    FinalApplicationStatus finishState=FinalApplicationStatus.UNDEFINED;
    JobImpl jobImpl=(JobImpl)job;
    if (jobImpl.getInternalState() == JobStateInternal.SUCCEEDED) {
      finishState=FinalApplicationStatus.SUCCEEDED;
    }
 else     if (jobImpl.getInternalState() == JobStateInternal.KILLED || (jobImpl.getInternalState() == JobStateInternal.RUNNING && isSignalled)) {
      finishState=FinalApplicationStatus.KILLED;
    }
 else     if (jobImpl.getInternalState() == JobStateInternal.FAILED || jobImpl.getInternalState() == JobStateInternal.ERROR) {
      finishState=FinalApplicationStatus.FAILED;
    }
    StringBuffer sb=new StringBuffer();
    for (    String s : job.getDiagnostics()) {
      sb.append(s).append("\n");
    }
    LOG.info("Setting job diagnostics to " + sb.toString());
    String historyUrl=JobHistoryUtils.getHistoryUrl(getConfig(),context.getApplicationID());
    LOG.info("History url is " + historyUrl);
    FinishApplicationMasterRequest request=recordFactory.newRecordInstance(FinishApplicationMasterRequest.class);
    request.setAppAttemptId(this.applicationAttemptId);
    request.setFinalApplicationStatus(finishState);
    request.setDiagnostics(sb.toString());
    request.setTrackingUrl(historyUrl);
    scheduler.finishApplicationMaster(request);
  }
 catch (  Exception are) {
    LOG.error("Exception while unregistering ",are);
  }
}
