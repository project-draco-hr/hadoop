{
  try {
    FinalApplicationStatus finishState=FinalApplicationStatus.UNDEFINED;
    JobImpl jobImpl=(JobImpl)job;
    if (jobImpl.getInternalState() == JobStateInternal.SUCCEEDED) {
      finishState=FinalApplicationStatus.SUCCEEDED;
    }
 else     if (jobImpl.getInternalState() == JobStateInternal.KILLED || (jobImpl.getInternalState() == JobStateInternal.RUNNING && isSignalled)) {
      finishState=FinalApplicationStatus.KILLED;
    }
 else     if (jobImpl.getInternalState() == JobStateInternal.FAILED || jobImpl.getInternalState() == JobStateInternal.ERROR) {
      finishState=FinalApplicationStatus.FAILED;
    }
    StringBuffer sb=new StringBuffer();
    for (    String s : job.getDiagnostics()) {
      sb.append(s).append("\n");
    }
    LOG.info("Setting job diagnostics to " + sb.toString());
    String historyUrl=WebAppUtil.getSchemePrefix() + JobHistoryUtils.getHistoryUrl(getConfig(),context.getApplicationID());
    LOG.info("History url is " + historyUrl);
    FinishApplicationMasterRequest request=FinishApplicationMasterRequest.newInstance(finishState,sb.toString(),historyUrl);
    while (true) {
      FinishApplicationMasterResponse response=scheduler.finishApplicationMaster(request);
      if (response.getIsUnregistered()) {
        break;
      }
      LOG.info("Waiting for application to be successfully unregistered.");
      Thread.sleep(rmPollInterval);
    }
  }
 catch (  Exception are) {
    LOG.error("Exception while unregistering ",are);
  }
}
