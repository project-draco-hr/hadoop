{
  thread=new Thread(new Runnable(){
    @Override public void run(){
      ContainerAllocatorEvent event=null;
      while (!Thread.currentThread().isInterrupted()) {
        try {
          if (concurrentRunningTasks < maxConcurrentRunningTasks) {
            event=eventQueue.take();
            ContainerId cId=recordFactory.newRecordInstance(ContainerId.class);
            cId.setApplicationAttemptId(getContext().getApplicationAttemptId());
            cId.setId(containerCount++);
            Container container=recordFactory.newRecordInstance(Container.class);
            container.setId(cId);
            NodeId nodeId=recordFactory.newRecordInstance(NodeId.class);
            nodeId.setHost("dummy");
            nodeId.setPort(1234);
            container.setNodeId(nodeId);
            container.setContainerToken(null);
            container.setNodeHttpAddress("localhost:9999");
            getContext().getEventHandler().handle(new TaskAttemptContainerAssignedEvent(event.getAttemptID(),container,null));
            concurrentRunningTasks++;
          }
 else {
            Thread.sleep(1000);
          }
        }
 catch (        InterruptedException e) {
          System.out.println("Returning, interrupted");
          return;
        }
      }
    }
  }
);
  thread.start();
  super.start();
}
