{
  thread=new Thread(new Runnable(){
    @Override @SuppressWarnings("unchecked") public void run(){
      ContainerAllocatorEvent event=null;
      while (!Thread.currentThread().isInterrupted()) {
        try {
          if (concurrentRunningTasks < maxConcurrentRunningTasks) {
            event=eventQueue.take();
            ContainerId cId=ContainerId.newContainerId(getContext().getApplicationAttemptId(),containerCount++);
            Container container=recordFactory.newRecordInstance(Container.class);
            container.setId(cId);
            NodeId nodeId=NodeId.newInstance("dummy",1234);
            container.setNodeId(nodeId);
            container.setContainerToken(null);
            container.setNodeHttpAddress("localhost:8042");
            getContext().getEventHandler().handle(new TaskAttemptContainerAssignedEvent(event.getAttemptID(),container,null));
            concurrentRunningTasks++;
          }
 else {
            Thread.sleep(1000);
          }
        }
 catch (        InterruptedException e) {
          System.out.println("Returning, interrupted");
          return;
        }
      }
    }
  }
);
  thread.start();
  super.serviceStart();
}
