{
  try {
    Map<String,String> environment=new HashMap<String,String>();
    String setupHadoopHomeCommand=Shell.WINDOWS ? "HADOOP_COMMON_HOME=C:\\fake\\PATH\\to\\hadoop\\common\\home" : "HADOOP_COMMON_HOME=/fake/path/to/hadoop/common/home";
    MRApps.setEnvFromInputString(environment,setupHadoopHomeCommand,conf);
    MRApps.setEnvFromInputString(environment,conf.get(MRJobConfig.MAPRED_ADMIN_USER_ENV,MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV),conf);
    String executionPaths=environment.get(Shell.WINDOWS ? "PATH" : "LD_LIBRARY_PATH");
    String toFind=Shell.WINDOWS ? "C:\\fake\\PATH\\to\\hadoop\\common\\home\\bin" : "/fake/path/to/hadoop/common/home/lib/native";
    assertTrue("execution path does not include the hadoop lib location " + toFind,executionPaths.contains(toFind));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Exception in testing execution environment for MapReduce task");
    tearDown();
  }
  try {
    JobConf conf=new JobConf(mr.getConfig());
    Path inDir=new Path("input");
    Path outDir=new Path("output");
    String input="The input";
    configure(conf,inDir,outDir,input,ExecutionEnvCheckMapClass.class,IdentityReducer.class);
    launchTest(conf,inDir,outDir,input);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Exception in testing propagation of env setting to child task");
    tearDown();
  }
}
