':"\nwork_dir=$(dirname $0)\nbase_name=$(basename $0)\ncd $work_dir\n\nif [ $HOD_PYTHON_HOME ]; then\nexec $HOD_PYTHON_HOME -OO -u $base_name ${1+"$@"}\nelif [ -e /usr/bin/python ]; then\nexec /usr/bin/python -OO -u $base_name ${1+"$@"}\nelif [ -e /usr/local/bin/python ]; then\nexec /usr/local/bin/python -OO -u $base_name ${1+"$@"}\nelse\nexec python -OO -u $base_name ${1+"$@"}\nfi\n":'
from os import popen3
import os, sys
import re
import time
from datetime import datetime
from optparse import OptionParser
myName = os.path.basename(sys.argv[0])
myName = re.sub('.*/', '', myName)
reVersion = re.compile('.*(\\d+_\\d+).*')
VERSION = '$HeadURL$'
reMatch = reVersion.match(VERSION)
if reMatch:
    VERSION = reMatch.group(1)
    VERSION = re.sub('_', '.', VERSION)
else:
    VERSION = 'DEV'
options = ({'short': '-p', 'long': '--package', 'type': 'string', 'action': 'store', 'dest': 'package', 'metavar': ' ', 'default': 'hadoop', 'help': 'Bin file for hadoop', }, {'short': '-d', 'long': '--days', 'type': 'int', 'action': 'store', 'dest': 'days', 'metavar': ' ', 'default': 7, 'help': 'Number of days before logs are deleted', }, {'short': '-c', 'long': '--config', 'type': 'string', 'action': 'store', 'dest': 'config', 'metavar': ' ', 'default': None, 'help': 'config directory for hadoop', }, {'short': '-l', 'long': '--logs', 'type': 'string', 'action': 'store', 'dest': 'log', 'metavar': ' ', 'default': '/user', 'help': 'directory prefix under which logs are stored per user', }, {'short': '-n', 'long': '--dynamicdfs', 'type': 'string', 'action': 'store', 'dest': 'dynamicdfs', 'metavar': ' ', 'default': 'false', 'help': "'true', if the cluster is used to bring up dynamic dfs clusters, 'false' otherwise", }, {'short': '-r', 'long': '--retain-master-logs', 'type': 'string', 'action': 'store', 'dest': 'retain_masters_logs', 'metavar': ' ', 'default': 'false', 'help': "'true' if the logs of the masters(jobtracker and namenode if '--dynamicdfs' is set) have to be retained, 'false' if everything has to be removed", })
if (__name__ == '__main__'):
    runcondense()
