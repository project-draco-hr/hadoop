{
  if (args.length < 1) {
    printUsage("");
    return -1;
  }
  int i=0;
  String cmd=args[i++];
  try {
    if ("-runCleanerTask".equals(cmd)) {
      if (args.length != 1) {
        printUsage(cmd);
        return -1;
      }
 else {
        return runCleanerTask();
      }
    }
 else     if ("-help".equals(cmd)) {
      if (i < args.length) {
        printUsage(args[i]);
      }
 else {
        printHelp("");
      }
      return 0;
    }
 else {
      System.err.println(cmd.substring(1) + ": Unknown command");
      printUsage("");
      return -1;
    }
  }
 catch (  IllegalArgumentException arge) {
    System.err.println(cmd.substring(1) + ": " + arge.getLocalizedMessage());
    printUsage(cmd);
  }
catch (  RemoteException e) {
    try {
      String[] content;
      content=e.getLocalizedMessage().split("\n");
      System.err.println(cmd.substring(1) + ": " + content[0]);
    }
 catch (    Exception ex) {
      System.err.println(cmd.substring(1) + ": " + ex.getLocalizedMessage());
    }
  }
catch (  Exception e) {
    System.err.println(cmd.substring(1) + ": " + e.getLocalizedMessage());
  }
  return -1;
}
