{
  CSAssignment assignment=new CSAssignment(Resources.createResource(0,0),NodeType.NODE_LOCAL);
  printChildQueues();
  for (Iterator<CSQueue> iter=sortAndGetChildrenAllocationIterator(node); iter.hasNext(); ) {
    CSQueue childQueue=iter.next();
    if (LOG.isDebugEnabled()) {
      LOG.debug("Trying to assign to queue: " + childQueue.getQueuePath() + " stats: "+ childQueue);
    }
    ResourceLimits childLimits=getResourceLimitsOfChild(childQueue,cluster,limits,node.getPartition());
    assignment=childQueue.assignContainers(cluster,node,childLimits,schedulingMode);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Assigned to queue: " + childQueue.getQueuePath() + " stats: "+ childQueue+ " --> "+ assignment.getResource()+ ", "+ assignment.getType());
    }
    if (Resources.greaterThan(resourceCalculator,cluster,assignment.getResource(),Resources.none())) {
      if (RMNodeLabelsManager.NO_LABEL.equals(node.getPartition())) {
        iter.remove();
        LOG.info("Re-sorting assigned queue: " + childQueue.getQueuePath() + " stats: "+ childQueue);
        childQueues.add(childQueue);
        if (LOG.isDebugEnabled()) {
          printChildQueues();
        }
      }
      break;
    }
  }
  return assignment;
}
