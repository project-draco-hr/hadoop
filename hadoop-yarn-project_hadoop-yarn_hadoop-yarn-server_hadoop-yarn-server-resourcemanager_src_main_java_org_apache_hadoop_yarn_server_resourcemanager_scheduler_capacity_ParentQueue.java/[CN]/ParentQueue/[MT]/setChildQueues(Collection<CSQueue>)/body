{
  float childCapacities=0;
  for (  CSQueue queue : childQueues) {
    childCapacities+=queue.getCapacity();
  }
  float delta=Math.abs(1.0f - childCapacities);
  if (((queueCapacities.getCapacity() > 0) && (delta > PRECISION)) || ((queueCapacities.getCapacity() == 0) && (childCapacities > 0))) {
    throw new IllegalArgumentException("Illegal" + " capacity of " + childCapacities + " for children of queue "+ queueName);
  }
  for (  String nodeLabel : labelManager.getClusterNodeLabels()) {
    float capacityByLabel=queueCapacities.getCapacity(nodeLabel);
    float sum=0;
    for (    CSQueue queue : childQueues) {
      sum+=queue.getQueueCapacities().getCapacity(nodeLabel);
    }
    if ((capacityByLabel > 0 && Math.abs(1.0f - sum) > PRECISION) || (capacityByLabel == 0) && (sum > 0)) {
      throw new IllegalArgumentException("Illegal" + " capacity of " + sum + " for children of queue "+ queueName+ " for label="+ nodeLabel);
    }
  }
  this.childQueues.clear();
  this.childQueues.addAll(childQueues);
  if (LOG.isDebugEnabled()) {
    LOG.debug("setChildQueues: " + getChildQueuesToPrint());
  }
}
