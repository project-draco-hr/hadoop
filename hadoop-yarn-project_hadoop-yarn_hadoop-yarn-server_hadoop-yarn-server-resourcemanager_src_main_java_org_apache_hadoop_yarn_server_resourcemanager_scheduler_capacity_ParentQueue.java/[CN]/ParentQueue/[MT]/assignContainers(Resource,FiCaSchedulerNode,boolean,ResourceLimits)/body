{
  CSAssignment assignment=new CSAssignment(Resources.createResource(0,0),NodeType.NODE_LOCAL);
  Set<String> nodeLabels=node.getLabels();
  if (!SchedulerUtils.checkQueueAccessToNode(accessibleLabels,nodeLabels)) {
    return assignment;
  }
  while (canAssign(clusterResource,node)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Trying to assign containers to child-queue of " + getQueueName());
    }
    boolean localNeedToUnreserve=false;
    if (!canAssignToThisQueue(clusterResource,nodeLabels)) {
      localNeedToUnreserve=assignToQueueIfUnreserve(clusterResource);
      if (!localNeedToUnreserve) {
        break;
      }
    }
    CSAssignment assignedToChild=assignContainersToChildQueues(clusterResource,node,localNeedToUnreserve | needToUnreserve,resourceLimits);
    assignment.setType(assignedToChild.getType());
    if (Resources.greaterThan(resourceCalculator,clusterResource,assignedToChild.getResource(),Resources.none())) {
      super.allocateResource(clusterResource,assignedToChild.getResource(),nodeLabels);
      Resources.addTo(assignment.getResource(),assignedToChild.getResource());
      LOG.info("assignedContainer" + " queue=" + getQueueName() + " usedCapacity="+ getUsedCapacity()+ " absoluteUsedCapacity="+ getAbsoluteUsedCapacity()+ " used="+ queueUsage.getUsed()+ " cluster="+ clusterResource);
    }
 else {
      break;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("ParentQ=" + getQueueName() + " assignedSoFarInThisIteration="+ assignment.getResource()+ " usedCapacity="+ getUsedCapacity()+ " absoluteUsedCapacity="+ getAbsoluteUsedCapacity());
    }
    if (!rootQueue || assignment.getType() == NodeType.OFF_SWITCH) {
      if (LOG.isDebugEnabled()) {
        if (rootQueue && assignment.getType() == NodeType.OFF_SWITCH) {
          LOG.debug("Not assigning more than one off-switch container," + " assignments so far: " + assignment);
        }
      }
      break;
    }
  }
  return assignment;
}
