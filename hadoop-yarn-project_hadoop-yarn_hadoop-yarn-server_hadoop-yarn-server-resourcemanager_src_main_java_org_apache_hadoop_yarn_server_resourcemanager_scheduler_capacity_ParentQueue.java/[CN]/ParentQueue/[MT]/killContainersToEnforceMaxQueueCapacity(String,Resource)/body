{
  Iterator<RMContainer> killableContainerIter=getKillableContainers(partition);
  if (!killableContainerIter.hasNext()) {
    return;
  }
  Resource partitionResource=labelManager.getResourceByLabel(partition,null);
  Resource maxResource=Resources.multiply(partitionResource,getQueueCapacities().getAbsoluteMaximumCapacity(partition));
  while (Resources.greaterThan(resourceCalculator,partitionResource,queueUsage.getUsed(partition),maxResource)) {
    RMContainer toKillContainer=killableContainerIter.next();
    FiCaSchedulerApp attempt=csContext.getApplicationAttempt(toKillContainer.getContainerId().getApplicationAttemptId());
    FiCaSchedulerNode node=csContext.getNode(toKillContainer.getAllocatedNode());
    if (null != attempt && null != node) {
      LeafQueue lq=attempt.getCSLeafQueue();
      lq.completedContainer(clusterResource,attempt,node,toKillContainer,SchedulerUtils.createPreemptedContainerStatus(toKillContainer.getContainerId(),SchedulerUtils.PREEMPTED_CONTAINER),RMContainerEventType.KILL,null,false);
      LOG.info("Killed container=" + toKillContainer.getContainerId() + " from queue="+ lq.getQueueName()+ " to make queue="+ this.getQueueName()+ "'s max-capacity enforced");
    }
    if (!killableContainerIter.hasNext()) {
      break;
    }
  }
}
