{
  RpcInfo info=(RpcInfo)e.getMessage();
  RpcCall call=(RpcCall)info.header();
  SocketAddress remoteAddress=info.remoteAddress();
  if (!allowInsecurePorts) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Will not allow connections from unprivileged ports. " + "Checking for valid client port...");
    }
    if (remoteAddress instanceof InetSocketAddress) {
      InetSocketAddress inetRemoteAddress=(InetSocketAddress)remoteAddress;
      if (inetRemoteAddress.getPort() > 1023) {
        LOG.warn("Connection attempted from '" + inetRemoteAddress + "' "+ "which is an unprivileged port. Rejecting connection.");
        sendRejectedReply(call,remoteAddress,ctx);
        return;
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Accepting connection from '" + remoteAddress + "'");
        }
      }
    }
 else {
      LOG.warn("Could not determine remote port of socket address '" + remoteAddress + "'. Rejecting connection.");
      sendRejectedReply(call,remoteAddress,ctx);
      return;
    }
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace(program + " procedure #" + call.getProcedure());
  }
  if (this.progNumber != call.getProgram()) {
    LOG.warn("Invalid RPC call program " + call.getProgram());
    sendAcceptedReply(call,remoteAddress,AcceptState.PROG_UNAVAIL,ctx);
    return;
  }
  int ver=call.getVersion();
  if (ver < lowProgVersion || ver > highProgVersion) {
    LOG.warn("Invalid RPC call version " + ver);
    sendAcceptedReply(call,remoteAddress,AcceptState.PROG_MISMATCH,ctx);
    return;
  }
  handleInternal(ctx,info);
}
