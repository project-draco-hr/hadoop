{
  int numDatanodes=2;
  cluster=new MiniDFSCluster.Builder(config).numDataNodes(numDatanodes).build();
  cluster.waitActive();
  DFSTestUtil.createFile(cluster.getFileSystem(),new Path("/test1"),fileSize,fileSize,blockSize,(short)2,seed);
  JMXGet jmx=new JMXGet();
  String serviceName="NameNode";
  jmx.setService(serviceName);
  jmx.init();
  assertTrue("error printAllValues",checkPrintAllValues(jmx));
  try {
    DFSTestUtil.waitForMetric(jmx,"NumLiveDataNodes",numDatanodes);
  }
 catch (  TimeoutException e) {
    assertEquals(String.format(WRONG_METRIC_VALUE_ERROR_MSG,"NumLiveDataNodes"),numDatanodes,Integer.parseInt(jmx.getValue("NumLiveDataNodes")));
  }
  assertGauge("CorruptBlocks",Long.parseLong(jmx.getValue("CorruptBlocks")),getMetrics("FSNamesystem"));
  cluster.shutdown();
  MBeanServerConnection mbsc=ManagementFactory.getPlatformMBeanServer();
  ObjectName query=new ObjectName("Hadoop:service=" + serviceName + ",*");
  Set<ObjectName> names=mbsc.queryNames(query,null);
  assertTrue("No beans should be registered for " + serviceName,names.isEmpty());
}
