{
  final FileSystem lfs=FileSystem.getLocal(new Configuration());
  final Path rootTempDir=new Path(System.getProperty("test.build.data","/tmp")).makeQualified(lfs.getUri(),lfs.getWorkingDirectory());
  final Path tempDir=new Path(rootTempDir,"TestJobConfigurationParser");
  lfs.delete(tempDir,true);
  JobConf jConf=new JobConf(false);
  String key="test.data";
  String value="hello world";
  jConf.set(key,value);
  Path jobConfPath=new Path(tempDir.toString(),"job.xml");
  lfs.delete(jobConfPath,false);
  DataOutputStream jobConfStream=lfs.create(jobConfPath);
  jConf.writeXml(jobConfStream);
  jobConfStream.close();
  Properties properties=JobConfigurationParser.parse(lfs.open(jobConfPath));
  assertEquals("Total number of extracted properties (" + properties.size() + ") doesn't match the expected size of 1 ["+ "JobConfigurationParser]",1,properties.size());
  assertTrue("Key " + key + " is missing in the configuration extracted "+ "[JobConfigurationParser]",properties.keySet().contains(key));
  assertEquals("JobConfigurationParser couldn't recover the parameters" + " correctly",value,properties.get(key));
  LoggedJob job=new LoggedJob();
  job.setJobProperties(properties);
  ZombieJob zjob=new ZombieJob(job,null);
  Configuration zconf=zjob.getJobConf();
  assertEquals("ZombieJob couldn't recover the parameters correctly",value,zconf.get(key));
}
