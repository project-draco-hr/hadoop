{
  ApplicationSubmissionContext submissionContext=request.getApplicationSubmissionContext();
  try {
    ApplicationId applicationId=submissionContext.getApplicationId();
    String clientTokenStr=null;
    String user=UserGroupInformation.getCurrentUser().getShortUserName();
    if (UserGroupInformation.isSecurityEnabled()) {
      Token<ApplicationTokenIdentifier> clientToken=new Token<ApplicationTokenIdentifier>(new ApplicationTokenIdentifier(applicationId),this.clientToAMSecretManager);
      clientTokenStr=clientToken.encodeToUrlString();
      LOG.debug("Sending client token as " + clientTokenStr);
    }
    submissionContext.setQueue(submissionContext.getQueue() == null ? "default" : submissionContext.getQueue());
    submissionContext.setApplicationName(submissionContext.getApplicationName() == null ? "N/A" : submissionContext.getApplicationName());
    ApplicationStore appStore=rmContext.getApplicationsStore().createApplicationStore(submissionContext.getApplicationId(),submissionContext);
    RMApp application=new RMAppImpl(applicationId,rmContext,getConfig(),submissionContext.getApplicationName(),user,submissionContext.getQueue(),submissionContext,clientTokenStr,appStore,this.amLivelinessMonitor,this.scheduler,this.masterService);
    if (rmContext.getRMApps().putIfAbsent(applicationId,application) != null) {
      throw new IOException("Application with id " + applicationId + " is already present! Cannot add a duplicate!");
    }
    this.rmContext.getDispatcher().getEventHandler().handle(new RMAppEvent(applicationId,RMAppEventType.START));
    LOG.info("Application with id " + applicationId.getId() + " submitted by user "+ user+ " with "+ submissionContext);
  }
 catch (  IOException ie) {
    LOG.info("Exception in submitting application",ie);
    throw RPCUtil.getRemoteException(ie);
  }
  SubmitApplicationResponse response=recordFactory.newRecordInstance(SubmitApplicationResponse.class);
  return response;
}
