{
  LOG.info("doCheckPolicy started---------------------------:");
  short srcReplication=1;
  long targetReplication=2;
  long metaReplication=1;
  long stripeLength=2;
  long blockSize=1024;
  int numBlock=3;
  ConfigBuilder cb=new ConfigBuilder();
  cb.addPolicy("policy1","/user/dhruba/policytest",srcReplication,targetReplication,metaReplication,stripeLength);
  cb.persist();
  Path dir=new Path("/user/dhruba/policytest/");
  Path file1=new Path(dir + "/file1");
  Path file2=new Path(dir + "/file2");
  RaidNode cnode=null;
  try {
    Path destPath=new Path("/destraid/user/dhruba/policytest");
    fileSys.delete(dir,true);
    fileSys.delete(destPath,true);
    Configuration localConf=new Configuration(conf);
    localConf.set(RaidNode.RAID_LOCATION_KEY,"/destraid");
    cnode=RaidNode.createRaidNode(null,localConf);
    createOldFile(fileSys,file2,2,numBlock,blockSize);
    FileStatus[] listPaths=null;
    long firstmodtime=0;
    while (true) {
      Thread.sleep(1000);
      try {
        listPaths=fileSys.listStatus(destPath);
      }
 catch (      FileNotFoundException e) {
        LOG.warn("File not found " + destPath);
        continue;
      }
      int count=0;
      if (listPaths != null && listPaths.length == 1) {
        for (        FileStatus s : listPaths) {
          LOG.info("doCheckPolicy found path " + s.getPath());
          if (!s.getPath().toString().endsWith(".tmp") && fileSys.getFileStatus(file2).getReplication() == targetReplication) {
            count++;
            firstmodtime=s.getModificationTime();
          }
        }
      }
      if (count > 0) {
        break;
      }
      LOG.info("doCheckPolicy waiting for files to be raided. Found " + (listPaths == null ? "none" : listPaths.length));
    }
    assertEquals(listPaths.length,1);
    LOG.info("doCheckPolicy all files found in Raid the first time.");
    LOG.info("doCheckPolicy: recreating source file");
    createOldFile(fileSys,file2,2,numBlock,blockSize);
    FileStatus st=fileSys.getFileStatus(file2);
    assertTrue(st.getModificationTime() > firstmodtime);
    while (true) {
      Thread.sleep(20000L);
      listPaths=fileSys.listStatus(destPath);
      int count=0;
      if (listPaths != null && listPaths.length == 1) {
        for (        FileStatus s : listPaths) {
          LOG.info("doCheckPolicy found path " + s.getPath() + " "+ s.getModificationTime());
          if (!s.getPath().toString().endsWith(".tmp") && s.getModificationTime() > firstmodtime && fileSys.getFileStatus(file2).getReplication() == targetReplication) {
            count++;
          }
        }
      }
      if (count > 0) {
        break;
      }
      LOG.info("doCheckPolicy waiting for files to be raided. Found " + (listPaths == null ? "none" : listPaths.length));
    }
    assertEquals(listPaths.length,1);
    LOG.info("doCheckPolicy: file got re-raided as expected.");
  }
 catch (  Exception e) {
    LOG.info("doCheckPolicy Exception " + e + StringUtils.stringifyException(e));
    throw e;
  }
 finally {
    if (cnode != null) {
      cnode.stop();
      cnode.join();
    }
    LOG.info("doTestPathFilter delete file " + file1);
    fileSys.delete(file1,false);
  }
  LOG.info("doCheckPolicy completed:");
}
