{
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  final byte[] buffer=new byte[17];
  final int times=totalLength / buffer.length;
  final int remainder=totalLength % buffer.length;
  int position=0;
  try {
    for (int i=0; i < times; i++) {
      fsdis.readFully(position,buffer);
      position+=buffer.length;
      baos.write(buffer);
    }
    if (remainder > 0) {
      fsdis.readFully(position,buffer,0,remainder);
      position+=remainder;
      baos.write(buffer,0,remainder);
    }
    try {
      fsdis.readFully(position,buffer,0,1);
      assertTrue(false);
    }
 catch (    IOException ioe) {
    }
    assertEquals(totalLength,position);
    final byte[] result=baos.toByteArray();
    assertEquals(totalLength,result.length);
    return result;
  }
  finally {
    if (close) {
      fsdis.close();
    }
  }
}
