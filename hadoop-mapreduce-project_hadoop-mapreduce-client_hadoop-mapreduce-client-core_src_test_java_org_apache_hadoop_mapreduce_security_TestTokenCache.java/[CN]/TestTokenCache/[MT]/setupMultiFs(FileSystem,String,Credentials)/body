{
  FileSystem mockFs=mock(FileSystem.class);
  when(mockFs.getCanonicalServiceName()).thenReturn(null);
  when(mockFs.getUri()).thenReturn(new URI("multifs:///"));
  when(mockFs.getDelegationTokens(any(String.class))).thenThrow(new RuntimeException("getDelegationTokens(renewer) should not be called"));
  when(mockFs.getDelegationTokens(renewer,credentials)).thenAnswer(new Answer<List<Token<?>>>(){
    @Override public List<Token<?>> answer(    InvocationOnMock invocation) throws Throwable {
      List<Token<?>> newTokens=new LinkedList<Token<?>>();
      if (credentials.getToken(new Text("singlefs1")) == null) {
        newTokens.addAll(singleFs.getDelegationTokens(renewer,credentials));
      }
 else {
        newTokens.add(credentials.getToken(new Text("singlefs1")));
      }
      Token<?> mockToken2=mock(Token.class);
      when(mockToken2.getService()).thenReturn(new Text("singlefs2"));
      newTokens.add(mockToken2);
      return newTokens;
    }
  }
);
  return mockFs;
}
