{
  if (LOG.isTraceEnabled()) {
    LOG.trace(op + ": " + path+ Param.toSortedString(", ",offset,length,bufferSize));
  }
  final String fullpath=path.getAbsolutePath();
  final DataNode datanode=(DataNode)context.getAttribute("datanode");
switch (op.getValue()) {
case OPEN:
{
      final Configuration conf=new Configuration(datanode.getConf());
      final InetSocketAddress nnRpcAddr=NameNode.getAddress(conf);
      final DFSClient dfsclient=new DFSClient(nnRpcAddr,conf);
      final DFSDataInputStream in=new DFSClient.DFSDataInputStream(dfsclient.open(fullpath,bufferSize.getValue(),true));
      in.seek(offset.getValue());
      final StreamingOutput streaming=new StreamingOutput(){
        @Override public void write(        final OutputStream out) throws IOException {
          final Long n=length.getValue();
          if (n == null) {
            IOUtils.copyBytes(in,out,bufferSize.getValue());
          }
 else {
            IOUtils.copyBytes(in,out,n,false);
          }
        }
      }
;
      return Response.ok(streaming).type(MediaType.APPLICATION_OCTET_STREAM).build();
    }
default :
  throw new UnsupportedOperationException(op + " is not supported");
}
}
