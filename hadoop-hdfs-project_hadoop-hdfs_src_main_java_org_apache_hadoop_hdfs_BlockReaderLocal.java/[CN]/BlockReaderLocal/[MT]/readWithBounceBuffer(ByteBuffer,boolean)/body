{
  int total=0;
  int bb=drainDataBuf(buf);
  if (bb >= 0) {
    total+=bb;
    if (buf.remaining() == 0)     return total;
  }
  boolean eof=true, done=false;
  do {
    if (buf.isDirect() && (buf.remaining() >= maxReadaheadLength) && ((dataPos % bytesPerChecksum) == 0)) {
      int oldLimit=buf.limit();
      int nRead;
      try {
        buf.limit(buf.position() + maxReadaheadLength);
        nRead=fillBuffer(buf,canSkipChecksum);
      }
  finally {
        buf.limit(oldLimit);
      }
      if (nRead < maxReadaheadLength) {
        done=true;
      }
      if (nRead > 0) {
        eof=false;
      }
      total+=nRead;
    }
 else {
      if (fillDataBuf(canSkipChecksum)) {
        done=true;
      }
      bb=drainDataBuf(buf);
      if (bb >= 0) {
        eof=false;
        total+=bb;
      }
    }
  }
 while ((!done) && (buf.remaining() > 0));
  return (eof && total == 0) ? -1 : total;
}
