{
  final Server jetty=createJettyServer();
  Context context=new Context();
  context.setContextPath("/foo");
  jetty.setHandler(context);
  context.addFilter(new FilterHolder(AFilter.class),"/*",0);
  context.addServlet(new ServletHolder(PingServlet.class),"/bar");
  try {
    jetty.start();
    URL nonAuthURL=new URL(getJettyURL() + "/foo/bar");
    URL authURL=new URL(getJettyURL() + "/foo/bar?authenticated=foo");
    HttpURLConnection conn=(HttpURLConnection)nonAuthURL.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED,conn.getResponseCode());
    conn=(HttpURLConnection)authURL.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    URL url=new URL(nonAuthURL.toExternalForm() + "?op=GETDELEGATIONTOKEN");
    conn=(HttpURLConnection)url.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED,conn.getResponseCode());
    url=new URL(authURL.toExternalForm() + "&op=GETDELEGATIONTOKEN&renewer=foo");
    conn=(HttpURLConnection)url.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    ObjectMapper mapper=new ObjectMapper();
    Map map=mapper.readValue(conn.getInputStream(),Map.class);
    String dt=(String)((Map)map.get("Token")).get("urlString");
    Assert.assertNotNull(dt);
    url=new URL(nonAuthURL.toExternalForm() + "?delegation=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    url=new URL(authURL.toExternalForm() + "&delegation=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    url=new URL(nonAuthURL.toExternalForm() + "?op=RENEWDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED,conn.getResponseCode());
    url=new URL(authURL.toExternalForm() + "&op=RENEWDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    url=new URL(getJettyURL() + "/foo/bar?authenticated=bar&op=RENEWDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_FORBIDDEN,conn.getResponseCode());
    url=new URL(nonAuthURL.toExternalForm() + "?op=CANCELDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    url=new URL(nonAuthURL.toExternalForm() + "?op=CANCELDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_NOT_FOUND,conn.getResponseCode());
    url=new URL(authURL.toExternalForm() + "&op=GETDELEGATIONTOKEN&renewer=foo");
    conn=(HttpURLConnection)url.openConnection();
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
    mapper=new ObjectMapper();
    map=mapper.readValue(conn.getInputStream(),Map.class);
    dt=(String)((Map)map.get("Token")).get("urlString");
    Assert.assertNotNull(dt);
    url=new URL(authURL.toExternalForm() + "&op=CANCELDELEGATIONTOKEN&token=" + dt);
    conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("PUT");
    Assert.assertEquals(HttpURLConnection.HTTP_OK,conn.getResponseCode());
  }
  finally {
    jetty.stop();
  }
}
