{
  Context context=new Context();
  context.setContextPath("/foo");
  jetty.setHandler(context);
  context.addFilter(new FilterHolder(HeaderVerifyingFilter.class),"/*",0);
  context.addServlet(new ServletHolder(PingServlet.class),"/bar");
  jetty.start();
  final URL nonAuthURL=new URL(getJettyURL() + "/foo/bar");
  URL authURL=new URL(getJettyURL() + "/foo/bar?authenticated=foo");
  URL authURL2=new URL(getJettyURL() + "/foo/bar?authenticated=bar");
  DelegationTokenAuthenticatedURL.Token token=new DelegationTokenAuthenticatedURL.Token();
  final DelegationTokenAuthenticatedURL aUrl=new DelegationTokenAuthenticatedURL();
  aUrl.getDelegationToken(authURL,token,FOO_USER);
  Assert.assertNotNull(token.getDelegationToken());
  Assert.assertEquals(new Text("token-kind"),token.getDelegationToken().getKind());
  DelegationTokenAuthenticatedURL.Token dtOnlyToken=new DelegationTokenAuthenticatedURL.Token();
  dtOnlyToken.setDelegationToken(token.getDelegationToken());
  aUrl.getDelegationToken(authURL,dtOnlyToken,FOO_USER);
  aUrl.renewDelegationToken(authURL,dtOnlyToken);
  aUrl.renewDelegationToken(nonAuthURL,dtOnlyToken);
  aUrl.renewDelegationToken(authURL2,dtOnlyToken);
  DelegationTokenAuthenticatedURL.Token cancelledToken=new DelegationTokenAuthenticatedURL.Token();
  cancelledToken.setDelegationToken(dtOnlyToken.getDelegationToken());
  aUrl.cancelDelegationToken(authURL,dtOnlyToken);
  try {
    aUrl.renewDelegationToken(authURL,cancelledToken);
    Assert.fail();
  }
 catch (  Exception ex) {
    LOG.info("Intentional exception caught:",ex);
    GenericTestUtils.assertExceptionContains("can't be found in cache",ex);
  }
}
