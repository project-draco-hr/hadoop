{
  final String doAsUser=doAs ? OK_USER : null;
  org.apache.hadoop.conf.Configuration conf=new org.apache.hadoop.conf.Configuration();
  conf.set("hadoop.security.authentication","kerberos");
  UserGroupInformation.setConfiguration(conf);
  File testDir=new File("target/" + UUID.randomUUID().toString());
  Assert.assertTrue(testDir.mkdirs());
  MiniKdc kdc=new MiniKdc(MiniKdc.createConf(),testDir);
  final Server jetty=createJettyServer();
  Context context=new Context();
  context.setContextPath("/foo");
  jetty.setHandler(context);
  ((AbstractConnector)jetty.getConnectors()[0]).setResolveNames(true);
  context.addFilter(new FilterHolder(KDTAFilter.class),"/*",0);
  context.addServlet(new ServletHolder(UserServlet.class),"/bar");
  try {
    kdc.start();
    File keytabFile=new File(testDir,"test.keytab");
    kdc.createPrincipal(keytabFile,"client","HTTP/localhost");
    KDTAFilter.keytabFile=keytabFile.getAbsolutePath();
    jetty.start();
    final DelegationTokenAuthenticatedURL.Token token=new DelegationTokenAuthenticatedURL.Token();
    final DelegationTokenAuthenticatedURL aUrl=new DelegationTokenAuthenticatedURL();
    final URL url=new URL(getJettyURL() + "/foo/bar");
    try {
      aUrl.getDelegationToken(url,token,FOO_USER,doAsUser);
      Assert.fail();
    }
 catch (    AuthenticationException ex) {
      Assert.assertTrue(ex.getMessage().contains("GSSException"));
    }
    doAsKerberosUser("client",keytabFile.getAbsolutePath(),new Callable<Void>(){
      @Override public Void call() throws Exception {
        aUrl.getDelegationToken(url,token,doAs ? doAsUser : "client",doAsUser);
        Assert.assertNotNull(token.getDelegationToken());
        Assert.assertEquals(new Text("token-kind"),token.getDelegationToken().getKind());
        ByteArrayInputStream buf=new ByteArrayInputStream(token.getDelegationToken().getIdentifier());
        DataInputStream dis=new DataInputStream(buf);
        DelegationTokenIdentifier id=new DelegationTokenIdentifier(new Text("token-kind"));
        id.readFields(dis);
        dis.close();
        Assert.assertEquals(doAs ? new Text(OK_USER) : new Text("client"),id.getOwner());
        if (doAs) {
          Assert.assertEquals(new Text("client"),id.getRealUser());
        }
        aUrl.renewDelegationToken(url,token,doAsUser);
        Assert.assertNotNull(token.getDelegationToken());
        aUrl.getDelegationToken(url,token,FOO_USER,doAsUser);
        Assert.assertNotNull(token.getDelegationToken());
        try {
          aUrl.renewDelegationToken(url,token,doAsUser);
          Assert.fail();
        }
 catch (        Exception ex) {
          Assert.assertTrue(ex.getMessage().contains("403"));
        }
        aUrl.getDelegationToken(url,token,FOO_USER,doAsUser);
        aUrl.cancelDelegationToken(url,token,doAsUser);
        Assert.assertNull(token.getDelegationToken());
        return null;
      }
    }
);
  }
  finally {
    jetty.stop();
    kdc.stop();
  }
}
