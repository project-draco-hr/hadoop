{
  while (!this.appFinishing.get() && !this.aborted.get()) {
synchronized (this) {
      try {
        waiting.set(true);
        if (this.rollingMonitorInterval > 0) {
          wait(this.rollingMonitorInterval * 1000);
          if (this.appFinishing.get() || this.aborted.get()) {
            break;
          }
          uploadLogsForContainers();
        }
 else {
          wait(THREAD_SLEEP_TIME);
        }
      }
 catch (      InterruptedException e) {
        LOG.warn("PendingContainers queue is interrupted");
        this.appFinishing.set(true);
      }
    }
  }
  if (this.aborted.get()) {
    return;
  }
  uploadLogsForContainers();
  List<Path> localAppLogDirs=new ArrayList<Path>();
  for (  String rootLogDir : dirsHandler.getLogDirsForCleanup()) {
    Path logPath=new Path(rootLogDir,applicationId);
    try {
      lfs.getFileStatus(logPath);
      localAppLogDirs.add(logPath);
    }
 catch (    UnsupportedFileSystemException ue) {
      LOG.warn("Log dir " + rootLogDir + "is an unsupported file system",ue);
      continue;
    }
catch (    IOException fe) {
      continue;
    }
  }
  if (localAppLogDirs.size() > 0) {
    this.delService.delete(this.userUgi.getShortUserName(),null,localAppLogDirs.toArray(new Path[localAppLogDirs.size()]));
  }
  this.dispatcher.getEventHandler().handle(new ApplicationEvent(this.appId,ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED));
  this.appAggregationFinished.set(true);
}
