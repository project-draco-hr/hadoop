{
  LOG.info("Uploading logs for container " + containerId + ". Current good log dirs are "+ StringUtils.join(",",dirsHandler.getLogDirs()));
  final LogKey logKey=new LogKey(containerId);
  final LogValue logValue=new LogValue(dirsHandler.getLogDirs(),containerId,userUgi.getShortUserName(),logAggregationContext,this.uploadedFileMeta);
  try {
    writer.append(logKey,logValue);
  }
 catch (  Exception e) {
    LOG.error("Couldn't upload logs for " + containerId + ". Skipping this container.");
    return new HashSet<Path>();
  }
  this.uploadedFileMeta.addAll(logValue.getCurrentUpLoadedFileMeta());
  Iterable<String> mask=Iterables.filter(uploadedFileMeta,new Predicate<String>(){
    @Override public boolean apply(    String next){
      return logValue.getAllExistingFilesMeta().contains(next);
    }
  }
);
  this.uploadedFileMeta=Sets.newHashSet(mask);
  return logValue.getCurrentUpLoadedFilesPath();
}
