{
  this.jobid=new JobID();
  this.jobid.readFields(in);
  this.setupProgress=in.readFloat();
  this.mapProgress=in.readFloat();
  this.reduceProgress=in.readFloat();
  this.cleanupProgress=in.readFloat();
  this.runState=WritableUtils.readEnum(in,State.class);
  this.startTime=in.readLong();
  this.user=Text.readString(in);
  this.priority=WritableUtils.readEnum(in,JobPriority.class);
  this.schedulingInfo=Text.readString(in);
  this.finishTime=in.readLong();
  this.isRetired=in.readBoolean();
  this.historyFile=Text.readString(in);
  this.jobName=Text.readString(in);
  this.trackingUrl=Text.readString(in);
  this.jobFile=Text.readString(in);
  int numACLs=in.readInt();
  for (int i=0; i < numACLs; i++) {
    JobACL aclType=WritableUtils.readEnum(in,JobACL.class);
    AccessControlList acl=new AccessControlList(" ");
    acl.readFields(in);
    this.jobACLs.put(aclType,acl);
  }
}
