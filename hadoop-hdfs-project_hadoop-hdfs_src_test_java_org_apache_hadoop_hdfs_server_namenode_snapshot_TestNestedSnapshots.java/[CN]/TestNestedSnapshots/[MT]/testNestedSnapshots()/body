{
  cluster.getNamesystem().getSnapshotManager().setAllowNestedSnapshots(true);
  final Path foo=new Path("/testNestedSnapshots/foo");
  final Path bar=new Path(foo,"bar");
  final Path file1=new Path(bar,"file1");
  DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,SEED);
  print("create file " + file1);
  final String s1name="foo-s1";
  final Path s1path=SnapshotTestHelper.getSnapshotRoot(foo,s1name);
  hdfs.allowSnapshot(foo);
  print("allow snapshot " + foo);
  hdfs.createSnapshot(foo,s1name);
  print("create snapshot " + s1name);
  final String s2name="bar-s2";
  final Path s2path=SnapshotTestHelper.getSnapshotRoot(bar,s2name);
  hdfs.allowSnapshot(bar);
  print("allow snapshot " + bar);
  hdfs.createSnapshot(bar,s2name);
  print("create snapshot " + s2name);
  final Path file2=new Path(bar,"file2");
  DFSTestUtil.createFile(hdfs,file2,BLOCKSIZE,REPLICATION,SEED);
  print("create file " + file2);
  assertFile(s1path,s2path,file1,true,true,true);
  assertFile(s1path,s2path,file2,true,false,false);
  final String rootStr="/";
  final Path rootPath=new Path(rootStr);
  hdfs.allowSnapshot(rootPath);
  print("allow snapshot " + rootStr);
  final Path rootSnapshot=hdfs.createSnapshot(rootPath);
  print("create snapshot " + rootSnapshot);
  hdfs.deleteSnapshot(rootPath,rootSnapshot.getName());
  print("delete snapshot " + rootSnapshot);
  hdfs.disallowSnapshot(rootPath);
  print("disallow snapshot " + rootStr);
  hdfs.deleteSnapshot(foo,s1name);
  hdfs.disallowSnapshot(foo);
  cluster.getNamesystem().getSnapshotManager().setAllowNestedSnapshots(false);
  try {
    hdfs.allowSnapshot(rootPath);
    Assert.fail();
  }
 catch (  SnapshotException se) {
    assertNestedSnapshotException(se,"subdirectory");
  }
  try {
    hdfs.allowSnapshot(foo);
    Assert.fail();
  }
 catch (  SnapshotException se) {
    assertNestedSnapshotException(se,"subdirectory");
  }
  final Path sub1Bar=new Path(bar,"sub1");
  final Path sub2Bar=new Path(sub1Bar,"sub2");
  hdfs.mkdirs(sub2Bar);
  try {
    hdfs.allowSnapshot(sub1Bar);
    Assert.fail();
  }
 catch (  SnapshotException se) {
    assertNestedSnapshotException(se,"ancestor");
  }
  try {
    hdfs.allowSnapshot(sub2Bar);
    Assert.fail();
  }
 catch (  SnapshotException se) {
    assertNestedSnapshotException(se,"ancestor");
  }
}
