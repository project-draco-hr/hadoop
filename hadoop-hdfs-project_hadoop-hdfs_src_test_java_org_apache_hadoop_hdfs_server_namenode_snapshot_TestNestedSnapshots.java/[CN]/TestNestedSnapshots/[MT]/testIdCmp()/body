{
  final PermissionStatus perm=PermissionStatus.createImmutable("user","group",FsPermission.createImmutable((short)0));
  final INodeDirectory snapshottable=new INodeDirectory(0,DFSUtil.string2Bytes("foo"),perm,0L);
  snapshottable.addSnapshottableFeature();
  final Snapshot[] snapshots={new Snapshot(1,"s1",snapshottable),new Snapshot(1,"s1",snapshottable),new Snapshot(2,"s2",snapshottable),new Snapshot(2,"s2",snapshottable)};
  Assert.assertEquals(0,Snapshot.ID_COMPARATOR.compare(null,null));
  for (  Snapshot s : snapshots) {
    Assert.assertTrue(Snapshot.ID_COMPARATOR.compare(null,s) > 0);
    Assert.assertTrue(Snapshot.ID_COMPARATOR.compare(s,null) < 0);
    for (    Snapshot t : snapshots) {
      final int expected=s.getRoot().getLocalName().compareTo(t.getRoot().getLocalName());
      final int computed=Snapshot.ID_COMPARATOR.compare(s,t);
      Assert.assertEquals(expected > 0,computed > 0);
      Assert.assertEquals(expected == 0,computed == 0);
      Assert.assertEquals(expected < 0,computed < 0);
    }
  }
}
