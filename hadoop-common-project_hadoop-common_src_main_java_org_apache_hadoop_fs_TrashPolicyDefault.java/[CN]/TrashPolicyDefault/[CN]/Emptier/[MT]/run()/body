{
  if (emptierInterval == 0)   return;
  long now=Time.now();
  long end;
  while (true) {
    end=ceiling(now,emptierInterval);
    try {
      Thread.sleep(end - now);
    }
 catch (    InterruptedException e) {
      break;
    }
    try {
      now=Time.now();
      if (now >= end) {
        Collection<FileStatus> trashRoots;
        try {
          trashRoots=fs.getTrashRoots(true);
        }
 catch (        IOException e) {
          LOG.warn("Trash can't list all trash roots: " + e + " Sleeping.");
          continue;
        }
        for (        FileStatus trashRoot : trashRoots) {
          if (!trashRoot.isDirectory())           continue;
          try {
            TrashPolicyDefault trash=new TrashPolicyDefault(fs,conf);
            trash.deleteCheckpoint(trashRoot.getPath());
            trash.createCheckpoint(trashRoot.getPath(),new Date(now));
          }
 catch (          IOException e) {
            LOG.warn("Trash caught: " + e + ". Skipping "+ trashRoot.getPath()+ ".");
          }
        }
      }
    }
 catch (    Exception e) {
      LOG.warn("RuntimeException during Trash.Emptier.run(): ",e);
    }
  }
  try {
    fs.close();
  }
 catch (  IOException e) {
    LOG.warn("Trash cannot close FileSystem: ",e);
  }
}
