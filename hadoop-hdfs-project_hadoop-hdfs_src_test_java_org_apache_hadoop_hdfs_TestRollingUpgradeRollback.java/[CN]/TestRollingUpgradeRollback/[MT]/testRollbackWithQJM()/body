{
  final Configuration conf=new HdfsConfiguration();
  MiniJournalCluster mjc=null;
  MiniDFSCluster cluster=null;
  final Path foo=new Path("/foo");
  final Path bar=new Path("/bar");
  try {
    mjc=new MiniJournalCluster.Builder(conf).numJournalNodes(NUM_JOURNAL_NODES).build();
    conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,mjc.getQuorumJournalURI(JOURNAL_ID).toString());
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).build();
    cluster.waitActive();
    DistributedFileSystem dfs=cluster.getFileSystem();
    final DFSAdmin dfsadmin=new DFSAdmin(conf);
    dfs.mkdirs(foo);
    Assert.assertEquals(0,dfsadmin.run(new String[]{"-rollingUpgrade","start"}));
    dfs.mkdirs(bar);
    dfs.close();
    cluster.restartNameNode("-rollingUpgrade","rollback");
    dfs=cluster.getFileSystem();
    Assert.assertTrue(dfs.exists(foo));
    Assert.assertFalse(dfs.exists(bar));
    for (int i=0; i < NUM_JOURNAL_NODES; i++) {
      File dir=mjc.getCurrentDir(0,JOURNAL_ID);
      checkJNStorage(dir,4,7);
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
    if (mjc != null) {
      mjc.shutdown();
    }
  }
}
