{
  final long delay=getInvalidationDelay();
  if (delay > 0) {
    if (BlockManager.LOG.isDebugEnabled()) {
      BlockManager.LOG.debug("Block deletion is delayed during NameNode startup. " + "The deletion will start after " + delay + " ms.");
    }
    return null;
  }
  final LightWeightHashSet<Block> set=node2blocks.get(storageId);
  if (set == null) {
    return null;
  }
  final int limit=datanodeManager.blockInvalidateLimit;
  final List<Block> toInvalidate=set.pollN(limit);
  if (set.isEmpty()) {
    remove(storageId);
  }
  dn.addBlocksToBeInvalidated(toInvalidate);
  numBlocks-=toInvalidate.size();
  return toInvalidate;
}
