{
  int phaseCount=phases.size();
  if (phaseCount != 0) {
    float subProgress=0.0f;
    float progressFromCurrentPhase=0.0f;
    if (currentPhase < phaseCount) {
      subProgress=phase().getInternal();
      progressFromCurrentPhase=getProgressWeightage(currentPhase) * subProgress;
    }
    float progressFromCompletedPhases=0.0f;
    if (fixedWeightageForAllPhases) {
      progressFromCompletedPhases=progressPerPhase * currentPhase;
    }
 else {
      for (int i=0; i < currentPhase; i++) {
        progressFromCompletedPhases+=getProgressWeightage(i);
      }
    }
    return progressFromCompletedPhases + progressFromCurrentPhase;
  }
 else {
    return progress;
  }
}
