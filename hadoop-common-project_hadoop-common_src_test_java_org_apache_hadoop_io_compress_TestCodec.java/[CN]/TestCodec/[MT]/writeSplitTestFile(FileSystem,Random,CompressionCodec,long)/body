{
  final int REC_SIZE=1024;
  final Path wd=new Path(GenericTestUtils.getTempPath(codec.getClass().getSimpleName())).makeQualified(fs.getUri(),fs.getWorkingDirectory());
  final Path file=new Path(wd,"test" + codec.getDefaultExtension());
  final byte[] b=new byte[REC_SIZE];
  final Base64 b64=new Base64(0,null);
  DataOutputStream fout=null;
  Compressor cmp=CodecPool.getCompressor(codec);
  try {
    fout=new DataOutputStream(codec.createOutputStream(fs.create(file,true),cmp));
    final DataOutputBuffer dob=new DataOutputBuffer(REC_SIZE * 4 / 3 + 4);
    int seq=0;
    while (infLen > 0) {
      rand.nextBytes(b);
      final byte[] b64enc=b64.encode(b);
      dob.reset();
      dob.writeInt(seq);
      System.arraycopy(dob.getData(),0,b64enc,0,dob.getLength());
      fout.write(b64enc);
      fout.write('\n');
      ++seq;
      infLen-=b64enc.length;
    }
    LOG.info("Wrote " + seq + " records to "+ file);
  }
  finally {
    IOUtils.cleanup(LOG,fout);
    CodecPool.returnCompressor(cmp);
  }
  return file;
}
