{
  File targetFile=new File(Path.getPathWithoutSchemeAndAuthority(new Path(target)).toString());
  File linkFile=new File(Path.getPathWithoutSchemeAndAuthority(new Path(linkname)).toString());
  String[] cmd=Shell.getSymlinkCommand(targetFile.toString(),linkFile.toString());
  ShellCommandExecutor shExec;
  try {
    if (Shell.WINDOWS && linkFile.getParentFile() != null && !new Path(target).isAbsolute()) {
      shExec=new ShellCommandExecutor(cmd,linkFile.getParentFile());
    }
 else {
      shExec=new ShellCommandExecutor(cmd);
    }
    shExec.execute();
  }
 catch (  Shell.ExitCodeException ec) {
    int returnVal=ec.getExitCode();
    if (Shell.WINDOWS && returnVal == SYMLINK_NO_PRIVILEGE) {
      LOG.warn("Fail to create symbolic links on Windows. " + "The default security settings in Windows disallow non-elevated " + "administrators and all non-administrators from creating symbolic links. "+ "This behavior can be changed in the Local Security Policy management console");
    }
 else     if (returnVal != 0) {
      LOG.warn("Command '" + StringUtils.join(" ",cmd) + "' failed "+ returnVal+ " with: "+ ec.getMessage());
    }
    return returnVal;
  }
catch (  IOException e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Error while create symlink " + linkname + " to "+ target+ "."+ " Exception: "+ StringUtils.stringifyException(e));
    }
    throw e;
  }
  return shExec.getExitCode();
}
