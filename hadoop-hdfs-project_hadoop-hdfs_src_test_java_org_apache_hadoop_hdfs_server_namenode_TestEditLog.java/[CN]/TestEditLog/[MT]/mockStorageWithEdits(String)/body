{
  List<StorageDirectory> sds=Lists.newArrayList();
  List<URI> uris=Lists.newArrayList();
  NNStorage storage=Mockito.mock(NNStorage.class);
  for (  String dirSpec : editsDirSpecs) {
    List<String> files=Lists.newArrayList();
    String[] logSpecs=dirSpec.split("\\|");
    for (    String logSpec : logSpecs) {
      Matcher m=Pattern.compile("\\[(\\d+),(\\d+)?\\]").matcher(logSpec);
      assertTrue("bad spec: " + logSpec,m.matches());
      if (m.group(2) == null) {
        files.add(NNStorage.getInProgressEditsFileName(Long.valueOf(m.group(1))));
      }
 else {
        files.add(NNStorage.getFinalizedEditsFileName(Long.valueOf(m.group(1)),Long.valueOf(m.group(2))));
      }
    }
    StorageDirectory sd=FSImageTestUtil.mockStorageDirectory(NameNodeDirType.EDITS,false,files.toArray(new String[0]));
    sds.add(sd);
    URI u=URI.create("file:///storage" + Math.random());
    Mockito.doReturn(sd).when(storage).getStorageDirectory(u);
    uris.add(u);
  }
  Mockito.doReturn(sds).when(storage).dirIterable(NameNodeDirType.EDITS);
  Mockito.doReturn(uris).when(storage).getEditsDirectories();
  return storage;
}
