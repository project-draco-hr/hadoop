{
  List<AbortSpec> aborts=new ArrayList<AbortSpec>(Arrays.asList(abortAtRolls));
  NNStorage storage=new NNStorage(getConf(),Collections.<URI>emptyList(),editUris);
  storage.format(new NamespaceInfo());
  FSEditLog editlog=getFSEditLog(storage);
  editlog.initJournalsForWrite();
  editlog.openForWrite(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION);
  for (int i=2; i < TXNS_PER_ROLL; i++) {
    editlog.logGenerationStamp((long)0);
  }
  editlog.logSync();
  for (int i=0; i < numrolls; i++) {
    editlog.rollEditLog(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION);
    editlog.logGenerationStamp((long)i);
    editlog.logSync();
    while (aborts.size() > 0 && aborts.get(0).roll == (i + 1)) {
      AbortSpec spec=aborts.remove(0);
      editlog.getJournals().get(spec.logindex).abort();
    }
    for (int j=3; j < TXNS_PER_ROLL; j++) {
      editlog.logGenerationStamp((long)i);
    }
    editlog.logSync();
  }
  if (closeOnFinish) {
    editlog.close();
  }
  FSImageTestUtil.logStorageContents(LOG,storage);
  return storage;
}
