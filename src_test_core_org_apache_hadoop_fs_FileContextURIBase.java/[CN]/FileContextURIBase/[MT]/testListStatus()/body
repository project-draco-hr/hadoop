{
  final String hPrefix="test/hadoop";
  final String[] dirs={hPrefix + "/a",hPrefix + "/b",hPrefix + "/c",hPrefix + "/1",hPrefix + "/#@#@",hPrefix + "/&*#$#$@234"};
  ArrayList<Path> testDirs=new ArrayList<Path>();
  for (  String d : dirs) {
    testDirs.add(qualifiedPath(d,fc2));
  }
  Assert.assertFalse(fc1.exists(testDirs.get(0)));
  for (  Path path : testDirs) {
    fc1.mkdir(path,FsPermission.getDefault(),true);
  }
  FileStatus[] paths=fc1.listStatus(qualifiedPath("test",fc1));
  Assert.assertEquals(1,paths.length);
  Assert.assertEquals(qualifiedPath(hPrefix,fc1),paths[0].getPath());
  paths=fc1.listStatus(qualifiedPath(hPrefix,fc1));
  Assert.assertEquals(6,paths.length);
  for (int i=0; i < dirs.length; i++) {
    boolean found=false;
    for (int j=0; j < paths.length; j++) {
      if (qualifiedPath(dirs[i],fc1).equals(paths[j].getPath())) {
        found=true;
      }
    }
    Assert.assertTrue(dirs[i] + " not found",found);
  }
  paths=fc1.listStatus(qualifiedPath(dirs[0],fc1));
  Assert.assertEquals(0,paths.length);
}
