{
  LOG.info("Test testBlockFix started.");
  long blockSize=8192L;
  int stripeLength=3;
  mySetup(stripeLength,-1);
  Path file1=new Path("/user/dhruba/raidtest/file1");
  Path destPath=new Path("/destraid/user/dhruba/raidtest");
  Path parityFile=new Path(destPath,"file1");
  long crc1=TestRaidDfs.createTestFilePartialLastBlock(fileSys,file1,1,7,blockSize);
  long file1Len=fileSys.getFileStatus(file1).getLen();
  LOG.info("Test testBlockFix created test files");
  Configuration localConf=new Configuration(conf);
  localConf.set(RaidNode.RAID_LOCATION_KEY,"/destraid");
  localConf.setInt("raid.blockfix.interval",1000);
  conf.set("raid.classname","org.apache.hadoop.raid.LocalRaidNode");
  conf.set("raid.blockfix.classname","org.apache.hadoop.raid.LocalBlockFixer");
  cnode=RaidNode.createRaidNode(null,localConf);
  try {
    TestRaidDfs.waitForFileRaided(LOG,fileSys,file1,destPath);
    cnode.stop();
    cnode.join();
    cnode=null;
    FileStatus srcStat=fileSys.getFileStatus(file1);
    LocatedBlocks locations=RaidDFSUtil.getBlockLocations((DistributedFileSystem)fileSys,file1.toUri().getPath(),0,srcStat.getLen());
    DistributedFileSystem dfs=(DistributedFileSystem)fileSys;
    int[] corruptBlockIdxs=new int[]{0,4,6};
    for (    int idx : corruptBlockIdxs) {
      LOG.info("Corrupting block " + locations.get(idx).getBlock());
      corruptBlock(locations.get(idx).getBlock());
    }
    TestBlockFixer.reportCorruptBlocks(fileSys,file1,corruptBlockIdxs,srcStat.getBlockSize());
    waitForCorruptBlocks(corruptBlockIdxs.length,dfs,file1);
    RaidShell shell=new RaidShell(conf);
    String[] args=new String[2];
    args[0]="-recoverBlocks";
    args[1]=file1.toUri().getPath();
    ToolRunner.run(shell,args);
    waitForCorruptBlocks(0,dfs,file1);
    assertTrue(TestRaidDfs.validateFile(dfs,file1,file1Len,crc1));
    FileStatus parityStat=fileSys.getFileStatus(parityFile);
    long parityCrc=getCRC(fileSys,parityFile);
    locations=RaidDFSUtil.getBlockLocations(dfs,parityFile.toUri().getPath(),0,parityStat.getLen());
    corruptBlock(locations.get(0).getBlock());
    TestBlockFixer.reportCorruptBlocks(fileSys,parityFile,new int[]{0},srcStat.getBlockSize());
    waitForCorruptBlocks(1,dfs,parityFile);
    args[1]=parityFile.toUri().getPath();
    ToolRunner.run(shell,args);
    waitForCorruptBlocks(0,dfs,file1);
    assertEquals(parityCrc,getCRC(fileSys,parityFile));
  }
 catch (  Exception e) {
    LOG.info("Test testBlockFix Exception " + e + StringUtils.stringifyException(e));
    throw e;
  }
 finally {
    myTearDown();
  }
  LOG.info("Test testBlockFix completed.");
}
