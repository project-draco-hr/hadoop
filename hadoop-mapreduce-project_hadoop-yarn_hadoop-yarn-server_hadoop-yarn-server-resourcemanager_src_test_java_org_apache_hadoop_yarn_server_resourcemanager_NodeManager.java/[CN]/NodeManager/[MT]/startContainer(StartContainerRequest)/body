{
  ContainerLaunchContext containerLaunchContext=request.getContainerLaunchContext();
  ApplicationId applicationId=containerLaunchContext.getContainerId().getApplicationAttemptId().getApplicationId();
  List<Container> applicationContainers=containers.get(applicationId);
  if (applicationContainers == null) {
    applicationContainers=new ArrayList<Container>();
    containers.put(applicationId,applicationContainers);
  }
  for (  Container container : applicationContainers) {
    if (container.getId().compareTo(containerLaunchContext.getContainerId()) == 0) {
      throw new IllegalStateException("Container " + containerLaunchContext.getContainerId() + " already setup on node "+ containerManagerAddress);
    }
  }
  Container container=BuilderUtils.newContainer(containerLaunchContext.getContainerId(),this.nodeId,nodeHttpAddress,containerLaunchContext.getResource());
  applicationContainers.add(container);
  Resources.subtractFrom(available,containerLaunchContext.getResource());
  Resources.addTo(used,containerLaunchContext.getResource());
  LOG.info("DEBUG --- startContainer:" + " node=" + containerManagerAddress + " application="+ applicationId+ " container="+ container+ " available="+ available+ " used="+ used);
  StartContainerResponse response=recordFactory.newRecordInstance(StartContainerResponse.class);
  return response;
}
