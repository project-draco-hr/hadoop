{
  if (metric.getRealtimeAggregationOp() == TimelineMetricOperation.NOP) {
    return e;
  }
  Map<String,TimelineMetric> aggrRow=aggregateTable.get(metric);
  if (aggrRow != null) {
    TimelineMetric aggrMetric=new TimelineMetric();
    if (aggregationGroupId.length() > 0) {
      aggrMetric.setId(metric.getId() + SEPARATOR + aggregationGroupId);
    }
 else {
      aggrMetric.setId(metric.getId());
    }
    aggrMetric.setRealtimeAggregationOp(TimelineMetricOperation.NOP);
    Map<Object,Object> status=new HashMap<>();
    for (    TimelineMetric m : aggrRow.values()) {
      TimelineMetric.aggregateTo(m,aggrMetric,status);
      if (m.getRealtimeAggregationOp() != aggrMetric.getRealtimeAggregationOp()) {
        aggrMetric.setRealtimeAggregationOp(m.getRealtimeAggregationOp());
      }
    }
    Set<TimelineMetric> metrics=e.getMetrics();
    metrics.remove(aggrMetric);
    metrics.add(aggrMetric);
  }
  return e;
}
