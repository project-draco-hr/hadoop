{
  Collection<BlockInfo> toAdd=new LinkedList<BlockInfo>();
  Collection<Block> toRemove=new LinkedList<Block>();
  Collection<Block> toInvalidate=new LinkedList<Block>();
  Collection<BlockInfo> toCorrupt=new LinkedList<BlockInfo>();
  Collection<StatefulBlockInfo> toUC=new LinkedList<StatefulBlockInfo>();
  reportDiff(node,report,toAdd,toRemove,toInvalidate,toCorrupt,toUC);
  for (  StatefulBlockInfo b : toUC) {
    addStoredBlockUnderConstruction(b.storedBlock,node,b.reportedState);
  }
  for (  Block b : toRemove) {
    removeStoredBlock(b,node);
  }
  for (  BlockInfo b : toAdd) {
    addStoredBlock(b,node,null,true);
  }
  for (  Block b : toInvalidate) {
    NameNode.stateChangeLog.info("BLOCK* processReport: block " + b + " on "+ node.getName()+ " size "+ b.getNumBytes()+ " does not belong to any file.");
    addToInvalidates(b,node);
  }
  for (  BlockInfo b : toCorrupt) {
    markBlockAsCorrupt(b,node);
  }
}
