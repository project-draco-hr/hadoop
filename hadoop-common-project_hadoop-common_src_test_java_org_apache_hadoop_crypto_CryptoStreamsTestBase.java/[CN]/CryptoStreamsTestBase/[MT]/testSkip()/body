{
  OutputStream out=getOutputStream(defaultBufferSize);
  writeData(out);
  InputStream in=getInputStream(defaultBufferSize);
  byte[] result=new byte[dataLen];
  int n1=readAll(in,result,0,dataLen / 3);
  Assert.assertEquals(n1,((Seekable)in).getPos());
  long skipped=in.skip(dataLen / 3);
  int n2=readAll(in,result,0,dataLen);
  Assert.assertEquals(dataLen,n1 + skipped + n2);
  byte[] readData=new byte[n2];
  System.arraycopy(result,0,readData,0,n2);
  byte[] expectedData=new byte[n2];
  System.arraycopy(data,dataLen - n2,expectedData,0,n2);
  Assert.assertArrayEquals(readData,expectedData);
  try {
    skipped=in.skip(-3);
    Assert.fail("Skip Negative length should fail.");
  }
 catch (  IllegalArgumentException e) {
    GenericTestUtils.assertExceptionContains("Negative skip length",e);
  }
  skipped=in.skip(3);
  Assert.assertEquals(skipped,0);
  in.close();
}
