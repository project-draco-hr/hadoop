{
  OutputStream out=getOutputStream(defaultBufferSize);
  writeData(out);
  InputStream in=getInputStream(defaultBufferSize);
  final int len1=dataLen / 8;
  ByteBuffer buffer=((HasEnhancedByteBufferAccess)in).read(getBufferPool(),len1,EnumSet.of(ReadOption.SKIP_CHECKSUMS));
  int n1=buffer.remaining();
  byte[] readData=new byte[n1];
  buffer.get(readData);
  byte[] expectedData=new byte[n1];
  System.arraycopy(data,0,expectedData,0,n1);
  Assert.assertArrayEquals(readData,expectedData);
  ((HasEnhancedByteBufferAccess)in).releaseBuffer(buffer);
  readData=new byte[len1];
  readAll(in,readData,0,len1);
  expectedData=new byte[len1];
  System.arraycopy(data,n1,expectedData,0,len1);
  Assert.assertArrayEquals(readData,expectedData);
  buffer=((HasEnhancedByteBufferAccess)in).read(getBufferPool(),len1,EnumSet.of(ReadOption.SKIP_CHECKSUMS));
  int n2=buffer.remaining();
  readData=new byte[n2];
  buffer.get(readData);
  expectedData=new byte[n2];
  System.arraycopy(data,n1 + len1,expectedData,0,n2);
  Assert.assertArrayEquals(readData,expectedData);
  ((HasEnhancedByteBufferAccess)in).releaseBuffer(buffer);
  in.close();
}
