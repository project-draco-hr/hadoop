{
  Options opts=new Options();
  Option helpOpt=new Option(HELP_OPTION,false,"Prints this message");
  Option maxEligibleOpt=new Option(MAX_ELIGIBLE_APPS_OPTION,true,"The maximum number of eligible apps to process (default: " + DEFAULT_MAX_ELIGIBLE + " (all))");
  maxEligibleOpt.setArgName("n");
  Option minNumLogFilesOpt=new Option(MIN_NUM_LOG_FILES_OPTION,true,"The minimum number of log files required to be eligible (default: " + DEFAULT_MIN_NUM_LOG_FILES + ")");
  minNumLogFilesOpt.setArgName("n");
  Option maxTotalLogsSizeOpt=new Option(MAX_TOTAL_LOGS_SIZE_OPTION,true,"The maximum total logs size (in megabytes) required to be eligible" + " (default: " + DEFAULT_MAX_TOTAL_LOGS_SIZE + ")");
  maxTotalLogsSizeOpt.setArgName("megabytes");
  Option memoryOpt=new Option(MEMORY_OPTION,true,"The amount of memory (in megabytes) for each container (default: " + DEFAULT_MEMORY + ")");
  memoryOpt.setArgName("megabytes");
  Option verboseOpt=new Option(VERBOSE_OPTION,false,"Print more details.");
  opts.addOption(helpOpt);
  opts.addOption(maxEligibleOpt);
  opts.addOption(minNumLogFilesOpt);
  opts.addOption(maxTotalLogsSizeOpt);
  opts.addOption(memoryOpt);
  opts.addOption(verboseOpt);
  try {
    CommandLineParser parser=new GnuParser();
    CommandLine commandLine=parser.parse(opts,args);
    if (commandLine.hasOption(HELP_OPTION)) {
      HelpFormatter formatter=new HelpFormatter();
      formatter.printHelp("yarn archive-logs",opts);
      System.exit(0);
    }
    if (commandLine.hasOption(MAX_ELIGIBLE_APPS_OPTION)) {
      maxEligible=Integer.parseInt(commandLine.getOptionValue(MAX_ELIGIBLE_APPS_OPTION));
      if (maxEligible == 0) {
        LOG.info("Setting " + MAX_ELIGIBLE_APPS_OPTION + " to 0 accomplishes "+ "nothing. Please either set it to a negative value "+ "(default, all) or a more reasonable value.");
        System.exit(0);
      }
    }
    if (commandLine.hasOption(MIN_NUM_LOG_FILES_OPTION)) {
      minNumLogFiles=Integer.parseInt(commandLine.getOptionValue(MIN_NUM_LOG_FILES_OPTION));
    }
    if (commandLine.hasOption(MAX_TOTAL_LOGS_SIZE_OPTION)) {
      maxTotalLogsSize=Long.parseLong(commandLine.getOptionValue(MAX_TOTAL_LOGS_SIZE_OPTION));
      maxTotalLogsSize*=1024L * 1024L;
    }
    if (commandLine.hasOption(MEMORY_OPTION)) {
      memory=Long.parseLong(commandLine.getOptionValue(MEMORY_OPTION));
    }
    if (commandLine.hasOption(VERBOSE_OPTION)) {
      verbose=true;
    }
  }
 catch (  ParseException pe) {
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("yarn archive-logs",opts);
    throw pe;
  }
}
