{
  Configuration conf=new HdfsConfiguration();
  conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY,1000L);
  Random random=new Random();
  FileSystem fs=null;
  int rand=random.nextInt(3);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(3).build();
  cluster.waitActive();
  fs=cluster.getFileSystem();
  Path file1=new Path("/tmp/testBlockVerification/file1");
  DFSTestUtil.createFile(fs,file1,1024,(short)3,0);
  ExtendedBlock block=DFSTestUtil.getFirstBlock(fs,file1);
  DFSTestUtil.waitReplication(fs,file1,(short)3);
  assertFalse(DFSTestUtil.allBlockReplicasCorrupt(cluster,file1,0));
  assertTrue(cluster.corruptReplica(rand,block));
  cluster.restartDataNode(rand);
  DFSTestUtil.waitReplication(fs,file1,(short)2);
  assertFalse(DFSTestUtil.allBlockReplicasCorrupt(cluster,file1,0));
  assertTrue(cluster.corruptReplica(0,block));
  assertTrue(cluster.corruptReplica(1,block));
  assertTrue(cluster.corruptReplica(2,block));
  for (  DataNode dn : cluster.getDataNodes()) {
    DataNodeTestUtils.runBlockScannerForBlock(dn,block);
  }
  DFSTestUtil.waitReplication(fs,file1,(short)3);
  assertTrue(DFSTestUtil.allBlockReplicasCorrupt(cluster,file1,0));
  cluster.shutdown();
}
