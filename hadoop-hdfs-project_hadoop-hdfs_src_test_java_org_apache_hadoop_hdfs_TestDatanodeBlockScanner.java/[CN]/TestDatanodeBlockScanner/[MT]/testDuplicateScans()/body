{
  long startTime=Time.now();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(new Configuration()).numDataNodes(1).build();
  FileSystem fs=null;
  try {
    fs=cluster.getFileSystem();
    DataNode dataNode=cluster.getDataNodes().get(0);
    int infoPort=dataNode.getInfoPort();
    long scanTimeBefore=0, scanTimeAfter=0;
    for (int i=1; i < 10; i++) {
      Path fileName=new Path("/test" + i);
      DFSTestUtil.createFile(fs,fileName,1024,(short)1,1000L);
      waitForVerification(infoPort,fs,fileName,i,startTime,TIMEOUT);
      if (i > 1) {
        scanTimeAfter=DataNodeTestUtils.getLatestScanTime(dataNode,DFSTestUtil.getFirstBlock(fs,new Path("/test" + (i - 1))));
        assertFalse("scan time shoud not be 0",scanTimeAfter == 0);
        assertEquals("There should not be duplicate scan",scanTimeBefore,scanTimeAfter);
      }
      scanTimeBefore=DataNodeTestUtils.getLatestScanTime(dataNode,DFSTestUtil.getFirstBlock(fs,new Path("/test" + i)));
    }
    cluster.restartDataNode(0);
    Thread.sleep(10000);
    dataNode=cluster.getDataNodes().get(0);
    scanTimeAfter=DataNodeTestUtils.getLatestScanTime(dataNode,DFSTestUtil.getFirstBlock(fs,new Path("/test" + (9))));
    assertEquals("There should not be duplicate scan",scanTimeBefore,scanTimeAfter);
  }
  finally {
    IOUtils.closeStream(fs);
    cluster.shutdown();
  }
}
