{
  Configuration conf=getConf();
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_RESTORE_KEY,true);
  NameNode.initMetrics(conf,NamenodeRole.NAMENODE);
  DFSTestUtil.formatNameNode(conf);
  FSNamesystem fsn=FSNamesystem.loadFromDisk(conf);
  FSImage originalImage=fsn.getFSImage();
  NNStorage storage=originalImage.getStorage();
  FSImage spyImage=spy(originalImage);
  Whitebox.setInternalState(fsn,"fsImage",spyImage);
  FileSystem fs=FileSystem.getLocal(conf);
  File rootDir=storage.getStorageDir(0).getRoot();
  Path rootPath=new Path(rootDir.getPath(),"current");
  final FsPermission permissionNone=new FsPermission((short)0);
  final FsPermission permissionAll=new FsPermission(FsAction.ALL,FsAction.READ_EXECUTE,FsAction.READ_EXECUTE);
  fs.setPermission(rootPath,permissionNone);
  try {
    doAnEdit(fsn,1);
    fsn.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
    LOG.info("Doing the first savenamespace.");
    fsn.saveNamespace(0,0);
    LOG.info("First savenamespace sucessful.");
    assertTrue("Savenamespace should have marked one directory as bad." + " But found " + storage.getRemovedStorageDirs().size() + " bad directories.",storage.getRemovedStorageDirs().size() == 1);
    fs.setPermission(rootPath,permissionAll);
    LOG.info("Doing the second savenamespace.");
    fsn.saveNamespace(0,0);
    LOG.warn("Second savenamespace sucessful.");
    assertTrue("Savenamespace should have been successful in removing " + " bad directories from Image." + " But found " + storage.getRemovedStorageDirs().size() + " bad directories.",storage.getRemovedStorageDirs().size() == 0);
    LOG.info("Shutting down fsimage.");
    originalImage.close();
    fsn.close();
    fsn=null;
    LOG.info("Loading new FSmage from disk.");
    fsn=FSNamesystem.loadFromDisk(conf);
    LOG.info("Checking reloaded image.");
    checkEditExists(fsn,1);
    LOG.info("Reloaded image is good.");
  }
  finally {
    if (rootDir.exists()) {
      fs.setPermission(rootPath,permissionAll);
    }
    if (fsn != null) {
      try {
        fsn.close();
      }
 catch (      Throwable t) {
        LOG.fatal("Failed to shut down",t);
      }
    }
  }
}
