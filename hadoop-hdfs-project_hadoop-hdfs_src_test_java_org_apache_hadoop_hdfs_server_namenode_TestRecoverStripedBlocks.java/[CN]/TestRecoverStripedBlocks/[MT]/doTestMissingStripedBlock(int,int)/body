{
  Configuration conf=new HdfsConfiguration();
  initConf(conf);
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(GROUP_SIZE + 1).build();
  try {
    cluster.waitActive();
    final int numBlocks=4;
    DFSTestUtil.createStripedFile(cluster,filePath,dirPath,numBlocks,1,true);
    final INodeFile fileNode=cluster.getNamesystem().getFSDirectory().getINode4Write(filePath.toString()).asFile();
    assertFalse(fileNode.isUnderConstruction());
    assertTrue(fileNode.isStriped());
    BlockInfo[] blocks=fileNode.getBlocks();
    assertEquals(numBlocks,blocks.length);
    for (    BlockInfo blk : blocks) {
      assertTrue(blk.isStriped());
      assertTrue(blk.isComplete());
      assertEquals(BLOCK_STRIPED_CELL_SIZE * NUM_DATA_BLOCKS,blk.getNumBytes());
      final BlockInfoStriped sb=(BlockInfoStriped)blk;
      assertEquals(GROUP_SIZE,sb.numNodes());
    }
    final BlockManager bm=cluster.getNamesystem().getBlockManager();
    BlockInfo firstBlock=fileNode.getBlocks()[0];
    DatanodeStorageInfo[] storageInfos=bm.getStorages(firstBlock);
    int i=0;
    for (; i < numOfBusy; i++) {
      DatanodeDescriptor busyNode=storageInfos[i].getDatanodeDescriptor();
      for (int j=0; j < maxReplicationStreams + 1; j++) {
        BlockManagerTestUtil.addBlockToBeReplicated(busyNode,new Block(j),new DatanodeStorageInfo[]{storageInfos[0]});
      }
    }
    for (; i < numOfBusy + numOfMissed; i++) {
      DatanodeDescriptor missedNode=storageInfos[i].getDatanodeDescriptor();
      assertEquals(numBlocks,missedNode.numBlocks());
      bm.getDatanodeManager().removeDatanode(missedNode);
    }
    BlockManagerTestUtil.getComputedDatanodeWork(bm);
    DataNode lastDn=cluster.getDataNodes().get(GROUP_SIZE);
    DatanodeDescriptor last=bm.getDatanodeManager().getDatanode(lastDn.getDatanodeId());
    assertEquals("Counting the number of outstanding EC tasks",numBlocks,last.getNumberOfBlocksToBeErasureCoded());
    List<BlockECRecoveryInfo> recovery=last.getErasureCodeCommand(numBlocks);
    for (    BlockECRecoveryInfo info : recovery) {
      assertEquals(1,info.getTargetDnInfos().length);
      assertEquals(last,info.getTargetDnInfos()[0]);
      assertEquals(info.getSourceDnInfos().length,info.getLiveBlockIndices().length);
      if (GROUP_SIZE - numOfMissed == NUM_DATA_BLOCKS) {
        assertEquals(NUM_DATA_BLOCKS,info.getSourceDnInfos().length);
      }
 else {
        assertEquals(GROUP_SIZE - numOfMissed - numOfBusy,info.getSourceDnInfos().length);
      }
    }
  }
  finally {
    cluster.shutdown();
  }
}
