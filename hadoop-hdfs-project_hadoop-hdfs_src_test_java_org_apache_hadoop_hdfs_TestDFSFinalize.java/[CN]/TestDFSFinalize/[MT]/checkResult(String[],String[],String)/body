{
  List<File> dirs=Lists.newArrayList();
  for (int i=0; i < nameNodeDirs.length; i++) {
    File curDir=new File(nameNodeDirs[i],"current");
    dirs.add(curDir);
    FSImageTestUtil.assertReasonableNameCurrentDir(curDir);
  }
  FSImageTestUtil.assertParallelFilesAreIdentical(dirs,Collections.<String>emptySet());
  File dnCurDirs[]=new File[dataNodeDirs.length];
  for (int i=0; i < dataNodeDirs.length; i++) {
    dnCurDirs[i]=new File(dataNodeDirs[i],"current");
    assertEquals(UpgradeUtilities.checksumContents(DATA_NODE,dnCurDirs[i],false),UpgradeUtilities.checksumMasterDataNodeContents());
  }
  for (int i=0; i < nameNodeDirs.length; i++) {
    assertFalse(new File(nameNodeDirs[i],"previous").isDirectory());
  }
  if (bpid == null) {
    for (int i=0; i < dataNodeDirs.length; i++) {
      assertFalse(new File(dataNodeDirs[i],"previous").isDirectory());
    }
  }
 else {
    for (int i=0; i < dataNodeDirs.length; i++) {
      File bpRoot=BlockPoolSliceStorage.getBpRoot(bpid,dnCurDirs[i]);
      assertFalse(new File(bpRoot,"previous").isDirectory());
      File bpCurFinalizeDir=new File(bpRoot,"current/" + DataStorage.STORAGE_DIR_FINALIZED);
      assertEquals(UpgradeUtilities.checksumContents(DATA_NODE,bpCurFinalizeDir,true),UpgradeUtilities.checksumMasterBlockPoolFinalizedContents());
    }
  }
}
