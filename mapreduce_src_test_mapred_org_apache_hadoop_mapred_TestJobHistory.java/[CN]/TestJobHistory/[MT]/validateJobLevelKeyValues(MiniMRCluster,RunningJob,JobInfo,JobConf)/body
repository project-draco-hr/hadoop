{
  JobTracker jt=mr.getJobTrackerRunner().getJobTracker();
  JobInProgress jip=jt.getJob(job.getID());
  assertTrue("SUBMIT_TIME of job obtained from history file did not " + "match the expected value",jip.getStartTime() == jobInfo.getSubmitTime());
  assertTrue("LAUNCH_TIME of job obtained from history file did not " + "match the expected value",jip.getLaunchTime() == jobInfo.getLaunchTime());
  assertTrue("FINISH_TIME of job obtained from history file did not " + "match the expected value",jip.getFinishTime() == jobInfo.getFinishTime());
  assertTrue("Job Status of job obtained from history file did not " + "match the expected value",jobInfo.getJobStatus().equals("SUCCEEDED"));
  assertTrue("Job Priority of job obtained from history file did not " + "match the expected value",jip.getPriority().toString().equals(jobInfo.getPriority()));
  assertTrue("Job Name of job obtained from history file did not " + "match the expected value",conf.getJobName().equals(jobInfo.getJobname()));
  String user=UserGroupInformation.getCurrentUser().getUserName();
  assertTrue("User Name of job obtained from history file did not " + "match the expected value",user.equals(jobInfo.getUsername()));
  Counters c=new Counters(jip.getCounters());
  Counters jiCounters=jobInfo.getTotalCounters();
  assertTrue("Counters of job obtained from history file did not " + "match the expected value",c.equals(jiCounters));
  assertTrue("Unexpected number of total maps in history file",jobInfo.getTotalMaps() == jip.desiredMaps());
  assertTrue("Unexpected number of total reduces in history file",jobInfo.getTotalReduces() == jip.desiredReduces());
  assertTrue("Unexpected number of finished maps in history file",jobInfo.getFinishedMaps() == jip.finishedMaps());
  assertTrue("Unexpected number of finished reduces in history file",jobInfo.getFinishedReduces() == jip.finishedReduces());
  assertTrue("Unexpected number of failed maps in history file",jobInfo.getFailedMaps() == jip.failedMapTasks);
  assertTrue("Unexpected number of failed reduces in history file",jobInfo.getFailedReduces() == jip.failedReduceTasks);
}
