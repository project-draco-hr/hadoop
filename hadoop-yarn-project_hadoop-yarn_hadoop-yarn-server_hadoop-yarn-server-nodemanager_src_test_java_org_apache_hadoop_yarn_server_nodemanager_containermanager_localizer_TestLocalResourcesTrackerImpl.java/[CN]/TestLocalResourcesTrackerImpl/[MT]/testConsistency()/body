{
  String user="testuser";
  DrainDispatcher dispatcher=null;
  try {
    Configuration conf=new Configuration();
    dispatcher=createDispatcher(conf);
    EventHandler<LocalizerEvent> localizerEventHandler=mock(EventHandler.class);
    EventHandler<LocalizerEvent> containerEventHandler=mock(EventHandler.class);
    dispatcher.register(LocalizerEventType.class,localizerEventHandler);
    dispatcher.register(ContainerEventType.class,containerEventHandler);
    ContainerId cId1=BuilderUtils.newContainerId(1,1,1,1);
    LocalizerContext lc1=new LocalizerContext(user,cId1,null);
    LocalResourceRequest req1=createLocalResourceRequest(user,1,1,LocalResourceVisibility.PUBLIC);
    LocalizedResource lr1=createLocalizedResource(req1,dispatcher);
    ConcurrentMap<LocalResourceRequest,LocalizedResource> localrsrc=new ConcurrentHashMap<LocalResourceRequest,LocalizedResource>();
    localrsrc.put(req1,lr1);
    LocalResourcesTracker tracker=new LocalResourcesTrackerImpl(user,dispatcher,localrsrc,false,conf);
    ResourceEvent req11Event=new ResourceRequestEvent(req1,LocalResourceVisibility.PUBLIC,lc1);
    ResourceEvent rel11Event=new ResourceReleaseEvent(req1,cId1);
    tracker.handle(req11Event);
    dispatcher.await();
    Assert.assertEquals(1,lr1.getRefCount());
    dispatcher.await();
    verifyTrackedResourceCount(tracker,1);
    ResourceLocalizedEvent rle=new ResourceLocalizedEvent(req1,new Path("file:///tmp/r1"),1);
    lr1.handle(rle);
    Assert.assertTrue(lr1.getState().equals(ResourceState.LOCALIZED));
    Assert.assertTrue(createdummylocalizefile(new Path("file:///tmp/r1")));
    LocalizedResource rsrcbefore=tracker.iterator().next();
    File resFile=new File(lr1.getLocalPath().toUri().getRawPath().toString());
    Assert.assertTrue(resFile.exists());
    Assert.assertTrue(resFile.delete());
    tracker.handle(req11Event);
    dispatcher.await();
    lr1.handle(rle);
    Assert.assertTrue(lr1.getState().equals(ResourceState.LOCALIZED));
    LocalizedResource rsrcafter=tracker.iterator().next();
    if (rsrcbefore == rsrcafter) {
      Assert.fail("Localized resource should not be equal");
    }
    tracker.handle(rel11Event);
  }
  finally {
    if (dispatcher != null) {
      dispatcher.stop();
    }
  }
}
