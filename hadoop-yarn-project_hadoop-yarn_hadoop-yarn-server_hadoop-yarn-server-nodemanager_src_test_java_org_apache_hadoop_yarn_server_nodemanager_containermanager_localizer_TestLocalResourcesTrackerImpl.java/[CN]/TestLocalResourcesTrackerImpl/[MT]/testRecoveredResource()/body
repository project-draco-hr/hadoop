{
  final String user="someuser";
  final ApplicationId appId=ApplicationId.newInstance(1,1);
  final Path localDir=new Path("/tmp/localdir");
  Configuration conf=new YarnConfiguration();
  DrainDispatcher dispatcher=null;
  dispatcher=createDispatcher(conf);
  EventHandler<LocalizerEvent> localizerEventHandler=mock(EventHandler.class);
  EventHandler<LocalizerEvent> containerEventHandler=mock(EventHandler.class);
  dispatcher.register(LocalizerEventType.class,localizerEventHandler);
  dispatcher.register(ContainerEventType.class,containerEventHandler);
  NMStateStoreService stateStore=mock(NMStateStoreService.class);
  try {
    LocalResourcesTracker tracker=new LocalResourcesTrackerImpl(user,appId,dispatcher,false,conf,stateStore);
    ContainerId cId1=BuilderUtils.newContainerId(1,1,1,1);
    LocalResourceRequest lr1=createLocalResourceRequest(user,1,1,LocalResourceVisibility.APPLICATION);
    Assert.assertNull(tracker.getLocalizedResource(lr1));
    final long localizedId1=52;
    Path hierarchicalPath1=new Path(localDir,Long.toString(localizedId1));
    Path localizedPath1=new Path(hierarchicalPath1,"resource.jar");
    tracker.handle(new ResourceRecoveredEvent(lr1,localizedPath1,120));
    dispatcher.await();
    Assert.assertNotNull(tracker.getLocalizedResource(lr1));
    LocalResourceRequest lr2=createLocalResourceRequest(user,2,2,LocalResourceVisibility.APPLICATION);
    LocalizerContext lc2=new LocalizerContext(user,cId1,null);
    ResourceEvent reqEvent2=new ResourceRequestEvent(lr2,LocalResourceVisibility.APPLICATION,lc2);
    tracker.handle(reqEvent2);
    dispatcher.await();
    Path hierarchicalPath2=tracker.getPathForLocalization(lr2,localDir);
    long localizedId2=Long.parseLong(hierarchicalPath2.getName());
    Assert.assertEquals(localizedId1 + 1,localizedId2);
  }
  finally {
    if (dispatcher != null) {
      dispatcher.stop();
    }
  }
}
