{
  SimulatedFSDataset fsdataset=getSimulatedFSDataset();
  BlockListAsLongs blockReport=fsdataset.getBlockReport(bpid);
  assertEquals(0,blockReport.getNumberOfBlocks());
  int bytesAdded=addSomeBlocks(fsdataset);
  blockReport=fsdataset.getBlockReport(bpid);
  assertEquals(NUMBLOCKS,blockReport.getNumberOfBlocks());
  for (  Block b : blockReport) {
    assertNotNull(b);
    assertEquals(blockIdToLen(b.getBlockId()),b.getNumBytes());
  }
  fsdataset=null;
  SimulatedFSDataset sfsdataset=getSimulatedFSDataset();
  bytesAdded+=addSomeBlocks(sfsdataset,NUMBLOCKS + 1,false);
  sfsdataset.getBlockReport(bpid);
  assertEquals(NUMBLOCKS,blockReport.getNumberOfBlocks());
  sfsdataset.getBlockReport(bpid);
  assertEquals(NUMBLOCKS,blockReport.getNumberOfBlocks());
  sfsdataset.injectBlocks(bpid,blockReport);
  blockReport=sfsdataset.getBlockReport(bpid);
  assertEquals(NUMBLOCKS * 2,blockReport.getNumberOfBlocks());
  for (  Block b : blockReport) {
    assertNotNull(b);
    assertEquals(blockIdToLen(b.getBlockId()),b.getNumBytes());
    assertEquals(blockIdToLen(b.getBlockId()),sfsdataset.getLength(new ExtendedBlock(bpid,b)));
  }
  assertEquals(bytesAdded,sfsdataset.getDfsUsed());
  assertEquals(sfsdataset.getCapacity() - bytesAdded,sfsdataset.getRemaining());
  conf.setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY,10);
  try {
    sfsdataset=getSimulatedFSDataset();
    sfsdataset.addBlockPool(bpid,conf);
    sfsdataset.injectBlocks(bpid,blockReport);
    assertTrue("Expected an IO exception",false);
  }
 catch (  IOException e) {
  }
}
