{
  HdfsConfiguration conf=createCachingConf();
  conf.setBoolean(DFS_NAMENODE_CACHING_ENABLED_KEY,false);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATANODES).build();
  try {
    cluster.waitActive();
    DistributedFileSystem dfs=cluster.getFileSystem();
    NameNode namenode=cluster.getNameNode();
    String pool="pool1";
    namenode.getRpcServer().addCachePool(new CachePoolInfo(pool));
    final int numFiles=2;
    final int numBlocksPerFile=2;
    final List<String> paths=new ArrayList<String>(numFiles);
    for (int i=0; i < numFiles; i++) {
      Path p=new Path("/testCachePaths-" + i);
      FileSystemTestHelper.createFile(dfs,p,numBlocksPerFile,(int)BLOCK_SIZE);
      paths.add(p.toUri().getPath());
    }
    waitForCachedBlocks(namenode,0,0,"testAddingCacheDirectiveInfosWhenCachingIsDisabled:0");
    int expected=0;
    for (int i=0; i < numFiles; i++) {
      CacheDirectiveInfo directive=new CacheDirectiveInfo.Builder().setPath(new Path(paths.get(i))).setPool(pool).build();
      dfs.addCacheDirective(directive);
      waitForCachedBlocks(namenode,expected,0,"testAddingCacheDirectiveInfosWhenCachingIsDisabled:1");
    }
    Thread.sleep(20000);
    waitForCachedBlocks(namenode,expected,0,"testAddingCacheDirectiveInfosWhenCachingIsDisabled:2");
  }
  finally {
    cluster.shutdown();
  }
}
