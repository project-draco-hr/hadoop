{
  try {
    dfs.addCachePool(new CachePoolInfo("failpool").setMaxRelativeExpiryMs(-1l));
    fail("Added a pool with a negative max expiry.");
  }
 catch (  InvalidRequestException e) {
    GenericTestUtils.assertExceptionContains("negative",e);
  }
  try {
    dfs.addCachePool(new CachePoolInfo("failpool").setMaxRelativeExpiryMs(Long.MAX_VALUE - 1));
    fail("Added a pool with too big of a max expiry.");
  }
 catch (  InvalidRequestException e) {
    GenericTestUtils.assertExceptionContains("too big",e);
  }
  CachePoolInfo coolPool=new CachePoolInfo("coolPool");
  final long poolExpiration=1000 * 60 * 10l;
  dfs.addCachePool(coolPool.setMaxRelativeExpiryMs(poolExpiration));
  RemoteIterator<CachePoolEntry> poolIt=dfs.listCachePools();
  CachePoolInfo listPool=poolIt.next().getInfo();
  assertFalse("Should only be one pool",poolIt.hasNext());
  assertEquals("Expected max relative expiry to match set value",poolExpiration,listPool.getMaxRelativeExpiryMs().longValue());
  try {
    dfs.addCachePool(coolPool.setMaxRelativeExpiryMs(-1l));
    fail("Added a pool with a negative max expiry.");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("negative",e);
  }
  try {
    dfs.modifyCachePool(coolPool.setMaxRelativeExpiryMs(CachePoolInfo.RELATIVE_EXPIRY_NEVER + 1));
    fail("Added a pool with too big of a max expiry.");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("too big",e);
  }
  CacheDirectiveInfo defaultExpiry=new CacheDirectiveInfo.Builder().setPath(new Path("/blah")).setPool(coolPool.getPoolName()).build();
  dfs.addCacheDirective(defaultExpiry);
  RemoteIterator<CacheDirectiveEntry> dirIt=dfs.listCacheDirectives(defaultExpiry);
  CacheDirectiveInfo listInfo=dirIt.next().getInfo();
  assertFalse("Should only have one entry in listing",dirIt.hasNext());
  long listExpiration=listInfo.getExpiration().getAbsoluteMillis() - new Date().getTime();
  assertTrue("Directive expiry should be approximately the pool's max expiry",Math.abs(listExpiration - poolExpiration) < 10 * 1000);
  CacheDirectiveInfo.Builder builder=new CacheDirectiveInfo.Builder().setPath(new Path("/lolcat")).setPool(coolPool.getPoolName());
  try {
    dfs.addCacheDirective(builder.setExpiration(Expiration.newRelative(poolExpiration + 1)).build());
    fail("Added a directive that exceeds pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  try {
    dfs.addCacheDirective(builder.setExpiration(Expiration.newAbsolute(new Date().getTime() + poolExpiration + (10 * 1000))).build());
    fail("Added a directive that exceeds pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  try {
    dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setExpiration(Expiration.newRelative(poolExpiration + 1)).build());
    fail("Modified a directive to exceed pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  try {
    dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setExpiration(Expiration.newAbsolute(new Date().getTime() + poolExpiration + (10 * 1000))).build());
    fail("Modified a directive to exceed pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  try {
    dfs.addCacheDirective(builder.setExpiration(Expiration.newRelative(Long.MAX_VALUE)).build());
    fail("Added a directive with a gigantic max value");
  }
 catch (  IllegalArgumentException e) {
    assertExceptionContains("is too far in the future",e);
  }
  try {
    dfs.addCacheDirective(builder.setExpiration(Expiration.newAbsolute(Long.MAX_VALUE)).build());
    fail("Added a directive with a gigantic max value");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("is too far in the future",e);
  }
  try {
    dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setExpiration(Expiration.NEVER).build());
    fail("Modified a directive to exceed pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  try {
    dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setExpiration(Expiration.newAbsolute(Long.MAX_VALUE)).build());
    fail("Modified a directive to exceed pool's max relative expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("is too far in the future",e);
  }
  CachePoolInfo destPool=new CachePoolInfo("destPool");
  dfs.addCachePool(destPool.setMaxRelativeExpiryMs(poolExpiration / 2));
  try {
    dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setPool(destPool.getPoolName()).build());
    fail("Modified a directive to a pool with a lower max expiration");
  }
 catch (  InvalidRequestException e) {
    assertExceptionContains("exceeds the max relative expiration",e);
  }
  dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder(defaultExpiry).setId(listInfo.getId()).setPool(destPool.getPoolName()).setExpiration(Expiration.newRelative(poolExpiration / 2)).build());
  dirIt=dfs.listCacheDirectives(new CacheDirectiveInfo.Builder().setPool(destPool.getPoolName()).build());
  listInfo=dirIt.next().getInfo();
  listExpiration=listInfo.getExpiration().getAbsoluteMillis() - new Date().getTime();
  assertTrue("Unexpected relative expiry " + listExpiration + " expected approximately "+ poolExpiration / 2,Math.abs(poolExpiration / 2 - listExpiration) < 10 * 1000);
  dfs.modifyCachePool(destPool.setMaxRelativeExpiryMs(CachePoolInfo.RELATIVE_EXPIRY_NEVER));
  poolIt=dfs.listCachePools();
  listPool=poolIt.next().getInfo();
  while (!listPool.getPoolName().equals(destPool.getPoolName())) {
    listPool=poolIt.next().getInfo();
  }
  assertEquals("Expected max relative expiry to match set value",CachePoolInfo.RELATIVE_EXPIRY_NEVER,listPool.getMaxRelativeExpiryMs().longValue());
  dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(listInfo.getId()).setExpiration(Expiration.newRelative(RELATIVE_EXPIRY_NEVER)).build());
  dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(listInfo.getId()).setExpiration(Expiration.newRelative(RELATIVE_EXPIRY_NEVER - 1)).build());
}
