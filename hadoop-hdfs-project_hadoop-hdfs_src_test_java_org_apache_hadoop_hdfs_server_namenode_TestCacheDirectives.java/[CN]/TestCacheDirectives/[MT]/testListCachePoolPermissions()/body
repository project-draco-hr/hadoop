{
  final UserGroupInformation myUser=UserGroupInformation.createRemoteUser("myuser");
  final DistributedFileSystem myDfs=(DistributedFileSystem)DFSTestUtil.getFileSystemAs(myUser,conf);
  final String poolName="poolparty";
  dfs.addCachePool(new CachePoolInfo(poolName).setMode(new FsPermission((short)0700)));
  RemoteIterator<CachePoolEntry> it=myDfs.listCachePools();
  CachePoolInfo info=it.next().getInfo();
  assertFalse(it.hasNext());
  assertEquals("Expected pool name",poolName,info.getPoolName());
  assertNull("Unexpected owner name",info.getOwnerName());
  assertNull("Unexpected group name",info.getGroupName());
  assertNull("Unexpected mode",info.getMode());
  assertNull("Unexpected limit",info.getLimit());
  final long limit=99;
  dfs.modifyCachePool(new CachePoolInfo(poolName).setOwnerName(myUser.getShortUserName()).setLimit(limit));
  it=myDfs.listCachePools();
  info=it.next().getInfo();
  assertFalse(it.hasNext());
  assertEquals("Expected pool name",poolName,info.getPoolName());
  assertEquals("Mismatched owner name",myUser.getShortUserName(),info.getOwnerName());
  assertNotNull("Expected group name",info.getGroupName());
  assertEquals("Mismatched mode",(short)0700,info.getMode().toShort());
  assertEquals("Mismatched limit",limit,(long)info.getLimit());
}
