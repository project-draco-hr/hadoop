{
  final Configuration conf=new HdfsConfiguration();
  conf.setInt(DFSConfigKeys.DFS_CONTENT_SUMMARY_LIMIT_KEY,2);
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
  final DistributedFileSystem dfs=cluster.getFileSystem();
  try {
    assertTrue(dfs.mkdirs(new Path("/nqdir0/qdir1/qdir20/nqdir30")));
    final Path quotaDir1=new Path("/nqdir0/qdir1");
    dfs.setQuota(quotaDir1,6,HdfsConstants.QUOTA_DONT_SET);
    ContentSummary c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),3);
    assertEquals(c.getQuota(),6);
    final Path quotaDir2=new Path("/nqdir0/qdir1/qdir20");
    dfs.setQuota(quotaDir2,7,HdfsConstants.QUOTA_DONT_SET);
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),2);
    assertEquals(c.getQuota(),7);
    final Path quotaDir3=new Path("/nqdir0/qdir1/qdir21");
    assertTrue(dfs.mkdirs(quotaDir3));
    dfs.setQuota(quotaDir3,2,HdfsConstants.QUOTA_DONT_SET);
    c=dfs.getContentSummary(quotaDir3);
    assertEquals(c.getDirectoryCount(),1);
    assertEquals(c.getQuota(),2);
    Path tempPath=new Path(quotaDir3,"nqdir32");
    assertTrue(dfs.mkdirs(tempPath));
    c=dfs.getContentSummary(quotaDir3);
    assertEquals(c.getDirectoryCount(),2);
    assertEquals(c.getQuota(),2);
    tempPath=new Path(quotaDir3,"nqdir33");
    boolean hasException=false;
    try {
      assertFalse(dfs.mkdirs(tempPath));
    }
 catch (    NSQuotaExceededException e) {
      hasException=true;
    }
    assertTrue(hasException);
    c=dfs.getContentSummary(quotaDir3);
    assertEquals(c.getDirectoryCount(),2);
    assertEquals(c.getQuota(),2);
    tempPath=new Path(quotaDir2,"nqdir31");
    assertTrue(dfs.mkdirs(tempPath));
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),3);
    assertEquals(c.getQuota(),7);
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),6);
    assertEquals(c.getQuota(),6);
    tempPath=new Path(quotaDir2,"nqdir33");
    hasException=false;
    try {
      assertFalse(dfs.mkdirs(tempPath));
    }
 catch (    NSQuotaExceededException e) {
      hasException=true;
    }
    assertTrue(hasException);
    tempPath=new Path(quotaDir2,"nqdir30");
    dfs.rename(new Path(quotaDir3,"nqdir32"),tempPath);
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),4);
    assertEquals(c.getQuota(),7);
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),6);
    assertEquals(c.getQuota(),6);
    hasException=false;
    try {
      assertFalse(dfs.rename(tempPath,quotaDir3));
    }
 catch (    NSQuotaExceededException e) {
      hasException=true;
    }
    assertTrue(hasException);
    assertTrue(dfs.exists(tempPath));
    assertFalse(dfs.exists(new Path(quotaDir3,"nqdir30")));
    hasException=false;
    try {
      assertFalse(dfs.rename(tempPath,new Path(quotaDir3,"nqdir32")));
    }
 catch (    QuotaExceededException e) {
      hasException=true;
    }
    assertTrue(hasException);
    assertTrue(dfs.exists(tempPath));
    assertFalse(dfs.exists(new Path(quotaDir3,"nqdir32")));
    assertTrue(dfs.rename(tempPath,new Path("/nqdir0")));
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),2);
    assertEquals(c.getQuota(),7);
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),4);
    assertEquals(c.getQuota(),6);
    assertTrue(dfs.mkdirs(new Path("/nqdir0/nqdir30/nqdir33")));
    hasException=false;
    try {
      assertFalse(dfs.rename(new Path("/nqdir0/nqdir30"),tempPath));
    }
 catch (    NSQuotaExceededException e) {
      hasException=true;
    }
    assertTrue(hasException);
    assertTrue(dfs.rename(quotaDir3,quotaDir2));
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),4);
    assertEquals(c.getQuota(),6);
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),3);
    assertEquals(c.getQuota(),7);
    tempPath=new Path(quotaDir2,"qdir21");
    c=dfs.getContentSummary(tempPath);
    assertEquals(c.getDirectoryCount(),1);
    assertEquals(c.getQuota(),2);
    dfs.delete(tempPath,true);
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),2);
    assertEquals(c.getQuota(),7);
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),3);
    assertEquals(c.getQuota(),6);
    assertTrue(dfs.rename(new Path("/nqdir0/nqdir30"),quotaDir2));
    c=dfs.getContentSummary(quotaDir2);
    assertEquals(c.getDirectoryCount(),5);
    assertEquals(c.getQuota(),7);
    c=dfs.getContentSummary(quotaDir1);
    assertEquals(c.getDirectoryCount(),6);
    assertEquals(c.getQuota(),6);
    assertEquals(14,cluster.getNamesystem().getFSDirectory().getYieldCount());
  }
  finally {
    cluster.shutdown();
  }
}
