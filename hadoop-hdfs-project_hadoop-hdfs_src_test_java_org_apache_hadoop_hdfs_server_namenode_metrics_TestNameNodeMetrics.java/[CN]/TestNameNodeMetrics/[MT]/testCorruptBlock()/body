{
  final Path file=getTestPath("testCorruptBlock");
  createFile(file,100,(short)2);
  for (  DataNode dn : cluster.getDataNodes()) {
    DataNodeTestUtils.setHeartbeatsDisabledForTests(dn,true);
  }
  LocatedBlock block=NameNodeAdapter.getBlockLocations(cluster.getNameNode(),file.toString(),0,1).get(0);
  cluster.getNamesystem().writeLock();
  try {
    bm.findAndMarkBlockAsCorrupt(block.getBlock(),block.getLocations()[0],"TEST");
  }
  finally {
    cluster.getNamesystem().writeUnlock();
  }
  BlockManagerTestUtil.getComputedDatanodeWork(bm);
  BlockManagerTestUtil.updateState(bm);
  MetricsRecordBuilder rb=getMetrics(NS_METRICS);
  assertGauge("CorruptBlocks",1L,rb);
  assertGauge("PendingReplicationBlocks",1L,rb);
  assertGauge("ScheduledReplicationBlocks",1L,rb);
  fs.delete(file,true);
  rb=waitForDnMetricValue(NS_METRICS,"CorruptBlocks",0L);
  assertGauge("PendingReplicationBlocks",0L,rb);
  assertGauge("ScheduledReplicationBlocks",0L,rb);
}
