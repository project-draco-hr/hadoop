{
  if (newConfigProperties) {
    assertEquals("New config property " + MRJobConfig.MAP_JAVA_OPTS + " is not extracted properly.","-server -Xmx640m -Djava.net.preferIPv4Stack=true",JobBuilder.extract(props,JobConfPropertyNames.MAP_JAVA_OPTS_S.getCandidates(),null));
    assertEquals("New config property " + MRJobConfig.REDUCE_JAVA_OPTS + " is not extracted properly.","-server -Xmx650m -Djava.net.preferIPv4Stack=true",JobBuilder.extract(props,JobConfPropertyNames.REDUCE_JAVA_OPTS_S.getCandidates(),null));
  }
 else {
    assertEquals("mapred.child.java.opts is not extracted properly.","-server -Xmx640m -Djava.net.preferIPv4Stack=true",JobBuilder.extract(props,JobConfPropertyNames.TASK_JAVA_OPTS_S.getCandidates(),null));
    assertEquals("New config property " + MRJobConfig.MAP_JAVA_OPTS + " is not extracted properly when the old config property "+ "mapred.child.java.opts is set.","-server -Xmx640m -Djava.net.preferIPv4Stack=true",JobBuilder.extract(props,JobConfPropertyNames.MAP_JAVA_OPTS_S.getCandidates(),null));
    assertEquals("New config property " + MRJobConfig.REDUCE_JAVA_OPTS + " is not extracted properly when the old config property "+ "mapred.child.java.opts is set.","-server -Xmx640m -Djava.net.preferIPv4Stack=true",JobBuilder.extract(props,JobConfPropertyNames.REDUCE_JAVA_OPTS_S.getCandidates(),null));
  }
}
