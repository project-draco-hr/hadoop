{
  final Configuration conf=new Configuration();
  final FileSystem lfs=FileSystem.getLocal(conf);
  final Path rootInputDir=new Path(System.getProperty("test.tools.input.dir","")).makeQualified(lfs.getUri(),lfs.getWorkingDirectory());
  final Path rootTempDir=new Path(System.getProperty("test.build.data","/tmp")).makeQualified(lfs.getUri(),lfs.getWorkingDirectory());
  final Path rootInputFile=new Path(rootInputDir,"rumen/small-trace-test");
  final Path tempDir=new Path(rootTempDir,"TestRumenJobTraces");
  lfs.delete(tempDir,true);
  final Path topologyFile=new Path(tempDir,jtLogName + "-topology.json");
  final Path traceFile=new Path(tempDir,jtLogName + "-trace.json");
  final Path inputFile=new Path(rootInputFile,jtLogName);
  System.out.println("topology result file = " + topologyFile);
  System.out.println("trace result file = " + traceFile);
  String[] args=new String[6];
  args[0]="-v1";
  args[1]="-write-topology";
  args[2]=topologyFile.toString();
  args[3]="-write-job-trace";
  args[4]=traceFile.toString();
  args[5]=inputFile.toString();
  final Path topologyGoldFile=new Path(rootInputFile,goldTopology);
  final Path traceGoldFile=new Path(rootInputFile,goldTrace);
  @SuppressWarnings("deprecation") HadoopLogsAnalyzer analyzer=new HadoopLogsAnalyzer();
  int result=ToolRunner.run(analyzer,args);
  assertEquals("Non-zero exit",0,result);
  TestRumenJobTraces.<LoggedNetworkTopology>jsonFileMatchesGold(conf,topologyFile,topologyGoldFile,LoggedNetworkTopology.class,"topology");
  TestRumenJobTraces.<LoggedJob>jsonFileMatchesGold(conf,traceFile,traceGoldFile,LoggedJob.class,"trace");
}
