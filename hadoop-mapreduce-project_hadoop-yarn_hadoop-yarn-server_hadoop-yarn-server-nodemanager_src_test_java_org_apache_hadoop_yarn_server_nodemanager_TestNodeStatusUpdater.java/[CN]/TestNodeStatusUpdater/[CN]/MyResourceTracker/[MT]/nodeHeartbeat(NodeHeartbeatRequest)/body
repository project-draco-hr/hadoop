{
  NodeStatus nodeStatus=request.getNodeStatus();
  LOG.info("Got heartbeat number " + heartBeatID);
  nodeStatus.setResponseId(heartBeatID++);
  if (heartBeatID == 1) {
    Assert.assertEquals(0,nodeStatus.getAllContainers().size());
    applicationID.setId(heartBeatID);
    appAttemptID.setApplicationId(applicationID);
    firstContainerID.setAppId(applicationID);
    firstContainerID.setAppAttemptId(appAttemptID);
    firstContainerID.setId(heartBeatID);
    ContainerLaunchContext launchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
    launchContext.setContainerId(firstContainerID);
    launchContext.setResource(recordFactory.newRecordInstance(Resource.class));
    launchContext.getResource().setMemory(2);
    Container container=new ContainerImpl(null,launchContext,null,null);
    this.context.getContainers().put(firstContainerID,container);
  }
 else   if (heartBeatID == 2) {
    Assert.assertEquals("Number of applications should only be one!",1,nodeStatus.getAllContainers().size());
    Assert.assertEquals("Number of container for the app should be one!",1,nodeStatus.getContainers(applicationID).size());
    Assert.assertEquals(2,nodeStatus.getContainers(applicationID).get(0).getResource().getMemory());
    ConcurrentMap<ContainerId,Container> activeContainers=this.context.getContainers();
    Assert.assertEquals(1,activeContainers.size());
    applicationID.setId(heartBeatID);
    appAttemptID.setApplicationId(applicationID);
    secondContainerID.setAppId(applicationID);
    secondContainerID.setAppAttemptId(appAttemptID);
    secondContainerID.setId(heartBeatID);
    ContainerLaunchContext launchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
    launchContext.setContainerId(secondContainerID);
    launchContext.setResource(recordFactory.newRecordInstance(Resource.class));
    launchContext.getResource().setMemory(3);
    Container container=new ContainerImpl(null,launchContext,null,null);
    this.context.getContainers().put(secondContainerID,container);
  }
 else   if (heartBeatID == 3) {
    Assert.assertEquals("Number of applications should only be one!",1,nodeStatus.getAllContainers().size());
    Assert.assertEquals("Number of container for the app should be two!",2,nodeStatus.getContainers(applicationID).size());
    Assert.assertEquals(2,nodeStatus.getContainers(applicationID).get(0).getResource().getMemory());
    Assert.assertEquals(3,nodeStatus.getContainers(applicationID).get(1).getResource().getMemory());
    ConcurrentMap<ContainerId,Container> activeContainers=this.context.getContainers();
    Assert.assertEquals(2,activeContainers.size());
  }
  HeartbeatResponse response=recordFactory.newRecordInstance(HeartbeatResponse.class);
  response.setResponseId(heartBeatID);
  NodeHeartbeatResponse nhResponse=recordFactory.newRecordInstance(NodeHeartbeatResponse.class);
  nhResponse.setHeartbeatResponse(response);
  return nhResponse;
}
