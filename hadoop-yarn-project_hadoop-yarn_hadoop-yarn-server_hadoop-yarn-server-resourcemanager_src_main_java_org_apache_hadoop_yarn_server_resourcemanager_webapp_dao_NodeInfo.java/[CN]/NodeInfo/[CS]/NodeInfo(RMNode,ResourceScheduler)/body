{
  NodeId id=ni.getNodeID();
  SchedulerNodeReport report=sched.getNodeReport(id);
  this.numContainers=0;
  this.usedMemoryMB=0;
  this.availMemoryMB=0;
  if (report != null) {
    this.numContainers=report.getNumContainers();
    this.usedMemoryMB=report.getUsedResource().getMemorySize();
    this.availMemoryMB=report.getAvailableResource().getMemorySize();
    this.usedVirtualCores=report.getUsedResource().getVirtualCores();
    this.availableVirtualCores=report.getAvailableResource().getVirtualCores();
  }
  this.id=id.toString();
  this.rack=ni.getRackName();
  this.nodeHostName=ni.getHostName();
  this.state=ni.getState();
  this.nodeHTTPAddress=ni.getHttpAddress();
  this.lastHealthUpdate=ni.getLastHealthReportTime();
  this.healthReport=String.valueOf(ni.getHealthReport());
  this.version=ni.getNodeManagerVersion();
  Set<String> labelSet=ni.getNodeLabels();
  if (labelSet != null) {
    nodeLabels.addAll(labelSet);
    Collections.sort(nodeLabels);
  }
  this.resourceUtilization=new ResourceUtilizationInfo(ni);
}
