{
  Configuration conf=new Configuration();
  HadoopArchiveLogs hal=new HadoopArchiveLogs(conf);
  FileSystem fs=FileSystem.getLocal(conf);
  Path rootLogDir=new Path("target","logs");
  String suffix="logs";
  Path logDir=new Path(rootLogDir,new Path(System.getProperty("user.name"),suffix));
  fs.mkdirs(logDir);
  Assert.assertEquals(0,hal.eligibleApplications.size());
  ApplicationReport app1=createAppReport(1);
  ApplicationReport app2=createAppReport(2);
  Path app2Path=new Path(logDir,app2.getApplicationId().toString());
  fs.mkdirs(app2Path);
  createFile(fs,new Path(app2Path,"file1"),1);
  hal.minNumLogFiles=2;
  ApplicationReport app3=createAppReport(3);
  Path app3Path=new Path(logDir,app3.getApplicationId().toString());
  fs.mkdirs(app3Path);
  createFile(fs,new Path(app3Path,"file1"),2);
  createFile(fs,new Path(app3Path,"file2"),5);
  hal.maxTotalLogsSize=FILE_SIZE_INCREMENT * 6;
  ApplicationReport app4=createAppReport(4);
  Path app4Path=new Path(logDir,app4.getApplicationId().toString());
  fs.mkdirs(app4Path);
  createFile(fs,new Path(app4Path,app4.getApplicationId() + ".har"),1);
  ApplicationReport app5=createAppReport(5);
  Path app5Path=new Path(logDir,app5.getApplicationId().toString());
  fs.mkdirs(app5Path);
  createFile(fs,new Path(app5Path,"file1"),2);
  createFile(fs,new Path(app5Path,"file2"),3);
  hal.eligibleApplications.add(app1);
  hal.eligibleApplications.add(app2);
  hal.eligibleApplications.add(app3);
  hal.eligibleApplications.add(app4);
  hal.eligibleApplications.add(app5);
  hal.checkFiles(fs,rootLogDir,suffix);
  Assert.assertEquals(1,hal.eligibleApplications.size());
  Assert.assertEquals(app5,hal.eligibleApplications.iterator().next());
}
