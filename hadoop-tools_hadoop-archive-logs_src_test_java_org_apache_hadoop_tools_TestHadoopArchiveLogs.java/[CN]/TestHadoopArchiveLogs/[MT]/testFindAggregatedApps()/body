{
  MiniYARNCluster yarnCluster=null;
  try {
    Configuration conf=new Configuration();
    conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,true);
    yarnCluster=new MiniYARNCluster(TestHadoopArchiveLogs.class.getSimpleName(),1,1,1,1);
    yarnCluster.init(conf);
    yarnCluster.start();
    conf=yarnCluster.getConfig();
    RMContext rmContext=yarnCluster.getResourceManager().getRMContext();
    RMAppImpl app1=(RMAppImpl)createRMApp(1,conf,rmContext,LogAggregationStatus.DISABLED);
    RMAppImpl app2=(RMAppImpl)createRMApp(2,conf,rmContext,LogAggregationStatus.FAILED);
    RMAppImpl app3=(RMAppImpl)createRMApp(3,conf,rmContext,LogAggregationStatus.NOT_START);
    RMAppImpl app4=(RMAppImpl)createRMApp(4,conf,rmContext,LogAggregationStatus.SUCCEEDED);
    RMAppImpl app5=(RMAppImpl)createRMApp(5,conf,rmContext,LogAggregationStatus.RUNNING);
    RMAppImpl app6=(RMAppImpl)createRMApp(6,conf,rmContext,LogAggregationStatus.RUNNING_WITH_FAILURE);
    RMAppImpl app7=(RMAppImpl)createRMApp(7,conf,rmContext,LogAggregationStatus.TIME_OUT);
    rmContext.getRMApps().put(app1.getApplicationId(),app1);
    rmContext.getRMApps().put(app2.getApplicationId(),app2);
    rmContext.getRMApps().put(app3.getApplicationId(),app3);
    rmContext.getRMApps().put(app4.getApplicationId(),app4);
    rmContext.getRMApps().put(app5.getApplicationId(),app5);
    rmContext.getRMApps().put(app6.getApplicationId(),app6);
    rmContext.getRMApps().put(app7.getApplicationId(),app7);
    HadoopArchiveLogs hal=new HadoopArchiveLogs(conf);
    Assert.assertEquals(0,hal.eligibleApplications.size());
    hal.findAggregatedApps();
    Assert.assertEquals(2,hal.eligibleApplications.size());
  }
  finally {
    if (yarnCluster != null) {
      yarnCluster.stop();
    }
  }
}
