{
  final int numOfResults=results.size();
  if (numOfResults == 0) {
    writer=chooseLocalStorage(writer,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes,true).getDatanodeDescriptor();
    if (--numOfReplicas == 0) {
      return writer;
    }
  }
  final DatanodeDescriptor dn0=results.get(0).getDatanodeDescriptor();
  if (numOfResults <= 1) {
    chooseRemoteRack(1,dn0,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes);
    if (--numOfReplicas == 0) {
      return writer;
    }
  }
  if (numOfResults <= 2) {
    final DatanodeDescriptor dn1=results.get(1).getDatanodeDescriptor();
    if (clusterMap.isOnSameRack(dn0,dn1)) {
      chooseRemoteRack(1,dn0,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes);
    }
 else     if (newBlock) {
      chooseLocalRack(dn1,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes);
    }
 else {
      chooseLocalRack(writer,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes);
    }
    if (--numOfReplicas == 0) {
      return writer;
    }
  }
  chooseRandom(numOfReplicas,NodeBase.ROOT,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageTypes);
  return writer;
}
