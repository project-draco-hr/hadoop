{
  if (numOfReplicas == 0 || clusterMap.getNumOfLeaves() == 0) {
    return writer;
  }
  int totalReplicasExpected=numOfReplicas + results.size();
  int numOfResults=results.size();
  boolean newBlock=(numOfResults == 0);
  if ((writer == null || !(writer instanceof DatanodeDescriptor)) && !newBlock) {
    writer=results.get(0).getDatanodeDescriptor();
  }
  final Set<Node> oldExcludedNodes=avoidStaleNodes ? new HashSet<Node>(excludedNodes) : null;
  try {
    if (numOfResults == 0) {
      writer=chooseLocalStorage(writer,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType).getDatanodeDescriptor();
      if (--numOfReplicas == 0) {
        return writer;
      }
    }
    final DatanodeDescriptor dn0=results.get(0).getDatanodeDescriptor();
    if (numOfResults <= 1) {
      chooseRemoteRack(1,dn0,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType);
      if (--numOfReplicas == 0) {
        return writer;
      }
    }
    if (numOfResults <= 2) {
      final DatanodeDescriptor dn1=results.get(1).getDatanodeDescriptor();
      if (clusterMap.isOnSameRack(dn0,dn1)) {
        chooseRemoteRack(1,dn0,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType);
      }
 else       if (newBlock) {
        chooseLocalRack(dn1,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType);
      }
 else {
        chooseLocalRack(writer,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType);
      }
      if (--numOfReplicas == 0) {
        return writer;
      }
    }
    chooseRandom(numOfReplicas,NodeBase.ROOT,excludedNodes,blocksize,maxNodesPerRack,results,avoidStaleNodes,storageType);
  }
 catch (  NotEnoughReplicasException e) {
    final String message="Failed to place enough replicas, still in need of " + (totalReplicasExpected - results.size()) + " to reach "+ totalReplicasExpected+ ".";
    if (LOG.isTraceEnabled()) {
      LOG.trace(message,e);
    }
 else {
      LOG.warn(message + " " + e.getMessage());
    }
    if (avoidStaleNodes) {
      for (      DatanodeStorageInfo resultStorage : results) {
        oldExcludedNodes.add(resultStorage.getDatanodeDescriptor());
      }
      numOfReplicas=totalReplicasExpected - results.size();
      return chooseTarget(numOfReplicas,writer,oldExcludedNodes,blocksize,maxNodesPerRack,results,false,storageType);
    }
  }
  return writer;
}
