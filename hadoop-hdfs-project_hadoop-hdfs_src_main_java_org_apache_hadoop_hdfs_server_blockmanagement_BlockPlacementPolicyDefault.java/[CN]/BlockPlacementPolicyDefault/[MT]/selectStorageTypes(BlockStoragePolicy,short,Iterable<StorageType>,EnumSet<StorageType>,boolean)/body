{
  final List<StorageType> storageTypes=storagePolicy.chooseStorageTypes(replication,chosen);
  final List<StorageType> removed=new ArrayList<StorageType>();
  for (int i=storageTypes.size() - 1; i >= 0; i--) {
    final StorageType t=storageTypes.get(i);
    if (unavailableStorages.contains(t)) {
      final StorageType fallback=isNewBlock ? storagePolicy.getCreationFallback(unavailableStorages) : storagePolicy.getReplicationFallback(unavailableStorages);
      if (fallback == null) {
        removed.add(storageTypes.remove(i));
      }
 else {
        storageTypes.set(i,fallback);
      }
    }
  }
  if (storageTypes.size() < replication) {
    LOG.warn("Failed to place enough replicas: replication is " + replication + " but only "+ storageTypes.size()+ " storage types can be selected "+ "(selected="+ storageTypes+ ", unavailable="+ unavailableStorages+ ", removed="+ removed+ ", policy="+ storagePolicy+ ")");
  }
  return storageTypes;
}
