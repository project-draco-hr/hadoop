{
  int card=WritableUtils.readVInt(in);
  if (splits == null || splits.length != card) {
    splits=new InputSplit[card];
  }
  Class<? extends InputSplit>[] cls=new Class[card];
  try {
    for (int i=0; i < card; ++i) {
      cls[i]=Class.forName(Text.readString(in)).asSubclass(InputSplit.class);
    }
    for (int i=0; i < card; ++i) {
      splits[i]=ReflectionUtils.newInstance(cls[i],null);
      SerializationFactory factory=new SerializationFactory(conf);
      Deserializer deserializer=factory.getDeserializer(cls[i]);
      deserializer.open((DataInputStream)in);
      splits[i]=(InputSplit)deserializer.deserialize(splits[i]);
    }
  }
 catch (  ClassNotFoundException e) {
    throw new IOException("Failed split init",e);
  }
}
