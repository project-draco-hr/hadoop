{
  return Guice.createInjector(new AbstractModule(){
    final PrintWriter writer=spy(new PrintWriter(System.out));
    final HttpServletRequest request=createRequest();
    final HttpServletResponse response=createResponse();
    @Override protected void configure(){
      if (api != null) {
        bind(api).toInstance(impl);
      }
      bindScope(RequestScoped.class,Scopes.SINGLETON);
      if (modules != null) {
        for (        Module module : modules) {
          install(module);
        }
      }
    }
    @Provides HttpServletRequest request(){
      return request;
    }
    @Provides HttpServletResponse response(){
      return response;
    }
    @Provides PrintWriter writer(){
      return writer;
    }
    HttpServletRequest createRequest(){
      return mock(HttpServletRequest.class);
    }
    HttpServletResponse createResponse(){
      try {
        HttpServletResponse res=mock(HttpServletResponse.class);
        when(res.getWriter()).thenReturn(writer);
        return res;
      }
 catch (      Exception e) {
        throw new WebAppException(e);
      }
    }
  }
);
}
