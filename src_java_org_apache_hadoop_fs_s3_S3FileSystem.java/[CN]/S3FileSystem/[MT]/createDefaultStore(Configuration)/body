{
  FileSystemStore store=new Jets3tFileSystemStore();
  RetryPolicy basePolicy=RetryPolicies.retryUpToMaximumCountWithFixedSleep(conf.getInt("fs.s3.maxRetries",4),conf.getLong("fs.s3.sleepTimeSeconds",10),TimeUnit.SECONDS);
  Map<Class<? extends Exception>,RetryPolicy> exceptionToPolicyMap=new HashMap<Class<? extends Exception>,RetryPolicy>();
  exceptionToPolicyMap.put(IOException.class,basePolicy);
  exceptionToPolicyMap.put(S3Exception.class,basePolicy);
  RetryPolicy methodPolicy=RetryPolicies.retryByException(RetryPolicies.TRY_ONCE_THEN_FAIL,exceptionToPolicyMap);
  Map<String,RetryPolicy> methodNameToPolicyMap=new HashMap<String,RetryPolicy>();
  methodNameToPolicyMap.put("storeBlock",methodPolicy);
  methodNameToPolicyMap.put("retrieveBlock",methodPolicy);
  return (FileSystemStore)RetryProxy.create(FileSystemStore.class,store,methodNameToPolicyMap);
}
