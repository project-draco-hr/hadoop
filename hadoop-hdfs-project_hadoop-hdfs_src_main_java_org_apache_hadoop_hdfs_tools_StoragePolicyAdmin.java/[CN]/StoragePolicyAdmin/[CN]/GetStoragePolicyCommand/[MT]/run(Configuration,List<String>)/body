{
  final String path=StringUtils.popOptionWithArgument("-path",args);
  if (path == null) {
    System.err.println("Please specify the path with -path.\nUsage:" + getLongUsage());
    return 1;
  }
  final DistributedFileSystem dfs=AdminHelper.getDFS(conf);
  try {
    HdfsFileStatus status=dfs.getClient().getFileInfo(path);
    if (status == null) {
      System.err.println("File/Directory does not exist: " + path);
      return 2;
    }
    byte storagePolicyId=status.getStoragePolicy();
    if (storagePolicyId == HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED) {
      System.out.println("The storage policy of " + path + " is unspecified");
      return 0;
    }
    Collection<BlockStoragePolicy> policies=dfs.getAllStoragePolicies();
    for (    BlockStoragePolicy p : policies) {
      if (p.getId() == storagePolicyId) {
        System.out.println("The storage policy of " + path + ":\n"+ p);
        return 0;
      }
    }
  }
 catch (  Exception e) {
    System.err.println(AdminHelper.prettifyException(e));
    return 2;
  }
  System.err.println("Cannot identify the storage policy for " + path);
  return 2;
}
