{
  Configuration conf=new Configuration();
  conf.set(YarnConfiguration.IPC_RPC_IMPL,rpcClass);
  YarnRPC rpc=YarnRPC.create(conf);
  String bindAddr="localhost:0";
  InetSocketAddress addr=NetUtils.createSocketAddr(bindAddr);
  Server server=rpc.getServer(ContainerManager.class,new DummyContainerManager(),addr,conf,null,1);
  server.start();
  RPC.setProtocolEngine(conf,ContainerManagerPB.class,ProtobufRpcEngine.class);
  ContainerManager proxy=(ContainerManager)rpc.getProxy(ContainerManager.class,NetUtils.getConnectAddress(server),conf);
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  ApplicationId applicationId=ApplicationId.newInstance(0,0);
  ApplicationAttemptId applicationAttemptId=ApplicationAttemptId.newInstance(applicationId,0);
  ContainerId containerId=ContainerId.newInstance(applicationAttemptId,100);
  StartContainerRequest scRequest=recordFactory.newRecordInstance(StartContainerRequest.class);
  scRequest.setContainerLaunchContext(containerLaunchContext);
  NodeId nodeId=NodeId.newInstance("localhost",1234);
  Resource resource=Resource.newInstance(1234,2);
  ContainerTokenIdentifier containerTokenIdentifier=new ContainerTokenIdentifier(containerId,"localhost","user",resource,System.currentTimeMillis() + 10000,42,42);
  Token containerToken=newContainerToken(nodeId,"password".getBytes(),containerTokenIdentifier);
  scRequest.setContainerToken(containerToken);
  proxy.startContainer(scRequest);
  GetContainerStatusRequest gcsRequest=recordFactory.newRecordInstance(GetContainerStatusRequest.class);
  gcsRequest.setContainerId(containerId);
  GetContainerStatusResponse response=proxy.getContainerStatus(gcsRequest);
  ContainerStatus status=response.getStatus();
  boolean exception=false;
  try {
    StopContainerRequest stopRequest=recordFactory.newRecordInstance(StopContainerRequest.class);
    stopRequest.setContainerId(containerId);
    proxy.stopContainer(stopRequest);
  }
 catch (  YarnRemoteException e) {
    exception=true;
    Assert.assertTrue(e.getMessage().contains(EXCEPTION_MSG));
    Assert.assertTrue(e.getMessage().contains(EXCEPTION_CAUSE));
    System.out.println("Test Exception is " + e.getMessage());
  }
catch (  Exception ex) {
    ex.printStackTrace();
  }
  Assert.assertTrue(exception);
  server.stop();
  Assert.assertNotNull(status);
  Assert.assertEquals(ContainerState.RUNNING,status.getState());
}
