{
  ResourceCalculator resCalc=new DefaultResourceCalculator();
  RLESparseResourceAllocation rleSparseVector=new RLESparseResourceAllocation(resCalc);
  ReservationInterval riAdd=new ReservationInterval(10,20);
  Resource rr=Resource.newInstance(1024 * 100,100);
  ReservationInterval riAdd2=new ReservationInterval(20,30);
  Resource rr2=Resource.newInstance(1024 * 200,200);
  ReservationInterval riRemove=new ReservationInterval(12,25);
  LOG.info(rleSparseVector.toString());
  rleSparseVector.addInterval(riAdd,rr);
  rleSparseVector.addInterval(riAdd2,rr2);
  LOG.info(rleSparseVector.toString());
  rleSparseVector.removeInterval(riRemove,rr);
  LOG.info(rleSparseVector.toString());
  Assert.assertEquals(102400,rleSparseVector.getCapacityAtTime(10).getMemorySize());
  Assert.assertEquals(0,rleSparseVector.getCapacityAtTime(13).getMemorySize());
  Assert.assertEquals(0,rleSparseVector.getCapacityAtTime(19).getMemorySize());
  Assert.assertEquals(102400,rleSparseVector.getCapacityAtTime(21).getMemorySize());
  Assert.assertEquals(2 * 102400,rleSparseVector.getCapacityAtTime(26).getMemorySize());
  ReservationInterval riRemove2=new ReservationInterval(9,13);
  rleSparseVector.removeInterval(riRemove2,rr);
  LOG.info(rleSparseVector.toString());
  Assert.assertEquals(0,rleSparseVector.getCapacityAtTime(11).getMemorySize());
  Assert.assertEquals(-102400,rleSparseVector.getCapacityAtTime(9).getMemorySize());
  Assert.assertEquals(0,rleSparseVector.getCapacityAtTime(13).getMemorySize());
  Assert.assertEquals(102400,rleSparseVector.getCapacityAtTime(20).getMemorySize());
}
