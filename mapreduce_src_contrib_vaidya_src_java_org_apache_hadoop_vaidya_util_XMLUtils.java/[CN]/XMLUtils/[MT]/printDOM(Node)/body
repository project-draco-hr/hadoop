{
  int type=node.getNodeType();
switch (type) {
case Node.DOCUMENT_NODE:
{
      System.out.print("<?xml version=\"1.0\" ?>");
      printDOM(((Document)node).getDocumentElement());
      break;
    }
case Node.ELEMENT_NODE:
{
    System.out.println();
    System.out.print("<");
    System.out.print(node.getNodeName());
    NamedNodeMap attrs=node.getAttributes();
    for (int i=0; i < attrs.getLength(); i++) {
      Node attr=attrs.item(i);
      System.out.print(" " + attr.getNodeName().trim() + "=\""+ attr.getNodeValue().trim()+ "\"");
    }
    System.out.print(">");
    NodeList children=node.getChildNodes();
    if (children != null) {
      int len=children.getLength();
      for (int i=0; i < len; i++)       printDOM(children.item(i));
    }
    break;
  }
case Node.ENTITY_REFERENCE_NODE:
{
  System.out.print("&");
  System.out.print(node.getNodeName().trim());
  System.out.print(";");
  break;
}
case Node.CDATA_SECTION_NODE:
{
System.out.print("<![CDATA[");
System.out.print(node.getNodeValue().trim());
System.out.print("]]>");
break;
}
case Node.TEXT_NODE:
{
System.out.println();
System.out.print(node.getNodeValue().trim());
break;
}
case Node.PROCESSING_INSTRUCTION_NODE:
{
System.out.print("<?");
System.out.print(node.getNodeName().trim());
String data=node.getNodeValue().trim();
{
System.out.print(" ");
System.out.print(data);
}
System.out.print("?>");
break;
}
}
if (type == Node.ELEMENT_NODE) {
System.out.println();
System.out.print("</");
System.out.print(node.getNodeName().trim());
System.out.print('>');
}
}
