{
  assertTrue(fs.mkdirs(path("/tests3a/d")));
  assertTrue(fs.delete(path("/tests3a/d"),true));
  assertFalse(fs.exists(path("/tests3a/d")));
  assertTrue(fs.mkdirs(path("/tests3a/e/f/g/h")));
  assertTrue(fs.delete(path("/tests3a/e/f/g"),true));
  assertFalse(fs.exists(path("/tests3a/e/f/g/h")));
  assertFalse(fs.exists(path("/tests3a/e/f/g")));
  assertTrue(fs.exists(path("/tests3a/e/f")));
  writeFile(path("/tests3a/f/f/file"),1000);
  assertTrue(fs.exists(path("/tests3a/f/f/file")));
  assertTrue(fs.delete(path("/tests3a/f/f/file"),false));
  assertFalse(fs.exists(path("/tests3a/f/f/file")));
  writeFile(path("/tests3a/g/h/i/file"),1000);
  assertTrue(fs.exists(path("/tests3a/g/h/i/file")));
  writeFile(path("/tests3a/g/h/j/file"),1000);
  assertTrue(fs.exists(path("/tests3a/g/h/j/file")));
  try {
    assertFalse(fs.delete(path("/tests3a/g/h"),false));
    fail("Expected delete to fail with recursion turned off");
  }
 catch (  IOException e) {
  }
  assertTrue(fs.exists(path("/tests3a/g/h/j/file")));
  assertTrue(fs.delete(path("/tests3a/g/h"),true));
  assertFalse(fs.exists(path("/tests3a/g/h/j")));
}
