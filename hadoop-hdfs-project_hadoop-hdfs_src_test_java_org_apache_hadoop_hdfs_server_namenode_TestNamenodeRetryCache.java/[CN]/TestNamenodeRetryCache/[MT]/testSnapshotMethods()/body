{
  String dir="/testNamenodeRetryCache/testCreateSnapshot/src";
  resetCall();
  namesystem.mkdirs(dir,perm,true);
  namesystem.allowSnapshot(dir);
  newCall();
  String name=namesystem.createSnapshot(dir,"snap1");
  Assert.assertEquals(name,namesystem.createSnapshot(dir,"snap1"));
  Assert.assertEquals(name,namesystem.createSnapshot(dir,"snap1"));
  Assert.assertEquals(name,namesystem.createSnapshot(dir,"snap1"));
  newCall();
  try {
    namesystem.createSnapshot(dir,"snap1");
    Assert.fail("testSnapshotMethods expected exception is not thrown");
  }
 catch (  IOException e) {
  }
  newCall();
  namesystem.renameSnapshot(dir,"snap1","snap2");
  namesystem.renameSnapshot(dir,"snap1","snap2");
  namesystem.renameSnapshot(dir,"snap1","snap2");
  newCall();
  try {
    namesystem.renameSnapshot(dir,"snap1","snap2");
    Assert.fail("testSnapshotMethods expected exception is not thrown");
  }
 catch (  IOException e) {
  }
  newCall();
  namesystem.deleteSnapshot(dir,"snap2");
  namesystem.deleteSnapshot(dir,"snap2");
  namesystem.deleteSnapshot(dir,"snap2");
  newCall();
  try {
    namesystem.deleteSnapshot(dir,"snap2");
    Assert.fail("testSnapshotMethods expected exception is not thrown");
  }
 catch (  IOException e) {
  }
}
