{
  ATSEntities atsEntities=new ATSEntities();
  Map<String,Object> primaryFilters=new HashMap<String,Object>();
  primaryFilters.put("user","username");
  primaryFilters.put("appname",12345l);
  Map<String,Object> secondaryFilters=new HashMap<String,Object>();
  secondaryFilters.put("startTime",123456l);
  secondaryFilters.put("status","RUNNING");
  Map<String,Object> otherInfo1=new HashMap<String,Object>();
  otherInfo1.put("info1","val1");
  otherInfo1.putAll(secondaryFilters);
  String entity1="id_1";
  String entityType1="type_1";
  String entity1b="id_2";
  String entity2="id_2";
  String entityType2="type_2";
  Map<String,List<String>> relatedEntities=new HashMap<String,List<String>>();
  relatedEntities.put(entityType2,Collections.singletonList(entity2));
  ATSEvent ev3=createEvent(789l,"launch_event",null);
  ATSEvent ev4=createEvent(-123l,"init_event",null);
  List<ATSEvent> events=new ArrayList<ATSEvent>();
  events.add(ev3);
  events.add(ev4);
  atsEntities.setEntities(Collections.singletonList(createEntity(entity2,entityType2,null,events,null,null,null)));
  ATSPutErrors response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  ATSEvent ev1=createEvent(123l,"start_event",null);
  atsEntities.setEntities(Collections.singletonList(createEntity(entity1,entityType1,123l,Collections.singletonList(ev1),relatedEntities,primaryFilters,otherInfo1)));
  response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  atsEntities.setEntities(Collections.singletonList(createEntity(entity1b,entityType1,null,Collections.singletonList(ev1),relatedEntities,primaryFilters,otherInfo1)));
  response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put("event info 1","val1");
  ATSEvent ev2=createEvent(456l,"end_event",eventInfo);
  Map<String,Object> otherInfo2=new HashMap<String,Object>();
  otherInfo2.put("info2","val2");
  atsEntities.setEntities(Collections.singletonList(createEntity(entity1,entityType1,null,Collections.singletonList(ev2),null,primaryFilters,otherInfo2)));
  response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  atsEntities.setEntities(Collections.singletonList(createEntity(entity1b,entityType1,123l,Collections.singletonList(ev2),null,primaryFilters,otherInfo2)));
  response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  atsEntities.setEntities(Collections.singletonList(createEntity("badentityid","badentity",null,null,null,null,otherInfo1)));
  response=store.put(atsEntities);
  assertEquals(1,response.getErrors().size());
  ATSPutError error=response.getErrors().get(0);
  assertEquals("badentityid",error.getEntityId());
  assertEquals("badentity",error.getEntityType());
  assertEquals((Integer)1,error.getErrorCode());
}
