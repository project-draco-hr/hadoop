{
  final int numDataUnits=this.rsRawEncoder.getNumDataUnits();
  final int numParityUnits=this.rsRawEncoder.getNumParityUnits();
  final int subSPacketSize=getSubPacketSize();
  if (inputs.length != numDataUnits * subSPacketSize) {
    throw new IllegalArgumentException("Invalid inputs length");
  }
  if (outputs.length != numParityUnits * subSPacketSize) {
    throw new IllegalArgumentException("Invalid outputs length");
  }
  ByteBuffer[][] hhInputs=new ByteBuffer[subSPacketSize][numDataUnits];
  for (int i=0; i < subSPacketSize; ++i) {
    for (int j=0; j < numDataUnits; ++j) {
      hhInputs[i][j]=inputs[i * numDataUnits + j];
    }
  }
  ByteBuffer[][] hhOutputs=new ByteBuffer[subSPacketSize][numParityUnits];
  for (int i=0; i < subSPacketSize; ++i) {
    for (int j=0; j < numParityUnits; ++j) {
      hhOutputs[i][j]=outputs[i * numParityUnits + j];
    }
  }
  doEncode(hhInputs,hhOutputs);
}
