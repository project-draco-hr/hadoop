{
  AccessControlList viewACL=new AccessControlList("");
  viewACL.addGroup(FRIENDLY_GROUP);
  AccessControlList modifyACL=new AccessControlList("");
  modifyACL.addUser(FRIEND);
  ApplicationId applicationId=submitAppAndGetAppId(viewACL,modifyACL);
  final GetApplicationReportRequest appReportRequest=recordFactory.newRecordInstance(GetApplicationReportRequest.class);
  appReportRequest.setApplicationId(applicationId);
  final KillApplicationRequest finishAppRequest=recordFactory.newRecordInstance(KillApplicationRequest.class);
  finishAppRequest.setApplicationId(applicationId);
  ClientRMProtocol enemyRmClient=getRMClientForUser(ENEMY);
  ApplicationReport appReport=enemyRmClient.getApplicationReport(appReportRequest).getApplicationReport();
  verifyEnemyAppReport(appReport);
  List<ApplicationReport> appReports=enemyRmClient.getAllApplications(recordFactory.newRecordInstance(GetAllApplicationsRequest.class)).getApplicationList();
  Assert.assertEquals("App view by enemy should list the apps!!",4,appReports.size());
  for (  ApplicationReport report : appReports) {
    verifyEnemyAppReport(report);
  }
  try {
    enemyRmClient.forceKillApplication(finishAppRequest);
    Assert.fail("App killing by the enemy should fail!!");
  }
 catch (  YarnRemoteException e) {
    LOG.info("Got exception while killing app as the enemy",e);
    Assert.assertEquals("User enemy cannot perform operation MODIFY_APP on " + applicationId,e.getMessage());
  }
  rmClient.forceKillApplication(finishAppRequest);
}
