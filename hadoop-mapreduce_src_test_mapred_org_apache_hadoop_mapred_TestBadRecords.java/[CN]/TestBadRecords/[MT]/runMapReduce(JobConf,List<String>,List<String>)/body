{
  createInput();
  conf.setJobName("mr");
  conf.setNumMapTasks(1);
  conf.setNumReduceTasks(1);
  conf.setInt(JobContext.TASK_TIMEOUT,30 * 1000);
  SkipBadRecords.setMapperMaxSkipRecords(conf,Long.MAX_VALUE);
  SkipBadRecords.setReducerMaxSkipGroups(conf,Long.MAX_VALUE);
  SkipBadRecords.setAttemptsToStartSkipping(conf,0);
  conf.setMaxMapAttempts(SkipBadRecords.getAttemptsToStartSkipping(conf) + 1 + mapperBadRecords.size());
  conf.setMaxReduceAttempts(SkipBadRecords.getAttemptsToStartSkipping(conf) + 1 + redBadRecords.size());
  FileInputFormat.setInputPaths(conf,getInputDir());
  FileOutputFormat.setOutputPath(conf,getOutputDir());
  conf.setInputFormat(TextInputFormat.class);
  conf.setMapOutputKeyClass(LongWritable.class);
  conf.setMapOutputValueClass(Text.class);
  conf.setOutputFormat(TextOutputFormat.class);
  conf.setOutputKeyClass(LongWritable.class);
  conf.setOutputValueClass(Text.class);
  RunningJob runningJob=JobClient.runJob(conf);
  validateOutput(conf,runningJob,mapperBadRecords,redBadRecords);
}
