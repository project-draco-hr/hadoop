{
  String filename=ROOT + "/testDIV";
  File f=new File(filename);
  BufferedReader br=null;
  StringBuilder sb=new StringBuilder();
  try {
    DelimitedImageVisitor div=new DelimitedImageVisitor(filename,true,delim);
    div.visit(ImageElement.FS_IMAGE,"Not in ouput");
    div.visitEnclosingElement(ImageElement.INODE);
    div.visit(ImageElement.LAYOUT_VERSION,"not in");
    div.visit(ImageElement.LAYOUT_VERSION,"the output");
    build(div,ImageElement.INODE_PATH,"hartnell",sb,true);
    build(div,ImageElement.REPLICATION,"99",sb,true);
    build(div,ImageElement.MODIFICATION_TIME,"troughton",sb,true);
    build(div,ImageElement.ACCESS_TIME,"pertwee",sb,true);
    build(div,ImageElement.BLOCK_SIZE,"baker",sb,true);
    build(div,ImageElement.NUM_BLOCKS,"davison",sb,true);
    build(div,ImageElement.NUM_BYTES,"55",sb,true);
    build(div,ImageElement.NS_QUOTA,"baker2",sb,true);
    build(div,ImageElement.DS_QUOTA,"mccoy",sb,true);
    build(div,ImageElement.PERMISSION_STRING,"eccleston",sb,true);
    build(div,ImageElement.USER_NAME,"tennant",sb,true);
    build(div,ImageElement.GROUP_NAME,"smith",sb,false);
    div.leaveEnclosingElement();
    div.finish();
    br=new BufferedReader(new FileReader(f));
    String actual=br.readLine();
    assertNull(br.readLine());
    br.close();
    String exepcted=sb.toString();
    System.out.println("Expect to get: " + exepcted);
    System.out.println("Actually got:  " + actual);
    assertEquals(exepcted,actual);
  }
 catch (  IOException e) {
    fail("Error while testing delmitedImageVisitor" + e.getMessage());
  }
 finally {
    if (f.exists())     f.delete();
  }
}
