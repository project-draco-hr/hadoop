{
  int port=fs.getCanonicalUri().getPort();
  UserGroupInformation ugi=UserGroupInformation.createUserForTesting(fs.getUri().getAuthority(),new String[]{});
  SecurityUtilTestHelper.setTokenServiceUseIp(true);
  Token<?> hdfsToken=new Token<TokenIdentifier>(new byte[0],new byte[0],DelegationTokenIdentifier.HDFS_DELEGATION_KIND,new Text("127.0.0.1:8020"));
  ugi.addToken(hdfsToken);
  Token<?> token=fs.selectDelegationToken(ugi);
  assertNotNull(token);
  assertEquals(hdfsToken,token);
  Token<?> webHdfsToken=new Token<TokenIdentifier>(new byte[0],new byte[0],WebHdfsFileSystem.TOKEN_KIND,new Text("127.0.0.1:" + port));
  ugi.addToken(webHdfsToken);
  token=fs.selectDelegationToken(ugi);
  assertNotNull(token);
  assertEquals(webHdfsToken,token);
  SecurityUtilTestHelper.setTokenServiceUseIp(false);
  token=fs.selectDelegationToken(ugi);
  assertNull(token);
  hdfsToken=new Token<TokenIdentifier>(new byte[0],new byte[0],DelegationTokenIdentifier.HDFS_DELEGATION_KIND,new Text("localhost:8020"));
  ugi.addToken(hdfsToken);
  token=fs.selectDelegationToken(ugi);
  assertNotNull(token);
  assertEquals(hdfsToken,token);
  webHdfsToken=new Token<TokenIdentifier>(new byte[0],new byte[0],WebHdfsFileSystem.TOKEN_KIND,new Text("localhost:" + port));
  ugi.addToken(webHdfsToken);
  token=fs.selectDelegationToken(ugi);
  assertNotNull(token);
  assertEquals(webHdfsToken,token);
}
