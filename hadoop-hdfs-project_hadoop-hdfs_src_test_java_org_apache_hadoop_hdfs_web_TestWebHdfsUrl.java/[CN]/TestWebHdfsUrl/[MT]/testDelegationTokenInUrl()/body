{
  Configuration conf=new Configuration();
  final String uri=WebHdfsFileSystem.SCHEME + "://" + "127.0.0.1:9071";
  conf.set(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
  UserGroupInformation.setConfiguration(conf);
  UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
  DelegationTokenIdentifier dtId=new DelegationTokenIdentifier(new Text(ugi.getUserName()),null,null);
  FSNamesystem namesystem=mock(FSNamesystem.class);
  DelegationTokenSecretManager dtSecretManager=new DelegationTokenSecretManager(86400000,86400000,86400000,86400000,namesystem);
  dtSecretManager.startThreads();
  Token<DelegationTokenIdentifier> token=new Token<DelegationTokenIdentifier>(dtId,dtSecretManager);
  token.setService(new Text("127.0.0.1:9071"));
  token.setKind(WebHdfsFileSystem.TOKEN_KIND);
  ugi.addToken(token);
  final WebHdfsFileSystem webhdfs=(WebHdfsFileSystem)FileSystem.get(URI.create(uri),conf);
  String tokenString=token.encodeToUrlString();
  Path fsPath=new Path("/");
  URL renewTokenUrl=webhdfs.toUrl(PutOpParam.Op.RENEWDELEGATIONTOKEN,fsPath,new TokenArgumentParam(tokenString));
  URL cancelTokenUrl=webhdfs.toUrl(PutOpParam.Op.CANCELDELEGATIONTOKEN,fsPath,new TokenArgumentParam(tokenString));
  Assert.assertEquals(generateUrlQueryPrefix(PutOpParam.Op.RENEWDELEGATIONTOKEN,ugi.getUserName()) + "&token=" + tokenString,renewTokenUrl.getQuery());
  Token<DelegationTokenIdentifier> delegationToken=new Token<DelegationTokenIdentifier>(token);
  delegationToken.setKind(WebHdfsFileSystem.TOKEN_KIND);
  Assert.assertEquals(generateUrlQueryPrefix(PutOpParam.Op.CANCELDELEGATIONTOKEN,ugi.getUserName()) + "&token=" + tokenString+ "&"+ DelegationParam.NAME+ "="+ delegationToken.encodeToUrlString(),cancelTokenUrl.getQuery());
}
