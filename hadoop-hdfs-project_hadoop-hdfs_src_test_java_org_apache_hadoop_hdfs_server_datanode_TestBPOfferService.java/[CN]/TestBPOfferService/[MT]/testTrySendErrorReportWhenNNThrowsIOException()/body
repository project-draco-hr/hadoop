{
  BPOfferService bpos=setupBPOSForNNs(mockNN1,mockNN2);
  bpos.start();
  try {
    waitForInitialization(bpos);
    assertNull(bpos.getActiveNN());
    mockHaStatuses[0]=new NNHAStatusHeartbeat(HAServiceState.ACTIVE,1);
    bpos.triggerHeartbeatForTests();
    assertSame(mockNN1,bpos.getActiveNN());
    Mockito.doAnswer(new Answer<Void>(){
      @Override public Void answer(      InvocationOnMock invocation) throws Throwable {
        if (firstCallTime == 0) {
          firstCallTime=Time.now();
          throw new IOException();
        }
 else {
          secondCallTime=Time.now();
          return null;
        }
      }
    }
).when(mockNN1).errorReport(Mockito.any(DatanodeRegistration.class),Mockito.anyInt(),Mockito.anyString());
    String errorString="Can't send invalid block " + FAKE_BLOCK;
    bpos.trySendErrorReport(DatanodeProtocol.INVALID_BLOCK,errorString);
    Thread.sleep(10000);
    assertTrue("Active namenode didn't add the report back to the queue " + "when errorReport threw IOException",secondCallTime != 0);
  }
  finally {
    bpos.stop();
    bpos.join();
  }
}
