{
  INode inode=new INodeWithAdditionalFields(id,null,new PermissionStatus("","",new FsPermission((short)0)),0,0){
    @Override INode recordModification(    Snapshot latest,    INodeMap inodeMap) throws QuotaExceededException {
      return null;
    }
    @Override public void destroyAndCollectBlocks(    BlocksMapUpdateInfo collectedBlocks,    List<INode> removedINodes){
    }
    @Override public Counts computeQuotaUsage(    Counts counts,    boolean useCache,    int lastSnapshotId){
      return null;
    }
    @Override public Content.Counts computeContentSummary(    Content.Counts counts){
      return null;
    }
    @Override public CountsMap computeContentSummary(    CountsMap countsMap){
      return null;
    }
    @Override public Counts cleanSubtree(    Snapshot snapshot,    Snapshot prior,    BlocksMapUpdateInfo collectedBlocks,    List<INode> removedINodes) throws QuotaExceededException {
      return null;
    }
  }
;
  return map.get(inode);
}
