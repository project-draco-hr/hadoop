{
  INode inode=new INodeWithAdditionalFields(id,null,new PermissionStatus("","",new FsPermission((short)0)),0,0){
    @Override void recordModification(    int latestSnapshotId){
    }
    @Override public void destroyAndCollectBlocks(    ReclaimContext reclaimContext){
    }
    @Override public QuotaCounts computeQuotaUsage(    BlockStoragePolicySuite bsps,    byte blockStoragePolicyId,    boolean useCache,    int lastSnapshotId){
      return null;
    }
    @Override public ContentSummaryComputationContext computeContentSummary(    ContentSummaryComputationContext summary){
      return null;
    }
    @Override public void cleanSubtree(    ReclaimContext reclaimContext,    int snapshotId,    int priorSnapshotId){
    }
    @Override public byte getStoragePolicyID(){
      return HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED;
    }
    @Override public byte getLocalStoragePolicyID(){
      return HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED;
    }
  }
;
  return map.get(inode);
}
