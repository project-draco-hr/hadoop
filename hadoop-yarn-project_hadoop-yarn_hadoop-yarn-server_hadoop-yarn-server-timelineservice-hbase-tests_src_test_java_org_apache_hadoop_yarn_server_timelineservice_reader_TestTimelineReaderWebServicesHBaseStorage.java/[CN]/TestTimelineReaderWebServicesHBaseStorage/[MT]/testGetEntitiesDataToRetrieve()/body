{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?confstoretrieve=cfg_");
    ClientResponse resp=getResponse(client,uri);
    Set<TimelineEntity> entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    int cfgCnt=0;
    for (    TimelineEntity entity : entities) {
      cfgCnt+=entity.getConfigs().size();
      for (      String configKey : entity.getConfigs().keySet()) {
        assertTrue(configKey.startsWith("cfg_"));
      }
    }
    assertEquals(2,cfgCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?confstoretrieve=cfg_,config_");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    cfgCnt=0;
    for (    TimelineEntity entity : entities) {
      cfgCnt+=entity.getConfigs().size();
      for (      String configKey : entity.getConfigs().keySet()) {
        assertTrue(configKey.startsWith("cfg_") || configKey.startsWith("config_"));
      }
    }
    assertEquals(5,cfgCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?confstoretrieve=!(cfg_,config_)");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    cfgCnt=0;
    for (    TimelineEntity entity : entities) {
      cfgCnt+=entity.getConfigs().size();
      for (      String configKey : entity.getConfigs().keySet()) {
        assertTrue(configKey.startsWith("configuration_"));
      }
    }
    assertEquals(1,cfgCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?metricstoretrieve=MAP_");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    int metricCnt=0;
    for (    TimelineEntity entity : entities) {
      metricCnt+=entity.getMetrics().size();
      for (      TimelineMetric metric : entity.getMetrics()) {
        assertTrue(metric.getId().startsWith("MAP_"));
      }
    }
    assertEquals(1,metricCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?metricstoretrieve=MAP1_,HDFS_");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    metricCnt=0;
    for (    TimelineEntity entity : entities) {
      metricCnt+=entity.getMetrics().size();
      for (      TimelineMetric metric : entity.getMetrics()) {
        assertTrue(metric.getId().startsWith("MAP1_") || metric.getId().startsWith("HDFS_"));
      }
    }
    assertEquals(3,metricCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?metricstoretrieve=!(MAP1_,HDFS_)");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    metricCnt=0;
    for (    TimelineEntity entity : entities) {
      metricCnt+=entity.getMetrics().size();
      for (      TimelineMetric metric : entity.getMetrics()) {
        assertTrue(metric.getId().startsWith("MAP_") || metric.getId().startsWith("MAP11_"));
      }
    }
    assertEquals(2,metricCnt);
  }
  finally {
    client.destroy();
  }
}
