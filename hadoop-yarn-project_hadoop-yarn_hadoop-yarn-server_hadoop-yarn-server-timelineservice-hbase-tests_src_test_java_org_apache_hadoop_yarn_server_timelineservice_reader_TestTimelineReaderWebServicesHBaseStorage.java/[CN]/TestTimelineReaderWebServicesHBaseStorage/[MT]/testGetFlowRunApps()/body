{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs/"+ "1002345678919/apps?fields=ALL");
    ClientResponse resp=getResponse(client,uri);
    Set<TimelineEntity> entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue("Unexpected app in result",(entity.getId().equals("application_1111111111_1111") && entity.getMetrics().size() == 3) || (entity.getId().equals("application_1111111111_2222") && entity.getMetrics().size() == 1));
      for (      TimelineMetric metric : entity.getMetrics()) {
        assertEquals(TimelineMetric.Type.SINGLE_VALUE,metric.getType());
        assertEquals(1,metric.getValues().size());
      }
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs/"+ "1002345678919/apps?fields=ALL&metricslimit=2");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue("Unexpected app in result",(entity.getId().equals("application_1111111111_1111") && entity.getMetrics().size() == 3) || (entity.getId().equals("application_1111111111_2222") && entity.getMetrics().size() == 1));
      for (      TimelineMetric metric : entity.getMetrics()) {
        assertTrue(metric.getValues().size() <= 2);
        assertEquals(TimelineMetric.Type.TIME_SERIES,metric.getType());
      }
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/users/user1/flows/flow_name/runs/1002345678919/apps");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/users/user1/flows/flow_name/runs/1002345678919/"+ "apps?limit=1");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
  }
  finally {
    client.destroy();
  }
}
