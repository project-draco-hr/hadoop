{
  Options opts=new Options();
  opts.addOption(STATUS_CMD,true,"Prints the status of the application.");
  opts.addOption(LIST_CMD,false,"List applications from the RM. " + "Supports optional use of --appTypes to filter applications " + "based on application type.");
  opts.addOption(KILL_CMD,true,"Kills the application.");
  opts.addOption(HELP_CMD,false,"Displays help for all commands.");
  Option appTypeOpt=new Option(APP_TYPE_CMD,true,"Works with --list to filter applications based on their type.");
  appTypeOpt.setValueSeparator(',');
  appTypeOpt.setArgs(Option.UNLIMITED_VALUES);
  appTypeOpt.setArgName("Comma-separated list of application types");
  opts.addOption(appTypeOpt);
  opts.getOption(KILL_CMD).setArgName("Application ID");
  opts.getOption(STATUS_CMD).setArgName("Application ID");
  CommandLine cliParser=new GnuParser().parse(opts,args);
  int exitCode=-1;
  if (cliParser.hasOption(STATUS_CMD)) {
    if (args.length != 2) {
      printUsage(opts);
      return exitCode;
    }
    printApplicationReport(cliParser.getOptionValue(STATUS_CMD));
  }
 else   if (cliParser.hasOption(LIST_CMD)) {
    Set<String> appTypes=new HashSet<String>();
    if (cliParser.hasOption(APP_TYPE_CMD)) {
      String[] types=cliParser.getOptionValues(APP_TYPE_CMD);
      if (types != null) {
        for (        String type : types) {
          if (!type.trim().isEmpty()) {
            appTypes.add(type.trim());
          }
        }
      }
    }
    listApplications(appTypes);
  }
 else   if (cliParser.hasOption(KILL_CMD)) {
    if (args.length != 2) {
      printUsage(opts);
      return exitCode;
    }
    killApplication(cliParser.getOptionValue(KILL_CMD));
  }
 else   if (cliParser.hasOption(HELP_CMD)) {
    printUsage(opts);
    return 0;
  }
 else {
    syserr.println("Invalid Command Usage : ");
    printUsage(opts);
  }
  return 0;
}
