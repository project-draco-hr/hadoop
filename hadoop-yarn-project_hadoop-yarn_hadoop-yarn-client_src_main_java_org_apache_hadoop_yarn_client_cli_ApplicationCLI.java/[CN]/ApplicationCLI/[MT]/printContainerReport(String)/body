{
  ContainerReport containerReport=null;
  try {
    containerReport=client.getContainerReport(ContainerId.fromString(containerId));
  }
 catch (  ApplicationNotFoundException e) {
    sysout.println("Application for Container with id '" + containerId + "' doesn't exist in RM or Timeline Server.");
    return -1;
  }
catch (  ApplicationAttemptNotFoundException e) {
    sysout.println("Application Attempt for Container with id '" + containerId + "' doesn't exist in RM or Timeline Server.");
    return -1;
  }
catch (  ContainerNotFoundException e) {
    sysout.println("Container with id '" + containerId + "' doesn't exist in RM or Timeline Server.");
    return -1;
  }
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PrintWriter containerReportStr=new PrintWriter(new OutputStreamWriter(baos,Charset.forName("UTF-8")));
  if (containerReport != null) {
    containerReportStr.println("Container Report : ");
    containerReportStr.print("\tContainer-Id : ");
    containerReportStr.println(containerReport.getContainerId());
    containerReportStr.print("\tStart-Time : ");
    containerReportStr.println(containerReport.getCreationTime());
    containerReportStr.print("\tFinish-Time : ");
    containerReportStr.println(containerReport.getFinishTime());
    containerReportStr.print("\tState : ");
    containerReportStr.println(containerReport.getContainerState());
    containerReportStr.print("\tLOG-URL : ");
    containerReportStr.println(containerReport.getLogUrl());
    containerReportStr.print("\tHost : ");
    containerReportStr.println(containerReport.getAssignedNode());
    containerReportStr.print("\tNodeHttpAddress : ");
    containerReportStr.println(containerReport.getNodeHttpAddress() == null ? "N/A" : containerReport.getNodeHttpAddress());
    containerReportStr.print("\tDiagnostics : ");
    containerReportStr.print(containerReport.getDiagnosticsInfo());
  }
 else {
    containerReportStr.print("Container with id '" + containerId + "' doesn't exist in Timeline Server.");
    containerReportStr.close();
    sysout.println(baos.toString("UTF-8"));
    return -1;
  }
  containerReportStr.close();
  sysout.println(baos.toString("UTF-8"));
  return 0;
}
