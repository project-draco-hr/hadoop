{
  final ApplicationClientProtocol applicationsManager=Mockito.mock(ApplicationClientProtocol.class);
  GetApplicationsResponse allApplicationsResponse=Records.newRecord(GetApplicationsResponse.class);
  List<ApplicationReport> applications=new ArrayList<ApplicationReport>();
  applications.add(getApplicationReport(YarnApplicationState.FINISHED,FinalApplicationStatus.FAILED));
  applications.add(getApplicationReport(YarnApplicationState.FINISHED,FinalApplicationStatus.SUCCEEDED));
  applications.add(getApplicationReport(YarnApplicationState.FINISHED,FinalApplicationStatus.KILLED));
  applications.add(getApplicationReport(YarnApplicationState.FAILED,FinalApplicationStatus.FAILED));
  allApplicationsResponse.setApplicationList(applications);
  Mockito.when(applicationsManager.getApplications(Mockito.any(GetApplicationsRequest.class))).thenReturn(allApplicationsResponse);
  ResourceMgrDelegate resourceMgrDelegate=new ResourceMgrDelegate(new YarnConfiguration()){
    @Override protected void serviceStart() throws Exception {
      Assert.assertTrue(this.client instanceof YarnClientImpl);
      ((YarnClientImpl)this.client).setRMClient(applicationsManager);
    }
  }
;
  JobStatus[] allJobs=resourceMgrDelegate.getAllJobs();
  Assert.assertEquals(State.FAILED,allJobs[0].getState());
  Assert.assertEquals(State.SUCCEEDED,allJobs[1].getState());
  Assert.assertEquals(State.KILLED,allJobs[2].getState());
  Assert.assertEquals(State.FAILED,allJobs[3].getState());
}
