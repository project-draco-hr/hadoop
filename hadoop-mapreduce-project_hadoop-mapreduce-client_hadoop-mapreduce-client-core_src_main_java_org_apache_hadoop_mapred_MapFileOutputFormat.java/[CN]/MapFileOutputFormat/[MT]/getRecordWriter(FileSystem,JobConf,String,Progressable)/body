{
  Path file=FileOutputFormat.getTaskOutputPath(job,name);
  FileSystem fs=file.getFileSystem(job);
  CompressionCodec codec=null;
  CompressionType compressionType=CompressionType.NONE;
  if (getCompressOutput(job)) {
    compressionType=SequenceFileOutputFormat.getOutputCompressionType(job);
    Class<? extends CompressionCodec> codecClass=getOutputCompressorClass(job,DefaultCodec.class);
    codec=ReflectionUtils.newInstance(codecClass,job);
  }
  final MapFile.Writer out=new MapFile.Writer(job,fs,file.toString(),job.getOutputKeyClass().asSubclass(WritableComparable.class),job.getOutputValueClass().asSubclass(Writable.class),compressionType,codec,progress);
  return new RecordWriter<WritableComparable,Writable>(){
    public void write(    WritableComparable key,    Writable value) throws IOException {
      out.append(key,value);
    }
    public void close(    Reporter reporter) throws IOException {
      out.close();
    }
  }
;
}
