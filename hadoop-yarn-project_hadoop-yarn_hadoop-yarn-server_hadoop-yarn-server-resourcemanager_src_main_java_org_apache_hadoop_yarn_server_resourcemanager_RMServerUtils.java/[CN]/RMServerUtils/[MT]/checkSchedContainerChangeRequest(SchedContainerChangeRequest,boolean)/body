{
  RMContext rmContext=request.getRmContext();
  ContainerId containerId=request.getContainerId();
  RMContainer rmContainer=request.getRMContainer();
  Resource targetResource=request.getTargetCapacity();
  Resource originalResource=rmContainer.getAllocatedResource();
  if (increase) {
    if (originalResource.getMemory() > targetResource.getMemory() || originalResource.getVirtualCores() > targetResource.getVirtualCores()) {
      String msg="Trying to increase a container, but target resource has some" + " resource < original resource, target=" + targetResource + " original="+ originalResource+ " containerId="+ containerId;
      throw new InvalidResourceRequestException(msg);
    }
  }
 else {
    if (originalResource.getMemory() < targetResource.getMemory() || originalResource.getVirtualCores() < targetResource.getVirtualCores()) {
      String msg="Trying to decrease a container, but target resource has " + "some resource > original resource, target=" + targetResource + " original="+ originalResource+ " containerId="+ containerId;
      throw new InvalidResourceRequestException(msg);
    }
  }
  ResourceScheduler scheduler=rmContext.getScheduler();
  RMNode rmNode=request.getSchedulerNode().getRMNode();
  if (!Resources.fitsIn(scheduler.getResourceCalculator(),scheduler.getClusterResource(),targetResource,rmNode.getTotalCapability())) {
    String msg="Target resource=" + targetResource + " of containerId="+ containerId+ " is more than node's total resource="+ rmNode.getTotalCapability();
    throw new InvalidResourceRequestException(msg);
  }
}
