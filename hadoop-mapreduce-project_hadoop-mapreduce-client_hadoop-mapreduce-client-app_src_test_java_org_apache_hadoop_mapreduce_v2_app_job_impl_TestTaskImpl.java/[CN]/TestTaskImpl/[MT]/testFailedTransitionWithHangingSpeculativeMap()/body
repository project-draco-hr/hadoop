{
  mockTask=new MockTaskImpl(jobId,partition,new PartialAttemptEventHandler(),remoteJobConfFile,conf,taskAttemptListener,jobToken,credentials,clock,startCount,metrics,appContext,TaskType.MAP){
    @Override protected int getMaxAttempts(){
      return 4;
    }
  }
;
  TaskId taskId=getNewTaskID();
  scheduleTaskAttempt(taskId);
  launchTaskAttempt(getLastAttempt().getAttemptId());
  mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(),TaskEventType.T_ADD_SPEC_ATTEMPT));
  MockTaskAttemptImpl taskAttempt=taskAttempts.get(0);
  taskAttempt.setState(TaskAttemptState.FAILED);
  mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(),TaskEventType.T_ATTEMPT_FAILED));
  assertEquals(TaskState.RUNNING,mockTask.getState());
  assertEquals(3,taskAttempts.size());
  assertEquals(false,taskAttempts.get(1).getRescheduled());
  assertEquals(true,taskAttempts.get(2).getRescheduled());
  launchTaskAttempt(getLastAttempt().getAttemptId());
  MockTaskAttemptImpl taskAttempt1=taskAttempts.get(1);
  taskAttempt1.setState(TaskAttemptState.FAILED);
  mockTask.handle(new TaskTAttemptEvent(taskAttempt1.getAttemptId(),TaskEventType.T_ATTEMPT_FAILED));
  assertEquals(TaskState.RUNNING,mockTask.getState());
  assertEquals(3,taskAttempts.size());
}
