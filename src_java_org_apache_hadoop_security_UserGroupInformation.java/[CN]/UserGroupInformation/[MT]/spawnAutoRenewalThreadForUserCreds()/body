{
  if (isSecurityEnabled()) {
    if (user.getAuthenticationMethod() == AuthenticationMethod.KERBEROS && !isKeytab) {
      Thread t=new Thread(new Runnable(){
        /** 
 * Get the Kerberos TGT
 * @return the user's TGT or null if none was found
 */
        private KerberosTicket getTGT(){
          Set<KerberosTicket> tickets=subject.getPrivateCredentials(KerberosTicket.class);
          for (          KerberosTicket ticket : tickets) {
            if (SecurityUtil.isOriginalTGT(ticket)) {
              if (LOG.isDebugEnabled()) {
                LOG.debug("Found tgt " + ticket);
              }
              return ticket;
            }
          }
          return null;
        }
        private long getRefreshTime(        KerberosTicket tgt){
          long start=tgt.getStartTime().getTime();
          long end=tgt.getEndTime().getTime();
          return start + (long)((end - start) * TICKET_RENEW_WINDOW);
        }
        public void run(){
          String cmd=conf.get("hadoop.kerberos.kinit.command","/usr/kerberos/bin/kinit");
          KerberosTicket tgt=getTGT();
          if (tgt == null) {
            return;
          }
          long nextRefresh=getRefreshTime(tgt);
          while (true) {
            try {
              long now=System.currentTimeMillis();
              if (LOG.isDebugEnabled()) {
                LOG.debug("Current time is " + now);
                LOG.debug("Next refresh is " + nextRefresh);
              }
              if (now < nextRefresh) {
                Thread.sleep(nextRefresh - now);
              }
              Shell.execCommand(cmd,"-R");
              if (LOG.isDebugEnabled()) {
                LOG.debug("renewed ticket");
              }
              reloginFromTicketCache();
              tgt=getTGT();
              if (tgt == null) {
                LOG.warn("No TGT after renewal. Aborting renew thread for " + getUserName());
                return;
              }
              nextRefresh=Math.max(getRefreshTime(tgt),now + MIN_TIME_BEFORE_RELOGIN);
            }
 catch (            InterruptedException ie) {
              LOG.warn("Terminating renewal thread");
              return;
            }
catch (            IOException ie) {
              LOG.warn("Exception encountered while running the" + " renewal command. Aborting renew thread. " + ie);
              return;
            }
          }
        }
      }
);
      t.setDaemon(true);
      t.setName("TGT Renewer for " + getUserName());
      t.start();
    }
  }
}
