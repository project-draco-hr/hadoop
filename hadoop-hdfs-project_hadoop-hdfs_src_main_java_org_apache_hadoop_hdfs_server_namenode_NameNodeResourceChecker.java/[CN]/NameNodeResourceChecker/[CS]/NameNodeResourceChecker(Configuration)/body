{
  this.conf=conf;
  volumes=new HashMap<String,CheckedVolume>();
  duReserved=conf.getLong(DFSConfigKeys.DFS_NAMENODE_DU_RESERVED_KEY,DFSConfigKeys.DFS_NAMENODE_DU_RESERVED_DEFAULT);
  Collection<URI> extraCheckedVolumes=Util.stringCollectionAsURIs(conf.getTrimmedStringCollection(DFSConfigKeys.DFS_NAMENODE_CHECKED_VOLUMES_KEY));
  Collection<URI> localEditDirs=Collections2.filter(FSNamesystem.getNamespaceEditsDirs(conf),new Predicate<URI>(){
    @Override public boolean apply(    URI input){
      if (input.getScheme().equals(NNStorage.LOCAL_URI_SCHEME)) {
        return true;
      }
      return false;
    }
  }
);
  for (  URI editsDirToCheck : localEditDirs) {
    addDirToCheck(editsDirToCheck,FSNamesystem.getRequiredNamespaceEditsDirs(conf).contains(editsDirToCheck));
  }
  for (  URI extraDirToCheck : extraCheckedVolumes) {
    addDirToCheck(extraDirToCheck,true);
  }
  minimumRedundantVolumes=conf.getInt(DFSConfigKeys.DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_KEY,DFSConfigKeys.DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_DEFAULT);
}
