{
  UserGroupInformation callerUGI;
  try {
    callerUGI=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException ie) {
    LOG.info("Error getting UGI ",ie);
    throw RPCUtil.getRemoteException(ie);
  }
  Set<String> applicationTypes=request.getApplicationTypes();
  EnumSet<YarnApplicationState> applicationStates=request.getApplicationStates();
  List<ApplicationReport> reports=new ArrayList<ApplicationReport>();
  for (  RMApp application : this.rmContext.getRMApps().values()) {
    if (applicationTypes != null && !applicationTypes.isEmpty()) {
      if (!applicationTypes.contains(application.getApplicationType())) {
        continue;
      }
    }
    if (applicationStates != null && !applicationStates.isEmpty()) {
      if (!applicationStates.contains(application.createApplicationState())) {
        continue;
      }
    }
    boolean allowAccess=checkAccess(callerUGI,application.getUser(),ApplicationAccessType.VIEW_APP,application);
    reports.add(application.createAndGetApplicationReport(callerUGI.getUserName(),allowAccess));
  }
  GetApplicationsResponse response=recordFactory.newRecordInstance(GetApplicationsResponse.class);
  response.setApplicationList(reports);
  return response;
}
