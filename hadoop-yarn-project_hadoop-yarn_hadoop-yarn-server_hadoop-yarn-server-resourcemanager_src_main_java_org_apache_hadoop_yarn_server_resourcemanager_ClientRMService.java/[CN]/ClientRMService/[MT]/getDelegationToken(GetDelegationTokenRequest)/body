{
  try {
    if (!isAllowedDelegationTokenOp()) {
      throw new IOException("Delegation Token can be issued only with kerberos authentication");
    }
    GetDelegationTokenResponse response=recordFactory.newRecordInstance(GetDelegationTokenResponse.class);
    UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
    Text owner=new Text(ugi.getUserName());
    Text realUser=null;
    if (ugi.getRealUser() != null) {
      realUser=new Text(ugi.getRealUser().getUserName());
    }
    RMDelegationTokenIdentifier tokenIdentifier=new RMDelegationTokenIdentifier(owner,new Text(request.getRenewer()),realUser);
    Token<RMDelegationTokenIdentifier> realRMDTtoken=new Token<RMDelegationTokenIdentifier>(tokenIdentifier,this.rmDTSecretManager);
    response.setRMDelegationToken(BuilderUtils.newDelegationToken(realRMDTtoken.getIdentifier(),realRMDTtoken.getKind().toString(),realRMDTtoken.getPassword(),realRMDTtoken.getService().toString()));
    return response;
  }
 catch (  IOException io) {
    throw RPCUtil.getRemoteException(io);
  }
}
