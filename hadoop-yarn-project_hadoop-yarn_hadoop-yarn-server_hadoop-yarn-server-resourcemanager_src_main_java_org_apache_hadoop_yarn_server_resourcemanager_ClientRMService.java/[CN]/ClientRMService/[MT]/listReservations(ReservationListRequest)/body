{
  checkReservationSytem(AuditConstants.LIST_RESERVATION_REQUEST);
  ReservationListResponse response=recordFactory.newRecordInstance(ReservationListResponse.class);
  Plan plan=rValidator.validateReservationListRequest(reservationSystem,requestInfo);
  boolean includeResourceAllocations=requestInfo.getIncludeResourceAllocations();
  String user=checkReservationACLs(requestInfo.getQueue(),AuditConstants.LIST_RESERVATION_REQUEST);
  ReservationId requestedId=null;
  if (requestInfo.getReservationId() != null && !requestInfo.getReservationId().isEmpty()) {
    requestedId=ReservationId.parseReservationId(requestInfo.getReservationId());
  }
  long startTime=Math.max(requestInfo.getStartTime(),0);
  long endTime=requestInfo.getEndTime() <= -1 ? Long.MAX_VALUE : requestInfo.getEndTime();
  Set<ReservationAllocation> reservations=plan.getReservations(requestedId,new ReservationInterval(startTime,endTime),user);
  List<ReservationAllocationState> info=ReservationSystemUtil.convertAllocationsToReservationInfo(reservations,includeResourceAllocations);
  response.setReservationAllocationState(info);
  return response;
}
