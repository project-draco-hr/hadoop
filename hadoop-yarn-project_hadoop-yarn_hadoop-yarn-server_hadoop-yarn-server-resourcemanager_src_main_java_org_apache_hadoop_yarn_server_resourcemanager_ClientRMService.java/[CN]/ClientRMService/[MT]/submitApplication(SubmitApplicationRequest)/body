{
  ApplicationSubmissionContext submissionContext=request.getApplicationSubmissionContext();
  ApplicationId applicationId=submissionContext.getApplicationId();
  CallerContext callerContext=CallerContext.getCurrent();
  String user=null;
  try {
    user=UserGroupInformation.getCurrentUser().getShortUserName();
  }
 catch (  IOException ie) {
    LOG.warn("Unable to get the current user.",ie);
    RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,ie.getMessage(),"ClientRMService","Exception in submitting application",applicationId,callerContext);
    throw RPCUtil.getRemoteException(ie);
  }
  if (YarnConfiguration.timelineServiceV2Enabled(getConfig())) {
    String value=null;
    try {
      for (      String tag : submissionContext.getApplicationTags()) {
        if (tag.startsWith(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX + ":") || tag.startsWith(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX.toLowerCase() + ":")) {
          value=tag.substring(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX.length() + 1);
          Long.valueOf(value);
        }
      }
    }
 catch (    NumberFormatException e) {
      LOG.warn("Invalid to flow run: " + value + ". Flow run should be a long integer",e);
      RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,e.getMessage(),"ClientRMService","Exception in submitting application",applicationId);
      throw RPCUtil.getRemoteException(e);
    }
  }
  if (rmContext.getRMApps().get(applicationId) != null) {
    LOG.info("This is an earlier submitted application: " + applicationId);
    return SubmitApplicationResponse.newInstance();
  }
  if (submissionContext.getQueue() == null) {
    submissionContext.setQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);
  }
  if (submissionContext.getApplicationName() == null) {
    submissionContext.setApplicationName(YarnConfiguration.DEFAULT_APPLICATION_NAME);
  }
  if (submissionContext.getApplicationType() == null) {
    submissionContext.setApplicationType(YarnConfiguration.DEFAULT_APPLICATION_TYPE);
  }
 else {
    if (submissionContext.getApplicationType().length() > YarnConfiguration.APPLICATION_TYPE_LENGTH) {
      submissionContext.setApplicationType(submissionContext.getApplicationType().substring(0,YarnConfiguration.APPLICATION_TYPE_LENGTH));
    }
  }
  ReservationId reservationId=request.getApplicationSubmissionContext().getReservationID();
  checkReservationACLs(submissionContext.getQueue(),AuditConstants.SUBMIT_RESERVATION_REQUEST,reservationId);
  try {
    rmAppManager.submitApplication(submissionContext,System.currentTimeMillis(),user);
    LOG.info("Application with id " + applicationId.getId() + " submitted by user "+ user);
    RMAuditLogger.logSuccess(user,AuditConstants.SUBMIT_APP_REQUEST,"ClientRMService",applicationId,callerContext);
  }
 catch (  YarnException e) {
    LOG.info("Exception in submitting application with id " + applicationId.getId(),e);
    RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,e.getMessage(),"ClientRMService","Exception in submitting application",applicationId,callerContext);
    throw e;
  }
  SubmitApplicationResponse response=recordFactory.newRecordInstance(SubmitApplicationResponse.class);
  return response;
}
