{
  ApplicationSubmissionContext submissionContext=request.getApplicationSubmissionContext();
  ApplicationId applicationId=submissionContext.getApplicationId();
  String user=null;
  try {
    user=UserGroupInformation.getCurrentUser().getShortUserName();
  }
 catch (  IOException ie) {
    LOG.warn("Unable to get the current user.",ie);
    RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,ie.getMessage(),"ClientRMService","Exception in submitting application",applicationId);
    throw RPCUtil.getRemoteException(ie);
  }
  if (rmContext.getRMApps().get(applicationId) != null) {
    String message="Application with id " + applicationId + " is already present! Cannot add a duplicate!";
    LOG.warn(message);
    RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,message,"ClientRMService","Exception in submitting application",applicationId);
    throw RPCUtil.getRemoteException(message);
  }
  if (submissionContext.getQueue() == null) {
    submissionContext.setQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);
  }
  if (submissionContext.getApplicationName() == null) {
    submissionContext.setApplicationName(YarnConfiguration.DEFAULT_APPLICATION_NAME);
  }
  if (submissionContext.getApplicationType() == null) {
    submissionContext.setApplicationType(YarnConfiguration.DEFAULT_APPLICATION_TYPE);
  }
 else {
    if (submissionContext.getApplicationType().length() > YarnConfiguration.APPLICATION_TYPE_LENGTH) {
      submissionContext.setApplicationType(submissionContext.getApplicationType().substring(0,YarnConfiguration.APPLICATION_TYPE_LENGTH));
    }
  }
  try {
    rmAppManager.submitApplication(submissionContext,System.currentTimeMillis(),user,false,null);
    LOG.info("Application with id " + applicationId.getId() + " submitted by user "+ user);
    RMAuditLogger.logSuccess(user,AuditConstants.SUBMIT_APP_REQUEST,"ClientRMService",applicationId);
  }
 catch (  YarnException e) {
    LOG.info("Exception in submitting application with id " + applicationId.getId(),e);
    RMAuditLogger.logFailure(user,AuditConstants.SUBMIT_APP_REQUEST,e.getMessage(),"ClientRMService","Exception in submitting application",applicationId);
    throw e;
  }
  SubmitApplicationResponse response=recordFactory.newRecordInstance(SubmitApplicationResponse.class);
  return response;
}
