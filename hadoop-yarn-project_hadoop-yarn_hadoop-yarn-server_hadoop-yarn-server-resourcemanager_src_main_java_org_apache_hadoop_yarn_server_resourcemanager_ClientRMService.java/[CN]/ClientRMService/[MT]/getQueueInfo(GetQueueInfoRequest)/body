{
  GetQueueInfoResponse response=recordFactory.newRecordInstance(GetQueueInfoResponse.class);
  try {
    QueueInfo queueInfo=scheduler.getQueueInfo(request.getQueueName(),request.getIncludeChildQueues(),request.getRecursive());
    List<ApplicationReport> appReports=EMPTY_APPS_REPORT;
    if (request.getIncludeApplications()) {
      Collection<RMApp> apps=this.rmContext.getRMApps().values();
      appReports=new ArrayList<ApplicationReport>(apps.size());
      for (      RMApp app : apps) {
        if (app.getQueue().equals(queueInfo.getQueueName())) {
          appReports.add(app.createAndGetApplicationReport(true));
        }
      }
    }
    queueInfo.setApplications(appReports);
    response.setQueueInfo(queueInfo);
  }
 catch (  IOException ioe) {
    LOG.info("Failed to getQueueInfo for " + request.getQueueName(),ioe);
    throw RPCUtil.getRemoteException(ioe);
  }
  return response;
}
