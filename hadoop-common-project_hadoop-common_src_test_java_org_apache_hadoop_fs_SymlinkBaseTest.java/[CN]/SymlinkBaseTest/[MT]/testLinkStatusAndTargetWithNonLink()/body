{
  Path schemeAuth=new Path(testURI().toString());
  Path dir=new Path(testBaseDir1());
  Path dirQual=new Path(schemeAuth,dir.toString());
  Path file=new Path(testBaseDir1(),"file");
  Path fileQual=new Path(schemeAuth,file.toString());
  createAndWriteFile(file);
  assertEquals(wrapper.getFileStatus(file),wrapper.getFileLinkStatus(file));
  assertEquals(wrapper.getFileStatus(dir),wrapper.getFileLinkStatus(dir));
  try {
    wrapper.getLinkTarget(file);
    fail("Get link target on non-link should throw an IOException");
  }
 catch (  IOException x) {
    assertEquals("Path " + fileQual + " is not a symbolic link",x.getMessage());
  }
  try {
    wrapper.getLinkTarget(dir);
    fail("Get link target on non-link should throw an IOException");
  }
 catch (  IOException x) {
    assertEquals("Path " + dirQual + " is not a symbolic link",x.getMessage());
  }
}
