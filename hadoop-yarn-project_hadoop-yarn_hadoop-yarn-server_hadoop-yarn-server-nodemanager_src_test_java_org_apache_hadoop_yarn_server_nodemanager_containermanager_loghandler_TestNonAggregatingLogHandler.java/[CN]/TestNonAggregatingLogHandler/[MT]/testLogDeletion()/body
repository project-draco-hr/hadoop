{
  File[] localLogDirs=getLocalLogDirFiles(this.getClass().getName(),2);
  String localLogDirsString=localLogDirs[0].getAbsolutePath() + "," + localLogDirs[1].getAbsolutePath();
  conf.set(YarnConfiguration.NM_LOG_DIRS,localLogDirsString);
  conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,false);
  conf.setLong(YarnConfiguration.NM_LOG_RETAIN_SECONDS,0l);
  dirsHandler.init(conf);
  NonAggregatingLogHandler rawLogHandler=new NonAggregatingLogHandler(dispatcher,mockDelService,dirsHandler,new NMNullStateStoreService());
  NonAggregatingLogHandler logHandler=spy(rawLogHandler);
  AbstractFileSystem spylfs=spy(FileContext.getLocalFSFileContext().getDefaultFileSystem());
  FileContext lfs=FileContext.getFileContext(spylfs,conf);
  doReturn(lfs).when(logHandler).getLocalFileContext(isA(Configuration.class));
  FsPermission defaultPermission=FsPermission.getDirDefault().applyUMask(lfs.getUMask());
  final FileStatus fs=new FileStatus(0,true,1,0,System.currentTimeMillis(),0,defaultPermission,"","",new Path(localLogDirs[0].getAbsolutePath()));
  doReturn(fs).when(spylfs).getFileStatus(isA(Path.class));
  logHandler.init(conf);
  logHandler.start();
  logHandler.handle(new LogHandlerAppStartedEvent(appId,user,null,null));
  logHandler.handle(new LogHandlerContainerFinishedEvent(container11,0));
  logHandler.handle(new LogHandlerAppFinishedEvent(appId));
  Path[] localAppLogDirs=new Path[2];
  localAppLogDirs[0]=new Path(localLogDirs[0].getAbsolutePath(),appId.toString());
  localAppLogDirs[1]=new Path(localLogDirs[1].getAbsolutePath(),appId.toString());
  testDeletionServiceCall(mockDelService,user,5000,localAppLogDirs);
  logHandler.close();
  for (int i=0; i < localLogDirs.length; i++) {
    FileUtils.deleteDirectory(localLogDirs[i]);
  }
}
