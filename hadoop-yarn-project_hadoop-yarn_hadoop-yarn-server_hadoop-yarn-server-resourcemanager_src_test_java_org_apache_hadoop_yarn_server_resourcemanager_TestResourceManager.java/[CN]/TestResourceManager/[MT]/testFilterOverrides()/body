{
  String filterInitializerConfKey="hadoop.http.filter.initializers";
  String[] filterInitializers={AuthenticationFilterInitializer.class.getName(),RMAuthenticationFilterInitializer.class.getName(),AuthenticationFilterInitializer.class.getName() + "," + RMAuthenticationFilterInitializer.class.getName(),AuthenticationFilterInitializer.class.getName() + ", " + RMAuthenticationFilterInitializer.class.getName(),AuthenticationFilterInitializer.class.getName() + ", " + this.getClass().getName()};
  for (  String filterInitializer : filterInitializers) {
    resourceManager=new ResourceManager(){
      @Override protected void doSecureLogin() throws IOException {
      }
    }
;
    Configuration conf=new YarnConfiguration();
    conf.set(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class.getCanonicalName());
    conf.set(filterInitializerConfKey,filterInitializer);
    conf.set("hadoop.security.authentication","kerberos");
    conf.set("hadoop.http.authentication.type","kerberos");
    try {
      try {
        UserGroupInformation.setConfiguration(conf);
      }
 catch (      Exception e) {
        LOG.info("Got expected exception");
      }
      resourceManager.init(conf);
      resourceManager.startWepApp();
    }
 catch (    RuntimeException e) {
      String tmp=resourceManager.getConfig().get(filterInitializerConfKey);
      if (filterInitializer.contains(this.getClass().getName())) {
        Assert.assertEquals(RMAuthenticationFilterInitializer.class.getName() + "," + this.getClass().getName(),tmp);
      }
 else {
        Assert.assertEquals(RMAuthenticationFilterInitializer.class.getName(),tmp);
      }
      resourceManager.stop();
    }
  }
  String[] simpleFilterInitializers={"",StaticUserWebFilter.class.getName()};
  for (  String filterInitializer : simpleFilterInitializers) {
    resourceManager=new ResourceManager();
    Configuration conf=new YarnConfiguration();
    conf.set(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class.getCanonicalName());
    conf.set(filterInitializerConfKey,filterInitializer);
    try {
      UserGroupInformation.setConfiguration(conf);
      resourceManager.init(conf);
      resourceManager.startWepApp();
    }
 catch (    RuntimeException e) {
      String tmp=resourceManager.getConfig().get(filterInitializerConfKey);
      if (filterInitializer.equals(StaticUserWebFilter.class.getName())) {
        Assert.assertEquals(RMAuthenticationFilterInitializer.class.getName() + "," + StaticUserWebFilter.class.getName(),tmp);
      }
 else {
        Assert.assertEquals(RMAuthenticationFilterInitializer.class.getName(),tmp);
      }
      resourceManager.stop();
    }
  }
}
