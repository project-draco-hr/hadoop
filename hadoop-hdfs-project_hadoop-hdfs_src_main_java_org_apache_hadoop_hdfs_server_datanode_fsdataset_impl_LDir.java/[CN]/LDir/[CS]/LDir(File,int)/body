{
  this.dir=dir;
  this.maxBlocksPerDir=maxBlocksPerDir;
  if (!dir.exists()) {
    if (!dir.mkdirs()) {
      throw new IOException("Failed to mkdirs " + dir);
    }
  }
 else {
    File[] files=FileUtil.listFiles(dir);
    List<LDir> dirList=new ArrayList<LDir>();
    for (int idx=0; idx < files.length; idx++) {
      if (files[idx].isDirectory()) {
        dirList.add(new LDir(files[idx],maxBlocksPerDir));
      }
 else       if (Block.isBlockFilename(files[idx])) {
        numBlocks++;
      }
    }
    if (dirList.size() > 0) {
      children=dirList.toArray(new LDir[dirList.size()]);
    }
  }
}
