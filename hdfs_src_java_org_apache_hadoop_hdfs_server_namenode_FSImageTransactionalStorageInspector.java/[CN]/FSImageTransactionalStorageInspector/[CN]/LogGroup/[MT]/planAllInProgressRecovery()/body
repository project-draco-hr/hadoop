{
  LOG.warn("Logs beginning at txid " + startTxId + " were are all "+ "in-progress (probably truncated due to a previous NameNode "+ "crash)");
  if (logs.size() == 1) {
    FoundEditLog log=logs.get(0);
    if (log.validateLog().numTransactions == 0) {
      LOG.warn("Marking log at " + log.getFile() + " as corrupt since "+ "it has no transactions in it.");
      log.markCorrupt();
    }
    return;
  }
  long maxValidTxnCount=Long.MIN_VALUE;
  for (  FoundEditLog log : logs) {
    long validTxnCount=log.validateLog().numTransactions;
    LOG.warn("  Log " + log.getFile() + " valid txns="+ validTxnCount+ " valid len="+ log.validateLog().validLength);
    maxValidTxnCount=Math.max(maxValidTxnCount,validTxnCount);
  }
  for (  FoundEditLog log : logs) {
    long txns=log.validateLog().numTransactions;
    if (txns < maxValidTxnCount) {
      LOG.warn("Marking log at " + log.getFile() + " as corrupt since "+ "it is has only "+ txns+ " valid txns whereas another "+ "log has "+ maxValidTxnCount);
      log.markCorrupt();
    }
 else     if (txns == 0) {
      LOG.warn("Marking log at " + log.getFile() + " as corrupt since "+ "it has no transactions in it.");
      log.markCorrupt();
    }
  }
}
