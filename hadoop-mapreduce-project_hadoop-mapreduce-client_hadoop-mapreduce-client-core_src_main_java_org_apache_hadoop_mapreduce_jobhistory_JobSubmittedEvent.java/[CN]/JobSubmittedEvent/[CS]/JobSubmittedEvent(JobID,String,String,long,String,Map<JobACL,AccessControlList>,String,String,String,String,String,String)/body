{
  datum.setJobid(new Utf8(id.toString()));
  datum.setJobName(new Utf8(jobName));
  datum.setUserName(new Utf8(userName));
  datum.setSubmitTime(submitTime);
  datum.setJobConfPath(new Utf8(jobConfPath));
  Map<CharSequence,CharSequence> jobAcls=new HashMap<CharSequence,CharSequence>();
  for (  Entry<JobACL,AccessControlList> entry : jobACLs.entrySet()) {
    jobAcls.put(new Utf8(entry.getKey().getAclName()),new Utf8(entry.getValue().getAclString()));
  }
  datum.setAcls(jobAcls);
  if (jobQueueName != null) {
    datum.setJobQueueName(new Utf8(jobQueueName));
  }
  if (workflowId != null) {
    datum.setWorkflowId(new Utf8(workflowId));
  }
  if (workflowName != null) {
    datum.setWorkflowName(new Utf8(workflowName));
  }
  if (workflowNodeName != null) {
    datum.setWorkflowNodeName(new Utf8(workflowNodeName));
  }
  if (workflowAdjacencies != null) {
    datum.setWorkflowAdjacencies(new Utf8(workflowAdjacencies));
  }
  if (workflowTags != null) {
    datum.setWorkflowTags(new Utf8(workflowTags));
  }
}
