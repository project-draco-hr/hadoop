{
  final int MAXPOS=1024 * 1024;
  final int MAXLINE=10 * 1024;
  final int BUF=64 * 1024;
  final InputStream infNull=new InputStream(){
    int position=0;
    final int MAXPOSBUF=1024 * 1024 + BUF;
    @Override public int read(){
      ++position;
      return 0;
    }
    @Override public int read(    byte[] b){
      assertTrue("Read too many bytes from the stream",position < MAXPOSBUF);
      Arrays.fill(b,(byte)0);
      position+=b.length;
      return b.length;
    }
    public void reset(){
      position=0;
    }
  }
;
  final LongWritable key=new LongWritable();
  final Text val=new Text();
  LOG.info("Reading a line from /dev/null");
  final Configuration conf=new Configuration(false);
  conf.setInt(org.apache.hadoop.mapreduce.lib.input.LineRecordReader.MAX_LINE_LENGTH,MAXLINE);
  conf.setInt("io.file.buffer.size",BUF);
  LineRecordReader lrr=new LineRecordReader(infNull,0,MAXPOS,conf);
  assertFalse("Read a line from null",lrr.next(key,val));
  infNull.reset();
  lrr=new LineRecordReader(infNull,0L,MAXLINE,MAXPOS);
  assertFalse("Read a line from null",lrr.next(key,val));
}
