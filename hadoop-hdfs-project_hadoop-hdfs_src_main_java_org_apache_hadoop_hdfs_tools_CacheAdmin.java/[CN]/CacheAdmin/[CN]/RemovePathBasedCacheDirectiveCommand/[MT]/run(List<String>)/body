{
  String idString=StringUtils.popFirstNonOption(args);
  if (idString == null) {
    System.err.println("You must specify a directive ID to remove.");
    return 1;
  }
  long id=Long.valueOf(idString);
  if (id <= 0) {
    System.err.println("Invalid directive ID " + id + ": ids must "+ "be greater than 0.");
    return 1;
  }
  if (!args.isEmpty()) {
    System.err.println("Can't understand argument: " + args.get(0));
    return 1;
  }
  DistributedFileSystem dfs=getDFS();
  List<Long> ids=new LinkedList<Long>();
  ids.add(id);
  List<Fallible<Long>> results=dfs.removePathBasedCacheEntries(ids);
  try {
    Long resultId=results.get(0).get();
    System.out.println("Removed PathBasedCache entry " + resultId);
    return 0;
  }
 catch (  IOException e) {
    System.err.println("Error removing cache directive " + id + ": "+ e.getMessage());
    return 1;
  }
}
