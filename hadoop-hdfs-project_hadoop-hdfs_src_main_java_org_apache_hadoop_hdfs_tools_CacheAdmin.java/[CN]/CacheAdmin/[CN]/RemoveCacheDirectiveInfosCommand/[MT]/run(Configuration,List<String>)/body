{
  String path=StringUtils.popOptionWithArgument("-path",args);
  if (path == null) {
    System.err.println("You must specify a path with -path.");
    return 1;
  }
  if (!args.isEmpty()) {
    System.err.println("Can't understand argument: " + args.get(0));
    System.err.println("Usage is " + getShortUsage());
    return 1;
  }
  int exitCode=0;
  try {
    DistributedFileSystem dfs=AdminHelper.getDFS(conf);
    RemoteIterator<CacheDirectiveEntry> iter=dfs.listCacheDirectives(new CacheDirectiveInfo.Builder().setPath(new Path(path)).build());
    while (iter.hasNext()) {
      CacheDirectiveEntry entry=iter.next();
      try {
        dfs.removeCacheDirective(entry.getInfo().getId());
        System.out.println("Removed cache directive " + entry.getInfo().getId());
      }
 catch (      IOException e) {
        System.err.println(AdminHelper.prettifyException(e));
        exitCode=2;
      }
    }
  }
 catch (  IOException e) {
    System.err.println(AdminHelper.prettifyException(e));
    exitCode=2;
  }
  if (exitCode == 0) {
    System.out.println("Removed every cache directive with path " + path);
  }
  return exitCode;
}
