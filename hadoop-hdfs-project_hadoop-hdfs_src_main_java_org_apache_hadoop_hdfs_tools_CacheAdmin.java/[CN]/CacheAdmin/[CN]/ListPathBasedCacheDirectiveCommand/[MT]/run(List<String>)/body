{
  String pathFilter=StringUtils.popOptionWithArgument("-path",args);
  String poolFilter=StringUtils.popOptionWithArgument("-pool",args);
  if (!args.isEmpty()) {
    System.err.println("Can't understand argument: " + args.get(0));
    return 1;
  }
  TableListing tableListing=new TableListing.Builder().addField("ID",Justification.RIGHT).addField("POOL",Justification.LEFT).addField("PATH",Justification.LEFT).build();
  DistributedFileSystem dfs=getDFS();
  RemoteIterator<PathBasedCacheDescriptor> iter=dfs.listPathBasedCacheDescriptors(poolFilter,pathFilter);
  int numEntries=0;
  while (iter.hasNext()) {
    PathBasedCacheDescriptor entry=iter.next();
    String row[]=new String[]{"" + entry.getEntryId(),entry.getPool(),entry.getPath()};
    tableListing.addRow(row);
    numEntries++;
  }
  System.out.print(String.format("Found %d entr%s\n",numEntries,numEntries == 1 ? "y" : "ies"));
  if (numEntries > 0) {
    System.out.print(tableListing.build());
  }
  return 0;
}
