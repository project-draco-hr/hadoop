{
  String name=StringUtils.popFirstNonOption(args);
  final boolean printStats=StringUtils.popOption("-stats",args);
  if (!args.isEmpty()) {
    System.err.print("Can't understand arguments: " + Joiner.on(" ").join(args) + "\n");
    System.err.println("Usage is " + getShortUsage());
    return 1;
  }
  DistributedFileSystem dfs=getDFS(conf);
  TableListing.Builder builder=new TableListing.Builder().addField("NAME",Justification.LEFT).addField("OWNER",Justification.LEFT).addField("GROUP",Justification.LEFT).addField("MODE",Justification.LEFT).addField("WEIGHT",Justification.RIGHT);
  if (printStats) {
    builder.addField("BYTES_NEEDED",Justification.RIGHT).addField("BYTES_CACHED",Justification.RIGHT).addField("FILES_NEEDED",Justification.RIGHT).addField("FILES_CACHED",Justification.RIGHT);
  }
  TableListing listing=builder.build();
  int numResults=0;
  try {
    RemoteIterator<CachePoolEntry> iter=dfs.listCachePools();
    while (iter.hasNext()) {
      CachePoolEntry entry=iter.next();
      CachePoolInfo info=entry.getInfo();
      LinkedList<String> row=new LinkedList<String>();
      if (name == null || info.getPoolName().equals(name)) {
        row.add(info.getPoolName());
        row.add(info.getOwnerName());
        row.add(info.getGroupName());
        row.add(info.getMode() != null ? info.getMode().toString() : null);
        row.add(info.getWeight() != null ? info.getWeight().toString() : null);
        if (printStats) {
          CachePoolStats stats=entry.getStats();
          row.add(Long.toString(stats.getBytesNeeded()));
          row.add(Long.toString(stats.getBytesCached()));
          row.add(Long.toString(stats.getFilesNeeded()));
          row.add(Long.toString(stats.getFilesCached()));
        }
        listing.addRow(row.toArray(new String[]{}));
        ++numResults;
        if (name != null) {
          break;
        }
      }
    }
  }
 catch (  IOException e) {
    throw new RemoteException(e.getClass().getName(),e.getMessage());
  }
  System.out.print(String.format("Found %d result%s.\n",numResults,(numResults == 1 ? "" : "s")));
  if (numResults > 0) {
    System.out.print(listing);
  }
  return (numResults == 0) ? 1 : 0;
}
