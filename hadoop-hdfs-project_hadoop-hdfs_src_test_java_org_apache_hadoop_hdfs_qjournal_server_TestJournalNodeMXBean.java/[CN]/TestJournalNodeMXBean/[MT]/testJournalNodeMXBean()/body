{
  MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
  ObjectName mxbeanName=new ObjectName("Hadoop:service=JournalNode,name=JournalNodeInfo");
  String journalStatus=(String)mbs.getAttribute(mxbeanName,"JournalsStatus");
  assertEquals(jn.getJournalsStatus(),journalStatus);
  assertFalse(journalStatus.contains(NAMESERVICE));
  final NamespaceInfo FAKE_NSINFO=new NamespaceInfo(12345,"mycluster","my-bp",0L);
  jn.getOrCreateJournal(NAMESERVICE).format(FAKE_NSINFO);
  journalStatus=(String)mbs.getAttribute(mxbeanName,"JournalsStatus");
  assertEquals(jn.getJournalsStatus(),journalStatus);
  Map<String,Map<String,String>> jMap=new HashMap<String,Map<String,String>>();
  Map<String,String> infoMap=new HashMap<String,String>();
  infoMap.put("Formatted","true");
  jMap.put(NAMESERVICE,infoMap);
  assertEquals(JSON.toString(jMap),journalStatus);
  jCluster=new MiniJournalCluster.Builder(new Configuration()).format(false).numJournalNodes(NUM_JN).build();
  jn=jCluster.getJournalNode(0);
  journalStatus=(String)mbs.getAttribute(mxbeanName,"JournalsStatus");
  assertEquals(jn.getJournalsStatus(),journalStatus);
  jMap=new HashMap<String,Map<String,String>>();
  infoMap=new HashMap<String,String>();
  infoMap.put("Formatted","true");
  jMap.put(NAMESERVICE,infoMap);
  assertEquals(JSON.toString(jMap),journalStatus);
}
