{
  for (  Object obj : values) {
    if (obj == null) {
      this.types.add(Types.NULL);
    }
 else     if (obj instanceof Long) {
      this.types.add(Types.BIGINT);
    }
 else     if (obj instanceof LongWritable) {
      this.types.add(Types.BIGINT);
    }
 else     if (obj instanceof VLongWritable) {
      this.types.add(Types.BIGINT);
    }
 else     if (obj instanceof VIntWritable) {
      this.types.add(Types.INTEGER);
    }
 else     if (obj instanceof Integer) {
      this.types.add(Types.INTEGER);
    }
 else     if (obj instanceof Short) {
      this.types.add(Types.SMALLINT);
    }
 else     if (obj instanceof BigDecimal) {
      this.types.add(Types.NUMERIC);
    }
 else     if (obj instanceof DoubleWritable) {
      this.types.add(Types.DOUBLE);
    }
 else     if (obj instanceof Double) {
      this.types.add(Types.DOUBLE);
    }
 else     if (obj instanceof Float) {
      this.types.add(Types.FLOAT);
    }
 else     if (obj instanceof FloatWritable) {
      this.types.add(Types.FLOAT);
    }
 else     if (obj instanceof byte[]) {
      this.types.add(Types.BINARY);
    }
 else     if (obj instanceof ByteWritable) {
      this.types.add(Types.BINARY);
    }
 else     if (obj instanceof Boolean) {
      this.types.add(Types.BOOLEAN);
    }
 else     if (obj instanceof BooleanWritable) {
      this.types.add(Types.BOOLEAN);
    }
 else     if (obj instanceof Character) {
      this.types.add(Types.CHAR);
    }
 else     if (obj instanceof String) {
      this.types.add(Types.VARCHAR);
    }
 else     if (obj instanceof BytesWritable) {
      this.types.add(Types.VARCHAR);
    }
 else     if (obj instanceof Text) {
      this.types.add(Types.VARCHAR);
    }
 else     if (obj instanceof java.util.Date) {
      this.types.add(Types.DATE);
    }
 else     if (obj instanceof Date) {
      this.types.add(Types.DATE);
    }
 else     if (obj instanceof Time) {
      this.types.add(Types.TIME);
    }
 else     if (obj instanceof Timestamp) {
      this.types.add(Types.TIMESTAMP);
    }
 else {
      throw new RuntimeException("Unknown type " + obj.getClass().getName() + " passed to Vertica Record");
    }
  }
}
