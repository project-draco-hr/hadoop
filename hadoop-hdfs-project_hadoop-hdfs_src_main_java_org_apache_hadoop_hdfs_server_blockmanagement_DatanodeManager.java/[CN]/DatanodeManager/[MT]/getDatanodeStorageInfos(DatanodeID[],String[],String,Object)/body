{
  storageIDs=storageIDs == null ? new String[0] : storageIDs;
  if (datanodeID.length != storageIDs.length) {
    final String err=(storageIDs.length == 0 ? "Missing storageIDs: It is likely that the HDFS client," + " who made this call, is running in an older version of Hadoop" + " which does not support storageIDs." : "Length mismatched: storageIDs.length=" + storageIDs.length + " != ") + " datanodeID.length=" + datanodeID.length;
    throw new HadoopIllegalArgumentException(err + ", " + String.format(format,args));
  }
  if (datanodeID.length == 0) {
    return null;
  }
  final DatanodeStorageInfo[] storages=new DatanodeStorageInfo[datanodeID.length];
  for (int i=0; i < datanodeID.length; i++) {
    if (datanodeID[i].equals(DatanodeID.EMPTY_DATANODE_ID)) {
      storages[i]=null;
      continue;
    }
    final DatanodeDescriptor dd=getDatanode(datanodeID[i]);
    if (dd != null) {
      storages[i]=dd.getStorageInfo(storageIDs[i]);
    }
  }
  return storages;
}
