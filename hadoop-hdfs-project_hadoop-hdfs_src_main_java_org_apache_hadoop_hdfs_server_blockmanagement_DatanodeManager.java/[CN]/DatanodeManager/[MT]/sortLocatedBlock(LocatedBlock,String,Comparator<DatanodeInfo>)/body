{
  Node client=getDatanodeByHost(targetHost);
  if (client == null) {
    List<String> hosts=new ArrayList<>(1);
    hosts.add(targetHost);
    List<String> resolvedHosts=dnsToSwitchMapping.resolve(hosts);
    if (resolvedHosts != null && !resolvedHosts.isEmpty()) {
      String rName=resolvedHosts.get(0);
      if (rName != null) {
        client=new NodeBase(rName + NodeBase.PATH_SEPARATOR_STR + targetHost);
      }
    }
 else {
      LOG.error("Node Resolution failed. Please make sure that rack " + "awareness scripts are functional.");
    }
  }
  DatanodeInfo[] di=lb.getLocations();
  Arrays.sort(di,comparator);
  int lastActiveIndex=di.length - 1;
  while (lastActiveIndex > 0 && isInactive(di[lastActiveIndex])) {
    --lastActiveIndex;
  }
  int activeLen=lastActiveIndex + 1;
  networktopology.sortByDistance(client,lb.getLocations(),activeLen);
  lb.updateCachedStorageInfo();
}
