{
  Node client=getDatanodeByHost(targethost);
  if (client == null) {
    List<String> hosts=new ArrayList<String>(1);
    hosts.add(targethost);
    List<String> resolvedHosts=dnsToSwitchMapping.resolve(hosts);
    if (resolvedHosts != null && !resolvedHosts.isEmpty()) {
      String rName=resolvedHosts.get(0);
      if (rName != null) {
        client=new NodeBase(rName + NodeBase.PATH_SEPARATOR_STR + targethost);
      }
    }
 else {
      LOG.error("Node Resolution failed. Please make sure that rack " + "awareness scripts are functional.");
    }
  }
  Comparator<DatanodeInfo> comparator=avoidStaleDataNodesForRead ? new DFSUtil.DecomStaleComparator(staleInterval) : DFSUtil.DECOM_COMPARATOR;
  for (  LocatedBlock b : locatedblocks) {
    DatanodeInfo[] di=b.getLocations();
    Arrays.sort(di,comparator);
    int lastActiveIndex=di.length - 1;
    while (lastActiveIndex > 0 && isInactive(di[lastActiveIndex])) {
      --lastActiveIndex;
    }
    int activeLen=lastActiveIndex + 1;
    networktopology.sortByDistance(client,b.getLocations(),activeLen);
    b.updateCachedStorageInfo();
  }
}
