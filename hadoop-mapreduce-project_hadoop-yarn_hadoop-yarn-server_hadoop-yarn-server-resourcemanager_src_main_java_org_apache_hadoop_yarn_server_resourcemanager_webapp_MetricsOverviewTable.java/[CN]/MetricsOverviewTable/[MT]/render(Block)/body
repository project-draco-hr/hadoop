{
  html.style(".metrics {margin-bottom:5px}");
  ClusterMetricsInfo clusterMetrics=new ClusterMetricsInfo(this.rm,this.rmContext);
  DIV<Hamlet> div=html.div().$class("metrics");
  div.table("#metricsoverview").thead().$class("ui-widget-header").tr().th().$class("ui-state-default")._("Apps Submitted")._().th().$class("ui-state-default")._("Containers Running")._().th().$class("ui-state-default")._("Memory Used")._().th().$class("ui-state-default")._("Memory Total")._().th().$class("ui-state-default")._("Memory Reserved")._().th().$class("ui-state-default")._("Total Nodes")._().th().$class("ui-state-default")._("Decommissioned Nodes")._().th().$class("ui-state-default")._("Lost Nodes")._().th().$class("ui-state-default")._("Unhealthy Nodes")._().th().$class("ui-state-default")._("Rebooted Nodes")._()._()._().tbody().$class("ui-widget-content").tr().td(String.valueOf(clusterMetrics.getAppsSubmitted())).td(String.valueOf(clusterMetrics.getContainersAllocated())).td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).td().a(url("nodes"),String.valueOf(clusterMetrics.getTotalNodes()))._().td().a(url("nodes/decommissioned"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().td().a(url("nodes/lost"),String.valueOf(clusterMetrics.getLostNodes()))._().td().a(url("nodes/unhealthy"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().td().a(url("nodes/rebooted"),String.valueOf(clusterMetrics.getRebootedNodes()))._()._()._()._();
  String user=request().getRemoteUser();
  if (user != null) {
    UserMetricsInfo userMetrics=new UserMetricsInfo(this.rm,this.rmContext,user);
    if (userMetrics.metricsAvailable()) {
      div.table("#usermetricsoverview").thead().$class("ui-widget-header").tr().th().$class("ui-state-default")._("Apps Submitted (" + user + ")")._().th().$class("ui-state-default")._("Containers Running (" + user + ")")._().th().$class("ui-state-default")._("Containers Pending (" + user + ")")._().th().$class("ui-state-default")._("Containers Reserved (" + user + ")")._().th().$class("ui-state-default")._("Memory Used (" + user + ")")._().th().$class("ui-state-default")._("Memory Pending (" + user + ")")._().th().$class("ui-state-default")._("Memory Reserved (" + user + ")")._()._()._().tbody().$class("ui-widget-content").tr().td(String.valueOf(userMetrics.getAppsSubmitted())).td(String.valueOf(userMetrics.getRunningContainers())).td(String.valueOf(userMetrics.getPendingContainers())).td(String.valueOf(userMetrics.getReservedContainers())).td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB))._()._()._();
    }
  }
  div._();
}
