{
  Resource queueLimit=Resources.none();
  Resource usedResources=childQueue.getUsedResources();
  float absoluteUsedCapacity=0.0f;
  float usedCapacity=0.0f;
  if (Resources.greaterThan(calculator,clusterResource,clusterResource,Resources.none())) {
    queueLimit=Resources.multiply(clusterResource,childQueue.getAbsoluteCapacity());
    absoluteUsedCapacity=Resources.divide(calculator,clusterResource,usedResources,clusterResource);
    usedCapacity=Resources.equals(queueLimit,Resources.none()) ? 0 : Resources.divide(calculator,clusterResource,usedResources,queueLimit);
  }
  childQueue.setUsedCapacity(usedCapacity);
  childQueue.setAbsoluteUsedCapacity(absoluteUsedCapacity);
  Resource available=Resources.subtract(queueLimit,usedResources);
  childQueue.getMetrics().setAvailableResourcesToQueue(Resources.max(calculator,clusterResource,available,Resources.none()));
}
