{
  CSQueue parent=queue.getParent();
  if (parent == null) {
    return queue.getAbsoluteMaximumCapacity();
  }
  float parentMaxAvail=getAbsoluteMaxAvailCapacity(resourceCalculator,clusterResource,parent);
  Resource parentResource=Resources.multiply(clusterResource,parentMaxAvail);
  if (Resources.isInvalidDivisor(resourceCalculator,parentResource)) {
    return 0.0f;
  }
  float siblingUsedCapacity=Resources.ratio(resourceCalculator,Resources.subtract(parent.getUsedResources(),queue.getUsedResources()),parentResource);
  float maxAvail=Math.min(queue.getMaximumCapacity(),1.0f - siblingUsedCapacity);
  float absoluteMaxAvail=maxAvail * parentMaxAvail;
  if (LOG.isDebugEnabled()) {
    LOG.debug("qpath " + queue.getQueuePath());
    LOG.debug("parentMaxAvail " + parentMaxAvail);
    LOG.debug("siblingUsedCapacity " + siblingUsedCapacity);
    LOG.debug("getAbsoluteMaximumCapacity " + queue.getAbsoluteMaximumCapacity());
    LOG.debug("maxAvail " + maxAvail);
    LOG.debug("absoluteMaxAvail " + absoluteMaxAvail);
  }
  if (absoluteMaxAvail < 0.0f) {
    absoluteMaxAvail=0.0f;
  }
 else   if (absoluteMaxAvail > 1.0f) {
    absoluteMaxAvail=1.0f;
  }
  return absoluteMaxAvail;
}
