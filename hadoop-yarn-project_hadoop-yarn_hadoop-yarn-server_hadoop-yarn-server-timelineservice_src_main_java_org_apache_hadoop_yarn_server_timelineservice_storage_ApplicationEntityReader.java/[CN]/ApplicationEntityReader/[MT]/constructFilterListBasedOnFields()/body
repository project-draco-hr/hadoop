{
  FilterList list=new FilterList(Operator.MUST_PASS_ONE);
  if (fieldsToRetrieve.contains(Field.ALL) && (confsToRetrieve == null || confsToRetrieve.getFilterList().isEmpty()) && (metricsToRetrieve == null || metricsToRetrieve.getFilterList().isEmpty())) {
    return list;
  }
  FilterList infoColFamilyList=new FilterList();
  FamilyFilter infoColumnFamily=new FamilyFilter(CompareOp.EQUAL,new BinaryComparator(ApplicationColumnFamily.INFO.getBytes()));
  infoColFamilyList.addFilter(infoColumnFamily);
  if (!fieldsToRetrieve.contains(Field.EVENTS) && !fieldsToRetrieve.contains(Field.ALL) && eventFilters == null) {
    infoColFamilyList.addFilter(new QualifierFilter(CompareOp.NOT_EQUAL,new BinaryPrefixComparator(ApplicationColumnPrefix.EVENT.getColumnPrefixBytes(""))));
  }
  if (!fieldsToRetrieve.contains(Field.INFO) && !fieldsToRetrieve.contains(Field.ALL) && infoFilters == null) {
    infoColFamilyList.addFilter(new QualifierFilter(CompareOp.NOT_EQUAL,new BinaryPrefixComparator(ApplicationColumnPrefix.INFO.getColumnPrefixBytes(""))));
  }
  if (!fieldsToRetrieve.contains(Field.IS_RELATED_TO) && !fieldsToRetrieve.contains(Field.ALL) && isRelatedTo == null) {
    infoColFamilyList.addFilter(new QualifierFilter(CompareOp.NOT_EQUAL,new BinaryPrefixComparator(ApplicationColumnPrefix.IS_RELATED_TO.getColumnPrefixBytes(""))));
  }
  if (!fieldsToRetrieve.contains(Field.RELATES_TO) && !fieldsToRetrieve.contains(Field.ALL) && relatesTo == null) {
    infoColFamilyList.addFilter(new QualifierFilter(CompareOp.NOT_EQUAL,new BinaryPrefixComparator(ApplicationColumnPrefix.RELATES_TO.getColumnPrefixBytes(""))));
  }
  list.addFilter(infoColFamilyList);
  if ((fieldsToRetrieve.contains(Field.CONFIGS) || configFilters != null) || (confsToRetrieve != null && !confsToRetrieve.getFilterList().isEmpty())) {
    FilterList filterCfg=new FilterList(new FamilyFilter(CompareOp.EQUAL,new BinaryComparator(ApplicationColumnFamily.CONFIGS.getBytes())));
    if (confsToRetrieve != null && !confsToRetrieve.getFilterList().isEmpty()) {
      filterCfg.addFilter(TimelineFilterUtils.createHBaseFilterList(ApplicationColumnPrefix.CONFIG,confsToRetrieve));
    }
    list.addFilter(filterCfg);
  }
  if ((fieldsToRetrieve.contains(Field.METRICS) || metricFilters != null) || (metricsToRetrieve != null && !metricsToRetrieve.getFilterList().isEmpty())) {
    FilterList filterMetrics=new FilterList(new FamilyFilter(CompareOp.EQUAL,new BinaryComparator(ApplicationColumnFamily.METRICS.getBytes())));
    if (metricsToRetrieve != null && !metricsToRetrieve.getFilterList().isEmpty()) {
      filterMetrics.addFilter(TimelineFilterUtils.createHBaseFilterList(ApplicationColumnPrefix.METRIC,metricsToRetrieve));
    }
    list.addFilter(filterMetrics);
  }
  return list;
}
