{
  if (result == null || result.isEmpty()) {
    return null;
  }
  TimelineEntity entity=new TimelineEntity();
  entity.setType(TimelineEntityType.YARN_APPLICATION.toString());
  String entityId=ApplicationColumn.ID.readResult(result).toString();
  entity.setId(entityId);
  Number createdTime=(Number)ApplicationColumn.CREATED_TIME.readResult(result);
  entity.setCreatedTime(createdTime.longValue());
  if (!singleEntityRead && (entity.getCreatedTime() < createdTimeBegin || entity.getCreatedTime() > createdTimeEnd)) {
    return null;
  }
  Number modifiedTime=(Number)ApplicationColumn.MODIFIED_TIME.readResult(result);
  entity.setModifiedTime(modifiedTime.longValue());
  if (!singleEntityRead && (entity.getModifiedTime() < modifiedTimeBegin || entity.getModifiedTime() > modifiedTimeEnd)) {
    return null;
  }
  boolean checkIsRelatedTo=isRelatedTo != null && isRelatedTo.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.IS_RELATED_TO) || checkIsRelatedTo) {
    readRelationship(entity,result,ApplicationColumnPrefix.IS_RELATED_TO,true);
    if (checkIsRelatedTo && !TimelineReaderUtils.matchRelations(entity.getIsRelatedToEntities(),isRelatedTo)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.IS_RELATED_TO)) {
      entity.getIsRelatedToEntities().clear();
    }
  }
  boolean checkRelatesTo=relatesTo != null && relatesTo.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.RELATES_TO) || checkRelatesTo) {
    readRelationship(entity,result,ApplicationColumnPrefix.RELATES_TO,false);
    if (checkRelatesTo && !TimelineReaderUtils.matchRelations(entity.getRelatesToEntities(),relatesTo)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.RELATES_TO)) {
      entity.getRelatesToEntities().clear();
    }
  }
  boolean checkInfo=infoFilters != null && infoFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.INFO) || checkInfo) {
    readKeyValuePairs(entity,result,ApplicationColumnPrefix.INFO,false);
    if (checkInfo && !TimelineReaderUtils.matchFilters(entity.getInfo(),infoFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.INFO)) {
      entity.getInfo().clear();
    }
  }
  boolean checkConfigs=configFilters != null && configFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.CONFIGS) || checkConfigs) {
    readKeyValuePairs(entity,result,ApplicationColumnPrefix.CONFIG,true);
    if (checkConfigs && !TimelineReaderUtils.matchFilters(entity.getConfigs(),configFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.CONFIGS)) {
      entity.getConfigs().clear();
    }
  }
  boolean checkEvents=eventFilters != null && eventFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.EVENTS) || checkEvents) {
    readEvents(entity,result,true);
    if (checkEvents && !TimelineReaderUtils.matchEventFilters(entity.getEvents(),eventFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.EVENTS)) {
      entity.getEvents().clear();
    }
  }
  boolean checkMetrics=metricFilters != null && metricFilters.size() > 0;
  if (fieldsToRetrieve.contains(Field.ALL) || fieldsToRetrieve.contains(Field.METRICS) || checkMetrics) {
    readMetrics(entity,result,ApplicationColumnPrefix.METRIC);
    if (checkMetrics && !TimelineReaderUtils.matchMetricFilters(entity.getMetrics(),metricFilters)) {
      return null;
    }
    if (!fieldsToRetrieve.contains(Field.ALL) && !fieldsToRetrieve.contains(Field.METRICS)) {
      entity.getMetrics().clear();
    }
  }
  return entity;
}
