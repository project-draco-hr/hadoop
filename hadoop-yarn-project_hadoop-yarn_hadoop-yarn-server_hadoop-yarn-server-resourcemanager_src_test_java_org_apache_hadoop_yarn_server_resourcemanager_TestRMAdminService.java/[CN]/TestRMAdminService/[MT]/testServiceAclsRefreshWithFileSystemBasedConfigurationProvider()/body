{
  configuration.setBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,true);
  configuration.set(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,"org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider");
  ResourceManager resourceManager=null;
  try {
    try {
      resourceManager=new ResourceManager();
      resourceManager.init(configuration);
      resourceManager.start();
      fail("Should throw an exception");
    }
 catch (    Exception ex) {
    }
    uploadDefaultConfiguration();
    Configuration conf=new Configuration();
    conf.setBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,true);
    uploadConfiguration(conf,"core-site.xml");
    try {
      resourceManager=new ResourceManager();
      resourceManager.init(configuration);
      resourceManager.start();
    }
 catch (    Exception ex) {
      fail("Should not get any exceptions");
    }
    String aclsString="alice,bob users,wheel";
    Configuration newConf=new Configuration();
    newConf.set("security.applicationclient.protocol.acl",aclsString);
    uploadConfiguration(newConf,"hadoop-policy.xml");
    resourceManager.adminService.refreshServiceAcls(RefreshServiceAclsRequest.newInstance());
    ServiceAuthorizationManager adminServiceServiceManager=resourceManager.adminService.getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(adminServiceServiceManager,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager clientRMServiceServiceManager=resourceManager.getRMContext().getClientRMService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(clientRMServiceServiceManager,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager appMasterService=resourceManager.getRMContext().getApplicationMasterService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(appMasterService,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager RTService=resourceManager.getRMContext().getResourceTrackerService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(RTService,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
  }
  finally {
    if (resourceManager != null) {
      resourceManager.stop();
    }
  }
}
