{
  configuration.setBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,true);
  configuration.set(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,"org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider");
  ResourceManager resourceManager=null;
  try {
    resourceManager=new ResourceManager();
    resourceManager.init(configuration);
    resourceManager.start();
    cleanRemoteDirectory();
    try {
      resourceManager.adminService.refreshServiceAcls(RefreshServiceAclsRequest.newInstance());
      fail("FileSystemBasedConfigurationProvider is used." + " Should get an exception here");
    }
 catch (    Exception ex) {
      Assert.assertTrue(ex.getMessage().contains("Can not find Configuration: hadoop-policy.xml"));
    }
    String aclsString="alice,bob users,wheel";
    Configuration conf=new Configuration();
    conf.setBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,true);
    conf.set("security.applicationclient.protocol.acl",aclsString);
    String hadoopConfFile=writeConfigurationXML(conf,"hadoop-policy.xml");
    uploadToRemoteFileSystem(new Path(hadoopConfFile));
    resourceManager.adminService.refreshServiceAcls(RefreshServiceAclsRequest.newInstance());
    ServiceAuthorizationManager adminServiceServiceManager=resourceManager.adminService.getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(adminServiceServiceManager,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager clientRMServiceServiceManager=resourceManager.getRMContext().getClientRMService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(clientRMServiceServiceManager,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager appMasterService=resourceManager.getRMContext().getApplicationMasterService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(appMasterService,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
    ServiceAuthorizationManager RTService=resourceManager.getRMContext().getResourceTrackerService().getServer().getServiceAuthorizationManager();
    verifyServiceACLsRefresh(RTService,org.apache.hadoop.yarn.api.ApplicationClientProtocolPB.class,aclsString);
  }
  finally {
    if (resourceManager != null) {
      resourceManager.stop();
    }
  }
}
