{
  configuration.set(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,"org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider");
  try {
    rm=new MockRM(configuration);
    rm.init(configuration);
    rm.start();
    fail("Should throw an exception");
  }
 catch (  Exception ex) {
  }
  uploadDefaultConfiguration();
  try {
    rm=new MockRM(configuration);
    rm.init(configuration);
    rm.start();
  }
 catch (  Exception ex) {
    fail("Should not get any exceptions");
  }
  final File excludeHostsFile=new File(tmpDir.toString(),"excludeHosts");
  if (excludeHostsFile.exists()) {
    excludeHostsFile.delete();
  }
  if (!excludeHostsFile.createNewFile()) {
    Assert.fail("Can not create " + "excludeHosts");
  }
  PrintWriter fileWriter=new PrintWriter(excludeHostsFile);
  fileWriter.write("0.0.0.0:123");
  fileWriter.close();
  uploadToRemoteFileSystem(new Path(excludeHostsFile.getAbsolutePath()));
  Configuration yarnConf=new YarnConfiguration();
  yarnConf.set(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,this.workingPath + "/excludeHosts");
  uploadConfiguration(yarnConf,YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);
  rm.adminService.refreshNodes(RefreshNodesRequest.newInstance());
  Set<String> excludeHosts=rm.getNodesListManager().getHostsReader().getExcludedHosts();
  Assert.assertTrue(excludeHosts.size() == 1);
  Assert.assertTrue(excludeHosts.contains("0.0.0.0:123"));
}
