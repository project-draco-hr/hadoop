{
  Configuration.addDefaultResource(YarnConfiguration.CS_CONFIGURATION_FILE);
  configuration.set(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,"org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider");
  rm=new MockRM(configuration);
  rm.init(configuration);
  rm.start();
  cleanRemoteDirectory();
  CapacityScheduler cs=(CapacityScheduler)rm.getRMContext().getScheduler();
  int maxAppsBefore=cs.getConfiguration().getMaximumSystemApplications();
  try {
    rm.adminService.refreshQueues(RefreshQueuesRequest.newInstance());
    fail("FileSystemBasedConfigurationProvider is used." + " Should get an exception here");
  }
 catch (  Exception ex) {
    Assert.assertTrue(ex.getMessage().contains("Can not find Configuration: capacity-scheduler.xml"));
  }
  CapacitySchedulerConfiguration csConf=new CapacitySchedulerConfiguration();
  csConf.set("yarn.scheduler.capacity.maximum-applications","5000");
  String csConfFile=writeConfigurationXML(csConf,"capacity-scheduler.xml");
  uploadToRemoteFileSystem(new Path(csConfFile));
  rm.adminService.refreshQueues(RefreshQueuesRequest.newInstance());
  int maxAppsAfter=cs.getConfiguration().getMaximumSystemApplications();
  Assert.assertEquals(maxAppsAfter,5000);
  Assert.assertTrue(maxAppsAfter != maxAppsBefore);
}
