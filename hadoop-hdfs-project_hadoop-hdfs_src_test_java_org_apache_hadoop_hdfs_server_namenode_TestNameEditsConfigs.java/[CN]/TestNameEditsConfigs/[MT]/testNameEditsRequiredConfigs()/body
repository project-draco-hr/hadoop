{
  MiniDFSCluster cluster=null;
  File nameAndEditsDir=new File(base_dir,"name_and_edits");
  File nameAndEditsDir2=new File(base_dir,"name_and_edits2");
  File nameDir=new File(base_dir,"name");
  try {
    Configuration conf=new HdfsConfiguration();
    conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,nameDir.getAbsolutePath());
    conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY,nameAndEditsDir2.toURI().toString());
    conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,nameAndEditsDir.toURI().toString());
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).manageNameDfsDirs(false).build();
    fail("Successfully started cluster but should not have been able to.");
  }
 catch (  IllegalArgumentException iae) {
    LOG.info("EXPECTED: cluster start failed due to bad configuration" + iae);
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
    cluster=null;
  }
  try {
    Configuration conf=new HdfsConfiguration();
    conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,nameDir.getAbsolutePath());
    conf.setStrings(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,nameAndEditsDir.toURI().toString(),nameAndEditsDir2.toURI().toString());
    conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY,nameAndEditsDir2.toURI().toString());
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).manageNameDfsDirs(false).build();
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
  try {
    Configuration conf=new HdfsConfiguration();
    conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,nameDir.getAbsolutePath());
    conf.setStrings(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,nameAndEditsDir.toURI().toString(),nameAndEditsDir2.toURI().toString());
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).manageNameDfsDirs(false).build();
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
