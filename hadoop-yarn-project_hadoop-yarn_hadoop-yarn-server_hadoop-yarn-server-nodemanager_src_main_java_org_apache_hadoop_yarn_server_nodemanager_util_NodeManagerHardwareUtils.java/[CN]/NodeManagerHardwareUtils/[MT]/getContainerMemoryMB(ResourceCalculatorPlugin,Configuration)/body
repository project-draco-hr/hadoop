{
  int memoryMb;
  boolean hardwareDetectionEnabled=conf.getBoolean(YarnConfiguration.NM_ENABLE_HARDWARE_CAPABILITY_DETECTION,YarnConfiguration.DEFAULT_NM_ENABLE_HARDWARE_CAPABILITY_DETECTION);
  if (!hardwareDetectionEnabled || plugin == null) {
    memoryMb=conf.getInt(YarnConfiguration.NM_PMEM_MB,YarnConfiguration.DEFAULT_NM_PMEM_MB);
    if (memoryMb == -1) {
      memoryMb=YarnConfiguration.DEFAULT_NM_PMEM_MB;
    }
  }
 else {
    memoryMb=conf.getInt(YarnConfiguration.NM_PMEM_MB,-1);
    if (memoryMb == -1) {
      int physicalMemoryMB=(int)(plugin.getPhysicalMemorySize() / (1024 * 1024));
      int hadoopHeapSizeMB=(int)(Runtime.getRuntime().maxMemory() / (1024 * 1024));
      int containerPhysicalMemoryMB=(int)(0.8f * (physicalMemoryMB - (2 * hadoopHeapSizeMB)));
      int reservedMemoryMB=conf.getInt(YarnConfiguration.NM_SYSTEM_RESERVED_PMEM_MB,-1);
      if (reservedMemoryMB != -1) {
        containerPhysicalMemoryMB=physicalMemoryMB - reservedMemoryMB;
      }
      if (containerPhysicalMemoryMB <= 0) {
        LOG.error("Calculated memory for YARN containers is too low." + " Node memory is " + physicalMemoryMB + " MB, system reserved memory is "+ reservedMemoryMB+ " MB.");
      }
      containerPhysicalMemoryMB=Math.max(containerPhysicalMemoryMB,0);
      memoryMb=containerPhysicalMemoryMB;
    }
  }
  if (memoryMb <= 0) {
    String message="Illegal value for " + YarnConfiguration.NM_PMEM_MB + ". Value must be greater than 0.";
    throw new IllegalArgumentException(message);
  }
  return memoryMb;
}
