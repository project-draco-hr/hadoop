{
  int cores;
  boolean hardwareDetectionEnabled=conf.getBoolean(YarnConfiguration.NM_ENABLE_HARDWARE_CAPABILITY_DETECTION,YarnConfiguration.DEFAULT_NM_ENABLE_HARDWARE_CAPABILITY_DETECTION);
  String message;
  if (!hardwareDetectionEnabled || plugin == null) {
    cores=conf.getInt(YarnConfiguration.NM_VCORES,YarnConfiguration.DEFAULT_NM_VCORES);
    if (cores == -1) {
      cores=YarnConfiguration.DEFAULT_NM_VCORES;
    }
  }
 else {
    cores=conf.getInt(YarnConfiguration.NM_VCORES,-1);
    if (cores == -1) {
      float physicalCores=NodeManagerHardwareUtils.getContainersCPUs(plugin,conf);
      float multiplier=conf.getFloat(YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER,YarnConfiguration.DEFAULT_NM_PCORES_VCORES_MULTIPLIER);
      if (multiplier > 0) {
        float tmp=physicalCores * multiplier;
        if (tmp > 0 && tmp < 1) {
          cores=1;
        }
 else {
          cores=(int)tmp;
        }
      }
 else {
        message="Illegal value for " + YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER + ". Value must be greater than 0.";
        throw new IllegalArgumentException(message);
      }
    }
  }
  if (cores <= 0) {
    message="Illegal value for " + YarnConfiguration.NM_VCORES + ". Value must be greater than 0.";
    throw new IllegalArgumentException(message);
  }
  return cores;
}
