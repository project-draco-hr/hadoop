{
  List<String> args=new ArrayList<String>(Arrays.asList(aArgs));
  if (args.size() < 2 || !args.get(0).startsWith("-op"))   printUsage();
  String type=args.get(1);
  boolean runAll=OperationStatsBase.OP_ALL_NAME.equals(type);
  String[] argv=new String[]{};
  nameNode=NameNode.createNameNode(argv,config);
  nameNodeProto=nameNode.getRpcServer();
  List<OperationStatsBase> ops=new ArrayList<OperationStatsBase>();
  OperationStatsBase opStat=null;
  try {
    if (runAll || CreateFileStats.OP_CREATE_NAME.equals(type)) {
      opStat=new CreateFileStats(args);
      ops.add(opStat);
    }
    if (runAll || MkdirsStats.OP_MKDIRS_NAME.equals(type)) {
      opStat=new MkdirsStats(args);
      ops.add(opStat);
    }
    if (runAll || OpenFileStats.OP_OPEN_NAME.equals(type)) {
      opStat=new OpenFileStats(args);
      ops.add(opStat);
    }
    if (runAll || DeleteFileStats.OP_DELETE_NAME.equals(type)) {
      opStat=new DeleteFileStats(args);
      ops.add(opStat);
    }
    if (runAll || FileStatusStats.OP_FILE_STATUS_NAME.equals(type)) {
      opStat=new FileStatusStats(args);
      ops.add(opStat);
    }
    if (runAll || RenameFileStats.OP_RENAME_NAME.equals(type)) {
      opStat=new RenameFileStats(args);
      ops.add(opStat);
    }
    if (runAll || BlockReportStats.OP_BLOCK_REPORT_NAME.equals(type)) {
      opStat=new BlockReportStats(args);
      ops.add(opStat);
    }
    if (runAll || ReplicationStats.OP_REPLICATION_NAME.equals(type)) {
      opStat=new ReplicationStats(args);
      ops.add(opStat);
    }
    if (runAll || CleanAllStats.OP_CLEAN_NAME.equals(type)) {
      opStat=new CleanAllStats(args);
      ops.add(opStat);
    }
    if (ops.size() == 0)     printUsage();
    for (    OperationStatsBase op : ops) {
      LOG.info("Starting benchmark: " + op.getOpName());
      op.benchmark();
      op.cleanUp();
    }
    for (    OperationStatsBase op : ops) {
      LOG.info("");
      op.printResults();
    }
  }
 catch (  Exception e) {
    LOG.error(StringUtils.stringifyException(e));
    throw e;
  }
  return 0;
}
