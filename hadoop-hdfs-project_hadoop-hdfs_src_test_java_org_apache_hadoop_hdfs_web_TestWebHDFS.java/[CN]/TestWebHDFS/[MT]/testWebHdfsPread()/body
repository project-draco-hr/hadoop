{
  final Configuration conf=WebHdfsTestUtil.createConf();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
  byte[] content=new byte[1024];
  RANDOM.nextBytes(content);
  final Path foo=new Path("/foo");
  FSDataInputStream in=null;
  try {
    final WebHdfsFileSystem fs=WebHdfsTestUtil.getWebHdfsFileSystem(conf,WebHdfsConstants.WEBHDFS_SCHEME);
    try (OutputStream os=fs.create(foo)){
      os.write(content);
    }
     in=fs.open(foo,1024);
    byte[] buf=new byte[1024];
    try {
      in.readFully(1020,buf,0,5);
      Assert.fail("EOF expected");
    }
 catch (    EOFException ignored) {
    }
    int length=in.read(buf,0,512);
    in.readFully(100,new byte[1024],0,100);
    int preadLen=in.read(200,new byte[1024],0,200);
    Assert.assertTrue(preadLen > 0);
    IOUtils.readFully(in,buf,length,1024 - length);
    Assert.assertArrayEquals(content,buf);
  }
  finally {
    if (in != null) {
      in.close();
    }
    cluster.shutdown();
  }
}
