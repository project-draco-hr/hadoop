{
  MiniDFSCluster cluster=null;
  final Configuration conf=WebHdfsTestUtil.createConf();
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).build();
    cluster.waitActive();
    final DistributedFileSystem dfs=cluster.getFileSystem();
    final FileSystem webHdfs=WebHdfsTestUtil.getWebHdfsFileSystem(conf,WebHdfsFileSystem.SCHEME);
    final Path foo=new Path("/foo");
    dfs.mkdirs(foo);
    dfs.allowSnapshot(foo);
    webHdfs.createSnapshot(foo,"s1");
    final Path s1path=SnapshotTestHelper.getSnapshotRoot(foo,"s1");
    Assert.assertTrue(webHdfs.exists(s1path));
    webHdfs.renameSnapshot(foo,"s1","s2");
    Assert.assertFalse(webHdfs.exists(s1path));
    final Path s2path=SnapshotTestHelper.getSnapshotRoot(foo,"s2");
    Assert.assertTrue(webHdfs.exists(s2path));
    webHdfs.deleteSnapshot(foo,"s2");
    Assert.assertFalse(webHdfs.exists(s2path));
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
