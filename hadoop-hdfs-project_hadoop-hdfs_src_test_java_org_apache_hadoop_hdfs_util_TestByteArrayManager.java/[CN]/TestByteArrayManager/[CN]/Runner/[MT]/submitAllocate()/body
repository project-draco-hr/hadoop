{
  count.incrementAndGet();
  final Future<byte[]> f=pool.submit(new Callable<byte[]>(){
    @Override public byte[] call() throws Exception {
      final int lower=maxArrayLength == ByteArrayManager.MIN_ARRAY_LENGTH ? 0 : maxArrayLength >> 1;
      final int arrayLength=ThreadLocalRandom.current().nextInt(maxArrayLength - lower) + lower + 1;
      final byte[] array=bam.newByteArray(arrayLength);
      try {
        Assert.assertEquals("arrayLength=" + arrayLength + ", lower="+ lower,maxArrayLength,array.length);
      }
 catch (      AssertionError e) {
        assertionErrors.add(e);
      }
      return array;
    }
  }
);
synchronized (arrays) {
    arrays.add(f);
  }
  return f;
}
