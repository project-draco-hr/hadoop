{
  MiniDFSCluster cluster=null;
  try {
    String nnPrincipal=System.getProperty("dfs.namenode.kerberos.principal");
    String nnSpnegoPrincipal=System.getProperty("dfs.namenode.kerberos.internal.spnego.principal");
    String nnKeyTab=System.getProperty("dfs.namenode.keytab.file");
    assertNotNull("NameNode principal was not specified",nnPrincipal);
    assertNotNull("NameNode SPNEGO principal was not specified",nnSpnegoPrincipal);
    assertNotNull("NameNode keytab was not specified",nnKeyTab);
    String dnPrincipal=System.getProperty("dfs.datanode.kerberos.principal");
    String dnKeyTab=System.getProperty("dfs.datanode.keytab.file");
    assertNotNull("DataNode principal was not specified",dnPrincipal);
    assertNotNull("DataNode keytab was not specified",dnKeyTab);
    Configuration conf=new HdfsConfiguration();
    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
    conf.set(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY,nnPrincipal);
    conf.set(DFSConfigKeys.DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY,nnSpnegoPrincipal);
    conf.set(DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY,nnKeyTab);
    conf.set(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY,dnPrincipal);
    conf.set(DFSConfigKeys.DFS_DATANODE_KEYTAB_FILE_KEY,dnKeyTab);
    conf.set(DFSConfigKeys.DFS_DATANODE_ADDRESS_KEY,"127.0.0.1:1004");
    conf.set(DFSConfigKeys.DFS_DATANODE_HTTP_ADDRESS_KEY,"127.0.0.1:1006");
    conf.set(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY,"700");
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_OF_DATANODES).checkDataNodeAddrConfig(true).build();
    cluster.waitActive();
    assertTrue(cluster.isDataNodeUp());
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    throw ex;
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
