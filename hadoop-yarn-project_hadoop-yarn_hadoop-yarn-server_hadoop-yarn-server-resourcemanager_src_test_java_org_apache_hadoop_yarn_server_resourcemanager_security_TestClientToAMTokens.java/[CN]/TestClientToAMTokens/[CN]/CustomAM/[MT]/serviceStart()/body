{
  Configuration conf=getConfig();
  RPC.setProtocolEngine(conf,CustomProtocol.class,ProtobufRpcEngine.class);
  UserGroupInformation.setConfiguration(conf);
  BlockingService service=TestRpcServiceProtos.CustomProto.newReflectiveBlockingService(this);
  Server server;
  try {
    secretMgr=new ClientToAMTokenSecretManager(this.appAttemptId,secretKey);
    server=new RPC.Builder(conf).setProtocol(CustomProtocol.class).setNumHandlers(1).setSecretManager(secretMgr).setInstance(service).build();
  }
 catch (  Exception e) {
    throw new YarnRuntimeException(e);
  }
  server.start();
  this.address=NetUtils.getConnectAddress(server);
  super.serviceStart();
}
