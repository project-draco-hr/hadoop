{
  String[] wasbAliases=new String[]{"wasb","wasbs"};
  for (  String defaultScheme : wasbAliases) {
    for (    String wantedScheme : wasbAliases) {
      testAccount=AzureBlobStorageTestAccount.createMock();
      Configuration conf=testAccount.getFileSystem().getConf();
      String authority=testAccount.getFileSystem().getUri().getAuthority();
      URI defaultUri=new URI(defaultScheme,authority,null,null,null);
      conf.set(FS_DEFAULT_NAME_KEY,defaultUri.toString());
      conf.addResource("azure-test.xml");
      URI wantedUri=new URI(wantedScheme + ":///random/path");
      NativeAzureFileSystem obtained=(NativeAzureFileSystem)FileSystem.get(wantedUri,conf);
      assertNotNull(obtained);
      assertEquals(new URI(wantedScheme,authority,null,null,null),obtained.getUri());
      Path qualified=obtained.makeQualified(new Path(wantedUri));
      assertEquals(new URI(wantedScheme,authority,wantedUri.getPath(),null,null),qualified.toUri());
      testAccount.cleanup();
      FileSystem.closeAll();
    }
  }
  testAccount=AzureBlobStorageTestAccount.createMock();
  Configuration conf=testAccount.getFileSystem().getConf();
  conf.set(FS_DEFAULT_NAME_KEY,"file:///");
  try {
    FileSystem.get(new URI("wasb:///random/path"),conf);
    fail("Should've thrown.");
  }
 catch (  IllegalArgumentException e) {
  }
}
