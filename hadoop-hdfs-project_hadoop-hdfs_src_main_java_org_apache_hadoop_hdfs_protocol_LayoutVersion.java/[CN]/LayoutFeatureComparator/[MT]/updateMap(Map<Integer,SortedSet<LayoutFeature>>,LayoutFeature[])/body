{
  SortedSet<LayoutFeature> existingFeatures=new TreeSet<LayoutFeature>(new LayoutFeatureComparator());
  for (  SortedSet<LayoutFeature> s : map.values()) {
    existingFeatures.addAll(s);
  }
  LayoutFeature prevF=existingFeatures.isEmpty() ? null : existingFeatures.first();
  for (  LayoutFeature f : features) {
    final FeatureInfo info=f.getInfo();
    int minCompatLV=info.getMinimumCompatibleLayoutVersion();
    if (prevF != null && minCompatLV > prevF.getInfo().getMinimumCompatibleLayoutVersion()) {
      throw new AssertionError(String.format("Features must be listed in order of minimum compatible layout " + "version.  Check features %s and %s.",prevF,f));
    }
    prevF=f;
    SortedSet<LayoutFeature> ancestorSet=map.get(info.getAncestorLayoutVersion());
    if (ancestorSet == null) {
      ancestorSet=new TreeSet<LayoutFeature>(new LayoutFeatureComparator());
      map.put(info.getAncestorLayoutVersion(),ancestorSet);
    }
    SortedSet<LayoutFeature> featureSet=new TreeSet<LayoutFeature>(ancestorSet);
    if (info.getSpecialFeatures() != null) {
      for (      LayoutFeature specialFeature : info.getSpecialFeatures()) {
        featureSet.add(specialFeature);
      }
    }
    featureSet.add(f);
    map.put(info.getLayoutVersion(),featureSet);
  }
}
