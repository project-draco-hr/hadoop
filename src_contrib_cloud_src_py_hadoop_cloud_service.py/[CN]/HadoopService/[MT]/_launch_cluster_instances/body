def _launch_cluster_instances(self, instance_templates):
    singleton_hosts = []
    for instance_template in instance_templates:
        instance_template.add_env_strings(singleton_hosts)
        instances = self._launch_instances(instance_template)
        if (instance_template.number == 1):
            if (len(instances) != 1):
                logger.error("Expected a single '%s' instance, but found %s.", ''.join(instance_template.roles), len(instances))
                return
            else:
                for role in instance_template.roles:
                    singleton_host_env = ('%s_HOST=%s' % (self._sanitize_role_name(role), instances[0].public_ip))
                    singleton_hosts.append(singleton_host_env)
