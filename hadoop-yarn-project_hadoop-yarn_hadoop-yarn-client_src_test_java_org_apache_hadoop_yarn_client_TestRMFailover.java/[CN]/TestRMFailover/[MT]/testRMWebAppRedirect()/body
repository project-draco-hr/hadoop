{
  cluster=new MiniYARNCluster(TestRMFailover.class.getName(),2,0,1,1);
  conf.setBoolean(YarnConfiguration.AUTO_FAILOVER_ENABLED,false);
  cluster.init(conf);
  cluster.start();
  getAdminService(0).transitionToActive(req);
  String rm1Url="http://0.0.0.0:18088";
  String rm2Url="http://0.0.0.0:28088";
  String redirectURL=getRedirectURL(rm2Url);
  assertEquals(redirectURL,rm1Url + "/");
  redirectURL=getRedirectURL(rm2Url + "/metrics");
  assertEquals(redirectURL,rm1Url + "/metrics");
  redirectURL=getRedirectURL(rm2Url + "/jmx");
  assertEquals(redirectURL,rm1Url + "/jmx");
  redirectURL=getRedirectURL(rm2Url + "/cluster/cluster");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/conf");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/stacks");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/logLevel");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/static");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/logs");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/ws/v1/cluster/info");
  assertNull(redirectURL);
  redirectURL=getRedirectURL(rm2Url + "/ws/v1/cluster/apps");
  assertEquals(redirectURL,rm1Url + "/ws/v1/cluster/apps");
  redirectURL=getRedirectURL(rm2Url + "/proxy/" + fakeAppId);
  assertNull(redirectURL);
  getAdminService(0).transitionToStandby(req);
  redirectURL=getRefreshURL(rm2Url);
  assertTrue(redirectURL != null && redirectURL.contains(YarnWebParams.NEXT_REFRESH_INTERVAL) && redirectURL.contains(rm2Url));
}
