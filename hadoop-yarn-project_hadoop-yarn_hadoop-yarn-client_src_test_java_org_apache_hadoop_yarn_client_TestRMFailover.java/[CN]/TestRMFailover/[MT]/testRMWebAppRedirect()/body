{
  cluster=new MiniYARNCluster(TestRMFailover.class.getName(),2,0,1,1);
  conf.setBoolean(YarnConfiguration.AUTO_FAILOVER_ENABLED,false);
  cluster.init(conf);
  cluster.start();
  getAdminService(0).transitionToActive(req);
  String rm1Url="http://0.0.0.0:18088";
  String rm2Url="http://0.0.0.0:28088";
  String header=getHeader("Refresh",rm2Url);
  assertTrue(header.contains("; url=" + rm1Url));
  header=getHeader("Refresh",rm2Url + "/metrics");
  assertTrue(header.contains("; url=" + rm1Url));
  header=getHeader("Refresh",rm2Url + "/jmx");
  assertTrue(header.contains("; url=" + rm1Url));
  header=getHeader("Refresh",rm2Url + "/cluster/cluster");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/conf");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/stacks");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/logLevel");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/static");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/logs");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/ws/v1/cluster/info");
  assertEquals(null,header);
  header=getHeader("Refresh",rm2Url + "/ws/v1/cluster/apps");
  assertTrue(header.contains("; url=" + rm1Url));
}
