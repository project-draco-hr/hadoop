{
  final long writeLockReportingThreshold=100L;
  final long writeLockSuppressWarningInterval=10000L;
  Configuration conf=new Configuration();
  conf.setLong(DFSConfigKeys.DFS_NAMENODE_WRITE_LOCK_REPORTING_THRESHOLD_MS_KEY,writeLockReportingThreshold);
  conf.setTimeDuration(DFSConfigKeys.DFS_LOCK_SUPPRESS_WARNING_INTERVAL_KEY,writeLockSuppressWarningInterval,TimeUnit.MILLISECONDS);
  final FakeTimer timer=new FakeTimer();
  final FSNamesystemLock fsnLock=new FSNamesystemLock(conf,timer);
  timer.advance(writeLockSuppressWarningInterval);
  LogCapturer logs=LogCapturer.captureLogs(FSNamesystem.LOG);
  GenericTestUtils.setLogLevel(FSNamesystem.LOG,Level.INFO);
  fsnLock.writeLock();
  fsnLock.writeUnlock();
  assertFalse(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  fsnLock.writeLock();
  timer.advance(writeLockReportingThreshold + 10);
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertTrue(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  fsnLock.writeLockInterruptibly();
  timer.advance(writeLockReportingThreshold + 10);
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertFalse(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  fsnLock.writeLock();
  timer.advance(writeLockReportingThreshold / 2 + 1);
  fsnLock.writeLockInterruptibly();
  timer.advance(writeLockReportingThreshold / 2 + 1);
  fsnLock.writeLock();
  timer.advance(writeLockReportingThreshold / 2);
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertFalse(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertFalse(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertFalse(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  timer.advance(writeLockSuppressWarningInterval);
  fsnLock.writeLock();
  timer.advance(writeLockReportingThreshold + 100);
  logs.clearOutput();
  fsnLock.writeUnlock();
  assertTrue(logs.getOutput().contains(GenericTestUtils.getMethodName()));
  assertTrue(logs.getOutput().contains("Number of suppressed write-lock reports: 2"));
}
