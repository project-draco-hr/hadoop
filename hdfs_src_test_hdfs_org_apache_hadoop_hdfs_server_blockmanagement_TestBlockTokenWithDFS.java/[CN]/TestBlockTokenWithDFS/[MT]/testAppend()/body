{
  MiniDFSCluster cluster=null;
  int numDataNodes=2;
  Configuration conf=getConf(numDataNodes);
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build();
    cluster.waitActive();
    assertEquals(numDataNodes,cluster.getDataNodes().size());
    final NameNode nn=cluster.getNameNode();
    final BlockManager bm=nn.getNamesystem().getBlockManager();
    final BlockTokenSecretManager sm=bm.getBlockTokenSecretManager();
    SecurityTestUtil.setBlockTokenLifetime(sm,1000L);
    Path fileToAppend=new Path(FILE_TO_APPEND);
    FileSystem fs=cluster.getFileSystem();
    FSDataOutputStream stm=writeFile(fs,fileToAppend,(short)numDataNodes,BLOCK_SIZE);
    stm.write(rawData,0,1);
    stm.close();
    stm=fs.append(fileToAppend);
    int mid=rawData.length - 1;
    stm.write(rawData,1,mid - 1);
    stm.hflush();
    Token<BlockTokenIdentifier> token=DFSTestUtil.getBlockToken(stm);
    while (!SecurityTestUtil.isBlockTokenExpired(token)) {
      try {
        Thread.sleep(10);
      }
 catch (      InterruptedException ignored) {
      }
    }
    cluster.stopDataNode(0);
    stm.write(rawData,mid,rawData.length - mid);
    stm.close();
    FSDataInputStream in5=fs.open(fileToAppend);
    assertTrue(checkFile1(in5));
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
