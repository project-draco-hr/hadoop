{
  File fsImg1=new File(path1,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.IMAGE.getName());
  File fsImg2=new File(path2,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.IMAGE.getName());
  File fsImg3=new File(path3,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.IMAGE.getName());
  File fsEdits1=new File(path1,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.EDITS.getName());
  File fsEdits2=new File(path2,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.EDITS.getName());
  File fsEdits3=new File(path3,Storage.STORAGE_DIR_CURRENT + "/" + NameNodeFile.EDITS.getName());
  long chkPt1=readCheckpointTime(new File(path1,Storage.STORAGE_DIR_CURRENT));
  long chkPt2=readCheckpointTime(new File(path2,Storage.STORAGE_DIR_CURRENT));
  long chkPt3=readCheckpointTime(new File(path3,Storage.STORAGE_DIR_CURRENT));
  String md5_1=null, md5_2=null, md5_3=null;
  try {
    md5_1=getFileMD5(fsEdits1);
    md5_2=getFileMD5(fsEdits2);
    md5_3=getFileMD5(fsEdits3);
  }
 catch (  Exception e) {
    System.err.println("md 5 calculation failed:" + e.getLocalizedMessage());
  }
  this.printStorages(cluster.getNameNode().getFSImage());
  LOG.info("++++ image files = " + fsImg1.getAbsolutePath() + ","+ fsImg2.getAbsolutePath()+ ","+ fsImg3.getAbsolutePath());
  LOG.info("++++ edits files = " + fsEdits1.getAbsolutePath() + ","+ fsEdits2.getAbsolutePath()+ ","+ fsEdits3.getAbsolutePath());
  LOG.info("checkFiles compares lengths: img1=" + fsImg1.length() + ",img2="+ fsImg2.length()+ ",img3="+ fsImg3.length());
  LOG.info("checkFiles compares lengths: edits1=" + fsEdits1.length() + ",edits2="+ fsEdits2.length()+ ",edits3="+ fsEdits3.length());
  LOG.info("checkFiles compares chkPts: name1=" + chkPt1 + ",name2="+ chkPt2+ ",name3="+ chkPt3);
  LOG.info("checkFiles compares md5s: " + fsEdits1.getAbsolutePath() + "="+ md5_1+ ","+ fsEdits2.getAbsolutePath()+ "="+ md5_2+ ","+ fsEdits3.getAbsolutePath()+ "="+ md5_3);
  if (valid) {
    assertTrue(fsImg1.length() == fsImg2.length());
    assertTrue(0 == fsImg3.length());
    assertTrue(fsEdits1.length() == fsEdits2.length());
    assertTrue(fsEdits1.length() == fsEdits3.length());
    assertTrue(md5_1.equals(md5_2));
    assertTrue(md5_1.equals(md5_3));
    assertTrue(chkPt1 == chkPt2);
    assertTrue(chkPt1 == chkPt3);
  }
 else {
    assertTrue("edits1 = edits2",fsEdits1.length() != fsEdits2.length());
    assertTrue("edits1 = edits3",fsEdits1.length() != fsEdits3.length());
    assertTrue(!md5_1.equals(md5_2));
    assertTrue(!md5_1.equals(md5_3));
    assertTrue(chkPt1 > chkPt2);
    assertTrue(chkPt1 > chkPt3);
  }
}
