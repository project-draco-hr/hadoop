{
  final Configuration conf=new HdfsConfiguration();
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(REPLICATION_FACTOR).build();
  try {
    final FSNamesystem namesystem=cluster.getNamesystem();
    final FileSystem fs=cluster.getFileSystem();
    final Path FILE_PATH=new Path("/testfile");
    DFSTestUtil.createFile(fs,FILE_PATH,1L,REPLICATION_FACTOR,1L);
    DFSTestUtil.waitReplication(fs,FILE_PATH,REPLICATION_FACTOR);
    ExtendedBlock block=DFSTestUtil.getFirstBlock(fs,FILE_PATH);
    DatanodeDescriptor[] datanodes=namesystem.heartbeats.toArray(new DatanodeDescriptor[REPLICATION_FACTOR]);
    cluster.startDataNodes(conf,2,true,null,null);
    cluster.waitActive();
    DatanodeDescriptor datanode=datanodes[0];
    DataNodeProperties dnprop=cluster.stopDataNode(datanode.getName());
    try {
      namesystem.writeLock();
synchronized (namesystem.heartbeats) {
        datanode.setLastUpdate(0);
        namesystem.heartbeatCheck();
      }
    }
  finally {
      namesystem.writeUnlock();
    }
    DFSTestUtil.waitReplication(fs,FILE_PATH,REPLICATION_FACTOR);
    cluster.restartDataNode(dnprop);
    cluster.waitActive();
    initializeTimeout(TIMEOUT);
    while (countNodes(block.getLocalBlock(),namesystem).excessReplicas() == 0) {
      checkTimeout("excess replicas not detected");
    }
    Iterator<DatanodeDescriptor> iter=namesystem.getBlockManager().blocksMap.nodeIterator(block.getLocalBlock());
    DatanodeDescriptor nonExcessDN=null;
    while (iter.hasNext()) {
      DatanodeDescriptor dn=iter.next();
      Collection<Block> blocks=namesystem.getBlockManager().excessReplicateMap.get(dn.getStorageID());
      if (blocks == null || !blocks.contains(block)) {
        nonExcessDN=dn;
        break;
      }
    }
    assertTrue(nonExcessDN != null);
    dnprop=cluster.stopDataNode(nonExcessDN.getName());
    try {
      namesystem.writeLock();
synchronized (namesystem.heartbeats) {
        nonExcessDN.setLastUpdate(0);
        namesystem.heartbeatCheck();
      }
    }
  finally {
      namesystem.writeUnlock();
    }
    initializeTimeout(TIMEOUT);
    while (countNodes(block.getLocalBlock(),namesystem).liveReplicas() != REPLICATION_FACTOR) {
      checkTimeout("live replica count not correct",1000);
    }
    cluster.restartDataNode(dnprop);
    cluster.waitActive();
    initializeTimeout(TIMEOUT);
    while (countNodes(block.getLocalBlock(),namesystem).excessReplicas() != 2) {
      checkTimeout("excess replica count not equal to 2");
    }
  }
  finally {
    cluster.shutdown();
  }
}
