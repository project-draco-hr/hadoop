{
  String dataDir=getTestingDir();
  hdfsDir=new File(dataDir,"backupNode");
  if (hdfsDir.exists() && !FileUtil.fullyDelete(hdfsDir)) {
    throw new IOException("Could not delete hdfs directory '" + hdfsDir + "'");
  }
  File currDir=new File(hdfsDir,"name2");
  File currDir2=new File(currDir,"current");
  File currDir3=new File(currDir,"image");
  assertTrue(currDir.mkdirs());
  assertTrue(currDir2.mkdirs());
  assertTrue(currDir3.mkdirs());
  conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,fileAsURI(new File(hdfsDir,"name2")).toString());
  conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,"${" + DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY + "}");
  String[] args=new String[]{StartupOption.BACKUP.getName()};
  BackupNode bu=(BackupNode)NameNode.createNameNode(args,conf);
  return bu;
}
