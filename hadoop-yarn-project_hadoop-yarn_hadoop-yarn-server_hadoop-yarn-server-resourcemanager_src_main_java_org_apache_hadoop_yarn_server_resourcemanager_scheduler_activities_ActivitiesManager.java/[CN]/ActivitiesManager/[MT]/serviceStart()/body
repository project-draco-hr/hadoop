{
  cleanUpThread=new Thread(new Runnable(){
    @Override public void run(){
      while (true) {
        Iterator<Map.Entry<NodeId,List<NodeAllocation>>> ite=completedNodeAllocations.entrySet().iterator();
        while (ite.hasNext()) {
          Map.Entry<NodeId,List<NodeAllocation>> nodeAllocation=ite.next();
          List<NodeAllocation> allocations=nodeAllocation.getValue();
          long currTS=SystemClock.getInstance().getTime();
          if (allocations.size() > 0 && allocations.get(0).getTimeStamp() - currTS > timeThreshold) {
            ite.remove();
          }
        }
        Iterator<Map.Entry<ApplicationId,List<AppAllocation>>> iteApp=completedAppAllocations.entrySet().iterator();
        while (iteApp.hasNext()) {
          Map.Entry<ApplicationId,List<AppAllocation>> appAllocation=iteApp.next();
          if (rmContext.getRMApps().get(appAllocation.getKey()).getFinalApplicationStatus() != FinalApplicationStatus.UNDEFINED) {
            iteApp.remove();
          }
        }
        try {
          Thread.sleep(5000);
        }
 catch (        Exception e) {
        }
      }
    }
  }
);
  cleanUpThread.start();
  super.serviceStart();
}
