{
  JournalManager bestjm=null;
  long bestjmNumTxns=0;
  CorruptionException corruption=null;
  for (  JournalAndStream jas : journals) {
    JournalManager candidate=jas.getManager();
    long candidateNumTxns=0;
    try {
      candidateNumTxns=candidate.getNumberOfTransactions(fromTxId);
    }
 catch (    CorruptionException ce) {
      corruption=ce;
    }
catch (    IOException ioe) {
      LOG.warn("Error reading number of transactions from " + candidate);
      continue;
    }
    if (candidateNumTxns > bestjmNumTxns) {
      bestjm=candidate;
      bestjmNumTxns=candidateNumTxns;
    }
  }
  if (bestjm == null) {
    if (corruption != null) {
      throw new IOException("Gap exists in logs from " + fromTxId,corruption);
    }
 else {
      return null;
    }
  }
  return bestjm.getInputStream(fromTxId);
}
