{
  YarnScheduler scheduler=rm.getRMContext().getScheduler();
  if (scheduler instanceof AbstractYarnScheduler) {
    AbstractYarnScheduler abstractYarnScheduler=(AbstractYarnScheduler)scheduler;
    ActivitiesManager activitiesManager=abstractYarnScheduler.getActivitiesManager();
    if (null == activitiesManager) {
      String errMessage="Not Capacity Scheduler";
      return new AppActivitiesInfo(errMessage,appId);
    }
    if (appId == null) {
      String errMessage="Must provide an application Id";
      return new AppActivitiesInfo(errMessage,null);
    }
    double maxTime=3.0;
    if (time != null) {
      if (time.contains(".")) {
        maxTime=Double.parseDouble(time);
      }
 else {
        maxTime=Double.parseDouble(time + ".0");
      }
    }
    ApplicationId applicationId;
    try {
      applicationId=ApplicationId.fromString(appId);
      activitiesManager.turnOnAppActivitiesRecording(applicationId,maxTime);
      AppActivitiesInfo appActivitiesInfo=activitiesManager.getAppActivitiesInfo(applicationId);
      return appActivitiesInfo;
    }
 catch (    Exception e) {
      String errMessage="Cannot find application with given appId";
      return new AppActivitiesInfo(errMessage,appId);
    }
  }
  return null;
}
