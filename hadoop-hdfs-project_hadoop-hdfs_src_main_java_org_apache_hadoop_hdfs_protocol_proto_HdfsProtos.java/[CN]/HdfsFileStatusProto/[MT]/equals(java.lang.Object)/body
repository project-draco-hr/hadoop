{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.HdfsFileStatusProto)) {
    return super.equals(obj);
  }
  org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.HdfsFileStatusProto other=(org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.HdfsFileStatusProto)obj;
  boolean result=true;
  result=result && (hasFileType() == other.hasFileType());
  if (hasFileType()) {
    result=result && (getFileType() == other.getFileType());
  }
  result=result && (hasPath() == other.hasPath());
  if (hasPath()) {
    result=result && getPath().equals(other.getPath());
  }
  result=result && (hasLength() == other.hasLength());
  if (hasLength()) {
    result=result && (getLength() == other.getLength());
  }
  result=result && (hasPermission() == other.hasPermission());
  if (hasPermission()) {
    result=result && getPermission().equals(other.getPermission());
  }
  result=result && (hasOwner() == other.hasOwner());
  if (hasOwner()) {
    result=result && getOwner().equals(other.getOwner());
  }
  result=result && (hasGroup() == other.hasGroup());
  if (hasGroup()) {
    result=result && getGroup().equals(other.getGroup());
  }
  result=result && (hasModificationTime() == other.hasModificationTime());
  if (hasModificationTime()) {
    result=result && (getModificationTime() == other.getModificationTime());
  }
  result=result && (hasAccessTime() == other.hasAccessTime());
  if (hasAccessTime()) {
    result=result && (getAccessTime() == other.getAccessTime());
  }
  result=result && (hasSymlink() == other.hasSymlink());
  if (hasSymlink()) {
    result=result && getSymlink().equals(other.getSymlink());
  }
  result=result && (hasBlockReplication() == other.hasBlockReplication());
  if (hasBlockReplication()) {
    result=result && (getBlockReplication() == other.getBlockReplication());
  }
  result=result && (hasBlocksize() == other.hasBlocksize());
  if (hasBlocksize()) {
    result=result && (getBlocksize() == other.getBlocksize());
  }
  result=result && (hasLocations() == other.hasLocations());
  if (hasLocations()) {
    result=result && getLocations().equals(other.getLocations());
  }
  result=result && getUnknownFields().equals(other.getUnknownFields());
  return result;
}
