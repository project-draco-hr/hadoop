{
  maybeInitBuilder();
  builder.clearNodeToLabels();
  if (nodeIdToLabels == null) {
    return;
  }
  Iterable<NodeIdToLabelsProto> iterable=new Iterable<NodeIdToLabelsProto>(){
    @Override public Iterator<NodeIdToLabelsProto> iterator(){
      return new Iterator<NodeIdToLabelsProto>(){
        Iterator<Entry<NodeId,Set<String>>> iter=nodeIdToLabels.entrySet().iterator();
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
        @Override public NodeIdToLabelsProto next(){
          Entry<NodeId,Set<String>> now=iter.next();
          return NodeIdToLabelsProto.newBuilder().setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels().addAllNodeLabels(now.getValue()).build();
        }
        @Override public boolean hasNext(){
          return iter.hasNext();
        }
      }
;
    }
  }
;
  builder.addAllNodeToLabels(iterable);
}
