{
  ApplicationId applicationId=appContext.getApplicationId();
  appContext.setApplicationId(applicationId);
  SubmitApplicationRequest request=Records.newRecord(SubmitApplicationRequest.class);
  request.setApplicationSubmissionContext(appContext);
  rmClient.submitApplication(request);
  int pollCount=0;
  long startTime=System.currentTimeMillis();
  while (true) {
    YarnApplicationState state=getApplicationReport(applicationId).getYarnApplicationState();
    if (!state.equals(YarnApplicationState.NEW) && !state.equals(YarnApplicationState.NEW_SAVING)) {
      LOG.info("Submitted application " + applicationId);
      break;
    }
    long elapsedMillis=System.currentTimeMillis() - startTime;
    if (enforceAsyncAPITimeout() && elapsedMillis >= asyncApiPollTimeoutMillis) {
      throw new YarnException("Timed out while waiting for application " + applicationId + " to be submitted successfully");
    }
    if (++pollCount % 10 == 0) {
      LOG.info("Application submission is not finished, " + "submitted application " + applicationId + " is still in "+ state);
    }
    try {
      Thread.sleep(submitPollIntervalMillis);
    }
 catch (    InterruptedException ie) {
      LOG.error("Interrupted while waiting for application " + applicationId + " to be successfully submitted.");
    }
  }
  return applicationId;
}
