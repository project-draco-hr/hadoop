{
  ProtoSpecificRequestWritable request=(ProtoSpecificRequestWritable)writableRequest;
  ProtoSpecificRpcRequest rpcRequest=request.message;
  String methodName=rpcRequest.getMethodName();
  System.out.println("Call: protocol=" + protocol.getCanonicalName() + ", method="+ methodName);
  if (verbose)   log("Call: protocol=" + protocol.getCanonicalName() + ", method="+ methodName);
  MethodDescriptor methodDescriptor=service.getDescriptorForType().findMethodByName(methodName);
  Message prototype=service.getRequestPrototype(methodDescriptor);
  Message param=prototype.newBuilderForType().mergeFrom(rpcRequest.getRequestProto()).build();
  Message result;
  try {
    result=service.callBlockingMethod(methodDescriptor,null,param);
  }
 catch (  ServiceException e) {
    e.printStackTrace();
    return handleException(e);
  }
catch (  Exception e) {
    return handleException(e);
  }
  ProtoSpecificRpcResponse response=constructProtoSpecificRpcSuccessResponse(result);
  return new ProtoSpecificResponseWritable(response);
}
