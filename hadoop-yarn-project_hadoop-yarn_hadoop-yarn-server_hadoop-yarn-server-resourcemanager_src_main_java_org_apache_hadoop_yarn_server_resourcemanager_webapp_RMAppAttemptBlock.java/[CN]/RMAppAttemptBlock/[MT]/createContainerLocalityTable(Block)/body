{
  RMAppAttemptMetrics attemptMetrics=null;
  RMAppAttempt attempt=getRMAppAttempt();
  if (attempt != null) {
    attemptMetrics=attempt.getRMAppAttemptMetrics();
  }
  if (attemptMetrics == null) {
    return;
  }
  DIV<Hamlet> div=html.div(_INFO_WRAP);
  TABLE<DIV<Hamlet>> table=div.h3("Total Allocated Containers: " + attemptMetrics.getTotalAllocatedContainers()).h3("Each table cell" + " represents the number of NodeLocal/RackLocal/OffSwitch containers" + " satisfied by NodeLocal/RackLocal/OffSwitch resource requests.").table("#containerLocality");
  table.tr().th(_TH,"").th(_TH,"Node Local Request").th(_TH,"Rack Local Request").th(_TH,"Off Switch Request")._();
  String[] containersType={"Num Node Local Containers (satisfied by)","Num Rack Local Containers (satisfied by)","Num Off Switch Containers (satisfied by)"};
  boolean odd=false;
  for (int i=0; i < attemptMetrics.getLocalityStatistics().length; i++) {
    table.tr((odd=!odd) ? _ODD : _EVEN).td(containersType[i]).td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0])).td(i == 0 ? "" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1])).td(i <= 1 ? "" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();
  }
  table._();
  div._();
}
