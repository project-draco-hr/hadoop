{
  List<QueuePlacementRule> rules=new ArrayList<QueuePlacementRule>();
  NodeList elements=el.getChildNodes();
  for (int i=0; i < elements.getLength(); i++) {
    Node node=elements.item(i);
    if (node instanceof Element) {
      Element element=(Element)node;
      String ruleName=element.getAttribute("name");
      if ("".equals(ruleName)) {
        throw new AllocationConfigurationException("No name provided for a " + "rule element");
      }
      Class<? extends QueuePlacementRule> clazz=ruleClasses.get(ruleName);
      if (clazz == null) {
        throw new AllocationConfigurationException("No rule class found for " + ruleName);
      }
      QueuePlacementRule rule=ReflectionUtils.newInstance(clazz,null);
      rule.initializeFromXml(element);
      rules.add(rule);
    }
  }
  return new QueuePlacementPolicy(rules,configuredQueues,conf);
}
