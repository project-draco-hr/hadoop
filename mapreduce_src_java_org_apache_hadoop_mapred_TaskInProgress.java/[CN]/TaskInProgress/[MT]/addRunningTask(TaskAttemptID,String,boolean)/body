{
  int numSlotsNeeded=taskCleanup ? 1 : numSlotsRequired;
  Task t=null;
  if (isMapTask()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("attempt " + numTaskFailures + " sending skippedRecords "+ failedRanges.getIndicesCount());
    }
    t=new MapTask(jobFile,taskid,partition,splitInfo.getSplitIndex(),numSlotsNeeded);
  }
 else {
    t=new ReduceTask(jobFile,taskid,partition,numMaps,numSlotsNeeded);
  }
  if (jobCleanup) {
    t.setJobCleanupTask();
  }
  if (jobSetup) {
    t.setJobSetupTask();
  }
  if (taskCleanup) {
    t.setTaskCleanupTask();
    t.setState(taskStatuses.get(taskid).getRunState());
    cleanupTasks.put(taskid,taskTracker);
  }
  t.setConf(conf);
  t.setUser(getUser());
  if (LOG.isDebugEnabled()) {
    LOG.debug("Launching task with skipRanges:" + failedRanges.getSkipRanges());
  }
  t.setSkipRanges(failedRanges.getSkipRanges());
  t.setSkipping(skipping);
  if (failedRanges.isTestAttempt()) {
    t.setWriteSkipRecs(false);
  }
  activeTasks.put(taskid,taskTracker);
  tasks.add(taskid);
  jobtracker.createTaskEntry(taskid,taskTracker,this);
  if (firstTaskId == null) {
    firstTaskId=taskid;
  }
  return t;
}
