{
  Sender.opReadBlock(new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(sock,HdfsConstants.WRITE_TIMEOUT))),block,startOffset,len,clientName,blockToken);
  DataInputStream in=new DataInputStream(new BufferedInputStream(NetUtils.getInputStream(sock),bufferSize));
  BlockOpResponseProto status=BlockOpResponseProto.parseFrom(vintPrefixed(in));
  if (status.getStatus() != Status.SUCCESS) {
    if (status.getStatus() == Status.ERROR_ACCESS_TOKEN) {
      throw new InvalidBlockTokenException("Got access token error for OP_READ_BLOCK, self=" + sock.getLocalSocketAddress() + ", remote="+ sock.getRemoteSocketAddress()+ ", for file "+ file+ ", for pool "+ block.getBlockPoolId()+ " block "+ block.getBlockId()+ "_"+ block.getGenerationStamp());
    }
 else {
      throw new IOException("Got error for OP_READ_BLOCK, self=" + sock.getLocalSocketAddress() + ", remote="+ sock.getRemoteSocketAddress()+ ", for file "+ file+ ", for pool "+ block.getBlockPoolId()+ " block "+ block.getBlockId()+ "_"+ block.getGenerationStamp());
    }
  }
  DataChecksum checksum=DataChecksum.newDataChecksum(in);
  long firstChunkOffset=in.readLong();
  if (firstChunkOffset < 0 || firstChunkOffset > startOffset || firstChunkOffset >= (startOffset + checksum.getBytesPerChecksum())) {
    throw new IOException("BlockReader: error in first chunk offset (" + firstChunkOffset + ") startOffset is "+ startOffset+ " for file "+ file);
  }
  return new BlockReader(file,block.getBlockPoolId(),block.getBlockId(),in,checksum,verifyChecksum,startOffset,firstChunkOffset,len,sock);
}
