{
  if (files == null)   return null;
  String[] fileArr=files.split(",");
  String[] finalArr=new String[fileArr.length];
  for (int i=0; i < fileArr.length; i++) {
    String tmp=fileArr[i];
    String finalPath;
    URI pathURI;
    try {
      pathURI=new URI(tmp);
    }
 catch (    URISyntaxException e) {
      throw new IllegalArgumentException(e);
    }
    Path path=new Path(pathURI);
    FileSystem localFs=FileSystem.getLocal(conf);
    if (pathURI.getScheme() == null) {
      if (!localFs.exists(path)) {
        throw new FileNotFoundException("File " + tmp + " does not exist.");
      }
      finalPath=path.makeQualified(localFs.getUri(),localFs.getWorkingDirectory()).toString();
    }
 else {
      FileSystem fs=path.getFileSystem(conf);
      if (!fs.exists(path)) {
        throw new FileNotFoundException("File " + tmp + " does not exist.");
      }
      finalPath=path.makeQualified(fs.getUri(),fs.getWorkingDirectory()).toString();
    }
    finalArr[i]=finalPath;
  }
  return StringUtils.arrayToString(finalArr);
}
