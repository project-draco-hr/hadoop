{
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.hdfsBytesRead=val;
    }
  }
,counters,"HDFS_BYTES_READ");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.hdfsBytesWritten=val;
    }
  }
,counters,"HDFS_BYTES_WRITTEN");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.fileBytesRead=val;
    }
  }
,counters,"FILE_BYTES_READ");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.fileBytesWritten=val;
    }
  }
,counters,"FILE_BYTES_WRITTEN");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.mapInputBytes=val;
    }
  }
,counters,"MAP_INPUT_BYTES");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.mapInputRecords=val;
    }
  }
,counters,"MAP_INPUT_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.mapOutputBytes=val;
    }
  }
,counters,"MAP_OUTPUT_BYTES");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.mapOutputRecords=val;
    }
  }
,counters,"MAP_OUTPUT_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.combineInputRecords=val;
    }
  }
,counters,"COMBINE_INPUT_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.reduceInputGroups=val;
    }
  }
,counters,"REDUCE_INPUT_GROUPS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.reduceInputRecords=val;
    }
  }
,counters,"REDUCE_INPUT_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.reduceShuffleBytes=val;
    }
  }
,counters,"REDUCE_SHUFFLE_BYTES");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.reduceOutputRecords=val;
    }
  }
,counters,"REDUCE_OUTPUT_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      attempt.spilledRecords=val;
    }
  }
,counters,"SPILLED_RECORDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      metrics.setCumulativeCpuUsage(val);
    }
  }
,counters,"CPU_MILLISECONDS");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      metrics.setVirtualMemoryUsage(val);
    }
  }
,counters,"VIRTUAL_MEMORY_BYTES");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      metrics.setPhysicalMemoryUsage(val);
    }
  }
,counters,"PHYSICAL_MEMORY_BYTES");
  incorporateCounter(new SetField(this){
    @Override void set(    long val){
      metrics.setHeapUsage(val);
    }
  }
,counters,"COMMITTED_HEAP_BYTES");
}
