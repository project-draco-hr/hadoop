{
  JobID jobId=JobID.forName(jobIdStr);
  Cluster mockCluster=mock(Cluster.class);
  Job job=mock(Job.class);
  CLI cli=spy(new CLI());
  doReturn(mockCluster).when(cli).createCluster();
  when(mockCluster.getJob(jobId)).thenReturn(job);
  int retCode_JOB_SETUP=cli.run(new String[]{"-list-attempt-ids",jobIdStr,"JOB_SETUP","running"});
  int retCode_JOB_CLEANUP=cli.run(new String[]{"-list-attempt-ids",jobIdStr,"JOB_CLEANUP","running"});
  int retCode_invalidTaskState=cli.run(new String[]{"-list-attempt-ids",jobIdStr,"REDUCE","complete"});
  assertEquals("JOB_SETUP is an invalid input,exit code should be -1",-1,retCode_JOB_SETUP);
  assertEquals("JOB_CLEANUP is an invalid input,exit code should be -1",-1,retCode_JOB_CLEANUP);
  assertEquals("complete is an invalid input,exit code should be -1",-1,retCode_invalidTaskState);
}
