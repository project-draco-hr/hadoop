{
  Map<String,Object> json=new HashMap<String,Object>();
  json.put(HttpExceptionUtils.ERROR_EXCEPTION_JSON,IllegalStateException.class.getSimpleName());
  json.put(HttpExceptionUtils.ERROR_CLASSNAME_JSON,IllegalStateException.class.getName());
  json.put(HttpExceptionUtils.ERROR_MESSAGE_JSON,"EX");
  Map<String,Object> response=new HashMap<String,Object>();
  response.put(HttpExceptionUtils.ERROR_JSON,json);
  ObjectMapper jsonMapper=new ObjectMapper();
  String msg=jsonMapper.writeValueAsString(response);
  InputStream is=new ByteArrayInputStream(msg.getBytes());
  HttpURLConnection conn=Mockito.mock(HttpURLConnection.class);
  Mockito.when(conn.getErrorStream()).thenReturn(is);
  Mockito.when(conn.getResponseMessage()).thenReturn("msg");
  Mockito.when(conn.getResponseCode()).thenReturn(HttpURLConnection.HTTP_BAD_REQUEST);
  try {
    HttpExceptionUtils.validateResponse(conn,HttpURLConnection.HTTP_CREATED);
    Assert.fail();
  }
 catch (  IllegalStateException ex) {
    Assert.assertEquals("EX",ex.getMessage());
  }
}
