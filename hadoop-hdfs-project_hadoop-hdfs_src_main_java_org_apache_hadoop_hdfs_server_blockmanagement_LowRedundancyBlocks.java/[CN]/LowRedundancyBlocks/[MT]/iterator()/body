{
  final Iterator<LightWeightLinkedSet<BlockInfo>> q=priorityQueues.iterator();
  return new Iterator<BlockInfo>(){
    private Iterator<BlockInfo> b=q.next().iterator();
    @Override public BlockInfo next(){
      hasNext();
      return b.next();
    }
    @Override public boolean hasNext(){
      for (; !b.hasNext() && q.hasNext(); ) {
        b=q.next().iterator();
      }
      return b.hasNext();
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
