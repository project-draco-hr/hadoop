{
  this.recordFactory=RecordFactoryProvider.getRecordFactory(conf);
  try {
    FileContext lfs=getLocalFileContext(conf);
    lfs.setUMask(new FsPermission((short)FsPermission.DEFAULT_UMASK));
    List<String> localDirs=dirsHandler.getLocalDirs();
    for (    String localDir : localDirs) {
      Path userDir=new Path(localDir,ContainerLocalizer.USERCACHE);
      lfs.mkdir(userDir,null,true);
      Path fileDir=new Path(localDir,ContainerLocalizer.FILECACHE);
      lfs.mkdir(fileDir,null,true);
      Path sysDir=new Path(localDir,NM_PRIVATE_DIR);
      lfs.mkdir(sysDir,NM_PRIVATE_PERM,true);
    }
    List<String> logDirs=dirsHandler.getLogDirs();
    for (    String logDir : logDirs) {
      lfs.mkdir(new Path(logDir),null,true);
    }
  }
 catch (  IOException e) {
    throw new YarnException("Failed to initialize LocalizationService",e);
  }
  cacheTargetSize=conf.getLong(YarnConfiguration.NM_LOCALIZER_CACHE_TARGET_SIZE_MB,YarnConfiguration.DEFAULT_NM_LOCALIZER_CACHE_TARGET_SIZE_MB) << 20;
  cacheCleanupPeriod=conf.getLong(YarnConfiguration.NM_LOCALIZER_CACHE_CLEANUP_INTERVAL_MS,YarnConfiguration.DEFAULT_NM_LOCALIZER_CACHE_CLEANUP_INTERVAL_MS);
  localizationServerAddress=conf.getSocketAddr(YarnConfiguration.NM_LOCALIZER_ADDRESS,YarnConfiguration.DEFAULT_NM_LOCALIZER_ADDRESS,YarnConfiguration.DEFAULT_NM_LOCALIZER_PORT);
  localizerTracker=createLocalizerTracker(conf);
  addService(localizerTracker);
  dispatcher.register(LocalizerEventType.class,localizerTracker);
  super.init(conf);
}
