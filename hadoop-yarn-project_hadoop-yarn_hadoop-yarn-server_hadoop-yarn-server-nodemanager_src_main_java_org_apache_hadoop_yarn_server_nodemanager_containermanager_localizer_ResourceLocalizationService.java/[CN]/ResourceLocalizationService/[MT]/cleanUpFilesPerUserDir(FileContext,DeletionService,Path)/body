{
  RemoteIterator<FileStatus> userDirStatus=lfs.listStatus(userDirPath);
  FileDeletionTask dependentDeletionTask=del.createFileDeletionTask(null,userDirPath,new Path[]{});
  if (userDirStatus != null && userDirStatus.hasNext()) {
    List<FileDeletionTask> deletionTasks=new ArrayList<FileDeletionTask>();
    while (userDirStatus.hasNext()) {
      FileStatus status=userDirStatus.next();
      String owner=status.getOwner();
      FileDeletionTask deletionTask=del.createFileDeletionTask(owner,null,new Path[]{status.getPath()});
      deletionTask.addFileDeletionTaskDependency(dependentDeletionTask);
      deletionTasks.add(deletionTask);
    }
    for (    FileDeletionTask task : deletionTasks) {
      del.scheduleFileDeletionTask(task);
    }
  }
 else {
    del.scheduleFileDeletionTask(dependentDeletionTask);
  }
}
