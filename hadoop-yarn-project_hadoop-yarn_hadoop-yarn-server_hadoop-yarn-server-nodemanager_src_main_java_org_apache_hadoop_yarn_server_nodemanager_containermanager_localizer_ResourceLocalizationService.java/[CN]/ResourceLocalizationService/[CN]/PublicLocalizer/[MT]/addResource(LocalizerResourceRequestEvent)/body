{
  LocalizedResource rsrc=request.getResource();
  LocalResourceRequest key=rsrc.getRequest();
  LOG.info("Downloading public rsrc:" + key);
  if (rsrc.tryAcquire()) {
    if (rsrc.getState().equals(ResourceState.DOWNLOADING)) {
      LocalResource resource=request.getResource().getRequest();
      try {
        Path publicDirDestPath=dirsHandler.getLocalPathForWrite("." + Path.SEPARATOR + ContainerLocalizer.FILECACHE,ContainerLocalizer.getEstimatedSize(resource),true);
        Path hierarchicalPath=publicRsrc.getPathForLocalization(key,publicDirDestPath);
        if (!hierarchicalPath.equals(publicDirDestPath)) {
          publicDirDestPath=hierarchicalPath;
          DiskChecker.checkDir(new File(publicDirDestPath.toUri().getPath()));
        }
        publicDirDestPath=new Path(publicDirDestPath,Long.toString(publicRsrc.nextUniqueNumber()));
synchronized (pending) {
          pending.put(queue.submit(new FSDownload(lfs,null,conf,publicDirDestPath,resource,request.getContext().getStatCache())),request);
        }
      }
 catch (      IOException e) {
        rsrc.unlock();
        publicRsrc.handle(new ResourceFailedLocalizationEvent(request.getResource().getRequest(),e.getMessage()));
        LOG.error("Local path for public localization is not found. " + " May be disks failed.",e);
      }
catch (      RejectedExecutionException re) {
        rsrc.unlock();
        publicRsrc.handle(new ResourceFailedLocalizationEvent(request.getResource().getRequest(),re.getMessage()));
        LOG.error("Failed to submit rsrc " + rsrc + " for download."+ " Either queue is full or threadpool is shutdown.",re);
      }
    }
 else {
      rsrc.unlock();
    }
  }
}
