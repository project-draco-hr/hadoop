{
  LocalizerHeartbeatResponse response=recordFactory.newRecordInstance(LocalizerHeartbeatResponse.class);
  String user=context.getUser();
  ApplicationId applicationId=context.getContainerId().getApplicationAttemptId().getApplicationId();
  if (remoteResourceStatuses.isEmpty()) {
    LocalResource next=findNextResource();
    if (next != null) {
      response.setLocalizerAction(LocalizerAction.LIVE);
      try {
        ArrayList<ResourceLocalizationSpec> rsrcs=new ArrayList<ResourceLocalizationSpec>();
        ResourceLocalizationSpec rsrc=NodeManagerBuilderUtils.newResourceLocalizationSpec(next,getPathForLocalization(next));
        rsrcs.add(rsrc);
        response.setResourceSpecs(rsrcs);
      }
 catch (      IOException e) {
        LOG.error("local path for PRIVATE localization could not be found." + "Disks might have failed.",e);
      }
catch (      URISyntaxException e) {
      }
    }
 else     if (pending.isEmpty()) {
      response.setLocalizerAction(LocalizerAction.DIE);
    }
 else {
      response.setLocalizerAction(LocalizerAction.LIVE);
    }
    return response;
  }
  ArrayList<ResourceLocalizationSpec> rsrcs=new ArrayList<ResourceLocalizationSpec>();
  for (  LocalResourceStatus stat : remoteResourceStatuses) {
    LocalResource rsrc=stat.getResource();
    LocalResourceRequest req=null;
    try {
      req=new LocalResourceRequest(rsrc);
    }
 catch (    URISyntaxException e) {
    }
    LocalizerResourceRequestEvent assoc=scheduled.get(req);
    if (assoc == null) {
      LOG.error("Unknown resource reported: " + req);
      continue;
    }
switch (stat.getStatus()) {
case FETCH_SUCCESS:
      try {
        getLocalResourcesTracker(req.getVisibility(),user,applicationId).handle(new ResourceLocalizedEvent(req,ConverterUtils.getPathFromYarnURL(stat.getLocalPath()),stat.getLocalSize()));
      }
 catch (      URISyntaxException e) {
      }
    assoc.getResource().unlock();
  scheduled.remove(req);
if (pending.isEmpty()) {
  response.setLocalizerAction(LocalizerAction.DIE);
  break;
}
response.setLocalizerAction(LocalizerAction.LIVE);
LocalResource next=findNextResource();
if (next != null) {
try {
ResourceLocalizationSpec resource=NodeManagerBuilderUtils.newResourceLocalizationSpec(next,getPathForLocalization(next));
rsrcs.add(resource);
}
 catch (IOException e) {
LOG.error("local path for PRIVATE localization could not be " + "found. Disks might have failed.",e);
}
catch (URISyntaxException e) {
}
}
break;
case FETCH_PENDING:
response.setLocalizerAction(LocalizerAction.LIVE);
break;
case FETCH_FAILURE:
LOG.info("DEBUG: FAILED " + req,stat.getException());
response.setLocalizerAction(LocalizerAction.DIE);
getLocalResourcesTracker(req.getVisibility(),user,applicationId).handle(new ResourceFailedLocalizationEvent(req,stat.getException()));
assoc.getResource().unlock();
scheduled.remove(req);
break;
default :
LOG.info("Unknown status: " + stat.getStatus());
response.setLocalizerAction(LocalizerAction.DIE);
getLocalResourcesTracker(req.getVisibility(),user,applicationId).handle(new ResourceFailedLocalizationEvent(req,stat.getException()));
break;
}
}
response.setResourceSpecs(rsrcs);
return response;
}
