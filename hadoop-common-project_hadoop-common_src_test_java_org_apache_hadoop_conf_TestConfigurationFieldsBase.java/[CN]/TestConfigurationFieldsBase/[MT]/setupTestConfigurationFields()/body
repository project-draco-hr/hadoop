{
  initializeMemberVariables();
  assertTrue(xmlFilename != null);
  assertTrue(configurationClasses != null);
  configurationMemberVariables=new HashMap<String,String>();
  if (configDebug) {
    System.out.println("Reading configuration classes");
    System.out.println("");
  }
  for (  Class c : configurationClasses) {
    Field[] fields=c.getDeclaredFields();
    Map<String,String> memberMap=extractMemberVariablesFromConfigurationFields(fields);
    if (memberMap != null) {
      configurationMemberVariables.putAll(memberMap);
    }
  }
  if (configDebug) {
    System.out.println("");
    System.out.println("=====");
    System.out.println("");
  }
  if (xmlDebug) {
    System.out.println("Reading XML property files");
    System.out.println("");
  }
  xmlKeyValueMap=extractPropertiesFromXml(xmlFilename);
  if (xmlDebug) {
    System.out.println("");
    System.out.println("=====");
    System.out.println("");
  }
  if (defaultDebug) {
    System.out.println("Reading Config property files for defaults");
    System.out.println("");
  }
  configurationDefaultVariables=new HashMap<String,String>();
  for (  Class c : configurationClasses) {
    Field[] fields=c.getDeclaredFields();
    Map<String,String> defaultMap=extractDefaultVariablesFromConfigurationFields(fields);
    if (defaultMap != null) {
      configurationDefaultVariables.putAll(defaultMap);
    }
  }
  if (defaultDebug) {
    System.out.println("");
    System.out.println("=====");
    System.out.println("");
  }
  configurationFieldsMissingInXmlFile=compareConfigurationToXmlFields(configurationMemberVariables,xmlKeyValueMap);
  xmlFieldsMissingInConfiguration=compareConfigurationToXmlFields(xmlKeyValueMap,configurationMemberVariables);
}
