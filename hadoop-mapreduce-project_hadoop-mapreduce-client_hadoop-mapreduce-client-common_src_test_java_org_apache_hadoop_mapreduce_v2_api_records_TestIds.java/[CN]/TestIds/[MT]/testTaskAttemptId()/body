{
  long ts1=1315890136000l;
  long ts2=1315890136001l;
  TaskAttemptId t1=createTaskAttemptId(ts1,2,2,TaskType.MAP,2);
  TaskAttemptId t2=createTaskAttemptId(ts1,2,2,TaskType.REDUCE,2);
  TaskAttemptId t3=createTaskAttemptId(ts1,2,2,TaskType.MAP,3);
  TaskAttemptId t4=createTaskAttemptId(ts1,2,2,TaskType.MAP,1);
  TaskAttemptId t5=createTaskAttemptId(ts1,2,1,TaskType.MAP,3);
  TaskAttemptId t6=createTaskAttemptId(ts1,2,2,TaskType.MAP,2);
  assertTrue(t1.equals(t6));
  assertFalse(t1.equals(t2));
  assertFalse(t1.equals(t3));
  assertFalse(t1.equals(t5));
  assertTrue(t1.compareTo(t6) == 0);
  assertTrue(t1.compareTo(t2) < 0);
  assertTrue(t1.compareTo(t3) < 0);
  assertTrue(t1.compareTo(t4) > 0);
  assertTrue(t1.compareTo(t5) > 0);
  assertTrue(t1.hashCode() == t6.hashCode());
  assertFalse(t1.hashCode() == t2.hashCode());
  assertFalse(t1.hashCode() == t3.hashCode());
  assertFalse(t1.hashCode() == t5.hashCode());
  TaskAttemptId t7=createTaskAttemptId(ts2,5463346,4326575,TaskType.REDUCE,54375);
  assertEquals("attempt_" + ts1 + "_0002_m_000002_2",t1.toString());
  assertEquals("attempt_" + ts2 + "_5463346_r_4326575_54375",t7.toString());
}
