{
  super(ContainerManagerImpl.class.getName());
  this.context=context;
  dispatcher=new AsyncDispatcher();
  this.deletionService=deletionContext;
  this.metrics=metrics;
  rsrcLocalizationSrvc=createResourceLocalizationService(exec,deletionContext);
  addService(rsrcLocalizationSrvc);
  containersLauncher=createContainersLauncher(context,exec);
  addService(containersLauncher);
  this.nodeStatusUpdater=nodeStatusUpdater;
  if (UserGroupInformation.isSecurityEnabled()) {
    LOG.info("Security is enabled on NodeManager. " + "Creating ContainerTokenSecretManager");
    this.containerTokenSecretManager=new ContainerTokenSecretManager();
  }
  auxiluaryServices=new AuxServices();
  auxiluaryServices.register(this);
  addService(auxiluaryServices);
  this.containersMonitor=new ContainersMonitorImpl(exec,dispatcher,this.context);
  addService(this.containersMonitor);
  LogAggregationService logAggregationService=createLogAggregationService(this.deletionService);
  addService(logAggregationService);
  dispatcher.register(ContainerEventType.class,new ContainerEventDispatcher());
  dispatcher.register(ApplicationEventType.class,new ApplicationEventDispatcher());
  dispatcher.register(LocalizationEventType.class,rsrcLocalizationSrvc);
  dispatcher.register(AuxServicesEventType.class,auxiluaryServices);
  dispatcher.register(ContainersMonitorEventType.class,containersMonitor);
  dispatcher.register(ContainersLauncherEventType.class,containersLauncher);
  dispatcher.register(LogAggregatorEventType.class,logAggregationService);
  addService(dispatcher);
}
