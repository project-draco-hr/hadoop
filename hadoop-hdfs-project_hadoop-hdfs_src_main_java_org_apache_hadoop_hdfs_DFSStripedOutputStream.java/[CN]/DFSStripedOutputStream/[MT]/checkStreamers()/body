{
  Set<StripedDataStreamer> newFailed=new HashSet<>();
  for (  StripedDataStreamer s : streamers) {
    if (!s.isHealthy() && !failedStreamers.contains(s)) {
      newFailed.add(s);
    }
  }
  final int failCount=failedStreamers.size() + newFailed.size();
  if (LOG.isDebugEnabled()) {
    LOG.debug("checkStreamers: " + streamers);
    LOG.debug("healthy streamer count=" + (numAllBlocks - failCount));
    LOG.debug("original failed streamers: " + failedStreamers);
    LOG.debug("newly failed streamers: " + newFailed);
  }
  if (failCount > (numAllBlocks - numDataBlocks)) {
    throw new IOException("Failed: the number of failed blocks = " + failCount + " > the number of data blocks = "+ (numAllBlocks - numDataBlocks));
  }
  return newFailed;
}
