{
  super(dfsClient,src,stat,flag,progress,checksum,favoredNodes);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Creating DFSStripedOutputStream for " + src);
  }
  final ECSchema schema=stat.getECSchema();
  final int numParityBlocks=schema.getNumParityUnits();
  cellSize=stat.getStripeCellSize();
  numDataBlocks=schema.getNumDataUnits();
  numAllBlocks=numDataBlocks + numParityBlocks;
  encoder=CodecUtil.createRSRawEncoder(dfsClient.getConfiguration(),numDataBlocks,numParityBlocks);
  coordinator=new Coordinator(dfsClient.getConf(),numDataBlocks,numAllBlocks);
  try {
    cellBuffers=new CellBuffers(numParityBlocks);
  }
 catch (  InterruptedException ie) {
    throw DFSUtil.toInterruptedIOException("Failed to create cell buffers",ie);
  }
  List<StripedDataStreamer> s=new ArrayList<>(numAllBlocks);
  for (short i=0; i < numAllBlocks; i++) {
    StripedDataStreamer streamer=new StripedDataStreamer(stat,dfsClient,src,progress,checksum,cachingStrategy,byteArrayManager,favoredNodes,i,coordinator);
    s.add(streamer);
  }
  streamers=Collections.unmodifiableList(s);
  currentPackets=new DFSPacket[streamers.size()];
  setCurrentStreamer(0);
}
