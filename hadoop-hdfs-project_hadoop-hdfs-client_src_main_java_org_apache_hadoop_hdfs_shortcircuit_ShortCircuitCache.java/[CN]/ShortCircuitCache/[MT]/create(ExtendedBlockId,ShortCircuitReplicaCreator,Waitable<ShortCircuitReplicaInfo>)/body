{
  ShortCircuitReplicaInfo info=null;
  try {
    LOG.trace("{}: loading {}",this,key);
    info=creator.createShortCircuitReplicaInfo();
  }
 catch (  RuntimeException e) {
    LOG.warn(this + ": failed to load " + key,e);
  }
  if (info == null)   info=new ShortCircuitReplicaInfo();
  lock.lock();
  try {
    if (info.getReplica() != null) {
      LOG.trace("{}: successfully loaded {}",this,info.getReplica());
      startCacheCleanerThreadIfNeeded();
    }
 else {
      Waitable<ShortCircuitReplicaInfo> waitableInMap=replicaInfoMap.get(key);
      if (waitableInMap == newWaitable)       replicaInfoMap.remove(key);
      if (info.getInvalidTokenException() != null) {
        LOG.info(this + ": could not load " + key+ " due to InvalidToken "+ "exception.",info.getInvalidTokenException());
      }
 else {
        LOG.warn(this + ": failed to load " + key);
      }
    }
    newWaitable.provide(info);
  }
  finally {
    lock.unlock();
  }
  return info;
}
