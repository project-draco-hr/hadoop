{
  DeletionService delService=mock(DeletionService.class);
  long TARGET_MB=10 << 20;
  ResourceRetentionSet rss=new ResourceRetentionSet(delService,TARGET_MB);
  LocalResourcesTracker pubTracker=createMockTracker(null,3 * 1024 * 1024,2,10,5);
  LocalResourcesTracker trackerA=createMockTracker("A",1 * 1024 * 1024,4,3,3);
  LocalResourcesTracker trackerB=createMockTracker("B",4 * 1024 * 1024,1,10,5);
  LocalResourcesTracker trackerC=createMockTracker("C",2 * 1024 * 1024,3,7,2);
  rss.addResources(pubTracker);
  rss.addResources(trackerA);
  rss.addResources(trackerB);
  rss.addResources(trackerC);
  long deleted=0L;
  ArgumentCaptor<LocalizedResource> captor=ArgumentCaptor.forClass(LocalizedResource.class);
  verify(pubTracker,atMost(2)).remove(captor.capture(),isA(DeletionService.class));
  verify(trackerA,atMost(4)).remove(captor.capture(),isA(DeletionService.class));
  verify(trackerB,atMost(1)).remove(captor.capture(),isA(DeletionService.class));
  verify(trackerC,atMost(3)).remove(captor.capture(),isA(DeletionService.class));
  for (  LocalizedResource rem : captor.getAllValues()) {
    deleted+=rem.getSize();
  }
  assertTrue(deleted >= 10 * 1024 * 1024);
  assertTrue(deleted < 15 * 1024 * 1024);
}
