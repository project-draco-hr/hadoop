{
  MiniMRCluster mr=null;
  try {
    JobConf conf=new JobConf();
    conf.setInt(TTConfig.TT_MAP_SLOTS,1);
    conf.setInt(TTConfig.TT_REDUCE_SLOTS,0);
    mr=startCluster(conf,1);
    JobTracker jobtracker=mr.getJobTrackerRunner().getJobTracker();
    Path inDir=new Path(testDir,"in-1");
    Path outDir=new Path(testDir,"out-1");
    JobConf jConf=mr.createJobConf();
    FileInputFormat.setInputPaths(jConf,new Path[]{inDir});
    FileOutputFormat.setOutputPath(jConf,outDir);
    SleepJob sleepJob=new SleepJob();
    sleepJob.setConf(jConf);
    Job job=sleepJob.createJob(1,1,0,1,0,1);
    job.submit();
    JobID id=JobID.downgrade(job.getStatus().getJobID());
    JobInProgress jip=jobtracker.getJob(id);
    for (int i=0; i < 100 && (jip.finishedMaps() < 1); i++) {
      UtilsForTests.waitFor(1000);
    }
    assertEquals(jip.finishedMaps(),1);
    LOG.info("Adding a waiting tracker");
    TaskTrackerRunner testTrackerRunner=mr.new TaskTrackerRunner(1,1,null,mr.createJobConf()){
      @Override TaskTracker createTaskTracker(      JobConf conf) throws IOException, InterruptedException {
        return new WaitingTaskTracker(conf);
      }
    }
;
    mr.addTaskTracker(testTrackerRunner);
    LOG.info("Waiting tracker added");
    WaitingTaskTracker testTT=(WaitingTaskTracker)testTrackerRunner.getTaskTracker();
    for (int i=0; i < 1000 && (jobtracker.taskTrackers().size() < 2); i++) {
      UtilsForTests.waitFor(100);
    }
    assertEquals(jobtracker.taskTrackers().size(),2);
    LOG.info("Cluster is now ready");
    mr.stopTaskTracker(mr.getTaskTrackerID(testTT.getName()));
    assertEquals("Waiting tracker joined but no reduce task got scheduled",1,jip.runningReduces());
    job.killJob();
    TaskInProgress tip=jip.getTasks(TaskType.REDUCE)[0];
    assertNull(tip.getTaskStatus(tip.getAllTaskAttemptIDs()[0]));
    waitTillRetire(id,jobtracker);
    for (    TaskAttemptID tid : jobtracker.taskidToTIPMap.keySet()) {
      LOG.info("TaskidToTIP mapping left over : " + tid);
    }
    assertEquals("'taskid' to TIP mapping still exists",0,jobtracker.taskidToTIPMap.size());
  }
  finally {
    if (mr != null) {
      mr.shutdown();
    }
    FileUtil.fullyDelete(new File(testDir.toString()));
  }
}
