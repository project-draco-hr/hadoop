{
  int[] diffIndexPair=diffs.changedBetweenSnapshots(from,to);
  if (diffIndexPair == null) {
    return false;
  }
  int earlierDiffIndex=diffIndexPair[0];
  int laterDiffIndex=diffIndexPair[1];
  final List<FileDiff> diffList=diffs.asList();
  final long earlierLength=diffList.get(earlierDiffIndex).getFileSize();
  final long laterLength=laterDiffIndex == diffList.size() ? file.computeFileSize(true,false) : diffList.get(laterDiffIndex).getFileSize();
  if (earlierLength != laterLength) {
    return true;
  }
  INodeFileAttributes earlierAttr=null;
  for (int i=earlierDiffIndex; i < laterDiffIndex; i++) {
    FileDiff diff=diffList.get(i);
    if (diff.snapshotINode != null) {
      earlierAttr=diff.snapshotINode;
      break;
    }
  }
  if (earlierAttr == null) {
    return false;
  }
  INodeFileAttributes laterAttr=diffs.getSnapshotINode(Math.max(Snapshot.getSnapshotId(from),Snapshot.getSnapshotId(to)),file);
  return !earlierAttr.metadataEquals(laterAttr);
}
