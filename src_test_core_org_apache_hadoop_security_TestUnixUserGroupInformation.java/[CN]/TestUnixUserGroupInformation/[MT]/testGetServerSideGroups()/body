{
  Process pp=Runtime.getRuntime().exec("whoami");
  BufferedReader br=new BufferedReader(new InputStreamReader(pp.getInputStream()));
  String userName=br.readLine().trim();
  pp=Runtime.getRuntime().exec("id -Gn");
  br=new BufferedReader(new InputStreamReader(pp.getInputStream()));
  String line=br.readLine();
  System.out.println(userName + ":" + line);
  List<String> groups=new ArrayList<String>();
  for (  String s : line.split("[\\s]")) {
    groups.add(s);
  }
  boolean ugiIsIn=false;
  int numberOfGroups=0;
  Subject subject=SecurityUtil.getSubject(conf,userName);
  System.out.println("for user=" + userName + " prinicipals are:");
  for (  Principal p : subject.getPrincipals()) {
    if (p instanceof User) {
      System.out.println("USER: " + p.getName());
      assertTrue("user name is not the same as in the Subject: " + p.getName(),userName.equals(p.getName()));
    }
    if (p instanceof Group) {
      numberOfGroups++;
      System.out.println("GROUP: " + p.getName());
      assertTrue("Subject contains invalid group " + p.getName(),groups.contains(p.getName()));
    }
    if (p instanceof UserGroupInformation) {
      System.out.println("UGI: " + p.getName());
      ugiIsIn=true;
    }
  }
  assertTrue("UGI object is not in the Subject",ugiIsIn);
  assertEquals("number of groups in subject doesn't match actual # groups",numberOfGroups,groups.size());
  subject=SecurityUtil.getSubject(conf,"fakeUser");
  for (  Principal p : subject.getPrincipals()) {
    if (p instanceof User) {
      System.out.println("USER: " + p.getName());
      assertTrue("user name (fakeUser) is not the same as in the Subject: " + p.getName(),"fakeUser".equals(p.getName()));
    }
    if (p instanceof Group) {
      fail("fakeUser should have no groups");
    }
  }
}
