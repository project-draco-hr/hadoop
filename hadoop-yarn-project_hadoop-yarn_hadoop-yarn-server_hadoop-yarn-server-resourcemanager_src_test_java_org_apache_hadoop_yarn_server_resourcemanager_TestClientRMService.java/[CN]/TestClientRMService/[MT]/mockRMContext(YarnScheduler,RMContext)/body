{
  Dispatcher dispatcher=mock(Dispatcher.class);
  when(rmContext.getDispatcher()).thenReturn(dispatcher);
  EventHandler eventHandler=mock(EventHandler.class);
  when(dispatcher.getEventHandler()).thenReturn(eventHandler);
  QueueInfo queInfo=recordFactory.newRecordInstance(QueueInfo.class);
  queInfo.setQueueName("testqueue");
  when(yarnScheduler.getQueueInfo(eq("testqueue"),anyBoolean(),anyBoolean())).thenReturn(queInfo);
  when(yarnScheduler.getQueueInfo(eq("nonexistentqueue"),anyBoolean(),anyBoolean())).thenThrow(new IOException("queue does not exist"));
  RMApplicationHistoryWriter writer=mock(RMApplicationHistoryWriter.class);
  when(rmContext.getRMApplicationHistoryWriter()).thenReturn(writer);
  SystemMetricsPublisher publisher=mock(SystemMetricsPublisher.class);
  when(rmContext.getSystemMetricsPublisher()).thenReturn(publisher);
  when(rmContext.getYarnConfiguration()).thenReturn(new YarnConfiguration());
  ConcurrentHashMap<ApplicationId,RMApp> apps=getRMApps(rmContext,yarnScheduler);
  when(rmContext.getRMApps()).thenReturn(apps);
  when(yarnScheduler.getAppsInQueue(eq("testqueue"))).thenReturn(getSchedulerApps(apps));
  ResourceScheduler rs=mock(ResourceScheduler.class);
  when(rmContext.getScheduler()).thenReturn(rs);
}
