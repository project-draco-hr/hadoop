{
  int maxPriority=10;
  int appPriorty=5;
  YarnConfiguration conf=new YarnConfiguration();
  conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY,maxPriority);
  MockRM rm=new MockRM(conf);
  rm.init(conf);
  rm.start();
  RMApp app1=rm.submitApp(1024,Priority.newInstance(appPriorty));
  Assert.assertEquals("Incorrect priority has been set to application",appPriorty,app1.getApplicationSubmissionContext().getPriority().getPriority());
  appPriorty=9;
  ClientRMService rmService=rm.getClientRMService();
  UpdateApplicationPriorityRequest updateRequest=UpdateApplicationPriorityRequest.newInstance(app1.getApplicationId(),Priority.newInstance(appPriorty));
  rmService.updateApplicationPriority(updateRequest);
  Assert.assertEquals("Incorrect priority has been set to application",appPriorty,app1.getApplicationSubmissionContext().getPriority().getPriority());
  rm.killApp(app1.getApplicationId());
  rm.waitForState(app1.getApplicationId(),RMAppState.KILLED);
  try {
    rmService.updateApplicationPriority(updateRequest);
    Assert.fail("Can not update priority for an application in KILLED state");
  }
 catch (  YarnException e) {
    String msg="Application in " + app1.getState() + " state cannot be update priority.";
    Assert.assertTrue("",msg.contains(e.getMessage()));
  }
  ApplicationId invalidAppId=ApplicationId.newInstance(123456789L,3);
  updateRequest=UpdateApplicationPriorityRequest.newInstance(invalidAppId,Priority.newInstance(appPriorty));
  try {
    rmService.updateApplicationPriority(updateRequest);
    Assert.fail("ApplicationNotFoundException should be thrown for invalid application id");
  }
 catch (  ApplicationNotFoundException e) {
  }
  rm.stop();
}
