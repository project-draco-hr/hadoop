{
  String excludeFile="excludeFile";
  createExcludeFile(excludeFile);
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,excludeFile);
  MockRM rm=new MockRM(conf){
    protected ClientRMService createClientRMService(){
      return new ClientRMService(this.rmContext,scheduler,this.rmAppManager,this.applicationACLsManager,this.queueACLsManager,this.getRMContext().getRMDelegationTokenSecretManager());
    }
  }
;
  rm.start();
  YarnRPC rpc=YarnRPC.create(conf);
  InetSocketAddress rmAddress=rm.getClientRMService().getBindAddress();
  LOG.info("Connecting to ResourceManager at " + rmAddress);
  ApplicationClientProtocol client=(ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class,rmAddress,conf);
  GetClusterNodesRequest request=GetClusterNodesRequest.newInstance(EnumSet.allOf(NodeState.class));
  List<NodeReport> nodeReports=client.getClusterNodes(request).getNodeReports();
  Assert.assertEquals(1,nodeReports.size());
  rm.stop();
  rpc.stopProxy(client,conf);
  new File(excludeFile).delete();
}
