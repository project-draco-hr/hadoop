{
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration();
  ReservationSystemTestUtil.setupQueueConfiguration(conf);
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  conf.setBoolean(YarnConfiguration.RM_RESERVATION_SYSTEM_ENABLE,true);
  MockRM rm=new MockRM(conf);
  rm.start();
  MockNM nm;
  try {
    nm=rm.registerNode("127.0.0.1:0",102400,100);
    Thread.sleep(1050);
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
  ClientRMService clientService=rm.getClientRMService();
  Clock clock=new UTCClock();
  long arrival=clock.getTime();
  long duration=60000;
  long deadline=(long)(arrival + 1.05 * duration);
  ReservationSubmissionRequest sRequest=createSimpleReservationRequest(4,arrival,deadline,duration);
  ReservationSubmissionResponse sResponse=null;
  try {
    sResponse=clientService.submitReservation(sRequest);
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
  Assert.assertNotNull(sResponse);
  ReservationId reservationID=sResponse.getReservationId();
  Assert.assertNotNull(reservationID);
  LOG.info("Submit reservation response: " + reservationID);
  ReservationDefinition rDef=sRequest.getReservationDefinition();
  ReservationRequest rr=rDef.getReservationRequests().getReservationResources().get(0);
  rr.setNumContainers(5);
  arrival=clock.getTime();
  duration=30000;
  deadline=(long)(arrival + 1.05 * duration);
  rr.setDuration(duration);
  rDef.setArrival(arrival);
  rDef.setDeadline(deadline);
  ReservationUpdateRequest uRequest=ReservationUpdateRequest.newInstance(rDef,reservationID);
  ReservationUpdateResponse uResponse=null;
  try {
    uResponse=clientService.updateReservation(uRequest);
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
  Assert.assertNotNull(sResponse);
  LOG.info("Update reservation response: " + uResponse);
  ReservationDeleteRequest dRequest=ReservationDeleteRequest.newInstance(reservationID);
  ReservationDeleteResponse dResponse=null;
  try {
    dResponse=clientService.deleteReservation(dRequest);
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
  Assert.assertNotNull(sResponse);
  LOG.info("Delete reservation response: " + dResponse);
  rm.stop();
  nm=null;
  rm=null;
}
