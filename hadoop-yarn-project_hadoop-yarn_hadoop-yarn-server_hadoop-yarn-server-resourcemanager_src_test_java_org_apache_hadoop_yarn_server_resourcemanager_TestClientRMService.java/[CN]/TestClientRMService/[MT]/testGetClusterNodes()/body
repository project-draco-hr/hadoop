{
  MockRM rm=new MockRM(){
    protected ClientRMService createClientRMService(){
      return new ClientRMService(this.rmContext,scheduler,this.rmAppManager,this.applicationACLsManager,this.rmDTSecretManager);
    }
  }
;
  rm.start();
  MockNM node=rm.registerNode("host:1234",1024);
  node.nodeHeartbeat(true);
  Configuration conf=new Configuration();
  YarnRPC rpc=YarnRPC.create(conf);
  InetSocketAddress rmAddress=rm.getClientRMService().getBindAddress();
  LOG.info("Connecting to ResourceManager at " + rmAddress);
  ClientRMProtocol client=(ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class,rmAddress,conf);
  GetClusterNodesRequest request=Records.newRecord(GetClusterNodesRequest.class);
  List<NodeReport> nodeReports=client.getClusterNodes(request).getNodeReports();
  Assert.assertEquals(1,nodeReports.size());
  Assert.assertNotSame("Node is expected to be healthy!",NodeState.UNHEALTHY,nodeReports.get(0).getNodeState());
  node.nodeHeartbeat(false);
  nodeReports=client.getClusterNodes(request).getNodeReports();
  Assert.assertEquals(1,nodeReports.size());
  Assert.assertEquals("Node is expected to be unhealthy!",NodeState.UNHEALTHY,nodeReports.get(0).getNodeState());
}
