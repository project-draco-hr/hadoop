{
  if (peer.hasSecureChannel() || dnConf.getTrustedChannelResolver().isTrusted(getPeerAddress(peer))) {
    return new IOStreamPair(underlyingIn,underlyingOut);
  }
  Map<String,String> saslProps=createSaslPropertiesForEncryption(dnConf.getEncryptionAlgorithm());
  if (LOG.isDebugEnabled()) {
    LOG.debug("Server using encryption algorithm " + dnConf.getEncryptionAlgorithm());
  }
  CallbackHandler callbackHandler=new SaslServerCallbackHandler(new PasswordFunction(){
    @Override public char[] apply(    String userName) throws IOException {
      return encryptionKeyToPassword(getEncryptionKeyFromUserName(userName));
    }
  }
);
  return doSaslHandshake(peer,underlyingOut,underlyingIn,saslProps,callbackHandler);
}
