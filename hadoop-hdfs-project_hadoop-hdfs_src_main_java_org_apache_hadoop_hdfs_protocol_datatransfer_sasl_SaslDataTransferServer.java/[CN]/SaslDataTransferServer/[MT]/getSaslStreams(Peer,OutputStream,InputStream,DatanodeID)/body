{
  SaslPropertiesResolver saslPropsResolver=dnConf.getSaslPropsResolver();
  if (saslPropsResolver == null) {
    throw new IOException(String.format("Cannot create a secured " + "connection if DataNode listens on unprivileged port (%d) and no " + "protection is defined in configuration property %s.",datanodeId.getXferPort(),DFS_DATA_TRANSFER_PROTECTION_KEY));
  }
  Map<String,String> saslProps=saslPropsResolver.getServerProperties(getPeerAddress(peer));
  CallbackHandler callbackHandler=new SaslServerCallbackHandler(new PasswordFunction(){
    @Override public char[] apply(    String userName) throws IOException {
      return buildServerPassword(userName);
    }
  }
);
  return doSaslHandshake(underlyingOut,underlyingIn,saslProps,callbackHandler);
}
