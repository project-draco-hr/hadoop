{
  CSQueue rootQueue=cs.getRootQueue();
  CSQueue queueA=findQueue(rootQueue,A);
  CSQueue queueB=findQueue(rootQueue,B);
  CSQueue queueA1=findQueue(queueA,A1);
  CSQueue queueA2=findQueue(queueA,A2);
  CSQueue queueB1=findQueue(queueB,B1);
  CSQueue queueB2=findQueue(queueB,B2);
  CSQueue queueB3=findQueue(queueB,B3);
  float capA=capacityA / 100.0f;
  float capB=capacityB / 100.0f;
  checkQueueCapacity(queueA,capA,capA,1.0f,1.0f);
  checkQueueCapacity(queueB,capB,capB,1.0f,1.0f);
  checkQueueCapacity(queueA1,A1_CAPACITY / 100.0f,(A1_CAPACITY / 100.0f) * capA,1.0f,1.0f);
  checkQueueCapacity(queueA2,(float)A2_CAPACITY / 100.0f,(A2_CAPACITY / 100.0f) * capA,1.0f,1.0f);
  checkQueueCapacity(queueB1,(float)B1_CAPACITY / 100.0f,(B1_CAPACITY / 100.0f) * capB,1.0f,1.0f);
  checkQueueCapacity(queueB2,(float)B2_CAPACITY / 100.0f,(B2_CAPACITY / 100.0f) * capB,1.0f,1.0f);
  checkQueueCapacity(queueB3,(float)B3_CAPACITY / 100.0f,(B3_CAPACITY / 100.0f) * capB,1.0f,1.0f);
}
