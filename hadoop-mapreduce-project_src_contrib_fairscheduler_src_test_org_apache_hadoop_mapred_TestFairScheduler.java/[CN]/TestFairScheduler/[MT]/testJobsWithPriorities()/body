{
  setUpCluster(1,3,false);
  JobInProgress job1=submitJob(JobStatus.RUNNING,10,10);
  JobInfo info1=scheduler.infos.get(job1);
  JobInProgress job2=submitJob(JobStatus.RUNNING,10,10);
  JobInfo info2=scheduler.infos.get(job2);
  job2.setPriority(JobPriority.HIGH);
  scheduler.update();
  assertEquals(0,info1.mapSchedulable.getRunningTasks());
  assertEquals(0,info1.reduceSchedulable.getRunningTasks());
  assertEquals(10,info1.mapSchedulable.getDemand());
  assertEquals(10,info1.reduceSchedulable.getDemand());
  assertEquals(2.0,info1.mapSchedulable.getFairShare(),0.1);
  assertEquals(2.0,info1.reduceSchedulable.getFairShare(),0.1);
  assertEquals(0,info2.mapSchedulable.getRunningTasks());
  assertEquals(0,info2.reduceSchedulable.getRunningTasks());
  assertEquals(10,info2.mapSchedulable.getDemand());
  assertEquals(10,info2.reduceSchedulable.getDemand());
  assertEquals(4.0,info2.mapSchedulable.getFairShare(),0.1);
  assertEquals(4.0,info2.reduceSchedulable.getFairShare(),0.1);
  advanceTime(100);
  System.out.println("HEREEEE");
  checkAssignment("tt1","attempt_test_0001_m_000000_0 on tt1");
  checkAssignment("tt1","attempt_test_0001_r_000000_0 on tt1");
  checkAssignment("tt1","attempt_test_0002_m_000000_0 on tt1");
  checkAssignment("tt1","attempt_test_0002_r_000000_0 on tt1");
  checkAssignment("tt2","attempt_test_0002_m_000001_0 on tt2");
  checkAssignment("tt2","attempt_test_0002_r_000001_0 on tt2");
  checkAssignment("tt2","attempt_test_0001_m_000001_0 on tt2");
  checkAssignment("tt2","attempt_test_0001_r_000001_0 on tt2");
  checkAssignment("tt3","attempt_test_0002_m_000002_0 on tt3");
  checkAssignment("tt3","attempt_test_0002_r_000002_0 on tt3");
  checkAssignment("tt3","attempt_test_0002_m_000003_0 on tt3");
  checkAssignment("tt3","attempt_test_0002_r_000003_0 on tt3");
}
