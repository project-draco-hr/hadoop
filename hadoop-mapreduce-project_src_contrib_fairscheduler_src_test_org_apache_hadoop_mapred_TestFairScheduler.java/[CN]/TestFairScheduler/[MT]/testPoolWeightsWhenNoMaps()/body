{
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<pool name=\"poolA\">");
  out.println("<weight>2.0</weight>");
  out.println("</pool>");
  out.println("<pool name=\"poolB\">");
  out.println("<weight>1.0</weight>");
  out.println("</pool>");
  out.println("</allocations>");
  out.close();
  scheduler.getPoolManager().reloadAllocs();
  JobInProgress job1=submitJob(JobStatus.RUNNING,0,10,"poolA");
  JobInfo info1=scheduler.infos.get(job1);
  JobInProgress job2=submitJob(JobStatus.RUNNING,0,10,"poolA");
  JobInfo info2=scheduler.infos.get(job2);
  JobInProgress job3=submitJob(JobStatus.RUNNING,10,10,"poolB");
  JobInfo info3=scheduler.infos.get(job3);
  advanceTime(10);
  assertEquals(0,info1.mapSchedulable.getFairShare(),0.01);
  assertEquals(1.33,info1.reduceSchedulable.getFairShare(),0.01);
  assertEquals(0,info2.mapSchedulable.getFairShare(),0.01);
  assertEquals(1.33,info2.reduceSchedulable.getFairShare(),0.01);
  assertEquals(4,info3.mapSchedulable.getFairShare(),0.01);
  assertEquals(1.33,info3.reduceSchedulable.getFairShare(),0.01);
}
