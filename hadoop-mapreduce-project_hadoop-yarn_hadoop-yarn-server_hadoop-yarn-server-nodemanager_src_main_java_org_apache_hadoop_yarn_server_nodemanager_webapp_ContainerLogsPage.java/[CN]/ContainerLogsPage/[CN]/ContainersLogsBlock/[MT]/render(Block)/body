{
  String redirectUrl=$(REDIRECT_URL);
  if (redirectUrl != null && redirectUrl.equals("false")) {
    html.h1("Failed while trying to construct the redirect url to the log" + " server. Log Server url may not be configured");
  }
  ContainerId containerId;
  try {
    containerId=ConverterUtils.toContainerId($(CONTAINER_ID));
  }
 catch (  IllegalArgumentException e) {
    html.h1("Invalid containerId " + $(CONTAINER_ID));
    return;
  }
  ApplicationId applicationId=containerId.getApplicationAttemptId().getApplicationId();
  Application application=this.nmContext.getApplications().get(applicationId);
  Container container=this.nmContext.getContainers().get(containerId);
  if (application == null) {
    html.h1("Unknown container. Container either has not started or " + "has already completed or " + "doesn't belong to this node at all.");
    return;
  }
  if (container == null) {
    printLogs(html,containerId,applicationId,application);
    return;
  }
  if (EnumSet.of(ContainerState.NEW,ContainerState.LOCALIZING,ContainerState.LOCALIZED).contains(container.getContainerState())) {
    html.h1("Container is not yet running. Current state is " + container.getContainerState());
    return;
  }
  if (container.getContainerState() == ContainerState.LOCALIZATION_FAILED) {
    html.h1("Container wasn't started. Localization failed.");
    return;
  }
  if (EnumSet.of(ContainerState.RUNNING,ContainerState.EXITED_WITH_FAILURE,ContainerState.EXITED_WITH_SUCCESS).contains(container.getContainerState())) {
    printLogs(html,containerId,applicationId,application);
    return;
  }
  if (EnumSet.of(ContainerState.KILLING,ContainerState.CONTAINER_CLEANEDUP_AFTER_KILL,ContainerState.CONTAINER_RESOURCES_CLEANINGUP).contains(container.getContainerState())) {
    printLogs(html,containerId,applicationId,application);
    return;
  }
  if (container.getContainerState().equals(ContainerState.DONE)) {
    printLogs(html,containerId,applicationId,application);
    return;
  }
 else {
    html.h1("Container is no longer running...");
    return;
  }
}
