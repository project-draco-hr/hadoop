{
  NativeFileSystemStore store=new Jets3tNativeFileSystemStore();
  RetryPolicy basePolicy=RetryPolicies.retryUpToMaximumCountWithFixedSleep(conf.getInt(S3_NATIVE_MAX_RETRIES_KEY,S3_NATIVE_MAX_RETRIES_DEFAUL),conf.getLong(S3_NATIVE_SLEEP_TIME_KEY,S3_NATIVE_SLEEP_TIME_DEFAULT),TimeUnit.SECONDS);
  Map<Class<? extends Exception>,RetryPolicy> exceptionToPolicyMap=new HashMap<Class<? extends Exception>,RetryPolicy>();
  exceptionToPolicyMap.put(IOException.class,basePolicy);
  exceptionToPolicyMap.put(S3Exception.class,basePolicy);
  RetryPolicy methodPolicy=RetryPolicies.retryByException(RetryPolicies.TRY_ONCE_THEN_FAIL,exceptionToPolicyMap);
  Map<String,RetryPolicy> methodNameToPolicyMap=new HashMap<String,RetryPolicy>();
  methodNameToPolicyMap.put("storeFile",methodPolicy);
  methodNameToPolicyMap.put("rename",methodPolicy);
  return (NativeFileSystemStore)RetryProxy.create(NativeFileSystemStore.class,store,methodNameToPolicyMap);
}
