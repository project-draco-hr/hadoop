{
  JOB_SEMAPHORE.acquireUninterruptibly();
  Long starttime=null;
  try {
    try {
      starttime=timer.tick("starting " + name + " ...\n  "+ startmessage);
      machine.init(job);
      job.submit();
      final long sleeptime=1000L * job.getConfiguration().getInt(JOB_SEPARATION_PROPERTY,10);
      if (sleeptime > 0) {
        Util.out.println(name + "> sleep(" + Util.millis2String(sleeptime)+ ")");
        Thread.sleep(sleeptime);
      }
    }
  finally {
      JOB_SEMAPHORE.release();
    }
    if (!job.waitForCompletion(false))     throw new RuntimeException(name + " failed.");
  }
 catch (  Exception e) {
    throw e instanceof RuntimeException ? (RuntimeException)e : new RuntimeException(e);
  }
 finally {
    if (starttime != null)     timer.tick(name + "> timetaken=" + Util.millis2String(timer.tick() - starttime));
  }
}
