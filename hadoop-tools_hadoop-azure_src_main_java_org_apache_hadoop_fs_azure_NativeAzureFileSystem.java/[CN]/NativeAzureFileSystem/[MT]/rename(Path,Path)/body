{
  FolderRenamePending renamePending=null;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Moving " + src + " to "+ dst);
  }
  if (containsColon(dst)) {
    throw new IOException("Cannot rename to file " + dst + " through WASB that has colons in the name");
  }
  String srcKey=pathToKey(makeAbsolute(src));
  if (srcKey.length() == 0) {
    return false;
  }
  Path absoluteDst=makeAbsolute(dst);
  String dstKey=pathToKey(absoluteDst);
  FileMetadata dstMetadata=store.retrieveMetadata(dstKey);
  if (dstMetadata != null && dstMetadata.isDir()) {
    dstKey=pathToKey(makeAbsolute(new Path(dst,src.getName())));
    if (LOG.isDebugEnabled()) {
      LOG.debug("Destination " + dst + " is a directory, adjusted the destination to be "+ dstKey);
    }
  }
 else   if (dstMetadata != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Destination " + dst + " is an already existing file, failing the rename.");
    }
    return false;
  }
 else {
    FileMetadata parentOfDestMetadata=store.retrieveMetadata(pathToKey(absoluteDst.getParent()));
    if (parentOfDestMetadata == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Parent of the destination " + dst + " doesn't exist, failing the rename.");
      }
      return false;
    }
 else     if (!parentOfDestMetadata.isDir()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Parent of the destination " + dst + " is a file, failing the rename.");
      }
      return false;
    }
  }
  FileMetadata srcMetadata=store.retrieveMetadata(srcKey);
  if (srcMetadata == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Source " + src + " doesn't exist, failing the rename.");
    }
    return false;
  }
 else   if (!srcMetadata.isDir()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Source " + src + " found as a file, renaming.");
    }
    store.rename(srcKey,dstKey);
  }
 else {
    renamePending=prepareAtomicFolderRename(srcKey,dstKey);
    renamePending.execute();
    if (LOG.isDebugEnabled()) {
      LOG.debug("Renamed " + src + " to "+ dst+ " successfully.");
    }
    renamePending.cleanup();
    return true;
  }
  updateParentFolderLastModifiedTime(srcKey);
  updateParentFolderLastModifiedTime(dstKey);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Renamed " + src + " to "+ dst+ " successfully.");
  }
  return true;
}
