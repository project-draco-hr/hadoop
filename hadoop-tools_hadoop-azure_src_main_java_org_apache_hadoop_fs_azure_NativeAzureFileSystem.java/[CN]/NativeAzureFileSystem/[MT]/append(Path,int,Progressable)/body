{
  if (!appendSupportEnabled) {
    throw new UnsupportedOperationException("Append Support not enabled");
  }
  LOG.debug("Opening file: {} for append",f);
  Path absolutePath=makeAbsolute(f);
  String key=pathToKey(absolutePath);
  FileMetadata meta=null;
  try {
    meta=store.retrieveMetadata(key);
  }
 catch (  Exception ex) {
    Throwable innerException=NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
    if (innerException instanceof StorageException && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException)innerException)) {
      throw new FileNotFoundException(String.format("%s is not found",key));
    }
 else {
      throw ex;
    }
  }
  if (meta == null) {
    throw new FileNotFoundException(f.toString());
  }
  if (meta.isDir()) {
    throw new FileNotFoundException(f.toString() + " is a directory not a file.");
  }
  if (store.isPageBlobKey(key)) {
    throw new IOException("Append not supported for Page Blobs");
  }
  DataOutputStream appendStream=null;
  try {
    appendStream=store.retrieveAppendStream(key,bufferSize);
  }
 catch (  Exception ex) {
    Throwable innerException=NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
    if (innerException instanceof StorageException && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException)innerException)) {
      throw new FileNotFoundException(String.format("%s is not found",key));
    }
 else {
      throw ex;
    }
  }
  return new FSDataOutputStream(appendStream,statistics);
}
