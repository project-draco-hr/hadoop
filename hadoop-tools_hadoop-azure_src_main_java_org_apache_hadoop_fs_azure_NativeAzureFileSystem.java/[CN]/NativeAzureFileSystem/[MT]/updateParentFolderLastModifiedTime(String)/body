{
  Path parent=makeAbsolute(keyToPath(key)).getParent();
  if (parent != null && parent.getParent() != null) {
    String parentKey=pathToKey(parent);
    FileMetadata parentMetadata=store.retrieveMetadata(parentKey);
    if (parentMetadata != null) {
      if (parentMetadata.isDir() && parentMetadata.getBlobMaterialization() == BlobMaterialization.Implicit) {
        store.storeEmptyFolder(parentKey,createPermissionStatus(FsPermission.getDefault()));
      }
      if (store.isAtomicRenameKey(parentKey)) {
        SelfRenewingLease lease=null;
        try {
          lease=leaseSourceFolder(parentKey);
          store.updateFolderLastModifiedTime(parentKey,lease);
        }
 catch (        AzureException e) {
          String errorCode="";
          try {
            StorageException e2=(StorageException)e.getCause();
            errorCode=e2.getErrorCode();
          }
 catch (          Exception e3) {
          }
          if (errorCode.equals("BlobNotFound")) {
            throw new FileNotFoundException("Folder does not exist: " + parentKey);
          }
          LOG.warn("Got unexpected exception trying to get lease on {}. {}",parentKey,e.getMessage());
          throw e;
        }
 finally {
          try {
            if (lease != null) {
              lease.free();
            }
          }
 catch (          Exception e) {
            LOG.error("Unable to free lease on {}",parentKey,e);
          }
        }
      }
 else {
        store.updateFolderLastModifiedTime(parentKey,null);
      }
    }
  }
}
