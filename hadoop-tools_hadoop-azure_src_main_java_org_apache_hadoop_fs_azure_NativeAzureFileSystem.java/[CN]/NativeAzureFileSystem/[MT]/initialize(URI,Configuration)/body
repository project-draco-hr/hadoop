{
  uri=reconstructAuthorityIfNeeded(uri,conf);
  if (null == uri.getAuthority()) {
    final String errMsg=String.format("Cannot initialize WASB file system, URI authority not recognized.");
    throw new IllegalArgumentException(errMsg);
  }
  super.initialize(uri,conf);
  if (store == null) {
    store=createDefaultStore(conf);
  }
  AzureFileSystemMetricsSystem.fileSystemStarted();
  String sourceName=newMetricsSourceName(), sourceDesc="Azure Storage Volume File System metrics";
  instrumentation=DefaultMetricsSystem.instance().register(sourceName,sourceDesc,new AzureFileSystemInstrumentation(conf));
  AzureFileSystemMetricsSystem.registerSource(sourceName,sourceDesc,instrumentation);
  store.initialize(uri,conf,instrumentation);
  setConf(conf);
  this.uri=URI.create(uri.getScheme() + "://" + uri.getAuthority());
  this.workingDir=new Path("/user",UserGroupInformation.getCurrentUser().getShortUserName()).makeQualified(getUri(),getWorkingDirectory());
  this.blockSize=conf.getLong(AZURE_BLOCK_SIZE_PROPERTY_NAME,MAX_AZURE_BLOCK_SIZE);
  if (LOG.isDebugEnabled()) {
    LOG.debug("NativeAzureFileSystem. Initializing.");
    LOG.debug("  blockSize  = " + conf.getLong(AZURE_BLOCK_SIZE_PROPERTY_NAME,MAX_AZURE_BLOCK_SIZE));
  }
}
