{
  HttpServletRequest httpRequest=(HttpServletRequest)request;
  HttpServletResponse httpResponse=(HttpServletResponse)response;
  try {
    boolean newToken=false;
    AuthenticationToken token=getToken(httpRequest);
    if (token == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Request [{}] triggering authentication",getRequestURL(httpRequest));
      }
      token=authHandler.authenticate(httpRequest,httpResponse);
      if (token != null && token != AuthenticationToken.ANONYMOUS) {
        token.setExpires(System.currentTimeMillis() + getValidity() * 1000);
      }
      newToken=true;
    }
    if (token != null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Request [{}] user [{}] authenticated",getRequestURL(httpRequest),token.getUserName());
      }
      final AuthenticationToken authToken=token;
      httpRequest=new HttpServletRequestWrapper(httpRequest){
        @Override public String getAuthType(){
          return authToken.getType();
        }
        @Override public String getRemoteUser(){
          return authToken.getUserName();
        }
        @Override public Principal getUserPrincipal(){
          return (authToken != AuthenticationToken.ANONYMOUS) ? authToken : null;
        }
      }
;
      if (newToken && token != AuthenticationToken.ANONYMOUS) {
        String signedToken=signer.sign(token.toString());
        Cookie cookie=createCookie(signedToken);
        httpResponse.addCookie(cookie);
      }
      filterChain.doFilter(httpRequest,httpResponse);
    }
  }
 catch (  AuthenticationException ex) {
    if (!httpResponse.isCommitted()) {
      Cookie cookie=createCookie("");
      cookie.setMaxAge(0);
      httpResponse.addCookie(cookie);
      httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,ex.getMessage());
    }
    LOG.warn("Authentication exception: " + ex.getMessage(),ex);
  }
}
