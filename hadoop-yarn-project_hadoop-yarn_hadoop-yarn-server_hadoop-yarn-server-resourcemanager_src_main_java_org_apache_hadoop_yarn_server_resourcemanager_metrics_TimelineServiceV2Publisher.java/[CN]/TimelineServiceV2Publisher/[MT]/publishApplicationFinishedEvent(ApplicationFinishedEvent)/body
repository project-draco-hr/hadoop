{
  ApplicationEntity entity=createApplicationEntity(event.getApplicationId());
  RMAppMetrics appMetrics=event.getAppMetrics();
  entity.addInfo(ApplicationMetricsConstants.APP_CPU_METRICS,appMetrics.getVcoreSeconds());
  entity.addInfo(ApplicationMetricsConstants.APP_MEM_METRICS,appMetrics.getMemorySeconds());
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setId(ApplicationMetricsConstants.FINISHED_EVENT_TYPE);
  tEvent.setTimestamp(event.getTimestamp());
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put(ApplicationMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,event.getDiagnosticsInfo());
  eventInfo.put(ApplicationMetricsConstants.FINAL_STATUS_EVENT_INFO,event.getFinalApplicationStatus().toString());
  eventInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,event.getYarnApplicationState().toString());
  if (event.getLatestApplicationAttemptId() != null) {
    eventInfo.put(ApplicationMetricsConstants.LATEST_APP_ATTEMPT_EVENT_INFO,event.getLatestApplicationAttemptId().toString());
  }
  tEvent.setInfo(eventInfo);
  entity.addEvent(tEvent);
  putEntity(entity,event.getApplicationId());
  event.getApp().stopTimelineCollector();
}
