{
  ApplicationEntity entity=createApplicationEntity(app.getApplicationId());
  RMAppMetrics appMetrics=app.getRMAppMetrics();
  entity.addInfo(ApplicationMetricsConstants.APP_CPU_METRICS,appMetrics.getVcoreSeconds());
  entity.addInfo(ApplicationMetricsConstants.APP_MEM_METRICS,appMetrics.getMemorySeconds());
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setId(ApplicationMetricsConstants.FINISHED_EVENT_TYPE);
  tEvent.setTimestamp(finishedTime);
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put(ApplicationMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,app.getDiagnostics().toString());
  eventInfo.put(ApplicationMetricsConstants.FINAL_STATUS_EVENT_INFO,app.getFinalApplicationStatus().toString());
  eventInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,RMServerUtils.createApplicationState(state).toString());
  ApplicationAttemptId appAttemptId=app.getCurrentAppAttempt() == null ? null : app.getCurrentAppAttempt().getAppAttemptId();
  if (appAttemptId != null) {
    eventInfo.put(ApplicationMetricsConstants.LATEST_APP_ATTEMPT_EVENT_INFO,appAttemptId.toString());
  }
  tEvent.setInfo(eventInfo);
  entity.addEvent(tEvent);
  getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,entity,app.getApplicationId()));
}
