{
  ApplicationEntity entity=createApplicationEntity(app.getApplicationId());
  entity.setQueue(app.getQueue());
  entity.setCreatedTime(createdTime);
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO,app.getName());
  entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,app.getApplicationType());
  entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO,app.getUser());
  entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,app.getSubmitTime());
  entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,app.getApplicationTags());
  entityInfo.put(ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,app.getApplicationSubmissionContext().getUnmanagedAM());
  entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,app.getApplicationSubmissionContext().getPriority().getPriority());
  entity.getConfigs().put(ApplicationMetricsConstants.AM_NODE_LABEL_EXPRESSION,app.getAmNodeLabelExpression());
  entity.getConfigs().put(ApplicationMetricsConstants.APP_NODE_LABEL_EXPRESSION,app.getAppNodeLabelExpression());
  entity.setInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setId(ApplicationMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(createdTime);
  entity.addEvent(tEvent);
  getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,entity,app.getApplicationId()));
}
