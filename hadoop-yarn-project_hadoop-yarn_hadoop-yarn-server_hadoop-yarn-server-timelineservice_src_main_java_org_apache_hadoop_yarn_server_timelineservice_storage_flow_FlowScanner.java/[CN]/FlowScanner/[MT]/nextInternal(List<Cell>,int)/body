{
  Cell cell=null;
  startNext();
  ByteArrayComparator comp=new ByteArrayComparator();
  byte[] currentColumnQualifier=TimelineStorageUtils.EMPTY_BYTES;
  AggregationOperation currentAggOp=null;
  SortedSet<Cell> currentColumnCells=new TreeSet<>(KeyValue.COMPARATOR);
  Set<String> alreadySeenAggDim=new HashSet<>();
  int addedCnt=0;
  long currentTimestamp=System.currentTimeMillis();
  ValueConverter converter=null;
  while (cellLimit <= 0 || addedCnt < cellLimit) {
    cell=peekAtNextCell(cellLimit);
    if (cell == null) {
      break;
    }
    byte[] newColumnQualifier=CellUtil.cloneQualifier(cell);
    if (comp.compare(currentColumnQualifier,newColumnQualifier) != 0) {
      if (converter != null && isNumericConverter(converter)) {
        addedCnt+=emitCells(cells,currentColumnCells,currentAggOp,converter,currentTimestamp);
      }
      resetState(currentColumnCells,alreadySeenAggDim);
      currentColumnQualifier=newColumnQualifier;
      currentAggOp=getCurrentAggOp(cell);
      converter=getValueConverter(newColumnQualifier);
    }
    if (!isNumericConverter(converter)) {
      currentColumnCells.add(cell);
      nextCell(cellLimit);
      continue;
    }
    collectCells(currentColumnCells,currentAggOp,cell,alreadySeenAggDim,(NumericValueConverter)converter);
    nextCell(cellLimit);
  }
  if (!currentColumnCells.isEmpty()) {
    addedCnt+=emitCells(cells,currentColumnCells,currentAggOp,converter,currentTimestamp);
    if (LOG.isDebugEnabled()) {
      if (addedCnt > 0) {
        LOG.debug("emitted cells. " + addedCnt + " for "+ this.action+ " rowKey="+ FlowRunRowKey.parseRowKey(cells.get(0).getRow()).toString());
      }
 else {
        LOG.debug("emitted no cells for " + this.action);
      }
    }
  }
  return hasMore();
}
