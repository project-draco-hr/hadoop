{
  final AtomicInteger leaseRenewalCount=new AtomicInteger();
  Mockito.doAnswer(new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocation) throws Throwable {
      leaseRenewalCount.incrementAndGet();
      return true;
    }
  }
).when(MOCK_DFSCLIENT).renewLease();
  DFSOutputStream mockStream=Mockito.mock(DFSOutputStream.class);
  long fileId=123L;
  renewer.put(fileId,mockStream,MOCK_DFSCLIENT);
  long failTime=Time.monotonicNow() + 5000;
  while (Time.monotonicNow() < failTime && leaseRenewalCount.get() == 0) {
    Thread.sleep(50);
  }
  if (leaseRenewalCount.get() == 0) {
    Assert.fail("Did not renew lease at all!");
  }
  renewer.closeFile(fileId,MOCK_DFSCLIENT);
}
