{
  ResourceCalculator resourceCalculator=new DefaultResourceCalculator();
  final int minMemory=1024;
  Resource minResource=Resources.createResource(minMemory,0);
  ResourceRequest ask=new ResourceRequestPBImpl();
  ask.setCapability(Resources.createResource(-1024));
  Resource before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,null,minResource);
  Resource after=ask.getCapability();
  assertEquals(minMemory,ask.getCapability().getMemory());
  assertTrue(before == after);
  ask.setCapability(Resources.createResource(0));
  before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,null,minResource);
  after=ask.getCapability();
  assertEquals(minMemory,ask.getCapability().getMemory());
  assertTrue(before == after);
  ask.setCapability(Resources.createResource(2 * minMemory));
  before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,null,minResource);
  after=ask.getCapability();
  assertEquals(2 * minMemory,ask.getCapability().getMemory());
  assertTrue(before == after);
  ask.setCapability(Resources.createResource(minMemory + 10));
  before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,null,minResource);
  after=ask.getCapability();
  assertEquals(2 * minMemory,ask.getCapability().getMemory());
  assertTrue(before == after);
}
