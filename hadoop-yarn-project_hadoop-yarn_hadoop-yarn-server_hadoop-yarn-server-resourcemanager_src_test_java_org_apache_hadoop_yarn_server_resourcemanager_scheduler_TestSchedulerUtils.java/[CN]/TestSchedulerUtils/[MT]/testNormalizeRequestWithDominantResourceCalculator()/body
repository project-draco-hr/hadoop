{
  ResourceCalculator resourceCalculator=new DominantResourceCalculator();
  Resource minResource=Resources.createResource(1024,1);
  Resource clusterResource=Resources.createResource(10 * 1024,10);
  ResourceRequest ask=new ResourceRequestPBImpl();
  ask.setCapability(Resources.createResource(-1024,-1));
  Resource before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,clusterResource,minResource);
  Resource after=ask.getCapability();
  assertEquals(minResource,ask.getCapability());
  assertTrue(before == after);
  ask.setCapability(Resources.createResource(0,0));
  before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,clusterResource,minResource);
  after=ask.getCapability();
  assertEquals(minResource,ask.getCapability());
  assertEquals(1,ask.getCapability().getVirtualCores());
  assertEquals(1024,ask.getCapability().getMemory());
  assertTrue(before == after);
  ask.setCapability(Resources.createResource(1536,0));
  before=ask.getCapability();
  SchedulerUtils.normalizeRequest(ask,resourceCalculator,clusterResource,minResource);
  after=ask.getCapability();
  assertEquals(Resources.createResource(2048,1),ask.getCapability());
  assertEquals(1,ask.getCapability().getVirtualCores());
  assertEquals(2048,ask.getCapability().getMemory());
  assertTrue(before == after);
}
