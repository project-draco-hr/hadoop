{
  if (qjmhaCluster != null) {
    qjmhaCluster.shutdown();
  }
  conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_HA_TAILEDITS_PERIOD_KEY,20 * 60);
  conf.setBoolean(DFSConfigKeys.DFS_HA_TAILEDITS_INPROGRESS_KEY,false);
  HAUtil.setAllowStandbyReads(conf,true);
  qjmhaCluster=new MiniQJMHACluster.Builder(conf).build();
  cluster=qjmhaCluster.getDfsCluster();
  try {
    List<URI> allDirs=Lists.newArrayList();
    allDirs.addAll(cluster.getNameDirs(0));
    allDirs.addAll(cluster.getNameDirs(1));
    assertNoEditFiles(allDirs);
    cluster.transitionToActive(0);
    assertEditFiles(cluster.getNameDirs(0),NNStorage.getInProgressEditsFileName(1));
    assertNoEditFiles(cluster.getNameDirs(1));
    cluster.getNameNode(0).getRpcServer().mkdirs("/test",FsPermission.createImmutable((short)0755),true);
    cluster.getNameNode(1).getNamesystem().getEditLogTailer().doTailEdits();
    assertNull(NameNodeAdapter.getFileInfo(cluster.getNameNode(1),"/test",true));
    cluster.restartNameNode(1);
    assertEditFiles(cluster.getNameDirs(0),NNStorage.getInProgressEditsFileName(1));
    assertNoEditFiles(cluster.getNameDirs(1));
    assertNull(NameNodeAdapter.getFileInfo(cluster.getNameNode(1),"/test",true));
    cluster.getNameNode(0).getRpcServer().mkdirs("/test2",FsPermission.createImmutable((short)0755),true);
    cluster.restartNameNode(0);
    cluster.transitionToActive(1);
    assertNotNull(NameNodeAdapter.getFileInfo(cluster.getNameNode(1),"/test",true));
    assertNotNull(NameNodeAdapter.getFileInfo(cluster.getNameNode(1),"/test2",true));
  }
  finally {
    if (qjmhaCluster != null) {
      qjmhaCluster.shutdown();
    }
  }
}
