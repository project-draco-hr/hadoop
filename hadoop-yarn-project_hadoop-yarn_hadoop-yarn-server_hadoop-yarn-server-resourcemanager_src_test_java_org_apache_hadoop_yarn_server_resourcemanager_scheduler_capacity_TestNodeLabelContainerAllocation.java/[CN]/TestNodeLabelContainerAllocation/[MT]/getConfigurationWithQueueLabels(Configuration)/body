{
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration(config);
  conf.setQueues(CapacitySchedulerConfiguration.ROOT,new String[]{"a","b","c"});
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"x",100);
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"y",100);
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"z",100);
  final String A=CapacitySchedulerConfiguration.ROOT + ".a";
  conf.setCapacity(A,10);
  conf.setMaximumCapacity(A,15);
  conf.setAccessibleNodeLabels(A,toSet("x"));
  conf.setCapacityByLabel(A,"x",100);
  final String B=CapacitySchedulerConfiguration.ROOT + ".b";
  conf.setCapacity(B,20);
  conf.setAccessibleNodeLabels(B,toSet("y","z"));
  conf.setCapacityByLabel(B,"y",100);
  conf.setCapacityByLabel(B,"z",100);
  final String C=CapacitySchedulerConfiguration.ROOT + ".c";
  conf.setCapacity(C,70);
  conf.setMaximumCapacity(C,70);
  conf.setAccessibleNodeLabels(C,RMNodeLabelsManager.EMPTY_STRING_SET);
  final String A1=A + ".a1";
  conf.setQueues(A,new String[]{"a1"});
  conf.setCapacity(A1,100);
  conf.setMaximumCapacity(A1,100);
  conf.setCapacityByLabel(A1,"x",100);
  final String B1=B + ".b1";
  conf.setQueues(B,new String[]{"b1"});
  conf.setCapacity(B1,100);
  conf.setMaximumCapacity(B1,100);
  conf.setCapacityByLabel(B1,"y",100);
  conf.setCapacityByLabel(B1,"z",100);
  final String C1=C + ".c1";
  conf.setQueues(C,new String[]{"c1"});
  conf.setCapacity(C1,100);
  conf.setMaximumCapacity(C1,100);
  return conf;
}
