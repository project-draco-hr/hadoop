{
  mgr.addToCluserNodeLabels(ImmutableSet.of("x","y"));
  mgr.addLabelsToNode(ImmutableMap.of(NodeId.newInstance("h1",0),toSet("x"),NodeId.newInstance("h2",0),toSet("y")));
  MockRM rm1=new MockRM(TestUtils.getConfigurationWithDefaultQueueLabels(conf)){
    @Override public RMNodeLabelsManager createNodeLabelManager(){
      return mgr;
    }
  }
;
  rm1.getRMContext().setNodeLabelManager(mgr);
  rm1.start();
  MockNM nm1=rm1.registerNode("h1:1234",8000);
  MockNM nm2=rm1.registerNode("h2:1234",8000);
  MockNM nm3=rm1.registerNode("h3:1234",8000);
  ContainerId containerId;
  RMApp app1=rm1.submitApp(200,"app","user",null,"a1");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  am1.allocate("*",1024,1,new ArrayList<ContainerId>());
  containerId=ContainerId.newContainerId(am1.getApplicationAttemptId(),2);
  Assert.assertFalse(rm1.waitForState(nm3,containerId,RMContainerState.ALLOCATED,10 * 1000));
  Assert.assertTrue(rm1.waitForState(nm1,containerId,RMContainerState.ALLOCATED,10 * 1000));
  checkTaskContainersHost(am1.getApplicationAttemptId(),containerId,rm1,"h1");
  RMApp app2=rm1.submitApp(200,"app","user",null,"b1");
  MockAM am2=MockRM.launchAndRegisterAM(app2,rm1,nm2);
  am2.allocate("*",1024,1,new ArrayList<ContainerId>());
  containerId=ContainerId.newContainerId(am2.getApplicationAttemptId(),2);
  Assert.assertFalse(rm1.waitForState(nm3,containerId,RMContainerState.ALLOCATED,10 * 1000));
  Assert.assertTrue(rm1.waitForState(nm2,containerId,RMContainerState.ALLOCATED,10 * 1000));
  checkTaskContainersHost(am2.getApplicationAttemptId(),containerId,rm1,"h2");
  RMApp app3=rm1.submitApp(200,"app","user",null,"c1");
  MockAM am3=MockRM.launchAndRegisterAM(app3,rm1,nm3);
  am3.allocate("*",1024,1,new ArrayList<ContainerId>());
  containerId=ContainerId.newContainerId(am3.getApplicationAttemptId(),2);
  Assert.assertFalse(rm1.waitForState(nm2,containerId,RMContainerState.ALLOCATED,10 * 1000));
  Assert.assertTrue(rm1.waitForState(nm3,containerId,RMContainerState.ALLOCATED,10 * 1000));
  checkTaskContainersHost(am3.getApplicationAttemptId(),containerId,rm1,"h3");
  rm1.close();
}
