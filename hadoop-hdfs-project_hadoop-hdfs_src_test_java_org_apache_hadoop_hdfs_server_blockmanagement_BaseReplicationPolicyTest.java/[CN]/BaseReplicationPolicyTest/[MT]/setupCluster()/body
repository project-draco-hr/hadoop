{
  Configuration conf=new HdfsConfiguration();
  dataNodes=getDatanodeDescriptors(conf);
  FileSystem.setDefaultUri(conf,"hdfs://localhost:0");
  conf.set(DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY,"0.0.0.0:0");
  File baseDir=PathUtils.getTestDir(TestReplicationPolicy.class);
  conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,new File(baseDir,"name").getPath());
  conf.set(DFSConfigKeys.DFS_BLOCK_REPLICATOR_CLASSNAME_KEY,blockPlacementPolicy);
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_READ_KEY,true);
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_AVOID_STALE_DATANODE_FOR_WRITE_KEY,true);
  DFSTestUtil.formatNameNode(conf);
  namenode=new NameNode(conf);
  nameNodeRpc=namenode.getRpcServer();
  final BlockManager bm=namenode.getNamesystem().getBlockManager();
  replicator=bm.getBlockPlacementPolicy();
  cluster=bm.getDatanodeManager().getNetworkTopology();
  dnManager=bm.getDatanodeManager();
  for (int i=0; i < dataNodes.length; i++) {
    cluster.add(dataNodes[i]);
    bm.getDatanodeManager().getHeartbeatManager().addDatanode(dataNodes[i]);
  }
  updateHeartbeatWithUsage();
}
