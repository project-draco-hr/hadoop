{
  verifyDir(logDir);
  LogManager.resetConfiguration();
  File log4jFile=new File(configDir,name + "-log4j.properties");
  if (log4jFile.exists()) {
    PropertyConfigurator.configureAndWatch(log4jFile.toString(),10 * 1000);
    log=LoggerFactory.getLogger(Server.class);
  }
 else {
    Properties props=new Properties();
    try {
      InputStream is=getResource(DEFAULT_LOG4J_PROPERTIES);
      try {
        props.load(is);
      }
  finally {
        is.close();
      }
    }
 catch (    IOException ex) {
      throw new ServerException(ServerException.ERROR.S03,DEFAULT_LOG4J_PROPERTIES,ex.getMessage(),ex);
    }
    PropertyConfigurator.configure(props);
    log=LoggerFactory.getLogger(Server.class);
    log.warn("Log4j [{}] configuration file not found, using default configuration from classpath",log4jFile);
  }
}
