{
  Socket sock=null;
  try {
    if (testDescription != null) {
      LOG.info("Testing : " + testDescription);
    }
    LOG.info("Going to write:" + StringUtils.byteToHexString(sendBuf.toByteArray()));
    sock=new Socket();
    sock.connect(dnAddr,HdfsConstants.READ_TIMEOUT);
    sock.setSoTimeout(HdfsConstants.READ_TIMEOUT);
    OutputStream out=sock.getOutputStream();
    byte[] retBuf=new byte[recvBuf.size()];
    DataInputStream in=new DataInputStream(sock.getInputStream());
    out.write(sendBuf.toByteArray());
    out.flush();
    try {
      in.readFully(retBuf);
    }
 catch (    EOFException eof) {
      if (eofExpected) {
        LOG.info("Got EOF as expected.");
        return;
      }
      throw eof;
    }
    LOG.info("Received: " + StringUtils.byteToHexString(retBuf));
    LOG.info("Expected: " + StringUtils.byteToHexString(recvBuf.toByteArray()));
    if (eofExpected) {
      throw new IOException("Did not recieve IOException when an exception " + "is expected while reading from " + datanode.getName());
    }
    byte[] needed=recvBuf.toByteArray();
    for (int i=0; i < retBuf.length; i++) {
      System.out.print(retBuf[i]);
      assertEquals("checking byte[" + i + "]",needed[i],retBuf[i]);
    }
  }
  finally {
    IOUtils.closeSocket(sock);
  }
}
