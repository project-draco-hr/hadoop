{
  if (!blockManager.isPopulatingReplQueues() && blockManager.shouldPopulateReplQueues()) {
    blockManager.initializeReplQueues();
  }
  if (!force && (blockManager.getBytesInFuture() > 0)) {
    LOG.error("Refusing to leave safe mode without a force flag. " + "Exiting safe mode will cause a deletion of " + blockManager.getBytesInFuture() + " byte(s). Please use "+ "-forceExit flag to exit safe mode forcefully if data loss is "+ "acceptable.");
    return;
  }
  long timeInSafemode=now() - startTime;
  NameNode.stateChangeLog.info("STATE* Leaving safe mode after " + timeInSafemode / 1000 + " secs");
  NameNode.getNameNodeMetrics().setSafeModeTime((int)timeInSafemode);
  if (reached >= 0) {
    NameNode.stateChangeLog.info("STATE* Safe mode is OFF");
  }
  reached=-1;
  reachedTimestamp=-1;
  safeMode=null;
  final NetworkTopology nt=blockManager.getDatanodeManager().getNetworkTopology();
  NameNode.stateChangeLog.info("STATE* Network topology has " + nt.getNumOfRacks() + " racks and "+ nt.getNumOfLeaves()+ " datanodes");
  NameNode.stateChangeLog.info("STATE* UnderReplicatedBlocks has " + blockManager.numOfUnderReplicatedBlocks() + " blocks");
  startSecretManagerIfNecessary();
  StartupProgress prog=NameNode.getStartupProgress();
  if (prog.getStatus(Phase.SAFEMODE) != Status.COMPLETE) {
    prog.endStep(Phase.SAFEMODE,STEP_AWAITING_REPORTED_BLOCKS);
    prog.endPhase(Phase.SAFEMODE);
  }
}
