{
  Token<DelegationTokenIdentifier> token;
  checkOperation(OperationCategory.WRITE);
  writeLock();
  try {
    checkOperation(OperationCategory.WRITE);
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot issue delegation token",safeMode);
    }
    if (!isAllowedDelegationTokenOp()) {
      throw new IOException("Delegation Token can be issued only with kerberos or web authentication");
    }
    if (dtSecretManager == null || !dtSecretManager.isRunning()) {
      LOG.warn("trying to get DT with no secret manager running");
      return null;
    }
    UserGroupInformation ugi=getRemoteUser();
    String user=ugi.getUserName();
    Text owner=new Text(user);
    Text realUser=null;
    if (ugi.getRealUser() != null) {
      realUser=new Text(ugi.getRealUser().getUserName());
    }
    DelegationTokenIdentifier dtId=new DelegationTokenIdentifier(owner,renewer,realUser);
    token=new Token<DelegationTokenIdentifier>(dtId,dtSecretManager);
    long expiryTime=dtSecretManager.getTokenExpiryTime(dtId);
    getEditLog().logGetDelegationToken(dtId,expiryTime);
  }
  finally {
    writeUnlock();
  }
  getEditLog().logSync();
  return token;
}
