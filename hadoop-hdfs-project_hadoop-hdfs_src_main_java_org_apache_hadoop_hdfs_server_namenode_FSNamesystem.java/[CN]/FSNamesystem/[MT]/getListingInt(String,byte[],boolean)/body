{
  String src=srcArg;
  DirectoryListing dl;
  FSPermissionChecker pc=getPermissionChecker();
  checkOperation(OperationCategory.READ);
  byte[][] pathComponents=FSDirectory.getPathComponentsForReservedPath(src);
  String startAfterString=new String(startAfter);
  readLock();
  try {
    checkOperation(OperationCategory.READ);
    src=resolvePath(src,pathComponents);
    if (FSDirectory.isReservedName(startAfterString)) {
      byte[][] startAfterComponents=FSDirectory.getPathComponentsForReservedPath(startAfterString);
      try {
        String tmp=FSDirectory.resolvePath(src,startAfterComponents,dir);
        byte[][] regularPath=INode.getPathComponents(tmp);
        startAfter=regularPath[regularPath.length - 1];
      }
 catch (      IOException e) {
        throw new DirectoryListingStartAfterNotFoundException("Can't find startAfter " + startAfterString);
      }
    }
    boolean isSuperUser=true;
    if (isPermissionEnabled) {
      if (dir.isDir(src)) {
        checkPathAccess(pc,src,FsAction.READ_EXECUTE);
      }
 else {
        checkTraverse(pc,src);
      }
      isSuperUser=pc.isSuperUser();
    }
    logAuditEvent(true,"listStatus",srcArg);
    dl=dir.getListing(src,startAfter,needLocation,isSuperUser);
  }
  finally {
    readUnlock();
  }
  return dl;
}
