{
  checkOperation(OperationCategory.WRITE);
  final FSPermissionChecker pc=isPermissionEnabled ? getPermissionChecker() : null;
  CacheEntryWithPayload cacheEntry=RetryCache.waitForCompletion(retryCache,null);
  if (cacheEntry != null && cacheEntry.isSuccess()) {
    return (Long)cacheEntry.getPayload();
  }
  boolean success=false;
  writeLock();
  Long result=null;
  try {
    checkOperation(OperationCategory.WRITE);
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot add PathBasedCache directive",safeMode);
    }
    if (directive.getId() != null) {
      throw new IOException("addDirective: you cannot specify an ID " + "for this operation.");
    }
    PathBasedCacheDirective effectiveDirective=cacheManager.addDirective(directive,pc);
    getEditLog().logAddPathBasedCacheDirective(effectiveDirective,cacheEntry != null);
    result=effectiveDirective.getId();
    success=true;
  }
  finally {
    writeUnlock();
    if (success) {
      getEditLog().logSync();
    }
    if (isAuditEnabled() && isExternalInvocation()) {
      logAuditEvent(success,"addPathBasedCacheDirective",null,null,null);
    }
    RetryCache.setState(cacheEntry,success,result);
  }
  return result;
}
