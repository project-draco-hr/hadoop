{
  checkSuperuserPrivilege();
  checkOperation(OperationCategory.READ);
  int count=0;
  ArrayList<CorruptFileBlockInfo> corruptFiles=new ArrayList<CorruptFileBlockInfo>();
  if (cookieTab == null) {
    cookieTab=new String[]{null};
  }
  if (blockManager.getMissingBlocksCount() == 0) {
    if (cookieTab[0] == null) {
      cookieTab[0]=String.valueOf(getIntCookie(cookieTab[0]));
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("there are no corrupt file blocks.");
    }
    return corruptFiles;
  }
  readLock();
  try {
    checkOperation(OperationCategory.READ);
    if (!isPopulatingReplQueues()) {
      throw new IOException("Cannot run listCorruptFileBlocks because " + "replication queues have not been initialized.");
    }
    final Iterator<BlockInfo> blkIterator=blockManager.getCorruptReplicaBlockIterator();
    int skip=getIntCookie(cookieTab[0]);
    for (int i=0; i < skip && blkIterator.hasNext(); i++) {
      blkIterator.next();
    }
    while (blkIterator.hasNext()) {
      BlockInfo blk=blkIterator.next();
      BlockCollection bc=getBlockCollection(blk.getBlockCollectionId());
      final INode inode=(INode)bc;
      skip++;
      if (inode != null && blockManager.countNodes(blk).liveReplicas() == 0) {
        String src=FSDirectory.getFullPathName(inode);
        if (src.startsWith(path)) {
          corruptFiles.add(new CorruptFileBlockInfo(src,blk));
          count++;
          if (count >= DEFAULT_MAX_CORRUPT_FILEBLOCKS_RETURNED)           break;
        }
      }
    }
    cookieTab[0]=String.valueOf(skip);
    if (LOG.isDebugEnabled()) {
      LOG.debug("list corrupt file blocks returned: " + count);
    }
    return corruptFiles;
  }
  finally {
    readUnlock();
  }
}
