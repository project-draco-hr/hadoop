{
  final FSPermissionChecker pc=getPermissionChecker();
  CacheEntry cacheEntry=RetryCache.waitForCompletion(retryCache);
  if (cacheEntry != null && cacheEntry.isSuccess()) {
    return;
  }
  boolean success=false;
  checkOperation(OperationCategory.WRITE);
  writeLock();
  try {
    checkOperation(OperationCategory.WRITE);
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot delete snapshot for " + snapshotRoot,safeMode);
    }
    checkOwner(pc,snapshotRoot);
    BlocksMapUpdateInfo collectedBlocks=new BlocksMapUpdateInfo();
    List<INode> removedINodes=new ChunkedArrayList<INode>();
    dir.writeLock();
    try {
      snapshotManager.deleteSnapshot(snapshotRoot,snapshotName,collectedBlocks,removedINodes);
      dir.removeFromInodeMap(removedINodes);
    }
  finally {
      dir.writeUnlock();
    }
    removedINodes.clear();
    this.removeBlocks(collectedBlocks);
    collectedBlocks.clear();
    getEditLog().logDeleteSnapshot(snapshotRoot,snapshotName,cacheEntry != null);
    success=true;
  }
  finally {
    writeUnlock();
    RetryCache.setState(cacheEntry,success);
  }
  getEditLog().logSync();
  if (auditLog.isInfoEnabled() && isExternalInvocation()) {
    String rootPath=Snapshot.getSnapshotPath(snapshotRoot,snapshotName);
    logAuditEvent(true,"deleteSnapshot",rootPath,null,null);
  }
}
