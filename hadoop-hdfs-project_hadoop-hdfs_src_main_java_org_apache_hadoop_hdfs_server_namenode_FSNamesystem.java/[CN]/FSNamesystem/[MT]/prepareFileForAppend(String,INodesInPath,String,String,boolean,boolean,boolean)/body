{
  final INodeFile file=iip.getLastINode().asFile();
  final QuotaCounts delta=verifyQuotaForUCBlock(file,iip);
  file.recordModification(iip.getLatestSnapshotId());
  file.toUnderConstruction(leaseHolder,clientMachine);
  leaseManager.addLease(file.getFileUnderConstructionFeature().getClientName(),file.getId());
  LocatedBlock ret=null;
  if (!newBlock) {
    ret=blockManager.convertLastBlockToUnderConstruction(file,0);
    if (ret != null && delta != null) {
      Preconditions.checkState(delta.getStorageSpace() >= 0,"appending to a block with size larger than the preferred block size");
      dir.writeLock();
      try {
        dir.updateCountNoQuotaCheck(iip,iip.length() - 1,delta);
      }
  finally {
        dir.writeUnlock();
      }
    }
  }
 else {
    BlockInfo lastBlock=file.getLastBlock();
    if (lastBlock != null) {
      ExtendedBlock blk=new ExtendedBlock(this.getBlockPoolId(),lastBlock);
      ret=new LocatedBlock(blk,new DatanodeInfo[0]);
    }
  }
  if (writeToEditLog) {
    if (NameNodeLayoutVersion.supports(Feature.APPEND_NEW_BLOCK,getEffectiveLayoutVersion())) {
      getEditLog().logAppendFile(src,file,newBlock,logRetryCache);
    }
 else {
      getEditLog().logOpenFile(src,file,false,logRetryCache);
    }
  }
  return ret;
}
