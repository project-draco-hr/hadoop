{
  List<Map<String,String>> jasList=new ArrayList<Map<String,String>>();
  FSEditLog log=getFSImage().getEditLog();
  if (log != null) {
    boolean openForWrite=log.isOpenForWrite();
    for (    JournalAndStream jas : log.getJournals()) {
      final Map<String,String> jasMap=new HashMap<String,String>();
      String manager=jas.getManager().toString();
      jasMap.put("required",String.valueOf(jas.isRequired()));
      jasMap.put("disabled",String.valueOf(jas.isDisabled()));
      jasMap.put("manager",manager);
      if (jas.isDisabled()) {
        jasMap.put("stream","Failed");
      }
 else       if (openForWrite) {
        EditLogOutputStream elos=jas.getCurrentStream();
        if (elos != null) {
          jasMap.put("stream",elos.generateHtmlReport());
        }
 else {
          jasMap.put("stream","not currently writing");
        }
      }
 else {
        jasMap.put("stream","open for read");
      }
      jasList.add(jasMap);
    }
  }
  return JSON.toString(jasList);
}
