{
  Block newBlock=null;
  long offset;
  checkOperation(OperationCategory.WRITE);
  waitForLoadingFSImage();
  writeLock();
  try {
    checkOperation(OperationCategory.WRITE);
    LocatedBlock[] onRetryBlock=new LocatedBlock[1];
    FileState fileState=analyzeFileState(src,fileId,clientName,previous,onRetryBlock);
    final INodeFile pendingFile=fileState.inode;
    src=fileState.path;
    if (onRetryBlock[0] != null) {
      if (onRetryBlock[0].getLocations().length > 0) {
        return onRetryBlock[0];
      }
 else {
        BlockInfoContiguous lastBlockInFile=pendingFile.getLastBlock();
        ((BlockInfoContiguousUnderConstruction)lastBlockInFile).setExpectedLocations(targets);
        offset=pendingFile.computeFileSize();
        return makeLocatedBlock(lastBlockInFile,targets,offset);
      }
    }
    commitOrCompleteLastBlock(pendingFile,fileState.iip,ExtendedBlock.getLocalBlock(previous));
    newBlock=createNewBlock();
    INodesInPath inodesInPath=INodesInPath.fromINode(pendingFile);
    saveAllocatedBlock(src,inodesInPath,newBlock,targets);
    persistNewBlock(src,pendingFile);
    offset=pendingFile.computeFileSize();
  }
  finally {
    writeUnlock();
  }
  getEditLog().logSync();
  return makeLocatedBlock(newBlock,targets,offset);
}
