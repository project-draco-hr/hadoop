{
  for (int attempt=0; attempt < 2; attempt++) {
    boolean isReadOp=(attempt == 0);
    if (isReadOp) {
      checkOperation(OperationCategory.READ);
      readLock();
    }
 else {
      checkOperation(OperationCategory.WRITE);
      writeLock();
    }
    try {
      if (isReadOp) {
        checkOperation(OperationCategory.READ);
      }
 else {
        checkOperation(OperationCategory.WRITE);
      }
      if (isInSafeMode()) {
        doAccessTime=false;
      }
      final INodesInPath iip=dir.getLastINodeInPath(src);
      final INodeFile inode=INodeFile.valueOf(iip.getLastINode(),src);
      if (!iip.isSnapshot() && doAccessTime && isAccessTimeSupported()) {
        final long now=now();
        if (now > inode.getAccessTime() + getAccessTimePrecision()) {
          if (isReadOp) {
            continue;
          }
          dir.setTimes(src,inode,-1,now,false,iip.getLatestSnapshot());
        }
      }
      final long fileSize=iip.getPathSnapshot() != null ? inode.computeFileSize(iip.getPathSnapshot()) : inode.computeFileSizeNotIncludingLastUcBlock();
      return blockManager.createLocatedBlocks(inode.getBlocks(),fileSize,inode.isUnderConstruction(),offset,length,needBlockToken);
    }
  finally {
      if (isReadOp) {
        readUnlock();
      }
 else {
        writeUnlock();
      }
    }
  }
  return null;
}
