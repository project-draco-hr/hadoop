{
  for (int attempt=0; attempt < 2; attempt++) {
    if (attempt == 0) {
      readLock();
    }
 else {
      writeLock();
    }
    try {
      checkOperation(OperationCategory.READ);
      if (isInSafeMode()) {
        doAccessTime=false;
      }
      final INodesInPath iip=dir.getLastINodeInPath(src);
      final INodeFile inode=INodeFile.valueOf(iip.getLastINode(),src);
      if (!iip.isSnapshot() && doAccessTime && isAccessTimeSupported()) {
        final long now=now();
        if (now <= inode.getAccessTime() + getAccessTimePrecision()) {
          if (attempt == 0) {
            continue;
          }
        }
        dir.setTimes(src,inode,-1,now,false,iip.getLatestSnapshot());
      }
      return blockManager.createLocatedBlocks(inode.getBlocks(),inode.computeFileSize(false,iip.getPathSnapshot()),inode.isUnderConstruction(),offset,length,needBlockToken);
    }
  finally {
      if (attempt == 0) {
        readUnlock();
      }
 else {
        writeUnlock();
      }
    }
  }
  return null;
}
