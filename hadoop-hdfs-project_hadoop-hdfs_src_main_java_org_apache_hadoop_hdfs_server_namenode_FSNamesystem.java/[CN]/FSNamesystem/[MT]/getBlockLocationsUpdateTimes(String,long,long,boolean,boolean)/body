{
  String src=srcArg;
  FSPermissionChecker pc=getPermissionChecker();
  byte[][] pathComponents=FSDirectory.getPathComponentsForReservedPath(src);
  for (int attempt=0; attempt < 2; attempt++) {
    boolean isReadOp=(attempt == 0);
    if (isReadOp) {
      checkOperation(OperationCategory.READ);
      readLock();
    }
 else {
      checkOperation(OperationCategory.WRITE);
      writeLock();
    }
    try {
      src=dir.resolvePath(pc,src,pathComponents);
      if (isReadOp) {
        checkOperation(OperationCategory.READ);
      }
 else {
        checkOperation(OperationCategory.WRITE);
      }
      if (isPermissionEnabled) {
        checkPathAccess(pc,src,FsAction.READ);
      }
      if (isInSafeMode()) {
        doAccessTime=false;
      }
      final INodesInPath iip=dir.getINodesInPath(src,true);
      final INode[] inodes=iip.getINodes();
      final INodeFile inode=INodeFile.valueOf(inodes[inodes.length - 1],src);
      if (isPermissionEnabled) {
        checkUnreadableBySuperuser(pc,inode,iip.getPathSnapshotId());
      }
      if (!iip.isSnapshot() && doAccessTime && isAccessTimeSupported()) {
        final long now=now();
        if (now > inode.getAccessTime() + getAccessTimePrecision()) {
          if (isReadOp) {
            continue;
          }
          boolean changed=dir.setTimes(inode,-1,now,false,iip.getLatestSnapshotId());
          if (changed) {
            getEditLog().logTimes(src,-1,now);
          }
        }
      }
      final long fileSize=iip.isSnapshot() ? inode.computeFileSize(iip.getPathSnapshotId()) : inode.computeFileSizeNotIncludingLastUcBlock();
      boolean isUc=inode.isUnderConstruction();
      if (iip.isSnapshot()) {
        length=Math.min(length,fileSize - offset);
        isUc=false;
      }
      final FileEncryptionInfo feInfo=FSDirectory.isReservedRawName(srcArg) ? null : dir.getFileEncryptionInfo(inode,iip.getPathSnapshotId(),iip);
      final LocatedBlocks blocks=blockManager.createLocatedBlocks(inode.getBlocks(),fileSize,isUc,offset,length,needBlockToken,iip.isSnapshot(),feInfo);
      for (      LocatedBlock lb : blocks.getLocatedBlocks()) {
        cacheManager.setCachedLocations(lb);
      }
      return blocks;
    }
  finally {
      if (isReadOp) {
        readUnlock();
      }
 else {
        writeUnlock();
      }
    }
  }
  return null;
}
