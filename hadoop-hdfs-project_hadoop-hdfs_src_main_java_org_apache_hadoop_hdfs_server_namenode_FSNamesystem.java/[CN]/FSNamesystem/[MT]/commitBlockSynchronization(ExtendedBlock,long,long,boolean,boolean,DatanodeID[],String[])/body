{
  LOG.info("commitBlockSynchronization(oldBlock=" + oldBlock + ", newgenerationstamp="+ newgenerationstamp+ ", newlength="+ newlength+ ", newtargets="+ Arrays.asList(newtargets)+ ", closeFile="+ closeFile+ ", deleteBlock="+ deleteblock+ ")");
  checkOperation(OperationCategory.WRITE);
  final String src;
  writeLock();
  boolean copyTruncate=false;
  BlockInfo truncatedBlock=null;
  try {
    checkOperation(OperationCategory.WRITE);
    checkNameNodeSafeMode("Cannot commitBlockSynchronization while in safe mode");
    final BlockInfo storedBlock=getStoredBlock(ExtendedBlock.getLocalBlock(oldBlock));
    if (storedBlock == null) {
      if (deleteblock) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Block (=" + oldBlock + ") not found");
        }
        return;
      }
 else {
        throw new IOException("Block (=" + oldBlock + ") not found");
      }
    }
    final long oldGenerationStamp=storedBlock.getGenerationStamp();
    final long oldNumBytes=storedBlock.getNumBytes();
    if (storedBlock.isDeleted()) {
      throw new IOException("The blockCollection of " + storedBlock + " is null, likely because the file owning this block was"+ " deleted and the block removal is delayed");
    }
    final INodeFile iFile=getBlockCollection(storedBlock);
    src=iFile.getFullPathName();
    if (isFileDeleted(iFile)) {
      throw new FileNotFoundException("File not found: " + src + ", likely due to delayed block removal");
    }
    if ((!iFile.isUnderConstruction() || storedBlock.isComplete()) && iFile.getLastBlock().isComplete()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Unexpected block (=" + oldBlock + ") since the file (="+ iFile.getLocalName()+ ") is not under construction");
      }
      return;
    }
    truncatedBlock=iFile.getLastBlock();
    final long recoveryId=truncatedBlock.getUnderConstructionFeature().getBlockRecoveryId();
    copyTruncate=truncatedBlock.getBlockId() != storedBlock.getBlockId();
    if (recoveryId != newgenerationstamp) {
      throw new IOException("The recovery id " + newgenerationstamp + " does not match current recovery id "+ recoveryId+ " for block "+ oldBlock);
    }
    if (deleteblock) {
      Block blockToDel=ExtendedBlock.getLocalBlock(oldBlock);
      boolean remove=iFile.removeLastBlock(blockToDel) != null;
      if (remove) {
        blockManager.removeBlock(storedBlock);
      }
    }
 else {
      if (!copyTruncate) {
        storedBlock.setGenerationStamp(newgenerationstamp);
        storedBlock.setNumBytes(newlength);
      }
      final DatanodeStorageInfo[] dsInfos=blockManager.getDatanodeManager().getDatanodeStorageInfos(newtargets,newtargetstorages,"src=%s, oldBlock=%s, newgenerationstamp=%d, newlength=%d",src,oldBlock,newgenerationstamp,newlength);
      if (closeFile && dsInfos != null) {
        for (int i=0; i < dsInfos.length; i++) {
          if (dsInfos[i] != null) {
            if (copyTruncate) {
              dsInfos[i].addBlock(truncatedBlock,truncatedBlock);
            }
 else {
              Block bi=new Block(storedBlock);
              if (storedBlock.isStriped()) {
                bi.setBlockId(bi.getBlockId() + i);
              }
              dsInfos[i].addBlock(storedBlock,bi);
            }
          }
        }
      }
      if (copyTruncate) {
        iFile.convertLastBlockToUC(truncatedBlock,dsInfos);
      }
 else {
        iFile.convertLastBlockToUC(storedBlock,dsInfos);
        if (closeFile) {
          blockManager.markBlockReplicasAsCorrupt(oldBlock.getLocalBlock(),storedBlock,oldGenerationStamp,oldNumBytes,dsInfos);
        }
      }
    }
    if (closeFile) {
      if (copyTruncate) {
        closeFileCommitBlocks(src,iFile,truncatedBlock);
        if (!iFile.isBlockInLatestSnapshot(storedBlock)) {
          blockManager.removeBlock(storedBlock);
        }
      }
 else {
        closeFileCommitBlocks(src,iFile,storedBlock);
      }
    }
 else {
      FSDirWriteFileOp.persistBlocks(dir,src,iFile,false);
    }
  }
  finally {
    writeUnlock();
  }
  getEditLog().logSync();
  if (closeFile) {
    LOG.info("commitBlockSynchronization(oldBlock=" + oldBlock + ", file="+ src+ (copyTruncate ? ", newBlock=" + truncatedBlock : ", newgenerationstamp=" + newgenerationstamp)+ ", newlength="+ newlength+ ", newtargets="+ Arrays.asList(newtargets)+ ") successful");
  }
 else {
    LOG.info("commitBlockSynchronization(" + oldBlock + ") successful");
  }
}
