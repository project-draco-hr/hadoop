{
  checkOperation(OperationCategory.READ);
  GetBlockLocationsResult res=null;
  FSPermissionChecker pc=getPermissionChecker();
  readLock();
  try {
    checkOperation(OperationCategory.READ);
    res=FSDirStatAndListingOp.getBlockLocations(dir,pc,srcArg,offset,length,true);
    if (isInSafeMode()) {
      for (      LocatedBlock b : res.blocks.getLocatedBlocks()) {
        if ((b.getLocations() == null) || (b.getLocations().length == 0)) {
          SafeModeException se=newSafemodeException("Zero blocklocations for " + srcArg);
          if (haEnabled && haContext != null && haContext.getState().getServiceState() == HAServiceState.ACTIVE) {
            throw new RetriableException(se);
          }
 else {
            throw se;
          }
        }
      }
    }
  }
 catch (  AccessControlException e) {
    logAuditEvent(false,"open",srcArg);
    throw e;
  }
 finally {
    readUnlock();
  }
  logAuditEvent(true,"open",srcArg);
  if (!isInSafeMode() && res.updateAccessTime()) {
    String src=srcArg;
    writeLock();
    final long now=now();
    try {
      checkOperation(OperationCategory.WRITE);
      src=dir.resolvePath(pc,srcArg);
      final INodesInPath iip=dir.getINodesInPath(src,true);
      INode inode=iip.getLastINode();
      boolean updateAccessTime=inode != null && now > inode.getAccessTime() + dir.getAccessTimePrecision();
      if (!isInSafeMode() && updateAccessTime) {
        boolean changed=FSDirAttrOp.setTimes(dir,inode,-1,now,false,iip.getLatestSnapshotId());
        if (changed) {
          getEditLog().logTimes(src,-1,now);
        }
      }
    }
 catch (    Throwable e) {
      LOG.warn("Failed to update the access time of " + src,e);
    }
 finally {
      writeUnlock();
    }
  }
  LocatedBlocks blocks=res.blocks;
  sortLocatedBlocks(clientMachine,blocks);
  return blocks;
}
