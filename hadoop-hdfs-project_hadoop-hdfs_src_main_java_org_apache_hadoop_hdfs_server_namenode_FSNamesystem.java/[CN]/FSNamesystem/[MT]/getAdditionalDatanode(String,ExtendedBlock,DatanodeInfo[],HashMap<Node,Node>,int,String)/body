{
  dtpReplaceDatanodeOnFailure.checkEnabled();
  final DatanodeDescriptor clientnode;
  final long preferredblocksize;
  final List<DatanodeDescriptor> chosen;
  checkOperation(OperationCategory.READ);
  byte[][] pathComponents=FSDirectory.getPathComponentsForReservedPath(src);
  readLock();
  try {
    checkOperation(OperationCategory.READ);
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot add datanode; src=" + src + ", blk="+ blk,safeMode);
    }
    src=FSDirectory.resolvePath(src,pathComponents,dir);
    final INodeFileUnderConstruction file=checkLease(src,clientName);
    clientnode=file.getClientNode();
    preferredblocksize=file.getPreferredBlockSize();
    chosen=new ArrayList<DatanodeDescriptor>();
    for (    DatanodeInfo d : existings) {
      final DatanodeDescriptor descriptor=blockManager.getDatanodeManager().getDatanode(d);
      if (descriptor != null) {
        chosen.add(descriptor);
      }
    }
  }
  finally {
    readUnlock();
  }
  final DatanodeInfo[] targets=blockManager.getBlockPlacementPolicy().chooseTarget(src,numAdditionalNodes,clientnode,chosen,true,excludes,preferredblocksize);
  final LocatedBlock lb=new LocatedBlock(blk,targets);
  blockManager.setBlockToken(lb,AccessMode.COPY);
  return lb;
}
