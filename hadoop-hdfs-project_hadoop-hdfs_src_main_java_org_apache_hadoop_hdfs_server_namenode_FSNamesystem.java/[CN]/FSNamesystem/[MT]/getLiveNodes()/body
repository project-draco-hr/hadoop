{
  final Map<String,Map<String,Object>> info=new HashMap<String,Map<String,Object>>();
  final List<DatanodeDescriptor> live=new ArrayList<DatanodeDescriptor>();
  blockManager.getDatanodeManager().fetchDatanodes(live,null,false);
  for (  DatanodeDescriptor node : live) {
    ImmutableMap.Builder<String,Object> innerinfo=ImmutableMap.<String,Object>builder();
    innerinfo.put("infoAddr",node.getInfoAddr()).put("infoSecureAddr",node.getInfoSecureAddr()).put("xferaddr",node.getXferAddr()).put("lastContact",getLastContact(node)).put("usedSpace",getDfsUsed(node)).put("adminState",node.getAdminState().toString()).put("nonDfsUsedSpace",node.getNonDfsUsed()).put("capacity",node.getCapacity()).put("numBlocks",node.numBlocks()).put("version",node.getSoftwareVersion()).put("used",node.getDfsUsed()).put("remaining",node.getRemaining()).put("blockScheduled",node.getBlocksScheduled()).put("blockPoolUsed",node.getBlockPoolUsed()).put("blockPoolUsedPercent",node.getBlockPoolUsedPercent()).put("volfails",node.getVolumeFailures());
    VolumeFailureSummary volumeFailureSummary=node.getVolumeFailureSummary();
    if (volumeFailureSummary != null) {
      innerinfo.put("failedStorageLocations",volumeFailureSummary.getFailedStorageLocations()).put("lastVolumeFailureDate",volumeFailureSummary.getLastVolumeFailureDate()).put("estimatedCapacityLostTotal",volumeFailureSummary.getEstimatedCapacityLostTotal());
    }
    if (node.getUpgradeDomain() != null) {
      innerinfo.put("upgradeDomain",node.getUpgradeDomain());
    }
    info.put(node.getHostName() + ":" + node.getXferPort(),innerinfo.build());
  }
  return JSON.toString(info);
}
