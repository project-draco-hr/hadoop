{
  if (!DFSUtil.isValidName(src)) {
    throw new IOException("Invalid file name: " + src);
  }
  boolean skipSync=false;
  FSPermissionChecker pc=getPermissionChecker();
  checkOperation(OperationCategory.WRITE);
  byte[][] pathComponents=FSDirectory.getPathComponentsForReservedPath(src);
  writeLock();
  try {
    checkOperation(OperationCategory.WRITE);
    checkNameNodeSafeMode("Cannot recover the lease of " + src);
    src=dir.resolvePath(pc,src,pathComponents);
    final INodesInPath iip=dir.getINodesInPath4Write(src);
    final INodeFile inode=INodeFile.valueOf(iip.getLastINode(),src);
    if (!inode.isUnderConstruction()) {
      return true;
    }
    if (isPermissionEnabled) {
      dir.checkPathAccess(pc,iip,FsAction.WRITE);
    }
    return recoverLeaseInternal(RecoverLeaseOp.RECOVER_LEASE,iip,src,holder,clientMachine,true);
  }
 catch (  StandbyException se) {
    skipSync=true;
    throw se;
  }
 finally {
    writeUnlock();
    if (!skipSync) {
      getEditLog().logSync();
    }
  }
}
