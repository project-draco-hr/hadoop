{
  boolean skipSync=false;
  writeLock();
  try {
    checkOperation(OperationCategory.WRITE);
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot recover the lease of " + src,safeMode);
    }
    if (!DFSUtil.isValidName(src)) {
      throw new IOException("Invalid file name: " + src);
    }
    final INodeFile inode=INodeFile.valueOf(dir.getINode(src),src);
    if (!inode.isUnderConstruction()) {
      return true;
    }
    if (isPermissionEnabled) {
      checkPathAccess(src,FsAction.WRITE);
    }
    recoverLeaseInternal(inode,src,holder,clientMachine,true);
  }
 catch (  StandbyException se) {
    skipSync=true;
    throw se;
  }
 finally {
    writeUnlock();
    if (!skipSync) {
      getEditLog().logSync();
    }
  }
  return false;
}
