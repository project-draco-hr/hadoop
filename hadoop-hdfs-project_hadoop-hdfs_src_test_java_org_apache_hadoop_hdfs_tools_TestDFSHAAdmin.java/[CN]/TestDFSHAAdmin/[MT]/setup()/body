{
  mockProtocol=MockitoUtil.mockProtocol(HAServiceProtocol.class);
  mockZkfcProtocol=MockitoUtil.mockProtocol(ZKFCProtocol.class);
  tool=new DFSHAAdmin(){
    @Override protected HAServiceTarget resolveTarget(    String nnId){
      HAServiceTarget target=super.resolveTarget(nnId);
      HAServiceTarget spy=Mockito.spy(target);
      try {
        Mockito.doReturn(mockProtocol).when(spy).getProxy(Mockito.<Configuration>any(),Mockito.anyInt());
        Mockito.doReturn(mockZkfcProtocol).when(spy).getZKFCProxy(Mockito.<Configuration>any(),Mockito.anyInt());
      }
 catch (      IOException e) {
        throw new AssertionError(e);
      }
      return spy;
    }
  }
;
  tool.setConf(getHAConf());
  tool.setErrOut(new PrintStream(errOutBytes));
  tool.setOut(new PrintStream(outBytes));
}
