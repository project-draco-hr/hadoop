{
  actual=new byte[HALF_CHUNK_SIZE];
  stm.seek(0);
  testSkip1(BYTES_PER_SUM);
  testSkip1(HALF_CHUNK_SIZE);
  testSkip1(HALF_CHUNK_SIZE);
  stm.seek(0);
  testSkip1(HALF_CHUNK_SIZE + 1);
  testSkip1(BYTES_PER_SUM);
  testSkip1(HALF_CHUNK_SIZE);
  stm.seek(0);
  testSkip1(1);
  testSkip1(1);
  stm.seek(0);
  actual=new byte[1];
  testSkip1(FILE_SIZE - 1);
  stm.seek(0);
  IOUtils.skipFully(stm,FILE_SIZE);
  try {
    IOUtils.skipFully(stm,10);
    fail("expected to get a PrematureEOFException");
  }
 catch (  EOFException e) {
    assertEquals(e.getMessage(),"Premature EOF from inputStream " + "after skipping 0 byte(s).");
  }
  stm.seek(0);
  try {
    IOUtils.skipFully(stm,FILE_SIZE + 10);
    fail("expected to get a PrematureEOFException");
  }
 catch (  EOFException e) {
    assertEquals(e.getMessage(),"Premature EOF from inputStream " + "after skipping " + FILE_SIZE + " byte(s).");
  }
  stm.seek(10);
  try {
    IOUtils.skipFully(stm,FILE_SIZE);
    fail("expected to get a PrematureEOFException");
  }
 catch (  EOFException e) {
    assertEquals(e.getMessage(),"Premature EOF from inputStream " + "after skipping " + (FILE_SIZE - 10) + " byte(s).");
  }
}
