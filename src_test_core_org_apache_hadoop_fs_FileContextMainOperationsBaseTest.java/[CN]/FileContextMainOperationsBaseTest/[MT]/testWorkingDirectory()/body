{
  Path workDir=new Path(getAbsoluteTestRootPath(fc),new Path("test"));
  fc.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fc.getWorkingDirectory());
  fc.setWorkingDirectory(new Path("."));
  Assert.assertEquals(workDir,fc.getWorkingDirectory());
  fc.setWorkingDirectory(new Path(".."));
  Assert.assertEquals(workDir.getParent(),fc.getWorkingDirectory());
  workDir=new Path(getAbsoluteTestRootPath(fc),new Path("test"));
  fc.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fc.getWorkingDirectory());
  Path relativeDir=new Path("existingDir1");
  Path absoluteDir=new Path(workDir,"existingDir1");
  fc.mkdir(absoluteDir,FileContext.DEFAULT_PERM,true);
  fc.setWorkingDirectory(relativeDir);
  Assert.assertEquals(absoluteDir,fc.getWorkingDirectory());
  absoluteDir=getTestRootPath(fc,"test/existingDir2");
  fc.mkdir(absoluteDir,FileContext.DEFAULT_PERM,true);
  fc.setWorkingDirectory(absoluteDir);
  Assert.assertEquals(absoluteDir,fc.getWorkingDirectory());
  Path absolutePath=new Path(absoluteDir,"foo");
  fc.create(absolutePath,EnumSet.of(CreateFlag.CREATE)).close();
  fc.open(new Path("foo")).close();
  fc.mkdir(new Path("newDir"),FileContext.DEFAULT_PERM,true);
  Assert.assertTrue(isDir(fc,new Path(absoluteDir,"newDir")));
  absoluteDir=getTestRootPath(fc,"nonexistingPath");
  try {
    fc.setWorkingDirectory(absoluteDir);
    Assert.fail("cd to non existing dir should have failed");
  }
 catch (  Exception e) {
  }
  absoluteDir=new Path(LOCAL_FS_ROOT_URI + "/existingDir");
  fc.mkdir(absoluteDir,FileContext.DEFAULT_PERM,true);
  fc.setWorkingDirectory(absoluteDir);
  Assert.assertEquals(absoluteDir,fc.getWorkingDirectory());
}
