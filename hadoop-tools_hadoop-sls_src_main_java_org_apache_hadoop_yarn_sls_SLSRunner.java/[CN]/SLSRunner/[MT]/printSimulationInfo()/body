{
  if (printSimulation) {
    LOG.info("------------------------------------");
    LOG.info(MessageFormat.format("# nodes = {0}, # racks = {1}, capacity " + "of each node {2} MB memory and {3} vcores.",numNMs,numRacks,nmMemoryMB,nmVCores));
    LOG.info("------------------------------------");
    LOG.info(MessageFormat.format("# applications = {0}, # total " + "tasks = {1}, average # tasks per application = {2}",numAMs,numTasks,(int)(Math.ceil((numTasks + 0.0) / numAMs))));
    LOG.info("JobId\tQueue\tAMType\tDuration\t#Tasks");
    for (    Map.Entry<String,AMSimulator> entry : amMap.entrySet()) {
      AMSimulator am=entry.getValue();
      LOG.info(entry.getKey() + "\t" + am.getQueue()+ "\t"+ am.getAMType()+ "\t"+ am.getDuration()+ "\t"+ am.getNumTasks());
    }
    LOG.info("------------------------------------");
    LOG.info(MessageFormat.format("number of queues = {0}  average " + "number of apps = {1}",queueAppNumMap.size(),(int)(Math.ceil((numAMs + 0.0) / queueAppNumMap.size()))));
    LOG.info("------------------------------------");
    LOG.info(MessageFormat.format("estimated simulation time is {0}" + " seconds",(long)(Math.ceil(maxRuntime / 1000.0))));
    LOG.info("------------------------------------");
  }
  simulateInfoMap.put("Number of racks",numRacks);
  simulateInfoMap.put("Number of nodes",numNMs);
  simulateInfoMap.put("Node memory (MB)",nmMemoryMB);
  simulateInfoMap.put("Node VCores",nmVCores);
  simulateInfoMap.put("Number of applications",numAMs);
  simulateInfoMap.put("Number of tasks",numTasks);
  simulateInfoMap.put("Average tasks per applicaion",(int)(Math.ceil((numTasks + 0.0) / numAMs)));
  simulateInfoMap.put("Number of queues",queueAppNumMap.size());
  simulateInfoMap.put("Average applications per queue",(int)(Math.ceil((numAMs + 0.0) / queueAppNumMap.size())));
  simulateInfoMap.put("Estimated simulate time (s)",(long)(Math.ceil(maxRuntime / 1000.0)));
}
