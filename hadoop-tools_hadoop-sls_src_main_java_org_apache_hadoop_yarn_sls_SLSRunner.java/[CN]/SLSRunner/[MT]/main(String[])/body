{
  Options options=new Options();
  options.addOption("inputrumen",true,"input rumen files");
  options.addOption("inputsls",true,"input sls files");
  options.addOption("nodes",true,"input topology");
  options.addOption("output",true,"output directory");
  options.addOption("trackjobs",true,"jobs to be tracked during simulating");
  options.addOption("printsimulation",false,"print out simulation information");
  CommandLineParser parser=new GnuParser();
  CommandLine cmd=parser.parse(options,args);
  String inputRumen=cmd.getOptionValue("inputrumen");
  String inputSLS=cmd.getOptionValue("inputsls");
  String output=cmd.getOptionValue("output");
  if ((inputRumen == null && inputSLS == null) || output == null) {
    System.err.println();
    System.err.println("ERROR: Missing input or output file");
    System.err.println();
    System.err.println("Options: -inputrumen|-inputsls FILE,FILE... " + "-output FILE [-nodes FILE] [-trackjobs JobId,JobId...] " + "[-printsimulation]");
    System.err.println();
    System.exit(1);
  }
  File outputFile=new File(output);
  if (!outputFile.exists() && !outputFile.mkdirs()) {
    System.err.println("ERROR: Cannot create output directory " + outputFile.getAbsolutePath());
    System.exit(1);
  }
  Set<String> trackedJobSet=new HashSet<String>();
  if (cmd.hasOption("trackjobs")) {
    String trackjobs=cmd.getOptionValue("trackjobs");
    String jobIds[]=trackjobs.split(",");
    trackedJobSet.addAll(Arrays.asList(jobIds));
  }
  String nodeFile=cmd.hasOption("nodes") ? cmd.getOptionValue("nodes") : "";
  boolean isSLS=inputSLS != null;
  String inputFiles[]=isSLS ? inputSLS.split(",") : inputRumen.split(",");
  SLSRunner sls=new SLSRunner(isSLS,inputFiles,nodeFile,output,trackedJobSet,cmd.hasOption("printsimulation"));
  sls.start();
}
