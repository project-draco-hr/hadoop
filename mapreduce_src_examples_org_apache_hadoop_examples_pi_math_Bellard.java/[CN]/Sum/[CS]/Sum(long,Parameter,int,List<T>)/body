{
  if (b < 0)   throw new IllegalArgumentException("b = " + b + " < 0");
  if (nParts < 1)   throw new IllegalArgumentException("nParts = " + nParts + " < 1");
  final long i=p.j == 1 && p.offsetE >= 0 ? 1 : 0;
  final long e=b + i * p.deltaE + p.offsetE;
  final long n=i * p.deltaN + p.j;
  this.parameter=p;
  this.sigma=new Summation(n,p.deltaN,e,p.deltaE,0);
  this.parts=partition(sigma,nParts,existing);
  this.tail=new Tail(n,e);
}
