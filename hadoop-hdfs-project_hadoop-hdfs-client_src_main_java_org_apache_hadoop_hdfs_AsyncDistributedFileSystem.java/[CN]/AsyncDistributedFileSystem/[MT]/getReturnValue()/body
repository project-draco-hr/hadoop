{
  final Callable<T> returnValueCallback=ClientNamenodeProtocolTranslatorPB.getReturnValueCallback();
  Future<T> returnFuture=new AbstractFuture<T>(){
    private final AtomicBoolean called=new AtomicBoolean(false);
    public T get() throws InterruptedException, ExecutionException {
      if (called.compareAndSet(false,true)) {
        try {
          set(returnValueCallback.call());
        }
 catch (        Exception e) {
          setException(e);
        }
      }
      return super.get();
    }
  }
;
  return returnFuture;
}
