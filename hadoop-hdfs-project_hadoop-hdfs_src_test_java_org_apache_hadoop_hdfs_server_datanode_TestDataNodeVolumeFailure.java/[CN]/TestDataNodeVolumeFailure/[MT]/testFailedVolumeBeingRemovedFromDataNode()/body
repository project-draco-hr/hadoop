{
  assumeNotWindows();
  Path file1=new Path("/test1");
  DFSTestUtil.createFile(fs,file1,1024,(short)2,1L);
  DFSTestUtil.waitReplication(fs,file1,(short)2);
  File dn0Vol1=new File(dataDir,"data" + (2 * 0 + 1));
  DataNodeTestUtils.injectDataDirFailure(dn0Vol1);
  DataNode dn0=cluster.getDataNodes().get(0);
  checkDiskErrorSync(dn0);
  DataStorage storage=dn0.getStorage();
  assertEquals(1,storage.getNumStorageDirs());
  for (int i=0; i < storage.getNumStorageDirs(); i++) {
    Storage.StorageDirectory sd=storage.getStorageDir(i);
    assertFalse(sd.getRoot().getAbsolutePath().startsWith(dn0Vol1.getAbsolutePath()));
  }
  final String bpid=cluster.getNamesystem().getBlockPoolId();
  BlockPoolSliceStorage bpsStorage=storage.getBPStorage(bpid);
  assertEquals(1,bpsStorage.getNumStorageDirs());
  for (int i=0; i < bpsStorage.getNumStorageDirs(); i++) {
    Storage.StorageDirectory sd=bpsStorage.getStorageDir(i);
    assertFalse(sd.getRoot().getAbsolutePath().startsWith(dn0Vol1.getAbsolutePath()));
  }
  FsDatasetSpi<? extends FsVolumeSpi> data=dn0.getFSDataset();
  try (FsDatasetSpi.FsVolumeReferences vols=data.getFsVolumeReferences()){
    for (    FsVolumeSpi volume : vols) {
      assertNotEquals(new File(volume.getBasePath()).getAbsoluteFile(),dn0Vol1.getAbsoluteFile());
    }
  }
   for (  ReplicaInfo replica : FsDatasetTestUtil.getReplicas(data,bpid)) {
    assertNotNull(replica.getVolume());
    assertNotEquals(new File(replica.getVolume().getBasePath()).getAbsoluteFile(),dn0Vol1.getAbsoluteFile());
  }
  String[] dataDirStrs=dn0.getConf().get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY).split(",");
  assertEquals(1,dataDirStrs.length);
  assertFalse(dataDirStrs[0].contains(dn0Vol1.getAbsolutePath()));
}
