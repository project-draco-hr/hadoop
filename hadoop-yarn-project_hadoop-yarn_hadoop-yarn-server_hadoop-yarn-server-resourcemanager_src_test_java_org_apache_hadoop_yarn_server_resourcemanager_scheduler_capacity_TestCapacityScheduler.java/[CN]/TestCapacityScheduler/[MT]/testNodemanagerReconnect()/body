{
  DrainDispatcher privateDispatcher=new DrainDispatcher();
  SleepHandler sleepHandler=new SleepHandler();
  ResourceTrackerService privateResourceTrackerService=getPrivateResourceTrackerService(privateDispatcher,sleepHandler);
  String hostname1="localhost1";
  Resource capability=BuilderUtils.newResource(4096,4);
  RecordFactory recordFactory=RecordFactoryProvider.getRecordFactory(null);
  RegisterNodeManagerRequest request1=recordFactory.newRecordInstance(RegisterNodeManagerRequest.class);
  NodeId nodeId1=NodeId.newInstance(hostname1,0);
  request1.setNodeId(nodeId1);
  request1.setHttpPort(0);
  request1.setResource(capability);
  privateResourceTrackerService.registerNodeManager(request1);
  privateDispatcher.await();
  Resource clusterResource=resourceManager.getResourceScheduler().getClusterResource();
  Assert.assertEquals("Initial cluster resources don't match",capability,clusterResource);
  Resource newCapability=BuilderUtils.newResource(1024,1);
  RegisterNodeManagerRequest request2=recordFactory.newRecordInstance(RegisterNodeManagerRequest.class);
  request2.setNodeId(nodeId1);
  request2.setHttpPort(0);
  request2.setResource(newCapability);
  sleepHandler.sleepFlag=true;
  privateResourceTrackerService.registerNodeManager(request2);
  privateDispatcher.await();
  Assert.assertEquals("Cluster resources don't match",newCapability,resourceManager.getResourceScheduler().getClusterResource());
  privateResourceTrackerService.stop();
}
