{
  Configuration conf=new Configuration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  MockRM rm=new MockRM(conf);
  rm.start();
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  ApplicationId appId=BuilderUtils.newApplicationId(100,1);
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(appId,1);
  RMAppAttemptMetrics attemptMetric=new RMAppAttemptMetrics(appAttemptId,rm.getRMContext());
  RMAppImpl app=mock(RMAppImpl.class);
  when(app.getApplicationId()).thenReturn(appId);
  RMAppAttemptImpl attempt=mock(RMAppAttemptImpl.class);
  Container container=mock(Container.class);
  when(attempt.getMasterContainer()).thenReturn(container);
  ApplicationSubmissionContext submissionContext=mock(ApplicationSubmissionContext.class);
  when(attempt.getSubmissionContext()).thenReturn(submissionContext);
  when(attempt.getAppAttemptId()).thenReturn(appAttemptId);
  when(attempt.getRMAppAttemptMetrics()).thenReturn(attemptMetric);
  when(app.getCurrentAppAttempt()).thenReturn(attempt);
  rm.getRMContext().getRMApps().put(appId,app);
  SchedulerEvent addAppEvent=new AppAddedSchedulerEvent(appId,"default","user");
  cs.handle(addAppEvent);
  SchedulerEvent addAttemptEvent=new AppAttemptAddedSchedulerEvent(appAttemptId,false);
  cs.handle(addAttemptEvent);
  Allocation allocate=cs.allocate(appAttemptId,Collections.<ResourceRequest>emptyList(),Collections.<ContainerId>emptyList(),null,null);
  Assert.assertNotNull(attempt);
  Assert.assertEquals(Resource.newInstance(0,0),allocate.getResourceLimit());
  Assert.assertEquals(Resource.newInstance(0,0),attemptMetric.getApplicationAttemptHeadroom());
  Resource newResource=Resource.newInstance(4 * GB,1);
  RMNode node=MockNodes.newNodeInfo(0,newResource,1,"127.0.0.1");
  cs.handle(new NodeAddedSchedulerEvent(node));
  allocate=cs.allocate(appAttemptId,Collections.<ResourceRequest>emptyList(),Collections.<ContainerId>emptyList(),null,null);
  Assert.assertEquals(newResource,allocate.getResourceLimit());
  Assert.assertEquals(newResource,attemptMetric.getApplicationAttemptHeadroom());
  rm.stop();
}
