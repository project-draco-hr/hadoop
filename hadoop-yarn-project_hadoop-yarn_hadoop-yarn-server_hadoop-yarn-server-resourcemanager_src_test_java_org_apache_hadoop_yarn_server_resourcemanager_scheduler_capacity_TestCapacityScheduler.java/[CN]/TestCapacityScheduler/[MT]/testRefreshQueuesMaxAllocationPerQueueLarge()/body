{
  CapacityScheduler cs=new CapacityScheduler();
  cs.setConf(new YarnConfiguration());
  cs.setRMContext(resourceManager.getRMContext());
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration();
  setupQueueConfiguration(conf);
  cs.init(conf);
  cs.start();
  setMaxAllocMb(conf,B3,YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB + 2048);
  try {
    cs.reinitialize(conf,mockContext);
    fail("should have thrown exception");
  }
 catch (  IOException e) {
    assertTrue("maximum allocation exception",e.getCause().getMessage().contains("maximum allocation"));
  }
  setMaxAllocMb(conf,B3,YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);
  cs.reinitialize(conf,mockContext);
  setMaxAllocVcores(conf,B3,YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES + 1);
  try {
    cs.reinitialize(conf,mockContext);
    fail("should have thrown exception");
  }
 catch (  IOException e) {
    assertTrue("maximum allocation exception",e.getCause().getMessage().contains("maximum allocation"));
  }
}
