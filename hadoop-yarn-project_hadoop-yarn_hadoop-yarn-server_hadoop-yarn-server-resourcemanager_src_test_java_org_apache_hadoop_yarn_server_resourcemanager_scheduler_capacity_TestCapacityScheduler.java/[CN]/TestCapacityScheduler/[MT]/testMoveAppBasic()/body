{
  MockRM rm=setUpMove();
  AbstractYarnScheduler scheduler=(AbstractYarnScheduler)rm.getResourceScheduler();
  RMApp app=rm.submitApp(GB,"test-move-1","user_0",null,"a1");
  ApplicationAttemptId appAttemptId=rm.getApplicationReport(app.getApplicationId()).getCurrentApplicationAttemptId();
  List<ApplicationAttemptId> appsInA1=scheduler.getAppsInQueue("a1");
  assertEquals(1,appsInA1.size());
  String queue=scheduler.getApplicationAttempt(appsInA1.get(0)).getQueue().getQueueName();
  Assert.assertTrue(queue.equals("a1"));
  List<ApplicationAttemptId> appsInA=scheduler.getAppsInQueue("a");
  assertTrue(appsInA.contains(appAttemptId));
  assertEquals(1,appsInA.size());
  List<ApplicationAttemptId> appsInRoot=scheduler.getAppsInQueue("root");
  assertTrue(appsInRoot.contains(appAttemptId));
  assertEquals(1,appsInRoot.size());
  List<ApplicationAttemptId> appsInB1=scheduler.getAppsInQueue("b1");
  assertTrue(appsInB1.isEmpty());
  List<ApplicationAttemptId> appsInB=scheduler.getAppsInQueue("b");
  assertTrue(appsInB.isEmpty());
  scheduler.moveApplication(app.getApplicationId(),"b1");
  appsInB1=scheduler.getAppsInQueue("b1");
  assertEquals(1,appsInB1.size());
  queue=scheduler.getApplicationAttempt(appsInB1.get(0)).getQueue().getQueueName();
  System.out.println(queue);
  Assert.assertTrue(queue.equals("b1"));
  appsInB=scheduler.getAppsInQueue("b");
  assertTrue(appsInA.contains(appAttemptId));
  assertEquals(1,appsInB.size());
  appsInRoot=scheduler.getAppsInQueue("root");
  assertTrue(appsInRoot.contains(appAttemptId));
  assertEquals(1,appsInRoot.size());
  appsInA1=scheduler.getAppsInQueue("a1");
  assertTrue(appsInA1.isEmpty());
  appsInA=scheduler.getAppsInQueue("a");
  assertTrue(appsInA.isEmpty());
  rm.stop();
}
