{
  try {
    return Futures.allAsList(partETagsFutures).get();
  }
 catch (  InterruptedException ie) {
    LOG.warn("Interrupted partUpload: {}",ie,ie);
    Thread.currentThread().interrupt();
    return null;
  }
catch (  ExecutionException ee) {
    for (    ListenableFuture<PartETag> future : partETagsFutures) {
      future.cancel(true);
    }
    this.abort();
    throw extractException("Multi-part upload with id '" + uploadId + "'",key,ee);
  }
}
