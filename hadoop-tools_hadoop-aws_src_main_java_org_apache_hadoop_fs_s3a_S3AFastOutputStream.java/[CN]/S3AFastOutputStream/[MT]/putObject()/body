{
  LOG.debug("Executing regular upload for bucket '{}' key '{}'",bucket,key);
  final ObjectMetadata om=createDefaultMetadata();
  final int size=buffer.size();
  om.setContentLength(size);
  final PutObjectRequest putObjectRequest=fs.newPutObjectRequest(key,om,new ByteArrayInputStream(buffer.toByteArray()));
  putObjectRequest.setGeneralProgressListener(progressListener);
  ListenableFuture<PutObjectResult> putObjectResult=executorService.submit(new Callable<PutObjectResult>(){
    @Override public PutObjectResult call() throws Exception {
      fs.incrementPutStartStatistics(size);
      return client.putObject(putObjectRequest);
    }
  }
);
  try {
    putObjectResult.get();
  }
 catch (  InterruptedException ie) {
    LOG.warn("Interrupted object upload: {}",ie,ie);
    Thread.currentThread().interrupt();
  }
catch (  ExecutionException ee) {
    throw extractException("regular upload",key,ee);
  }
}
