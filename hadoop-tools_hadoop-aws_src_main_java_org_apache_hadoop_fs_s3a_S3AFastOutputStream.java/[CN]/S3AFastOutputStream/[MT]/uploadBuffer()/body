{
  if (multiPartUpload == null) {
    multiPartUpload=initiateMultiPartUpload();
    final byte[] allBytes=buffer.toByteArray();
    buffer=null;
    LOG.debug("Total length of initial buffer: {}",allBytes.length);
    int processedPos=0;
    while ((multiPartThreshold - processedPos) >= partSize) {
      LOG.debug("Initial buffer: processing from byte {} to byte {}",processedPos,(processedPos + partSize - 1));
      multiPartUpload.uploadPartAsync(new ByteArrayInputStream(allBytes,processedPos,partSize),partSize);
      processedPos+=partSize;
    }
    bufferLimit=partSize;
    buffer=new ByteArrayOutputStream(bufferLimit);
    buffer.write(allBytes,processedPos,multiPartThreshold - processedPos);
  }
 else {
    multiPartUpload.uploadPartAsync(new ByteArrayInputStream(buffer.toByteArray()),partSize);
    buffer.reset();
  }
}
