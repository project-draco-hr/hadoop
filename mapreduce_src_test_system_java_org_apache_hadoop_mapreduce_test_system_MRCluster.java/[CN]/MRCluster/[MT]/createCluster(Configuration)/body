{
  conf.addResource(SYSTEM_TEST_FILE);
  TT_hostFileName=conf.get(CONF_HADOOP_TT_HOSTFILE_NAME,"slaves");
  String jtHostPort=conf.get(JTConfig.JT_IPC_ADDRESS);
  if (jtHostPort == null) {
    throw new Exception(JTConfig.JT_IPC_ADDRESS + "is not set or " + SYSTEM_TEST_FILE+ " hasn't been found.");
  }
  jtHostName=jtHostPort.trim().split(":")[0];
  mrDaemonInfos.add(new HadoopDaemonInfo("jobtracker",Role.JT,Arrays.asList(new String[]{jtHostName})));
  mrDaemonInfos.add(new HadoopDaemonInfo("tasktracker",Role.TT,TT_hostFileName));
  String implKlass=conf.get(CLUSTER_PROCESS_MGR_IMPL);
  if (implKlass == null || implKlass.isEmpty()) {
    implKlass=MRProcessManager.class.getName();
  }
  Class<ClusterProcessManager> klass=(Class<ClusterProcessManager>)Class.forName(implKlass);
  ClusterProcessManager clusterProcessMgr=klass.newInstance();
  LOG.info("Created ClusterProcessManager as " + implKlass);
  clusterProcessMgr.init(conf);
  return new MRCluster(conf,clusterProcessMgr);
}
