{
  conf.setLong(CommonConfigurationKeys.HADOOP_SECURITY_GROUPS_CACHE_SECS,1);
  conf.setBoolean(CommonConfigurationKeys.HADOOP_SECURITY_GROUPS_CACHE_BACKGROUND_RELOAD,true);
  conf.setInt(CommonConfigurationKeys.HADOOP_SECURITY_GROUPS_CACHE_BACKGROUND_RELOAD_THREADS,2);
  FakeTimer timer=new FakeTimer();
  final Groups groups=new Groups(conf,timer);
  groups.cacheGroupsAdd(Arrays.asList(myGroups));
  groups.refresh();
  FakeGroupMapping.clearBlackList();
  String[] grps={"one","two","three","four","five"};
  for (  String g : grps) {
    groups.getGroups(g);
  }
  timer.advance(2 * 1000);
  FakeGroupMapping.setGetGroupsDelayMs(40);
  for (  String g : grps) {
    groups.getGroups(g);
  }
  Thread.sleep(20);
  assertEquals(groups.getBackgroundRefreshQueued(),3);
  assertEquals(groups.getBackgroundRefreshRunning(),2);
  Thread.sleep(120);
  assertEquals(groups.getBackgroundRefreshQueued(),0);
  assertEquals(groups.getBackgroundRefreshRunning(),0);
  assertEquals(groups.getBackgroundRefreshSuccess(),5);
  timer.advance(2 * 1000);
  FakeGroupMapping.setGetGroupsDelayMs(0);
  FakeGroupMapping.setThrowException(true);
  for (  String g : grps) {
    groups.getGroups(g);
  }
  Thread.sleep(20);
  assertEquals(groups.getBackgroundRefreshQueued(),0);
  assertEquals(groups.getBackgroundRefreshRunning(),0);
  assertEquals(groups.getBackgroundRefreshSuccess(),5);
  assertEquals(groups.getBackgroundRefreshException(),5);
}
