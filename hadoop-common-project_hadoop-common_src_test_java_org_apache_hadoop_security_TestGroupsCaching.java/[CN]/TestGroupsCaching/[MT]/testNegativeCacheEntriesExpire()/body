{
  conf.setLong(CommonConfigurationKeys.HADOOP_SECURITY_GROUPS_NEGATIVE_CACHE_SECS,2);
  FakeTimer timer=new FakeTimer();
  Groups groups=new Groups(conf,timer);
  groups.cacheGroupsAdd(Arrays.asList(myGroups));
  groups.refresh();
  FakeGroupMapping.addToBlackList("user1");
  FakeGroupMapping.addToBlackList("user2");
  try {
    groups.getGroups("user1");
    fail("Did not throw IOException : Failed to obtain groups" + " from FakeGroupMapping.");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("No groups found for user",e);
  }
  assertTrue(groups.getNegativeCache().contains("user1"));
  timer.advance(1000);
  try {
    groups.getGroups("user2");
    fail("Did not throw IOException : Failed to obtain groups" + " from FakeGroupMapping.");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("No groups found for user",e);
  }
  assertTrue(groups.getNegativeCache().contains("user2"));
  timer.advance(1100);
  assertFalse(groups.getNegativeCache().contains("user1"));
  assertTrue(groups.getNegativeCache().contains("user2"));
  timer.advance(1000);
  assertFalse(groups.getNegativeCache().contains("user2"));
}
