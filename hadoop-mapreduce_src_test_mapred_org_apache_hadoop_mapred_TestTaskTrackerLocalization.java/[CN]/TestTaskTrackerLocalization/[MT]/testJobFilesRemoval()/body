{
  if (!canRun()) {
    return;
  }
  LOG.info("Running testJobCleanup()");
  TaskTracker.RunningJob rjob=tracker.localizeJob(tip);
  localizedJobConf=rjob.getJobConf();
  InlineCleanupQueue cleanupQueue=new InlineCleanupQueue();
  tracker.setCleanupThread(cleanupQueue);
  String jobWorkDir=TaskTracker.getJobWorkDir(task.getUser(),task.getJobID().toString());
  Path[] jPaths=tracker.getLocalFiles(localizedJobConf,jobWorkDir);
  assertTrue("No paths found for job",jPaths.length > 0);
  for (  Path p : jPaths) {
    if (tracker.getLocalFileSystem().exists(p)) {
      createFileAndSetPermissions(localizedJobConf,p);
    }
  }
  tip.setJobConf(localizedJobConf);
  tip.localizeTask(task);
  String taskLocalDir=TaskTracker.getLocalTaskDir(task.getUser(),task.getJobID().toString(),task.getTaskID().toString(),false);
  Path[] tPaths=tracker.getLocalFiles(localizedJobConf,taskLocalDir);
  assertTrue("No paths found for task",tPaths.length > 0);
  for (  Path p : tPaths) {
    if (tracker.getLocalFileSystem().exists(p)) {
      createFileAndSetPermissions(localizedJobConf,p);
    }
  }
  tracker.removeJobFiles(task.getUser(),task.getJobID());
  boolean tLocalDirExists=false;
  for (  Path p : tPaths) {
    if (tracker.getLocalFileSystem().exists(p)) {
      tLocalDirExists=true;
    }
  }
  assertFalse("Task " + task.getTaskID() + " local dir exists after cleanup",tLocalDirExists);
  boolean jWorkDirExists=false;
  for (  Path p : jPaths) {
    if (tracker.getLocalFileSystem().exists(p)) {
      jWorkDirExists=true;
    }
  }
  assertFalse("Job " + task.getJobID() + " work dir exists after cleanup",jWorkDirExists);
  verifyUserLogsRemoval();
  for (  String localDir : localDirs) {
    Path userDir=new Path(localDir,TaskTracker.getUserDir(task.getUser()));
    assertTrue("User directory " + userDir + " is not present!!",tracker.getLocalFileSystem().exists(userDir));
  }
}
