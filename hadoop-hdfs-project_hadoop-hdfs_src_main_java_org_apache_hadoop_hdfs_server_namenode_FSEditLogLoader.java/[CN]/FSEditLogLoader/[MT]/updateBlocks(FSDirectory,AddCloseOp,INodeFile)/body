{
  file.setAccessTime(addCloseOp.atime);
  file.setModificationTimeForce(addCloseOp.mtime);
  BlockInfo[] oldBlocks=file.getBlocks();
  boolean isGenStampUpdate=oldBlocks.length == addCloseOp.blocks.length;
  for (int i=0; i < oldBlocks.length && i < addCloseOp.blocks.length; i++) {
    BlockInfo oldBlock=oldBlocks[i];
    Block newBlock=addCloseOp.blocks[i];
    boolean isLastBlock=i == addCloseOp.blocks.length - 1;
    if (oldBlock.getBlockId() != newBlock.getBlockId() || (oldBlock.getGenerationStamp() != newBlock.getGenerationStamp() && !(isGenStampUpdate && isLastBlock))) {
      throw new IOException("Mismatched block IDs or generation stamps, " + "attempting to replace block " + oldBlock + " with "+ newBlock+ " as block # "+ i+ "/"+ addCloseOp.blocks.length+ " of "+ addCloseOp.path);
    }
    oldBlock.setNumBytes(newBlock.getNumBytes());
    boolean changeMade=oldBlock.getGenerationStamp() != newBlock.getGenerationStamp();
    oldBlock.setGenerationStamp(newBlock.getGenerationStamp());
    if (oldBlock instanceof BlockInfoUnderConstruction && (!isLastBlock || addCloseOp.opCode == FSEditLogOpCodes.OP_CLOSE)) {
      changeMade=true;
      fsNamesys.getBlockManager().forceCompleteBlock((INodeFileUnderConstruction)file,(BlockInfoUnderConstruction)oldBlock);
    }
    if (changeMade) {
      fsNamesys.getBlockManager().processQueuedMessagesForBlock(newBlock);
    }
  }
  if (addCloseOp.blocks.length < oldBlocks.length) {
    if (!file.isUnderConstruction()) {
      throw new IOException("Trying to remove a block from file " + addCloseOp.path + " which is not under construction.");
    }
    if (addCloseOp.blocks.length != oldBlocks.length - 1) {
      throw new IOException("Trying to remove more than one block from file " + addCloseOp.path);
    }
    fsDir.unprotectedRemoveBlock(addCloseOp.path,(INodeFileUnderConstruction)file,oldBlocks[oldBlocks.length - 1]);
  }
 else   if (addCloseOp.blocks.length > oldBlocks.length) {
    for (int i=oldBlocks.length; i < addCloseOp.blocks.length; i++) {
      Block newBlock=addCloseOp.blocks[i];
      BlockInfo newBI;
      if (addCloseOp.opCode == FSEditLogOpCodes.OP_ADD) {
        newBI=new BlockInfoUnderConstruction(newBlock,file.getReplication());
      }
 else {
        newBI=new BlockInfo(newBlock,file.getReplication());
      }
      fsNamesys.getBlockManager().addINode(newBI,file);
      file.addBlock(newBI);
      fsNamesys.getBlockManager().processQueuedMessagesForBlock(newBlock);
    }
  }
}
