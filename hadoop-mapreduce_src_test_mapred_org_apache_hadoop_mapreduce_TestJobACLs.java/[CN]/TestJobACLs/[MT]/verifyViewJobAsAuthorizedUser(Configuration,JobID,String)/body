{
  UserGroupInformation authorizedUGI=UserGroupInformation.createUserForTesting(authorizedUser,new String[]{});
  authorizedUGI.doAs(new PrivilegedExceptionAction<Object>(){
    @SuppressWarnings("null") @Override public Object run() throws Exception {
      Job myJob=null;
      try {
        Cluster cluster=new Cluster(myConf);
        myJob=cluster.getJob(jobId);
      }
 catch (      Exception e) {
        fail("Exception .." + e);
      }
      assertNotNull("Job " + jobId + " is not known to the JobTracker!",myJob);
      try {
        myJob.getCounters();
      }
 catch (      IOException ioe) {
        fail("Unexpected.. exception.. " + ioe);
      }
      try {
        myJob.getTaskReports(TaskType.JOB_CLEANUP);
      }
 catch (      IOException ioe) {
        fail("Unexpected.. exception.. " + ioe);
      }
      return null;
    }
  }
);
}
