{
  Path filePath=new Path("SequenceFileCodecTest." + codecClass);
  conf.setInt("io.seqfile.compress.blocksize",blockSize);
  FileSystem fs=FileSystem.get(conf);
  LOG.info("Creating SequenceFile with codec \"" + codecClass + "\"");
  SequenceFile.Writer writer=SequenceFile.createWriter(fs,conf,filePath,Text.class,Text.class,CompressionType.BLOCK,(CompressionCodec)Class.forName(codecClass).newInstance());
  LOG.info("Writing to SequenceFile...");
  for (int i=0; i < lines; i++) {
    Text key=new Text("key" + i);
    Text value=new Text("value" + i);
    writer.append(key,value);
  }
  writer.close();
  LOG.info("Reading from the SequenceFile...");
  SequenceFile.Reader reader=new SequenceFile.Reader(fs,filePath,conf);
  Writable key=(Writable)reader.getKeyClass().newInstance();
  Writable value=(Writable)reader.getValueClass().newInstance();
  int lc=0;
  try {
    while (reader.next(key,value)) {
      assertEquals("key" + lc,key.toString());
      assertEquals("value" + lc,value.toString());
      lc++;
    }
  }
  finally {
    reader.close();
  }
  assertEquals(lines,lc);
  fs.delete(filePath,false);
  LOG.info("SUCCESS! Completed SequenceFileCodecTest with codec \"" + codecClass + "\"");
}
