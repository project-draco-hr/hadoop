{
  super(updateRecommendedLength(recommendedLength,sizeLimit));
  this.sizeLimit=sizeLimit;
  if (creationExpirationPeriod <= 0) {
    throw new IllegalArgumentException("creationExpirationPeriod = " + creationExpirationPeriod + " <= 0");
  }
  this.creationExpirationPeriod=creationExpirationPeriod;
  if (accessExpirationPeriod < 0) {
    throw new IllegalArgumentException("accessExpirationPeriod = " + accessExpirationPeriod + " < 0");
  }
  this.accessExpirationPeriod=accessExpirationPeriod;
  this.queue=new PriorityQueue<Entry>(sizeLimit > 0 ? sizeLimit + 1 : 1 << 10,expirationTimeComparator);
  this.clock=clock;
}
