{
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration();
  conf.setQueues(CapacitySchedulerConfiguration.ROOT,new String[]{"a","b","c"});
  conf.setCapacity(CapacitySchedulerConfiguration.ROOT,100);
  final String A=CapacitySchedulerConfiguration.ROOT + ".a";
  conf.setCapacity(A,50);
  conf.setMaximumCapacity(A,60);
  final String B=CapacitySchedulerConfiguration.ROOT + ".b";
  conf.setCapacity(B,50);
  conf.setMaximumCapacity(B,45);
  boolean fail=false;
  CapacityScheduler capacityScheduler;
  try {
    capacityScheduler=new CapacityScheduler();
    capacityScheduler.setConf(new YarnConfiguration());
    capacityScheduler.reinitialize(conf,null);
  }
 catch (  IllegalArgumentException iae) {
    fail=true;
  }
  Assert.assertTrue("Didn't throw IllegalArgumentException for wrong maxCap",fail);
  conf.setMaximumCapacity(B,60);
  capacityScheduler=new CapacityScheduler();
  capacityScheduler.setConf(new YarnConfiguration());
  capacityScheduler.reinitialize(conf,null);
  fail=false;
  try {
    LeafQueue a=(LeafQueue)capacityScheduler.getQueue(A);
    a.setMaxCapacity(45);
  }
 catch (  IllegalArgumentException iae) {
    fail=true;
  }
  Assert.assertTrue("Didn't throw IllegalArgumentException for wrong " + "setMaxCap",fail);
}
