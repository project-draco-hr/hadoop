{
  YarnConfiguration config=new YarnConfiguration();
  nodeLabelManager=new NullRMNodeLabelsManager();
  nodeLabelManager.init(config);
  config.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration(config);
  conf.setQueues(CapacitySchedulerConfiguration.ROOT,new String[]{"a"});
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"x",100);
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"y",100);
  conf.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"z",100);
  final String A=CapacitySchedulerConfiguration.ROOT + ".a";
  conf.setCapacity(A,100);
  conf.setAccessibleNodeLabels(A,ImmutableSet.of("x","y","z"));
  conf.setCapacityByLabel(A,"x",100);
  conf.setCapacityByLabel(A,"y",100);
  conf.setCapacityByLabel(A,"z",70);
  MockRM rm=null;
  try {
    rm=new MockRM(conf){
      @Override public RMNodeLabelsManager createNodeLabelManager(){
        return nodeLabelManager;
      }
    }
;
  }
  finally {
    IOUtils.closeStream(rm);
  }
}
