{
  LOG.info("Local service " + localTarget + " entered state: "+ newState);
switch (newState) {
case SERVICE_HEALTHY:
    LOG.info("Joining master election for " + localTarget);
  elector.joinElection(targetToData(localTarget));
break;
case INITIALIZING:
LOG.info("Ensuring that " + localTarget + " does not "+ "participate in active master election");
elector.quitElection(false);
break;
case SERVICE_UNHEALTHY:
case SERVICE_NOT_RESPONDING:
LOG.info("Quitting master election for " + localTarget + " and marking that fencing is necessary");
elector.quitElection(true);
break;
case HEALTH_MONITOR_FAILED:
fatalError("Health monitor failed!");
break;
default :
throw new IllegalArgumentException("Unhandled state:" + newState);
}
lastHealthState=newState;
}
