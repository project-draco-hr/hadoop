{
  Preconditions.checkArgument(xface.isAssignableFrom(NamenodeProtocols.class),"Interface %s is not a NameNode protocol",xface);
  try {
    Constructor<FailoverProxyProvider<T>> ctor=failoverProxyProviderClass.getConstructor(Configuration.class,URI.class,Class.class);
    FailoverProxyProvider<T> provider=ctor.newInstance(conf,nameNodeUri,xface);
    return provider;
  }
 catch (  Exception e) {
    String message="Couldn't create proxy provider " + failoverProxyProviderClass;
    if (LOG.isDebugEnabled()) {
      LOG.debug(message,e);
    }
    if (e.getCause() instanceof IOException) {
      throw (IOException)e.getCause();
    }
 else {
      throw new IOException(message,e);
    }
  }
}
