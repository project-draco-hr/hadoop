{
  if (tail.equals("")) {
    return (listFilteredStatus(fc,root,filter));
  }
  if (tail.startsWith("/*")) {
    Path[] subdirs=filteredStat2Paths(remoteIterToList(fc.listStatus(root)),true,hasFlatFiles);
    List<List<FileStatus>> subsubdirs=new LinkedList<List<FileStatus>>();
    int subsubdirCount=0;
    if (subdirs.length == 0) {
      return new LinkedList<FileStatus>();
    }
    String newTail=tail.substring(2);
    for (int i=0; i < subdirs.length; ++i) {
      subsubdirs.add(localGlobber(fc,subdirs[i],newTail,filter,null));
      subsubdirCount+=subsubdirs.get(i).size();
    }
    List<FileStatus> result=new LinkedList<FileStatus>();
    for (int i=0; i < subsubdirs.size(); ++i) {
      result.addAll(subsubdirs.get(i));
    }
    return result;
  }
  if (tail.startsWith("/")) {
    int split=tail.indexOf('/',1);
    if (split < 0) {
      return listFilteredStatus(fc,new Path(root,tail.substring(1)),filter);
    }
 else {
      String thisSegment=tail.substring(1,split);
      String newTail=tail.substring(split);
      return localGlobber(fc,new Path(root,thisSegment),newTail,filter,hasFlatFiles);
    }
  }
  IOException e=new IOException("localGlobber: bad tail");
  throw e;
}
