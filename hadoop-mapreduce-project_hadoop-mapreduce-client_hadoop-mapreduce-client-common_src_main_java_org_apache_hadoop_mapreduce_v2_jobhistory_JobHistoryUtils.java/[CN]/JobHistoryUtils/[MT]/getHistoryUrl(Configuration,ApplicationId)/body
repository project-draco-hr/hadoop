{
  String addr=conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);
  Iterator<String> it=ADDR_SPLITTER.split(addr).iterator();
  it.next();
  String port=it.next();
  addr=conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);
  String host=ADDR_SPLITTER.split(addr).iterator().next();
  String hsAddress=JOINER.join(host,":",port);
  InetSocketAddress address=NetUtils.createSocketAddr(hsAddress,JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT,JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);
  StringBuffer sb=new StringBuffer();
  if (address.getAddress().isAnyLocalAddress() || address.getAddress().isLoopbackAddress()) {
    sb.append(InetAddress.getLocalHost().getCanonicalHostName());
  }
 else {
    sb.append(address.getHostName());
  }
  sb.append(":").append(address.getPort());
  sb.append("/jobhistory/job/");
  JobID jobId=TypeConverter.fromYarn(appId);
  sb.append(jobId.toString());
  return sb.toString();
}
