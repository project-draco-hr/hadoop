{
  if (rmContext.isWorkPreservingRecoveryEnabled() && !rmContext.isSchedulerReadyForAllocatingContainers()) {
    return;
  }
  final NodeId nodeID=node.getNodeID();
  if (!nodeTracker.exists(nodeID)) {
    LOG.info("Skipping scheduling as the node " + nodeID + " has been removed");
    return;
  }
  boolean validReservation=false;
  FSAppAttempt reservedAppSchedulable=node.getReservedAppSchedulable();
  if (reservedAppSchedulable != null) {
    validReservation=reservedAppSchedulable.assignReservedContainer(node);
  }
  if (!validReservation) {
    int assignedContainers=0;
    while (node.getReservedContainer() == null) {
      boolean assignedContainer=false;
      if (!queueMgr.getRootQueue().assignContainer(node).equals(Resources.none())) {
        assignedContainers++;
        assignedContainer=true;
      }
      if (!assignedContainer) {
        break;
      }
      if (!assignMultiple) {
        break;
      }
      if ((assignedContainers >= maxAssign) && (maxAssign > 0)) {
        break;
      }
    }
  }
  updateRootQueueMetrics();
}
