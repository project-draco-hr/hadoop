{
  if (rmContext.isWorkPreservingRecoveryEnabled() && !rmContext.isSchedulerReadyForAllocatingContainers()) {
    return;
  }
  FSAppAttempt reservedAppSchedulable=node.getReservedAppSchedulable();
  if (reservedAppSchedulable != null) {
    Priority reservedPriority=node.getReservedContainer().getReservedPriority();
    FSQueue queue=reservedAppSchedulable.getQueue();
    if (!reservedAppSchedulable.hasContainerForNode(reservedPriority,node) || !fitInMaxShare(queue)) {
      LOG.info("Releasing reservation that cannot be satisfied for application " + reservedAppSchedulable.getApplicationAttemptId() + " on node "+ node);
      reservedAppSchedulable.unreserve(reservedPriority,node);
      reservedAppSchedulable=null;
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Trying to fulfill reservation for application " + reservedAppSchedulable.getApplicationAttemptId() + " on node: "+ node);
      }
      node.getReservedAppSchedulable().assignReservedContainer(node);
    }
  }
  if (reservedAppSchedulable == null) {
    int assignedContainers=0;
    while (node.getReservedContainer() == null) {
      boolean assignedContainer=false;
      if (!queueMgr.getRootQueue().assignContainer(node).equals(Resources.none())) {
        assignedContainers++;
        assignedContainer=true;
      }
      if (!assignedContainer) {
        break;
      }
      if (!assignMultiple) {
        break;
      }
      if ((assignedContainers >= maxAssign) && (maxAssign > 0)) {
        break;
      }
    }
  }
  updateRootQueueMetrics();
}
