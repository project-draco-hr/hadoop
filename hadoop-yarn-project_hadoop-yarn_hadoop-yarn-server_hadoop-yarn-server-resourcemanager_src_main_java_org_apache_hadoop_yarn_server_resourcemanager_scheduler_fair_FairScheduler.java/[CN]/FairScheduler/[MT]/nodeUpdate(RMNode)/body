{
  long start=getClock().getTime();
  if (LOG.isDebugEnabled()) {
    LOG.debug("nodeUpdate: " + nm + " cluster capacity: "+ clusterResource);
  }
  eventLog.log("HEARTBEAT",nm.getHostName());
  FSSchedulerNode node=getFSSchedulerNode(nm.getNodeID());
  List<UpdatedContainerInfo> containerInfoList=nm.pullContainerUpdates();
  List<ContainerStatus> newlyLaunchedContainers=new ArrayList<ContainerStatus>();
  List<ContainerStatus> completedContainers=new ArrayList<ContainerStatus>();
  for (  UpdatedContainerInfo containerInfo : containerInfoList) {
    newlyLaunchedContainers.addAll(containerInfo.getNewlyLaunchedContainers());
    completedContainers.addAll(containerInfo.getCompletedContainers());
  }
  for (  ContainerStatus launchedContainer : newlyLaunchedContainers) {
    containerLaunchedOnNode(launchedContainer.getContainerId(),node);
  }
  for (  ContainerStatus completedContainer : completedContainers) {
    ContainerId containerId=completedContainer.getContainerId();
    LOG.debug("Container FINISHED: " + containerId);
    completedContainer(getRMContainer(containerId),completedContainer,RMContainerEventType.FINISHED);
  }
  if (continuousSchedulingEnabled) {
    if (!completedContainers.isEmpty()) {
      attemptScheduling(node);
    }
  }
 else {
    attemptScheduling(node);
  }
  node.setAggregatedContainersUtilization(nm.getAggregatedContainersUtilization());
  node.setNodeUtilization(nm.getNodeUtilization());
  long duration=getClock().getTime() - start;
  fsOpDurations.addNodeUpdateDuration(duration);
}
