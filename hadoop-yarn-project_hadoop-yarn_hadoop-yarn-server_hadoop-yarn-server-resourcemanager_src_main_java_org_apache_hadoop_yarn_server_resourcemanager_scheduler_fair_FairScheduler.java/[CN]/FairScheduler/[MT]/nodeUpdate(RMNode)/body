{
  if (LOG.isDebugEnabled()) {
    LOG.debug("nodeUpdate: " + nm + " cluster capacity: "+ clusterCapacity);
  }
  eventLog.log("HEARTBEAT",nm.getHostName());
  FSSchedulerNode node=nodes.get(nm.getNodeID());
  List<UpdatedContainerInfo> containerInfoList=nm.pullContainerUpdates();
  List<ContainerStatus> newlyLaunchedContainers=new ArrayList<ContainerStatus>();
  List<ContainerStatus> completedContainers=new ArrayList<ContainerStatus>();
  for (  UpdatedContainerInfo containerInfo : containerInfoList) {
    newlyLaunchedContainers.addAll(containerInfo.getNewlyLaunchedContainers());
    completedContainers.addAll(containerInfo.getCompletedContainers());
  }
  for (  ContainerStatus launchedContainer : newlyLaunchedContainers) {
    containerLaunchedOnNode(launchedContainer.getContainerId(),node);
  }
  for (  ContainerStatus completedContainer : completedContainers) {
    ContainerId containerId=completedContainer.getContainerId();
    LOG.debug("Container FINISHED: " + containerId);
    completedContainer(getRMContainer(containerId),completedContainer,RMContainerEventType.FINISHED);
  }
  AppSchedulable reservedAppSchedulable=node.getReservedAppSchedulable();
  if (reservedAppSchedulable != null) {
    Priority reservedPriority=node.getReservedContainer().getReservedPriority();
    if (reservedAppSchedulable != null && !reservedAppSchedulable.hasContainerForNode(reservedPriority,node)) {
      LOG.info("Releasing reservation that cannot be satisfied for application " + reservedAppSchedulable.getApp().getApplicationAttemptId() + " on node "+ nm);
      reservedAppSchedulable.unreserve(reservedPriority,node);
      reservedAppSchedulable=null;
    }
 else {
      LOG.info("Trying to fulfill reservation for application " + reservedAppSchedulable.getApp().getApplicationAttemptId() + " on node: "+ nm);
      node.getReservedAppSchedulable().assignReservedContainer(node);
    }
  }
  if (reservedAppSchedulable == null) {
    int assignedContainers=0;
    while (node.getReservedContainer() == null) {
      boolean assignedContainer=false;
      if (Resources.greaterThan(RESOURCE_CALCULATOR,clusterCapacity,queueMgr.getRootQueue().assignContainer(node),Resources.none())) {
        assignedContainer=true;
      }
      if (!assignedContainer) {
        break;
      }
      if (!assignMultiple) {
        break;
      }
      if ((assignedContainers >= maxAssign) && (maxAssign > 0)) {
        break;
      }
    }
  }
}
