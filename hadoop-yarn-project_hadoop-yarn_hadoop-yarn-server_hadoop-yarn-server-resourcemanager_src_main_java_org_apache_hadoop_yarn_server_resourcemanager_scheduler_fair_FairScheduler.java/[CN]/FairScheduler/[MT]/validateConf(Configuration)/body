{
  int minMem=conf.getInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);
  int maxMem=conf.getInt(YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);
  if (minMem < 0 || minMem > maxMem) {
    throw new YarnRuntimeException("Invalid resource scheduler memory" + " allocation configuration" + ", " + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB + "="+ minMem+ ", "+ YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB+ "="+ maxMem+ ", min should equal greater than 0"+ ", max should be no smaller than min.");
  }
  int minVcores=conf.getInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);
  int maxVcores=conf.getInt(YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);
  if (minVcores < 0 || minVcores > maxVcores) {
    throw new YarnRuntimeException("Invalid resource scheduler vcores" + " allocation configuration" + ", " + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES + "="+ minVcores+ ", "+ YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES+ "="+ maxVcores+ ", min should equal greater than 0"+ ", max should be no smaller than min.");
  }
}
