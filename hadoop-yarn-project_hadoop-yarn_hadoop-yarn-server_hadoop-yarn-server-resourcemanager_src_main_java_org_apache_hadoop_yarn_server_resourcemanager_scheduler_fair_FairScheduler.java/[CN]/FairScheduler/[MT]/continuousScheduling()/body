{
  while (true) {
    List<NodeId> nodeIdList=new ArrayList<NodeId>(nodes.keySet());
synchronized (this) {
      Collections.sort(nodeIdList,nodeAvailableResourceComparator);
    }
    for (    NodeId nodeId : nodeIdList) {
      if (nodes.containsKey(nodeId)) {
        FSSchedulerNode node=nodes.get(nodeId);
        try {
          if (Resources.fitsIn(minimumAllocation,node.getAvailableResource())) {
            attemptScheduling(node);
          }
        }
 catch (        Throwable ex) {
          LOG.warn("Error while attempting scheduling for node " + node + ": "+ ex.toString(),ex);
        }
      }
    }
    try {
      Thread.sleep(getContinuousSchedulingSleepMs());
    }
 catch (    InterruptedException e) {
      LOG.warn("Error while doing sleep in continuous scheduling: " + e.toString(),e);
    }
  }
}
