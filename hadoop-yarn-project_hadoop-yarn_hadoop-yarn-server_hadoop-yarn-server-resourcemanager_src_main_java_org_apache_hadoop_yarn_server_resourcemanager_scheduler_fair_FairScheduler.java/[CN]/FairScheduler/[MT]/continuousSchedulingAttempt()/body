{
  long start=getClock().getTime();
  List<NodeId> nodeIdList=new ArrayList<NodeId>(nodes.keySet());
synchronized (this) {
    Collections.sort(nodeIdList,nodeAvailableResourceComparator);
  }
  for (  NodeId nodeId : nodeIdList) {
    FSSchedulerNode node=getFSSchedulerNode(nodeId);
    try {
      if (node != null && Resources.fitsIn(minimumAllocation,node.getAvailableResource())) {
        attemptScheduling(node);
      }
    }
 catch (    Throwable ex) {
      LOG.error("Error while attempting scheduling for node " + node + ": "+ ex.toString(),ex);
    }
  }
  long duration=getClock().getTime() - start;
  fsOpDurations.addContinuousSchedulingRunDuration(duration);
}
