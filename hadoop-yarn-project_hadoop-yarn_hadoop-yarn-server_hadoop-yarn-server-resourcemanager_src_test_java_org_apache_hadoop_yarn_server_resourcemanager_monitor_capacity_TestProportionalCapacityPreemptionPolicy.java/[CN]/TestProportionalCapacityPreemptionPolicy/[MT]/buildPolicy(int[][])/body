{
  ProportionalCapacityPreemptionPolicy policy=new ProportionalCapacityPreemptionPolicy(conf,rmContext,mCS,mClock);
  ParentQueue mRoot=buildMockRootQueue(rand,qData);
  when(mCS.getRootQueue()).thenReturn(mRoot);
  clusterResources=Resource.newInstance(leafAbsCapacities(qData[0],qData[7]),0);
  when(mCS.getClusterResource()).thenReturn(clusterResources);
  when(lm.getResourceByLabel(anyString(),any(Resource.class))).thenReturn(clusterResources);
  SchedulerNode mNode=mock(SchedulerNode.class);
  when(mNode.getPartition()).thenReturn(RMNodeLabelsManager.NO_LABEL);
  when(mCS.getSchedulerNode(any(NodeId.class))).thenReturn(mNode);
  return policy;
}
