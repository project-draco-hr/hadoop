{
  if (useDominantResourceCalculator) {
    when(mCS.getResourceCalculator()).thenReturn(new DominantResourceCalculator());
  }
  ProportionalCapacityPreemptionPolicy policy=new ProportionalCapacityPreemptionPolicy(rmContext,mCS,mClock);
  clusterResources=leafAbsCapacities(parseResourceDetails(resData[0]),qData[2]);
  ParentQueue mRoot=buildMockRootQueue(rand,resData,qData);
  when(mCS.getRootQueue()).thenReturn(mRoot);
  setResourceAndNodeDetails();
  return policy;
}
