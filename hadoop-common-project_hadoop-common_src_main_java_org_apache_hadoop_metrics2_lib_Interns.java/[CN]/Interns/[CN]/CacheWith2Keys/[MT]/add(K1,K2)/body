{
  Map<K2,V> k2Map=k1Map.get(k1);
  if (k2Map == null) {
    k2Map=new LinkedHashMap<K2,V>(){
      private static final long serialVersionUID=1L;
      private boolean gotOverflow=false;
      @Override protected boolean removeEldestEntry(      Map.Entry<K2,V> e){
        boolean overflow=expireKey2At(size());
        if (overflow && !gotOverflow) {
          LOG.warn("Metrics intern cache overflow at " + size() + " for "+ e);
          gotOverflow=true;
        }
        return overflow;
      }
    }
;
    k1Map.put(k1,k2Map);
  }
  V v=k2Map.get(k2);
  if (v == null) {
    v=newValue(k1,k2);
    k2Map.put(k2,v);
  }
  return v;
}
