{
  Assert.assertEquals(num,store.getAllApplications().size());
  for (int i=1; i <= num; ++i) {
    ApplicationId appId=ApplicationId.newInstance(0,i);
    ApplicationHistoryData appData=store.getApplication(appId);
    Assert.assertNotNull(appData);
    Assert.assertEquals(appId.toString(),appData.getApplicationName());
    Assert.assertEquals(appId.toString(),appData.getDiagnosticsInfo());
    Assert.assertEquals(num,store.getApplicationAttempts(appId).size());
    for (int j=1; j <= num; ++j) {
      ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,j);
      ApplicationAttemptHistoryData attemptData=store.getApplicationAttempt(appAttemptId);
      Assert.assertNotNull(attemptData);
      Assert.assertEquals(appAttemptId.toString(),attemptData.getHost());
      if (missingApplicationAttempt && j == num) {
        Assert.assertNull(attemptData.getDiagnosticsInfo());
        continue;
      }
 else {
        Assert.assertEquals(appAttemptId.toString(),attemptData.getDiagnosticsInfo());
      }
      Assert.assertEquals(num,store.getContainers(appAttemptId).size());
      for (int k=1; k <= num; ++k) {
        ContainerId containerId=ContainerId.newContainerId(appAttemptId,k);
        ContainerHistoryData containerData=store.getContainer(containerId);
        Assert.assertNotNull(containerData);
        Assert.assertEquals(Priority.newInstance(containerId.getId()),containerData.getPriority());
        if (missingContainer && k == num) {
          Assert.assertNull(containerData.getDiagnosticsInfo());
        }
 else {
          Assert.assertEquals(containerId.toString(),containerData.getDiagnosticsInfo());
        }
      }
      ContainerHistoryData masterContainer=store.getAMContainer(appAttemptId);
      Assert.assertNotNull(masterContainer);
      Assert.assertEquals(ContainerId.newContainerId(appAttemptId,1),masterContainer.getContainerId());
    }
  }
}
