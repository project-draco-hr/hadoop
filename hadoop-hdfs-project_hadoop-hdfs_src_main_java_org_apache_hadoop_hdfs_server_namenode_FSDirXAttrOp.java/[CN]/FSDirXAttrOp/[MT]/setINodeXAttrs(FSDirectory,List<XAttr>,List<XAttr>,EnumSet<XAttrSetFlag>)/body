{
  for (int i=0; i < toSet.size(); i++) {
    for (int j=i + 1; j < toSet.size(); j++) {
      if (toSet.get(i).equalsIgnoreValue(toSet.get(j))) {
        throw new IOException("Cannot specify the same XAttr to be set " + "more than once");
      }
    }
  }
  int userVisibleXAttrsNum=0;
  int newSize=(existingXAttrs != null) ? existingXAttrs.size() : 0;
  newSize+=toSet.size();
  List<XAttr> xAttrs=Lists.newArrayListWithCapacity(newSize);
  for (  XAttr xAttr : toSet) {
    boolean exist=false;
    if (existingXAttrs != null) {
      for (      XAttr a : existingXAttrs) {
        if (a.equalsIgnoreValue(xAttr)) {
          exist=true;
          break;
        }
      }
    }
    XAttrSetFlag.validate(xAttr.getName(),exist,flag);
    xAttrs.add(xAttr);
    if (isUserVisible(xAttr)) {
      userVisibleXAttrsNum++;
    }
  }
  if (existingXAttrs != null) {
    for (    XAttr existing : existingXAttrs) {
      boolean alreadySet=false;
      for (      XAttr set : toSet) {
        if (set.equalsIgnoreValue(existing)) {
          alreadySet=true;
          break;
        }
      }
      if (!alreadySet) {
        xAttrs.add(existing);
        if (isUserVisible(existing)) {
          userVisibleXAttrsNum++;
        }
      }
    }
  }
  if (userVisibleXAttrsNum > fsd.getInodeXAttrsLimit()) {
    throw new IOException("Cannot add additional XAttr to inode, " + "would exceed limit of " + fsd.getInodeXAttrsLimit());
  }
  return xAttrs;
}
