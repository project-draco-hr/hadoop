{
  String parameters[]=new String[]{"-threshold"};
  String reason="IllegalArgumentException is expected when value is not specified";
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-policy"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-threshold","1","-policy"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-threshold","1","-include"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-threshold","1","-exclude"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-include","-f"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-exclude","-f"};
  try {
    Balancer.Cli.parse(parameters);
    fail(reason);
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-include","testnode1","-exclude","testnode2"};
  try {
    Balancer.Cli.parse(parameters);
    fail("IllegalArgumentException is expected when both -exclude and -include are specified");
  }
 catch (  IllegalArgumentException e) {
  }
  parameters=new String[]{"-blockpools"};
  try {
    Balancer.Cli.parse(parameters);
    fail("IllegalArgumentException is expected when a value " + "is not specified for the blockpool flag");
  }
 catch (  IllegalArgumentException e) {
  }
}
