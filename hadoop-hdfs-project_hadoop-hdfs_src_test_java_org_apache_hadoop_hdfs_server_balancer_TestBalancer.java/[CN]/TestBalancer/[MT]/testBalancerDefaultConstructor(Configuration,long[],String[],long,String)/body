{
  int numOfDatanodes=capacities.length;
  assertEquals(numOfDatanodes,racks.length);
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(capacities.length).racks(racks).simulatedCapacities(capacities).build();
  try {
    cluster.waitActive();
    client=NameNodeProxies.createProxy(conf,cluster.getFileSystem(0).getUri(),ClientProtocol.class).getProxy();
    long totalCapacity=sum(capacities);
    long totalUsedSpace=totalCapacity * 3 / 10;
    createFile(cluster,filePath,totalUsedSpace / numOfDatanodes,(short)numOfDatanodes,0);
    cluster.startDataNodes(conf,1,true,null,new String[]{newRack},new long[]{newCapacity});
    totalCapacity+=newCapacity;
    runBalancer(conf,totalUsedSpace,totalCapacity);
  }
  finally {
    cluster.shutdown();
  }
}
