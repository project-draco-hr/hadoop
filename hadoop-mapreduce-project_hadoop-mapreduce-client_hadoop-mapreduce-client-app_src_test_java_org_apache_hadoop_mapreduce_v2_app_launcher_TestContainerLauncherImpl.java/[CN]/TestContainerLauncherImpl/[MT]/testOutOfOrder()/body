{
  LOG.info("STARTING testOutOfOrder");
  YarnRPC mockRpc=mock(YarnRPC.class);
  AppContext mockContext=mock(AppContext.class);
  @SuppressWarnings("rawtypes") EventHandler mockEventHandler=mock(EventHandler.class);
  when(mockContext.getEventHandler()).thenReturn(mockEventHandler);
  ContainerManagementProtocol mockCM=mock(ContainerManagementProtocol.class);
  when(mockRpc.getProxy(eq(ContainerManagementProtocol.class),any(InetSocketAddress.class),any(Configuration.class))).thenReturn(mockCM);
  ContainerLauncherImplUnderTest ut=new ContainerLauncherImplUnderTest(mockContext,mockRpc);
  Configuration conf=new Configuration();
  ut.init(conf);
  ut.start();
  try {
    ContainerId contId=makeContainerId(0l,0,0,1);
    TaskAttemptId taskAttemptId=makeTaskAttemptId(0l,0,0,TaskType.MAP,0);
    String cmAddress="127.0.0.1:8000";
    StartContainerResponse startResp=recordFactory.newRecordInstance(StartContainerResponse.class);
    startResp.setAllServiceResponse(serviceResponse);
    LOG.info("inserting cleanup event");
    ContainerLauncherEvent mockCleanupEvent=mock(ContainerLauncherEvent.class);
    when(mockCleanupEvent.getType()).thenReturn(EventType.CONTAINER_REMOTE_CLEANUP);
    when(mockCleanupEvent.getContainerID()).thenReturn(contId);
    when(mockCleanupEvent.getTaskAttemptID()).thenReturn(taskAttemptId);
    when(mockCleanupEvent.getContainerMgrAddress()).thenReturn(cmAddress);
    ut.handle(mockCleanupEvent);
    ut.waitForPoolToIdle();
    verify(mockCM,never()).stopContainer(any(StopContainerRequest.class));
    LOG.info("inserting launch event");
    ContainerRemoteLaunchEvent mockLaunchEvent=mock(ContainerRemoteLaunchEvent.class);
    when(mockLaunchEvent.getType()).thenReturn(EventType.CONTAINER_REMOTE_LAUNCH);
    when(mockLaunchEvent.getContainerID()).thenReturn(contId);
    when(mockLaunchEvent.getTaskAttemptID()).thenReturn(taskAttemptId);
    when(mockLaunchEvent.getContainerMgrAddress()).thenReturn(cmAddress);
    when(mockCM.startContainer(any(StartContainerRequest.class))).thenReturn(startResp);
    when(mockLaunchEvent.getContainerToken()).thenReturn(createNewContainerToken(contId,cmAddress));
    ut.handle(mockLaunchEvent);
    ut.waitForPoolToIdle();
    verify(mockCM,never()).startContainer(any(StartContainerRequest.class));
  }
  finally {
    ut.stop();
  }
}
