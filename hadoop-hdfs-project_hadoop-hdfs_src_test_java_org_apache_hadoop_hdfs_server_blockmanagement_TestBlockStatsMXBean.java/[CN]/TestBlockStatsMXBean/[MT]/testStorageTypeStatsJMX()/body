{
  URL baseUrl=new URL(cluster.getHttpUri(0));
  String result=readOutput(new URL(baseUrl,"/jmx"));
  Map<String,Object> stat=(Map<String,Object>)JSON.parse(result);
  Object[] beans=(Object[])stat.get("beans");
  Map<String,Object> blockStats=null;
  for (  Object bean : beans) {
    Map<String,Object> map=(Map<String,Object>)bean;
    if (map.get("name").equals("Hadoop:service=NameNode,name=BlockStats")) {
      blockStats=map;
    }
  }
  assertNotNull(blockStats);
  Object[] storageTypeStatsList=(Object[])blockStats.get("StorageTypeStats");
  assertNotNull(storageTypeStatsList);
  assertEquals(3,storageTypeStatsList.length);
  Set<String> typesPresent=new HashSet<>();
  for (  Object obj : storageTypeStatsList) {
    Map<String,Object> entry=(Map<String,Object>)obj;
    String storageType=(String)entry.get("key");
    Map<String,Object> storageTypeStats=(Map<String,Object>)entry.get("value");
    typesPresent.add(storageType);
    if (storageType.equals("ARCHIVE") || storageType.equals("DISK")) {
      assertEquals(3l,storageTypeStats.get("nodesInService"));
    }
 else     if (storageType.equals("RAM_DISK")) {
      assertEquals(6l,storageTypeStats.get("nodesInService"));
    }
 else {
      fail();
    }
  }
  assertTrue(typesPresent.contains("ARCHIVE"));
  assertTrue(typesPresent.contains("DISK"));
  assertTrue(typesPresent.contains("RAM_DISK"));
}
