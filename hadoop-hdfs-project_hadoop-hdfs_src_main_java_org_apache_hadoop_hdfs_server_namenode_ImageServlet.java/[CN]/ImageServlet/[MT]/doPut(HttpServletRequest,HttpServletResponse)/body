{
  try {
    ServletContext context=getServletContext();
    final FSImage nnImage=NameNodeHttpServer.getFsImageFromContext(context);
    final Configuration conf=(Configuration)getServletContext().getAttribute(JspHelper.CURRENT_CONF);
    final PutImageParams parsedParams=new PutImageParams(request,response,conf);
    final NameNodeMetrics metrics=NameNode.getNameNodeMetrics();
    validateRequest(context,conf,request,response,nnImage,parsedParams.getStorageInfoString());
    UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        final long txid=parsedParams.getTxId();
        final NameNodeFile nnf=parsedParams.getNameNodeFile();
        if (!currentlyDownloadingCheckpoints.add(txid)) {
          response.sendError(HttpServletResponse.SC_CONFLICT,"Another checkpointer is already in the process of uploading a" + " checkpoint made at transaction ID " + txid);
          return null;
        }
        try {
          if (nnImage.getStorage().findImageFile(nnf,txid) != null) {
            response.sendError(HttpServletResponse.SC_CONFLICT,"Another checkpointer already uploaded an checkpoint " + "for txid " + txid);
            return null;
          }
          InputStream stream=request.getInputStream();
          try {
            long start=monotonicNow();
            MD5Hash downloadImageDigest=TransferFsImage.handleUploadImageRequest(request,txid,nnImage.getStorage(),stream,parsedParams.getFileSize(),getThrottler(conf));
            nnImage.saveDigestAndRenameCheckpointImage(nnf,txid,downloadImageDigest);
            if (metrics != null) {
              long elapsed=monotonicNow() - start;
              metrics.addPutImage(elapsed);
            }
            nnImage.purgeOldStorage(nnf);
          }
  finally {
            stream.close();
          }
        }
  finally {
          currentlyDownloadingCheckpoints.remove(txid);
        }
        return null;
      }
    }
);
  }
 catch (  Throwable t) {
    String errMsg="PutImage failed. " + StringUtils.stringifyException(t);
    response.sendError(HttpServletResponse.SC_GONE,errMsg);
    throw new IOException(errMsg);
  }
}
