{
  if (!isValidRequest()) {
    html.h2($(TITLE));
    return;
  }
  if (enableUIActions) {
    String appID=app.getJob().getID().getAppId().toString();
    String jobID=app.getJob().getID().toString();
    String taskID=app.getTask().getID().toString();
    stateURLFormat=String.format("/proxy/%s/ws/v1/mapreduce/jobs/%s/tasks/%s/" + "attempts",appID,jobID,taskID) + "/%s/state";
    String current=String.format("/proxy/%s/mapreduce/task/%s",appID,taskID);
    StringBuilder script=new StringBuilder();
    script.append("function confirmAction(stateURL) {").append(" b = confirm(\"Are you sure?\");").append(" if (b == true) {").append(" $.ajax({").append(" type: 'PUT',").append(" url: stateURL,").append(" contentType: 'application/json',").append(" data: '{\"state\":\"KILLED\"}',").append(" dataType: 'json'").append(" }).done(function(data){").append(" setTimeout(function(){").append(" location.href = '").append(current).append("';").append(" }, 1000);").append(" }).fail(function(data){").append(" console.log(data);").append(" });").append(" }").append("}");
    html.script().$type("text/javascript")._(script.toString())._();
  }
  TR<THEAD<TABLE<Hamlet>>> tr=html.table("#attempts").thead().tr();
  tr.th(".id","Attempt").th(".progress","Progress").th(".state","State").th(".status","Status").th(".node","Node").th(".logs","Logs").th(".tsh","Started").th(".tsh","Finished").th(".tsh","Elapsed").th(".note","Note");
  if (enableUIActions) {
    tr.th(".actions","Actions");
  }
  TBODY<TABLE<Hamlet>> tbody=tr._()._().tbody();
  StringBuilder attemptsTableData=new StringBuilder("[\n");
  for (  TaskAttempt attempt : getTaskAttempts()) {
    TaskAttemptInfo ta=new TaskAttemptInfo(attempt,true);
    String progress=StringUtils.formatPercent(ta.getProgress() / 100,2);
    String nodeHttpAddr=ta.getNode();
    String diag=ta.getNote() == null ? "" : ta.getNote();
    attemptsTableData.append("[\"").append(ta.getId()).append("\",\"").append(progress).append("\",\"").append(ta.getState().toString()).append("\",\"").append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(ta.getStatus()))).append("\",\"").append(nodeHttpAddr == null ? "N/A" : "<a class='nodelink' href='" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr+ "'>"+ nodeHttpAddr+ "</a>").append("\",\"").append(ta.getAssignedContainerId() == null ? "N/A" : "<a class='logslink' href='" + url(MRWebAppUtil.getYARNWebappScheme(),nodeHttpAddr,"node","containerlogs",ta.getAssignedContainerIdStr(),app.getJob().getUserName()) + "'>logs</a>").append("\",\"").append(ta.getStartTime()).append("\",\"").append(ta.getFinishTime()).append("\",\"").append(ta.getElapsedTime()).append("\",\"").append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(diag)));
    if (enableUIActions) {
      attemptsTableData.append("\",\"").append("<a href=javascript:void(0) onclick=confirmAction('").append(String.format(stateURLFormat,ta.getId())).append("');>Kill</a>").append("\"],\n");
    }
 else {
      attemptsTableData.append("\"],\n");
    }
  }
  if (attemptsTableData.charAt(attemptsTableData.length() - 2) == ',') {
    attemptsTableData.delete(attemptsTableData.length() - 2,attemptsTableData.length() - 1);
  }
  attemptsTableData.append("]");
  html.script().$type("text/javascript")._("var attemptsTableData=" + attemptsTableData)._();
  tbody._()._();
}
