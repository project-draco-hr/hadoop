{
  if (!isValidRequest()) {
    html.h2($(TITLE));
    return;
  }
  TBODY<TABLE<Hamlet>> tbody=html.table("#attempts").thead().tr().th(".id","Attempt").th(".progress","Progress").th(".state","State").th(".node","node").th(".tsh","Started").th(".tsh","Finished").th(".tsh","Elapsed").th(".note","Note")._()._().tbody();
  for (  TaskAttempt ta : getTaskAttempts()) {
    String taid=MRApps.toString(ta.getID());
    String progress=percent(ta.getProgress());
    ContainerId containerId=ta.getAssignedContainerID();
    String nodeHttpAddr=ta.getNodeHttpAddress();
    long startTime=ta.getLaunchTime();
    long finishTime=ta.getFinishTime();
    long elapsed=Times.elapsed(startTime,finishTime);
    TD<TR<TBODY<TABLE<Hamlet>>>> nodeTd=tbody.tr().td(".id",taid).td(".progress",progress).td(".state",ta.getState().toString()).td().a(".nodelink",url("http://",nodeHttpAddr),nodeHttpAddr);
    if (containerId != null) {
      String containerIdStr=ConverterUtils.toString(containerId);
      nodeTd._(" ").a(".logslink",url("http://",nodeHttpAddr,"node","containerlogs",containerIdStr,app.getJob().getUserName()),"logs");
    }
    nodeTd._().td(".ts",Times.format(startTime)).td(".ts",Times.format(finishTime)).td(".dt",StringUtils.formatTime(elapsed)).td(".note",Joiner.on('\n').join(ta.getDiagnostics()))._();
  }
  tbody._()._();
}
