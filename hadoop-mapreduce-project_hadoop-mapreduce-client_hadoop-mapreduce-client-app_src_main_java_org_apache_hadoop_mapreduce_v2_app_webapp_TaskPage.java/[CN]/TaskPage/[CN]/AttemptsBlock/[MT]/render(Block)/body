{
  if (!isValidRequest()) {
    html.h2($(TITLE));
    return;
  }
  JobId jobId=app.getJob().getID();
  if (enableUIActions) {
    StringBuilder script=new StringBuilder();
    script.append("function confirmAction(appID, jobID, taskID, attID) {\n").append("  var b = confirm(\"Are you sure?\");\n").append("  if (b == true) {\n").append("    var current = '/proxy/' + appID").append("      + '/mapreduce/task/' + taskID;\n").append("    var stateURL = '/proxy/' + appID").append("      + '/ws/v1/mapreduce/jobs/' + jobID").append("      + '/tasks/' + taskID").append("      + '/attempts/' + attID + '/state';\n").append("    $.ajax({\n").append("      type: 'PUT',\n").append("      url: stateURL,\n").append("      contentType: 'application/json',\n").append("      data: '{\"state\":\"KILLED\"}',\n").append("      dataType: 'json'\n").append("    }).done(function(data) {\n").append("         setTimeout(function() {\n").append("           location.href = current;\n").append("         }, 1000);\n").append("    }).fail(function(data) {\n").append("         console.log(data);\n").append("    });\n").append("  }\n").append("}\n");
    html.script().$type("text/javascript")._(script.toString())._();
  }
  TR<THEAD<TABLE<Hamlet>>> tr=html.table("#attempts").thead().tr();
  tr.th(".id","Attempt").th(".progress","Progress").th(".state","State").th(".status","Status").th(".node","Node").th(".logs","Logs").th(".tsh","Started").th(".tsh","Finished").th(".tsh","Elapsed").th(".note","Note");
  if (enableUIActions) {
    tr.th(".actions","Actions");
  }
  TBODY<TABLE<Hamlet>> tbody=tr._()._().tbody();
  StringBuilder attemptsTableData=new StringBuilder("[\n");
  for (  TaskAttempt attempt : getTaskAttempts()) {
    TaskAttemptInfo ta=new TaskAttemptInfo(attempt,true);
    String progress=StringUtils.formatPercent(ta.getProgress() / 100,2);
    String nodeHttpAddr=ta.getNode();
    String diag=ta.getNote() == null ? "" : ta.getNote();
    attemptsTableData.append("[\"").append(ta.getId()).append("\",\"").append(progress).append("\",\"").append(ta.getState().toString()).append("\",\"").append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(ta.getStatus()))).append("\",\"").append(nodeHttpAddr == null ? "N/A" : "<a class='nodelink' href='" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr+ "'>"+ nodeHttpAddr+ "</a>").append("\",\"").append(ta.getAssignedContainerId() == null ? "N/A" : "<a class='logslink' href='" + url(MRWebAppUtil.getYARNWebappScheme(),nodeHttpAddr,"node","containerlogs",ta.getAssignedContainerIdStr(),app.getJob().getUserName()) + "'>logs</a>").append("\",\"").append(ta.getStartTime()).append("\",\"").append(ta.getFinishTime()).append("\",\"").append(ta.getElapsedTime()).append("\",\"").append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(diag)));
    if (enableUIActions) {
      attemptsTableData.append("\",\"");
      if (EnumSet.of(TaskAttemptState.SUCCEEDED,TaskAttemptState.FAILED,TaskAttemptState.KILLED).contains(attempt.getState())) {
        attemptsTableData.append("N/A");
      }
 else {
        attemptsTableData.append("<a href=javascript:void(0) onclick=confirmAction('").append(jobId.getAppId()).append("','").append(jobId).append("','").append(attempt.getID().getTaskId()).append("','").append(ta.getId()).append("');>Kill</a>");
      }
      attemptsTableData.append("\"],\n");
    }
  }
  if (attemptsTableData.charAt(attemptsTableData.length() - 2) == ',') {
    attemptsTableData.delete(attemptsTableData.length() - 2,attemptsTableData.length() - 1);
  }
  attemptsTableData.append("]");
  html.script().$type("text/javascript")._("var attemptsTableData=" + attemptsTableData)._();
  tbody._()._();
}
