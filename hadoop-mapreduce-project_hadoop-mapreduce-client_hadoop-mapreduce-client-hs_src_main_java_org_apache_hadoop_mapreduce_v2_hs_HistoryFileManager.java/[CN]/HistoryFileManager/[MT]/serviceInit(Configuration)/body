{
  this.conf=conf;
  int serialNumberLowDigits=3;
  serialNumberFormat=("%0" + (JobHistoryUtils.SERIAL_NUMBER_DIRECTORY_DIGITS + serialNumberLowDigits) + "d");
  long maxFSWaitTime=conf.getLong(JHAdminConfig.MR_HISTORY_MAX_START_WAIT_TIME,JHAdminConfig.DEFAULT_MR_HISTORY_MAX_START_WAIT_TIME);
  createHistoryDirs(SystemClock.getInstance(),10 * 1000,maxFSWaitTime);
  this.aclsMgr=new JobACLsManager(conf);
  maxHistoryAge=conf.getLong(JHAdminConfig.MR_HISTORY_MAX_AGE_MS,JHAdminConfig.DEFAULT_MR_HISTORY_MAX_AGE);
  jobListCache=createJobListCache();
  serialNumberIndex=new SerialNumberIndex(conf.getInt(JHAdminConfig.MR_HISTORY_DATESTRING_CACHE_SIZE,JHAdminConfig.DEFAULT_MR_HISTORY_DATESTRING_CACHE_SIZE));
  int numMoveThreads=conf.getInt(JHAdminConfig.MR_HISTORY_MOVE_THREAD_COUNT,JHAdminConfig.DEFAULT_MR_HISTORY_MOVE_THREAD_COUNT);
  ThreadFactory tf=new ThreadFactoryBuilder().setNameFormat("MoveIntermediateToDone Thread #%d").build();
  moveToDoneExecutor=new HadoopThreadPoolExecutor(numMoveThreads,numMoveThreads,1,TimeUnit.HOURS,new LinkedBlockingQueue<Runnable>(),tf);
  super.serviceInit(conf);
}
