{
  JobQueueInfo[] queues=TestQueueManagerRefresh.getSimpleQueueHierarchy();
  Properties[] props=new Properties[3];
  for (int i=0; i < props.length; i++) {
    props[i]=queues[i].getProperties();
    props[i].setProperty(CapacitySchedulerConf.CAPACITY_PROPERTY,String.valueOf(i + 10));
    props[i].setProperty(CapacitySchedulerConf.MAX_CAPACITY_PROPERTY,String.valueOf(i + 15));
    props[i].setProperty(CapacitySchedulerConf.SUPPORTS_PRIORITY_PROPERTY,String.valueOf(false));
    props[i].setProperty(CapacitySchedulerConf.MAXIMUM_INITIALIZED_JOBS_PER_USER_PROPERTY,String.valueOf(i + 11));
    props[i].setProperty(CapacitySchedulerConf.MINIMUM_USER_LIMIT_PERCENT_PROPERTY,String.valueOf(i + 16));
  }
  QueueManagerTestUtils.writeQueueConfigurationFile(queueConfigFile.getAbsolutePath(),new JobQueueInfo[]{queues[0]});
  setupAndStartSchedulerFramework(0,0,0);
  Map<String,AbstractQueue> allQueues=getAllQueues(scheduler);
  for (int i=0; i < queues.length; i++) {
    String qName=queues[i].getQueueName();
    LOG.info("Queue name : " + qName);
    QueueSchedulingContext qsc=allQueues.get(qName).getQueueSchedulingContext();
    LOG.info("Context for queue " + qName + " is : "+ qsc);
    assertEquals(i + 10,qsc.getCapacityPercent(),0);
    assertEquals(i + 15,qsc.getMaxCapacityPercent(),0);
    assertEquals(Boolean.valueOf(false),Boolean.valueOf(qsc.supportsPriorities()));
    assertEquals(i + 16,qsc.getUlMin());
  }
  for (int i=0; i < props.length; i++) {
    props[i]=queues[i].getProperties();
    props[i].setProperty(CapacitySchedulerConf.CAPACITY_PROPERTY,String.valueOf(i + 20));
    props[i].setProperty(CapacitySchedulerConf.MAX_CAPACITY_PROPERTY,String.valueOf(i + 25));
    props[i].setProperty(CapacitySchedulerConf.SUPPORTS_PRIORITY_PROPERTY,String.valueOf(false));
    props[i].setProperty(CapacitySchedulerConf.MAXIMUM_INITIALIZED_JOBS_PER_USER_PROPERTY,String.valueOf(i + 5));
    props[i].setProperty(CapacitySchedulerConf.MINIMUM_USER_LIMIT_PERCENT_PROPERTY,String.valueOf(i + 10));
  }
  QueueManagerTestUtils.writeQueueConfigurationFile(queueConfigFile.getAbsolutePath(),new JobQueueInfo[]{queues[0]});
  refreshQueues(taskTrackerManager.getQueueManager(),null,scheduler);
  allQueues=getAllQueues(scheduler);
  for (int i=0; i < queues.length; i++) {
    String qName=queues[i].getQueueName();
    LOG.info("Queue name : " + qName);
    QueueSchedulingContext qsc=allQueues.get(qName).getQueueSchedulingContext();
    assertEquals(qName,qsc.getQueueName());
    LOG.info("Context for queue " + qName + " is : "+ qsc);
    assertEquals(i + 20,qsc.getCapacityPercent(),0);
    assertEquals(i + 25,qsc.getMaxCapacityPercent(),0);
    assertEquals(Boolean.valueOf(false),Boolean.valueOf(qsc.supportsPriorities()));
  }
}
