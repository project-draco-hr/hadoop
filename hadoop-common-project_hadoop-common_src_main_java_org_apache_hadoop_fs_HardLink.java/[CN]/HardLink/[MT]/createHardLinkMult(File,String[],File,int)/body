{
  if (parentDir == null) {
    throw new IOException("invalid arguments to createHardLinkMult: parent directory is null");
  }
  if (linkDir == null) {
    throw new IOException("invalid arguments to createHardLinkMult: link directory is null");
  }
  if (fileBaseNames == null) {
    throw new IOException("invalid arguments to createHardLinkMult: " + "filename list can be empty but not null");
  }
  if (fileBaseNames.length == 0) {
    return 0;
  }
  if (!linkDir.exists()) {
    throw new FileNotFoundException(linkDir + " not found.");
  }
  int callCount=0;
  if (getLinkMultArgLength(parentDir,fileBaseNames,linkDir) > maxLength && fileBaseNames.length > 1) {
    String[] list1=Arrays.copyOf(fileBaseNames,fileBaseNames.length / 2);
    callCount+=createHardLinkMult(parentDir,list1,linkDir,maxLength);
    String[] list2=Arrays.copyOfRange(fileBaseNames,fileBaseNames.length / 2,fileBaseNames.length);
    callCount+=createHardLinkMult(parentDir,list2,linkDir,maxLength);
    return callCount;
  }
 else {
    callCount=1;
  }
  String[] hardLinkCommand=getHardLinkCommand.linkMult(fileBaseNames,linkDir);
  ShellCommandExecutor shexec=new ShellCommandExecutor(hardLinkCommand,parentDir,null,0L);
  try {
    shexec.execute();
  }
 catch (  ExitCodeException e) {
    throw new IOException(shexec.getOutput() + e.getMessage());
  }
  return callCount;
}
