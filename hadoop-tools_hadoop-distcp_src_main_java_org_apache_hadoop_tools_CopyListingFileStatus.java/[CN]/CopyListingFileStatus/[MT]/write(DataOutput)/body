{
  super.write(out);
  if (aclEntries != null) {
    out.writeByte(aclEntries.size());
    for (    AclEntry entry : aclEntries) {
      out.writeByte(entry.getScope().ordinal());
      out.writeByte(entry.getType().ordinal());
      WritableUtils.writeString(out,entry.getName());
      out.writeByte(entry.getPermission().ordinal());
    }
  }
 else {
    out.writeByte(NO_ACL_ENTRIES);
  }
  if (xAttrs != null) {
    out.writeInt(xAttrs.size());
    Iterator<Entry<String,byte[]>> iter=xAttrs.entrySet().iterator();
    while (iter.hasNext()) {
      Entry<String,byte[]> entry=iter.next();
      WritableUtils.writeString(out,entry.getKey());
      final byte[] value=entry.getValue();
      if (value != null) {
        out.writeInt(value.length);
        if (value.length > 0) {
          out.write(value);
        }
      }
 else {
        out.writeInt(-1);
      }
    }
  }
 else {
    out.writeInt(NO_XATTRS);
  }
}
