{
  super.readFields(in);
  byte aclEntriesSize=in.readByte();
  if (aclEntriesSize != NO_ACL_ENTRIES) {
    aclEntries=Lists.newArrayListWithCapacity(aclEntriesSize);
    for (int i=0; i < aclEntriesSize; ++i) {
      aclEntries.add(new AclEntry.Builder().setScope(ACL_ENTRY_SCOPES[in.readByte()]).setType(ACL_ENTRY_TYPES[in.readByte()]).setName(WritableUtils.readString(in)).setPermission(FS_ACTIONS[in.readByte()]).build());
    }
  }
 else {
    aclEntries=null;
  }
  int xAttrsSize=in.readInt();
  if (xAttrsSize != NO_XATTRS) {
    xAttrs=Maps.newHashMap();
    for (int i=0; i < xAttrsSize; ++i) {
      final String name=WritableUtils.readString(in);
      final int valueLen=in.readInt();
      byte[] value=null;
      if (valueLen > -1) {
        value=new byte[valueLen];
        if (valueLen > 0) {
          in.readFully(value);
        }
      }
      xAttrs.put(name,value);
    }
  }
 else {
    xAttrs=null;
  }
}
