{
  INodeDirectorySnapshottable ids=mock(INodeDirectorySnapshottable.class);
  FSDirectory fsdir=mock(FSDirectory.class);
  SnapshotManager sm=spy(new SnapshotManager(fsdir));
  doReturn(ids).when(sm).getSnapshottableRoot(anyString());
  doReturn(testMaxSnapshotLimit).when(sm).getMaxSnapshotID();
  for (Integer i=0; i < testMaxSnapshotLimit; ++i) {
    sm.createSnapshot("dummy",i.toString());
  }
  try {
    sm.createSnapshot("dummy","shouldFailSnapshot");
    Assert.fail("Expected SnapshotException not thrown");
  }
 catch (  SnapshotException se) {
    Assert.assertTrue(se.getMessage().toLowerCase().contains("rollover"));
  }
  sm.deleteSnapshot("","",mock(INode.BlocksMapUpdateInfo.class),new ArrayList<INode>());
  try {
    sm.createSnapshot("dummy","shouldFailSnapshot2");
    Assert.fail("Expected SnapshotException not thrown");
  }
 catch (  SnapshotException se) {
    Assert.assertTrue(se.getMessage().toLowerCase().contains("rollover"));
  }
}
