{
  this.b=b;
  this.offset=startOffset;
  this.corrupt=corrupt;
  if (locs == null) {
    this.locs=EMPTY_LOCS;
  }
 else {
    this.locs=new DatanodeInfoWithStorage[locs.length];
    for (int i=0; i < locs.length; i++) {
      DatanodeInfo di=locs[i];
      DatanodeInfoWithStorage storage=new DatanodeInfoWithStorage(di,storageIDs != null ? storageIDs[i] : null,storageTypes != null ? storageTypes[i] : null);
      storage.setDependentHostNames(di.getDependentHostNames());
      storage.setLevel(di.getLevel());
      storage.setParent(di.getParent());
      this.locs[i]=storage;
    }
  }
  this.storageIDs=storageIDs;
  this.storageTypes=storageTypes;
  this.hasStorageIDs=storageIDs != null;
  this.hasStorageTypes=storageTypes != null;
  if (cachedLocs == null || cachedLocs.length == 0) {
    this.cachedLocs=EMPTY_LOCS;
  }
 else {
    this.cachedLocs=cachedLocs;
  }
}
