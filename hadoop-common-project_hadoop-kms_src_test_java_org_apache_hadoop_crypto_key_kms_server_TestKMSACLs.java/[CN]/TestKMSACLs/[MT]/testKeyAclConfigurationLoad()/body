{
  final Configuration conf=new Configuration(false);
  conf.set(KEY_ACL + "test_key_1.MANAGEMENT","CREATE");
  conf.set(KEY_ACL + "test_key_2.ALL","CREATE");
  conf.set(KEY_ACL + "test_key_3.NONEXISTOPERATION","CREATE");
  conf.set(DEFAULT_KEY_ACL_PREFIX + "MANAGEMENT","ROLLOVER");
  conf.set(WHITELIST_KEY_ACL_PREFIX + "MANAGEMENT","DECRYPT_EEK");
  conf.set(DEFAULT_KEY_ACL_PREFIX + "ALL","invalid");
  conf.set(WHITELIST_KEY_ACL_PREFIX + "ALL","invalid");
  final KMSACLs acls=new KMSACLs(conf);
  Assert.assertTrue("expected key ACL size is 2 but got " + acls.keyAcls.size(),acls.keyAcls.size() == 2);
  Assert.assertTrue("expected whitelist ACL size is 1 but got " + acls.whitelistKeyAcls.size(),acls.whitelistKeyAcls.size() == 1);
  Assert.assertFalse("ALL should not be allowed for whitelist ACLs.",acls.whitelistKeyAcls.containsKey(KeyOpType.ALL));
  Assert.assertTrue("expected default ACL size is 1 but got " + acls.defaultKeyAcls.size(),acls.defaultKeyAcls.size() == 1);
  Assert.assertTrue("ALL should not be allowed for default ACLs.",acls.defaultKeyAcls.size() == 1);
}
