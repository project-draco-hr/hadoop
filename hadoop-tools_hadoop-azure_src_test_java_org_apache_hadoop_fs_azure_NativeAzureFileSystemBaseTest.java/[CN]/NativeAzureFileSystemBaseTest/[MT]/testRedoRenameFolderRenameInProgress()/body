{
  String parent="parent";
  Path parentFolder=new Path(parent);
  assertTrue(fs.mkdirs(parentFolder));
  Path folderToBeRenamed=new Path(parentFolder,"folderToBeRenamed");
  assertTrue(fs.mkdirs(folderToBeRenamed));
  String innerFolderName="innerFolder";
  Path inner=new Path(folderToBeRenamed,innerFolderName);
  assertTrue(fs.mkdirs(inner));
  String innerFileName="file";
  Path innerFile=new Path(inner,innerFileName);
  assertTrue(fs.createNewFile(innerFile));
  Path renamedFolder=new Path(parentFolder,"renamedFolder");
  Path home=fs.getHomeDirectory();
  String relativeHomeDir=getRelativePath(home.toString());
  NativeAzureFileSystem.FolderRenamePending pending=new NativeAzureFileSystem.FolderRenamePending(relativeHomeDir + "/" + folderToBeRenamed,relativeHomeDir + "/" + renamedFolder,null,(NativeAzureFileSystem)fs);
  final String renamePendingStr=folderToBeRenamed + FolderRenamePending.SUFFIX;
  Path renamePendingFile=new Path(renamePendingStr);
  FSDataOutputStream out=fs.create(renamePendingFile,true);
  assertTrue(out != null);
  writeString(out,pending.makeRenamePendingFileContents());
  ((NativeAzureFileSystem)fs).getStoreInterface().rename(relativeHomeDir + "/" + inner,relativeHomeDir + "/" + renamedFolder+ "/"+ innerFolderName,true,null);
  assertFalse(((NativeAzureFileSystem)fs).getStoreInterface().explicitFileExists(relativeHomeDir + "/" + inner));
  assertTrue(((NativeAzureFileSystem)fs).getStoreInterface().explicitFileExists(relativeHomeDir + "/" + innerFile));
  FileStatus[] listed=fs.listStatus(parentFolder);
  assertEquals(1,listed.length);
  assertTrue(listed[0].isDirectory());
  assertFalse(fs.exists(inner));
  assertFalse(fs.exists(innerFile));
  assertTrue(fs.exists(renamedFolder));
  assertTrue(fs.exists(new Path(renamedFolder,innerFolderName + "/" + innerFileName)));
}
