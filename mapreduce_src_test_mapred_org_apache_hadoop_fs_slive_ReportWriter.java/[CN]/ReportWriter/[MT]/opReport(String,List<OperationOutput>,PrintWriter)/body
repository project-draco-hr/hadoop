{
  writeMessage("Basic report for operation type " + operation,os);
  writeMessage(getSectionDelimiter(),os);
  for (  OperationOutput data : input) {
    writeMessage("Measurement \"" + data.getMeasurementType() + "\" = "+ data.getValue(),os);
  }
  Map<String,OperationOutput> combined=new TreeMap<String,OperationOutput>();
  for (  OperationOutput data : input) {
    if (combined.containsKey(data.getMeasurementType())) {
      OperationOutput curr=combined.get(data.getMeasurementType());
      combined.put(data.getMeasurementType(),OperationOutput.merge(curr,data));
    }
 else {
      combined.put(data.getMeasurementType(),data);
    }
  }
  OperationOutput timeTaken=combined.get(OK_TIME_TAKEN);
  if (timeTaken != null) {
    Long mTaken=Long.parseLong(timeTaken.getValue().toString());
    if (mTaken > 0) {
      NumberFormat formatter=Formatter.getDecimalFormatter();
      for (      String measurementType : combined.keySet()) {
        Double rate=null;
        String rateType="";
        if (measurementType.equals(BYTES_WRITTEN)) {
          Long mbWritten=Long.parseLong(combined.get(measurementType).getValue().toString()) / (Constants.MEGABYTES);
          rate=(double)mbWritten / (double)(mTaken / 1000.0d);
          rateType="MB/sec";
        }
 else         if (measurementType.equals(SUCCESSES)) {
          Long succ=Long.parseLong(combined.get(measurementType).getValue().toString());
          rate=(double)succ / (double)(mTaken / 1000.0d);
          rateType="successes/sec";
        }
 else         if (measurementType.equals(FILES_CREATED)) {
          Long filesCreated=Long.parseLong(combined.get(measurementType).getValue().toString());
          rate=(double)filesCreated / (double)(mTaken / 1000.0d);
          rateType="files created/sec";
        }
 else         if (measurementType.equals(DIR_ENTRIES)) {
          Long entries=Long.parseLong(combined.get(measurementType).getValue().toString());
          rate=(double)entries / (double)(mTaken / 1000.0d);
          rateType="directory entries/sec";
        }
 else         if (measurementType.equals(OP_COUNT)) {
          Long opCount=Long.parseLong(combined.get(measurementType).getValue().toString());
          rate=(double)opCount / (double)(mTaken / 1000.0d);
          rateType="operations/sec";
        }
 else         if (measurementType.equals(BYTES_READ)) {
          Long mbRead=Long.parseLong(combined.get(measurementType).getValue().toString()) / (Constants.MEGABYTES);
          rate=(double)mbRead / (double)(mTaken / 1000.0d);
          rateType="MB/sec";
        }
        if (rate != null) {
          writeMessage("Rate for measurement \"" + measurementType + "\" = "+ formatter.format(rate)+ " "+ rateType,os);
        }
      }
    }
  }
  writeMessage(getSectionDelimiter(),os);
}
