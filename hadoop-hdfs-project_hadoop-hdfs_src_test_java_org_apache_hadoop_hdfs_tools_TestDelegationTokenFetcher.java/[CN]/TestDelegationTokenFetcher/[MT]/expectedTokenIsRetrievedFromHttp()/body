{
  final Token<DelegationTokenIdentifier> testToken=new Token<DelegationTokenIdentifier>("id".getBytes(),"pwd".getBytes(),FakeRenewer.KIND,new Text("127.0.0.1:1234"));
  WebHdfsFileSystem fs=mock(WebHdfsFileSystem.class);
  doReturn(testToken).when(fs).getDelegationToken(anyString());
  Path p=new Path(f.getRoot().getAbsolutePath(),tokenFile);
  DelegationTokenFetcher.saveDelegationToken(conf,fs,null,p);
  Credentials creds=Credentials.readTokenStorageFile(p,conf);
  Iterator<Token<?>> itr=creds.getAllTokens().iterator();
  assertTrue("token not exist error",itr.hasNext());
  Token<?> fetchedToken=itr.next();
  Assert.assertArrayEquals("token wrong identifier error",testToken.getIdentifier(),fetchedToken.getIdentifier());
  Assert.assertArrayEquals("token wrong password error",testToken.getPassword(),fetchedToken.getPassword());
  DelegationTokenFetcher.renewTokens(conf,p);
  Assert.assertEquals(testToken,FakeRenewer.getLastRenewed());
  DelegationTokenFetcher.cancelTokens(conf,p);
  Assert.assertEquals(testToken,FakeRenewer.getLastCanceled());
}
