{
  FsVolumeImpl targetVolume;
  ReplicaInfo replicaInfo;
  BlockPoolSlice bpSlice;
  File srcFile, srcMeta;
  long genStamp;
synchronized (FsDatasetImpl.this) {
    replicaInfo=volumeMap.get(bpid,blockId);
    if (replicaInfo == null || !replicaInfo.getVolume().isTransientStorage()) {
      return;
    }
    targetVolume=volumes.getNextVolume(StorageType.DEFAULT,replicaInfo.getNumBytes());
    if (LOG.isDebugEnabled()) {
      LOG.debug("LazyWriter starting to save blockId=" + blockId + "; bpid="+ bpid);
    }
    ramDiskReplicaTracker.recordStartLazyPersist(bpid,blockId,targetVolume);
    bpSlice=targetVolume.getBlockPoolSlice(bpid);
    srcMeta=replicaInfo.getMetaFile();
    srcFile=replicaInfo.getBlockFile();
    genStamp=replicaInfo.getGenerationStamp();
  }
  File[] savedFiles=bpSlice.lazyPersistReplica(blockId,genStamp,srcMeta,srcFile);
synchronized (FsDatasetImpl.this) {
    ramDiskReplicaTracker.recordEndLazyPersist(bpid,blockId,savedFiles);
    datanode.getMetrics().incrRamDiskBlocksLazyPersisted();
    datanode.getMetrics().incrRamDiskBytesLazyPersisted(replicaInfo.getNumBytes());
    datanode.getMetrics().addRamDiskBlocksLazyPersistWindowMs(Time.monotonicNow() - creationTime);
    if (LOG.isDebugEnabled()) {
      LOG.debug("LazyWriter finished saving blockId=" + blockId + "; bpid="+ bpid+ " to file "+ savedFiles[1]);
    }
  }
}
