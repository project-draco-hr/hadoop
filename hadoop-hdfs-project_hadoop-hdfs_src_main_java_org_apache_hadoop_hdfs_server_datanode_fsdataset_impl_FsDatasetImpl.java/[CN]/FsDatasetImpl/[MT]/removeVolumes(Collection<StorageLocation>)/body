{
  Set<String> volumeSet=new HashSet<>();
  for (  StorageLocation sl : volumes) {
    volumeSet.add(sl.getFile().getAbsolutePath());
  }
  for (int idx=0; idx < dataStorage.getNumStorageDirs(); idx++) {
    Storage.StorageDirectory sd=dataStorage.getStorageDir(idx);
    String volume=sd.getRoot().getAbsolutePath();
    if (volumeSet.contains(volume)) {
      LOG.info("Removing " + volume + " from FsDataset.");
      asyncDiskService.removeVolume(sd.getCurrentDir());
      this.volumes.removeVolume(sd.getRoot());
      for (      String bpid : volumeMap.getBlockPoolList()) {
        List<Block> blocks=new ArrayList<Block>();
        for (Iterator<ReplicaInfo> it=volumeMap.replicas(bpid).iterator(); it.hasNext(); ) {
          ReplicaInfo block=it.next();
          String absBasePath=new File(block.getVolume().getBasePath()).getAbsolutePath();
          if (absBasePath.equals(volume)) {
            invalidate(bpid,block);
            blocks.add(block);
            it.remove();
          }
        }
      }
      storageMap.remove(sd.getStorageUuid());
    }
  }
  setupAsyncLazyPersistThreads();
}
