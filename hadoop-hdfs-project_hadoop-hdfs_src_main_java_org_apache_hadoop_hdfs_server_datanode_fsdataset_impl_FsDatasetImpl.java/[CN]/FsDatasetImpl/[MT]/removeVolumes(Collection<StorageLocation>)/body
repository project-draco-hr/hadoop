{
  Set<File> volumeSet=new HashSet<File>();
  for (  StorageLocation sl : volumes) {
    volumeSet.add(sl.getFile());
  }
  for (int idx=0; idx < dataStorage.getNumStorageDirs(); idx++) {
    Storage.StorageDirectory sd=dataStorage.getStorageDir(idx);
    if (volumeSet.contains(sd.getRoot())) {
      String volume=sd.getRoot().toString();
      LOG.info("Removing " + volume + " from FsDataset.");
      asyncDiskService.removeVolume(sd.getCurrentDir());
      this.volumes.removeVolume(volume);
      for (      String bpid : volumeMap.getBlockPoolList()) {
        List<Block> blocks=new ArrayList<Block>();
        for (Iterator<ReplicaInfo> it=volumeMap.replicas(bpid).iterator(); it.hasNext(); ) {
          ReplicaInfo block=it.next();
          if (block.getVolume().getBasePath().equals(volume)) {
            invalidate(bpid,block);
            blocks.add(block);
            it.remove();
          }
        }
        datanode.getBlockScanner().deleteBlocks(bpid,blocks.toArray(new Block[blocks.size()]));
      }
      storageMap.remove(sd.getStorageUuid());
    }
  }
}
