{
  final ReplicaInfo replica=map.get(bpid,block.getBlockId());
  LOG.info("initReplicaRecovery: " + block + ", recoveryId="+ recoveryId+ ", replica="+ replica);
  if (replica == null) {
    return null;
  }
  if (replica instanceof ReplicaInPipeline) {
    final ReplicaInPipeline rip=(ReplicaInPipeline)replica;
    rip.stopWriter(xceiverStopTimeout);
    if (rip.getBytesOnDisk() < rip.getVisibleLength()) {
      throw new IOException("THIS IS NOT SUPPOSED TO HAPPEN:" + " getBytesOnDisk() < getVisibleLength(), rip=" + rip);
    }
    checkReplicaFiles(rip);
  }
  if (replica.getGenerationStamp() < block.getGenerationStamp()) {
    throw new IOException("replica.getGenerationStamp() < block.getGenerationStamp(), block=" + block + ", replica="+ replica);
  }
  if (replica.getGenerationStamp() >= recoveryId) {
    throw new IOException("THIS IS NOT SUPPOSED TO HAPPEN:" + " replica.getGenerationStamp() >= recoveryId = " + recoveryId + ", block="+ block+ ", replica="+ replica);
  }
  final ReplicaUnderRecovery rur;
  if (replica.getState() == ReplicaState.RUR) {
    rur=(ReplicaUnderRecovery)replica;
    if (rur.getRecoveryID() >= recoveryId) {
      throw new RecoveryInProgressException("rur.getRecoveryID() >= recoveryId = " + recoveryId + ", block="+ block+ ", rur="+ rur);
    }
    final long oldRecoveryID=rur.getRecoveryID();
    rur.setRecoveryID(recoveryId);
    LOG.info("initReplicaRecovery: update recovery id for " + block + " from "+ oldRecoveryID+ " to "+ recoveryId);
  }
 else {
    rur=new ReplicaUnderRecovery(replica,recoveryId);
    map.add(bpid,rur);
    LOG.info("initReplicaRecovery: changing replica state for " + block + " from "+ replica.getState()+ " to "+ rur.getState());
  }
  return rur.createInfo();
}
