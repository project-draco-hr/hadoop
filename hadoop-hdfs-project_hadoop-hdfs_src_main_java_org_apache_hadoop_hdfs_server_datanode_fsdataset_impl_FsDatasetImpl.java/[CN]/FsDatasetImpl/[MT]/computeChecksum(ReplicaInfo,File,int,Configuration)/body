{
  File srcMeta=new File(srcReplica.getMetadataURI());
  final DataChecksum checksum=BlockMetadataHeader.readDataChecksum(srcMeta,DFSUtilClient.getIoFileBufferSize(conf));
  final byte[] data=new byte[1 << 16];
  final byte[] crcs=new byte[checksum.getChecksumSize(data.length)];
  DataOutputStream metaOut=null;
  try {
    File parentFile=dstMeta.getParentFile();
    if (parentFile != null) {
      if (!parentFile.mkdirs() && !parentFile.isDirectory()) {
        throw new IOException("Destination '" + parentFile + "' directory cannot be created");
      }
    }
    metaOut=new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dstMeta),smallBufferSize));
    BlockMetadataHeader.writeHeader(metaOut,checksum);
    int offset=0;
    try (InputStream dataIn=srcReplica.getDataInputStream(0)){
      for (int n; (n=dataIn.read(data,offset,data.length - offset)) != -1; ) {
        if (n > 0) {
          n+=offset;
          offset=n % checksum.getBytesPerChecksum();
          final int length=n - offset;
          if (length > 0) {
            checksum.calculateChunkedSums(data,0,length,crcs,0);
            metaOut.write(crcs,0,checksum.getChecksumSize(length));
            System.arraycopy(data,length,data,0,offset);
          }
        }
      }
    }
     checksum.calculateChunkedSums(data,0,offset,crcs,0);
    metaOut.write(crcs,0,4);
  }
  finally {
    IOUtils.cleanup(null,metaOut);
  }
}
