{
  HashMap<String,String> driver=new HashMap<String,String>();
  driver.put("",TimelineAuthenticationFilterInitializer.class.getName());
  driver.put(StaticUserWebFilter.class.getName(),TimelineAuthenticationFilterInitializer.class.getName() + "," + StaticUserWebFilter.class.getName());
  driver.put(AuthenticationFilterInitializer.class.getName(),TimelineAuthenticationFilterInitializer.class.getName());
  driver.put(TimelineAuthenticationFilterInitializer.class.getName(),TimelineAuthenticationFilterInitializer.class.getName());
  driver.put(AuthenticationFilterInitializer.class.getName() + "," + TimelineAuthenticationFilterInitializer.class.getName(),TimelineAuthenticationFilterInitializer.class.getName());
  driver.put(AuthenticationFilterInitializer.class.getName() + ", " + TimelineAuthenticationFilterInitializer.class.getName(),TimelineAuthenticationFilterInitializer.class.getName());
  for (  Map.Entry<String,String> entry : driver.entrySet()) {
    String filterInitializer=entry.getKey();
    String expectedValue=entry.getValue();
    historyServer=new ApplicationHistoryServer();
    Configuration config=new YarnConfiguration();
    config.set("hadoop.http.filter.initializers",filterInitializer);
    historyServer.init(config);
    historyServer.start();
    Configuration tmp=historyServer.getConfig();
    assertEquals(expectedValue,tmp.get("hadoop.http.filter.initializers"));
    historyServer.stop();
    AHSWebApp.resetInstance();
  }
}
