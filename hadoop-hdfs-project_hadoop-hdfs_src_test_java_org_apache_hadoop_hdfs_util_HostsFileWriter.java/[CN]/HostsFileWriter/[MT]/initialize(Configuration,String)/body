{
  localFileSys=FileSystem.getLocal(conf);
  Path workingDir=new Path(MiniDFSCluster.getBaseDirectory());
  this.fullDir=new Path(workingDir,dir);
  assertTrue(localFileSys.mkdirs(this.fullDir));
  if (conf.getClass(DFSConfigKeys.DFS_NAMENODE_HOSTS_PROVIDER_CLASSNAME_KEY,HostFileManager.class,HostConfigManager.class).equals(HostFileManager.class)) {
    isLegacyHostsFile=true;
  }
  if (isLegacyHostsFile) {
    excludeFile=new Path(fullDir,"exclude");
    includeFile=new Path(fullDir,"include");
    DFSTestUtil.writeFile(localFileSys,excludeFile,"");
    DFSTestUtil.writeFile(localFileSys,includeFile,"");
    conf.set(DFSConfigKeys.DFS_HOSTS_EXCLUDE,excludeFile.toUri().getPath());
    conf.set(DFSConfigKeys.DFS_HOSTS,includeFile.toUri().getPath());
  }
 else {
    combinedFile=new Path(fullDir,"all");
    conf.set(DFSConfigKeys.DFS_HOSTS,combinedFile.toString());
  }
}
