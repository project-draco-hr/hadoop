{
  this.namesystem=namesystem;
  this.blockManager=blockManager;
  this.nextDirectiveId=1;
  this.maxListCachePoolsResponses=conf.getInt(DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES,DFS_NAMENODE_LIST_CACHE_POOLS_NUM_RESPONSES_DEFAULT);
  this.maxListCacheDirectivesNumResponses=conf.getInt(DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES,DFS_NAMENODE_LIST_CACHE_DIRECTIVES_NUM_RESPONSES_DEFAULT);
  scanIntervalMs=conf.getLong(DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS,DFS_NAMENODE_PATH_BASED_CACHE_REFRESH_INTERVAL_MS_DEFAULT);
  float cachedBlocksPercent=conf.getFloat(DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT,DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT_DEFAULT);
  if (cachedBlocksPercent < MIN_CACHED_BLOCKS_PERCENT) {
    LOG.info("Using minimum value " + MIN_CACHED_BLOCKS_PERCENT + " for "+ DFS_NAMENODE_PATH_BASED_CACHE_BLOCK_MAP_ALLOCATION_PERCENT);
    cachedBlocksPercent=MIN_CACHED_BLOCKS_PERCENT;
  }
  this.cachedBlocks=new LightWeightGSet<CachedBlock,CachedBlock>(LightWeightGSet.computeCapacity(cachedBlocksPercent,"cachedBlocks"));
}
