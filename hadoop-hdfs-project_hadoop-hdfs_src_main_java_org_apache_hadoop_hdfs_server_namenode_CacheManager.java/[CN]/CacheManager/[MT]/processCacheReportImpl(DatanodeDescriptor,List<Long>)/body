{
  CachedBlocksList cached=datanode.getCached();
  cached.clear();
  for (Iterator<Long> iter=blockIds.iterator(); iter.hasNext(); ) {
    Block block=new Block(iter.next());
    BlockInfo blockInfo=blockManager.getStoredBlock(block);
    if (!blockInfo.isComplete()) {
      LOG.warn("Ignoring block id " + block.getBlockId() + ", because "+ "it is in not complete yet.  It is in state "+ blockInfo.getBlockUCState());
      continue;
    }
    Collection<DatanodeDescriptor> corruptReplicas=blockManager.getCorruptReplicas(blockInfo);
    if ((corruptReplicas != null) && corruptReplicas.contains(datanode)) {
      LOG.warn("Ignoring cached replica on " + datanode + " of "+ block+ " because it is corrupt.");
      continue;
    }
    CachedBlock cachedBlock=new CachedBlock(block.getBlockId(),(short)0,false);
    CachedBlock prevCachedBlock=cachedBlocks.get(cachedBlock);
    if (prevCachedBlock != null) {
      cachedBlock=prevCachedBlock;
    }
 else {
      cachedBlocks.put(cachedBlock);
    }
    if (!cachedBlock.isPresent(datanode.getCached())) {
      datanode.getCached().add(cachedBlock);
    }
    if (cachedBlock.isPresent(datanode.getPendingCached())) {
      datanode.getPendingCached().remove(cachedBlock);
    }
  }
}
