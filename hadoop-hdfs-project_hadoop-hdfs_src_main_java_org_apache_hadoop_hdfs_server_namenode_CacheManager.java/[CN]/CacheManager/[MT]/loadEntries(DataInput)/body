{
  StartupProgress prog=NameNode.getStartupProgress();
  Step step=new Step(StepType.CACHE_ENTRIES);
  prog.beginStep(Phase.LOADING_FSIMAGE,step);
  int numberOfEntries=in.readInt();
  prog.setTotal(Phase.LOADING_FSIMAGE,step,numberOfEntries);
  Counter counter=prog.getCounter(Phase.LOADING_FSIMAGE,step);
  for (int i=0; i < numberOfEntries; i++) {
    long entryId=in.readLong();
    String path=Text.readString(in);
    short replication=in.readShort();
    String poolName=Text.readString(in);
    CachePool pool=cachePools.get(poolName);
    if (pool == null) {
      throw new IOException("Entry refers to pool " + poolName + ", which does not exist.");
    }
    PathBasedCacheEntry entry=new PathBasedCacheEntry(entryId,path,replication,pool);
    if (entriesById.put(entry.getEntryId(),entry) != null) {
      throw new IOException("An entry with ID " + entry.getEntryId() + " already exists");
    }
    List<PathBasedCacheEntry> entries=entriesByPath.get(entry.getPath());
    if (entries == null) {
      entries=new LinkedList<PathBasedCacheEntry>();
      entriesByPath.put(entry.getPath(),entries);
    }
    entries.add(entry);
    counter.increment();
  }
  prog.endStep(Phase.LOADING_FSIMAGE,step);
}
