{
  if (!cachePoolsById.containsKey(poolId)) {
    throw new IOException("can't remove nonexistent cache pool id " + poolId);
  }
  Iterator<Map.Entry<Long,PathCacheEntry>> it=entriesById.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<Long,PathCacheEntry> entry=it.next();
    if (entry.getValue().getDirective().getPoolId() == poolId) {
      it.remove();
      entriesByDirective.remove(entry.getValue().getDirective());
    }
  }
  CachePool pool=cachePoolsById.remove(poolId);
  cachePoolsByName.remove(pool.getInfo().getPoolName());
}
