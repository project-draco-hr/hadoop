{
  TimelineFilterList ef=new TimelineFilterList();
  ef.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"update_event"));
  ef.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"end_event"));
  Set<TimelineEntity> entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.ALL)));
  assertEquals(1,entities.size());
  int eventCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    if (!timelineEntity.getId().equals("hello2")) {
      Assert.fail("Entity id should have been hello2");
    }
  }
  assertEquals(1,eventCnt);
  TimelineFilterList ef1=new TimelineFilterList();
  ef1.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"update_event"));
  ef1.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"end_event"));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef1),new TimelineDataToRetrieve());
  assertEquals(1,entities.size());
  eventCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    if (!timelineEntity.getId().equals("hello2")) {
      Assert.fail("Entity id should have been hello2");
    }
  }
  assertEquals(0,eventCnt);
  TimelineFilterList ef2=new TimelineFilterList();
  ef2.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"end_event"));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef2),new TimelineDataToRetrieve());
  assertEquals(2,entities.size());
  eventCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    if (!timelineEntity.getId().equals("hello") && !timelineEntity.getId().equals("hello2")) {
      Assert.fail("Entity ids' should have been hello and hello2");
    }
  }
  assertEquals(0,eventCnt);
  TimelineFilterList ef3=new TimelineFilterList();
  ef3.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"update_event"));
  ef3.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"dummy_event"));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef3),new TimelineDataToRetrieve());
  assertEquals(0,entities.size());
  TimelineFilterList list1=new TimelineFilterList();
  list1.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"update_event"));
  list1.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"dummy_event"));
  TimelineFilterList list2=new TimelineFilterList();
  list2.addFilter(new TimelineExistsFilter(TimelineCompareOp.EQUAL,"start_event"));
  TimelineFilterList ef4=new TimelineFilterList(Operator.OR,list1,list2);
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef4),new TimelineDataToRetrieve());
  assertEquals(1,entities.size());
  eventCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    if (!timelineEntity.getId().equals("hello")) {
      Assert.fail("Entity id should have been hello");
    }
  }
  assertEquals(0,eventCnt);
  TimelineFilterList ef5=new TimelineFilterList();
  ef5.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"update_event"));
  ef5.addFilter(new TimelineExistsFilter(TimelineCompareOp.NOT_EQUAL,"end_event"));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,null,null,ef5),new TimelineDataToRetrieve());
  assertEquals(1,entities.size());
  eventCnt=0;
  for (  TimelineEntity timelineEntity : entities) {
    eventCnt+=timelineEntity.getEvents().size();
    if (!timelineEntity.getId().equals("hello")) {
      Assert.fail("Entity id should have been hello");
    }
  }
  assertEquals(0,eventCnt);
}
