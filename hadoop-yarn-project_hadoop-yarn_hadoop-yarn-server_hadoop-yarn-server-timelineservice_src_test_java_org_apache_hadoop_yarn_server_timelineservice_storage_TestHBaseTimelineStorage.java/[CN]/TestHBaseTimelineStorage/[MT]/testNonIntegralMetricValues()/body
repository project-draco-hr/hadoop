{
  TimelineEntities teApp=new TimelineEntities();
  ApplicationEntity entityApp=new ApplicationEntity();
  String appId="application_1000178881110_2002";
  entityApp.setId(appId);
  entityApp.setCreatedTime(1425016501000L);
  entityApp.setModifiedTime(1425026901000L);
  Set<TimelineMetric> metricsApp=new HashSet<>();
  TimelineMetric mApp=new TimelineMetric();
  mApp.setId("MAP_SLOT_MILLIS");
  Map<Long,Number> metricAppValues=new HashMap<Long,Number>();
  long ts=System.currentTimeMillis();
  metricAppValues.put(ts - 20,10.5);
  metricAppValues.put(ts - 10,20.5);
  mApp.setType(Type.TIME_SERIES);
  mApp.setValues(metricAppValues);
  metricsApp.add(mApp);
  entityApp.addMetrics(metricsApp);
  teApp.addEntity(entityApp);
  TimelineEntities teEntity=new TimelineEntities();
  TimelineEntity entity=new TimelineEntity();
  entity.setId("hello");
  entity.setType("world");
  entity.setCreatedTime(1425016501000L);
  entity.setModifiedTime(1425026901000L);
  Set<TimelineMetric> metricsEntity=new HashSet<>();
  TimelineMetric mEntity=new TimelineMetric();
  mEntity.setId("MAP_SLOT_MILLIS");
  mEntity.addValue(ts - 20,10.5);
  metricsEntity.add(mEntity);
  entity.addMetrics(metricsEntity);
  teEntity.addEntity(entity);
  HBaseTimelineWriterImpl hbi=null;
  try {
    Configuration c1=util.getConfiguration();
    hbi=new HBaseTimelineWriterImpl(c1);
    hbi.init(c1);
    hbi.start();
    try {
      hbi.write("c1","u1","f1","v1",1002345678919L,appId,teApp);
      Assert.fail("Expected an exception as metric values are non integral");
    }
 catch (    IOException e) {
    }
    try {
      hbi.write("c1","u1","f1","v1",1002345678919L,appId,teEntity);
      Assert.fail("Expected an exception as metric values are non integral");
    }
 catch (    IOException e) {
    }
    hbi.stop();
  }
  finally {
    if (hbi != null) {
      hbi.stop();
      hbi.close();
    }
  }
}
