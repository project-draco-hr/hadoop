{
  TimelineEvent event=new TimelineEvent();
  String eventId="foo_event_id";
  event.setId(eventId);
  long expTs=1436512802000L;
  event.setTimestamp(expTs);
  final TimelineEntity entity=new TimelineEntity();
  entity.setId("attempt_1329348432655_0001_m_000008_18");
  entity.setType("FOO_ATTEMPT");
  entity.addEvent(event);
  TimelineEntities entities=new TimelineEntities();
  entities.addEntity(entity);
  HBaseTimelineWriterImpl hbi=null;
  try {
    Configuration c1=util.getConfiguration();
    hbi=new HBaseTimelineWriterImpl(c1);
    hbi.init(c1);
    hbi.start();
    String cluster="cluster_test_empty_eventkey";
    String user="user_emptyeventkey";
    String flow="other_flow_name";
    String flowVersion="1111F01C2287BA";
    long runid=1009876543218L;
    String appName=ApplicationId.newInstance(System.currentTimeMillis(),1).toString();
    byte[] startRow=EntityRowKey.getRowKeyPrefix(cluster,user,flow,runid,appName);
    hbi.write(cluster,user,flow,flowVersion,runid,appName,entities);
    hbi.stop();
    Scan s=new Scan();
    s.setStartRow(startRow);
    s.addFamily(EntityColumnFamily.INFO.getBytes());
    Connection conn=ConnectionFactory.createConnection(c1);
    ResultScanner scanner=new EntityTable().getResultScanner(c1,conn,s);
    int rowCount=0;
    for (    Result result : scanner) {
      if (result != null && !result.isEmpty()) {
        rowCount++;
        byte[] row1=result.getRow();
        assertTrue(isRowKeyCorrect(row1,cluster,user,flow,runid,appName,entity));
        Map<?,Object> eventsResult=EntityColumnPrefix.EVENT.readResultsHavingCompoundColumnQualifiers(result);
        assertEquals(1,eventsResult.size());
        for (        Map.Entry<?,Object> e : eventsResult.entrySet()) {
          byte[][] karr=(byte[][])e.getKey();
          assertEquals(3,karr.length);
          assertEquals(eventId,Bytes.toString(karr[0]));
          assertEquals(TimelineStorageUtils.invertLong(expTs),Bytes.toLong(karr[1]));
          assertEquals(0,karr[2].length);
          Object value=e.getValue();
          assertEquals("",value.toString());
        }
      }
    }
    assertEquals(1,rowCount);
    TimelineEntity e1=reader.getEntity(user,cluster,flow,runid,appName,entity.getType(),entity.getId(),null,null,EnumSet.of(TimelineReader.Field.ALL));
    Set<TimelineEntity> es1=reader.getEntities(user,cluster,flow,runid,appName,entity.getType(),null,null,null,null,null,null,null,null,null,null,null,null,null,EnumSet.of(TimelineReader.Field.ALL));
    assertNotNull(e1);
    assertEquals(1,es1.size());
    NavigableSet<TimelineEvent> events=e1.getEvents();
    assertEquals(1,events.size());
    for (    TimelineEvent e : events) {
      assertEquals(eventId,e.getId());
      assertEquals(expTs,e.getTimestamp());
      Map<String,Object> info=e.getInfo();
      assertTrue(info == null || info.isEmpty());
    }
  }
  finally {
    hbi.stop();
    hbi.close();
  }
}
