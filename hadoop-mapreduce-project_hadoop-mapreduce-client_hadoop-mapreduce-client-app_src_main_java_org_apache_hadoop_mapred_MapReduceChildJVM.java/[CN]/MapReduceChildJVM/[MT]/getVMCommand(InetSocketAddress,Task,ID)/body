{
  TaskAttemptID attemptID=task.getTaskID();
  JobConf conf=task.conf;
  Vector<String> vargs=new Vector<String>(8);
  vargs.add("exec");
  vargs.add(Environment.JAVA_HOME.$() + "/bin/java");
  String javaOpts=getChildJavaOpts(conf,task.isMapTask());
  javaOpts=javaOpts.replace("@taskid@",attemptID.toString());
  String[] javaOptsSplit=javaOpts.split(" ");
  for (int i=0; i < javaOptsSplit.length; i++) {
    vargs.add(javaOptsSplit[i]);
  }
  String childTmpDir=Environment.PWD.$() + Path.SEPARATOR + "tmp";
  vargs.add("-Djava.io.tmpdir=" + childTmpDir);
  long logSize=TaskLog.getTaskLogLength(conf);
  setupLog4jProperties(vargs,logSize);
  if (conf.getProfileEnabled()) {
    if (conf.getProfileTaskRange(task.isMapTask()).isIncluded(task.getPartition())) {
      vargs.add(String.format(conf.getProfileParams(),getTaskLogFile(TaskLog.LogName.PROFILE)));
    }
  }
  vargs.add(YarnChild.class.getName());
  vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress());
  vargs.add(Integer.toString(taskAttemptListenerAddr.getPort()));
  vargs.add(attemptID.toString());
  vargs.add(String.valueOf(jvmID.getId()));
  vargs.add("1>" + getTaskLogFile(TaskLog.LogName.STDERR));
  vargs.add("2>" + getTaskLogFile(TaskLog.LogName.STDOUT));
  StringBuilder mergedCommand=new StringBuilder();
  for (  CharSequence str : vargs) {
    mergedCommand.append(str).append(" ");
  }
  Vector<String> vargsFinal=new Vector<String>(1);
  vargsFinal.add(mergedCommand.toString());
  return vargsFinal;
}
