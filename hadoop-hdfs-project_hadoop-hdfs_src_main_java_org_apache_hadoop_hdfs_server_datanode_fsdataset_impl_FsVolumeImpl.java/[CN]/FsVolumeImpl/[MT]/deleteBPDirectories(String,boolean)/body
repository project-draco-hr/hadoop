{
  File volumeCurrentDir=this.getCurrentDir();
  File bpDir=new File(volumeCurrentDir,bpid);
  if (!bpDir.isDirectory()) {
    return;
  }
  File tmpDir=new File(bpDir,DataStorage.STORAGE_DIR_TMP);
  File bpCurrentDir=new File(bpDir,DataStorage.STORAGE_DIR_CURRENT);
  File finalizedDir=new File(bpCurrentDir,DataStorage.STORAGE_DIR_FINALIZED);
  File lazypersistDir=new File(bpCurrentDir,DataStorage.STORAGE_DIR_LAZY_PERSIST);
  File rbwDir=new File(bpCurrentDir,DataStorage.STORAGE_DIR_RBW);
  if (force) {
    FileUtil.fullyDelete(bpDir);
  }
 else {
    if (!rbwDir.delete()) {
      throw new IOException("Failed to delete " + rbwDir);
    }
    if (!DatanodeUtil.dirNoFilesRecursive(finalizedDir) || !FileUtil.fullyDelete(finalizedDir)) {
      throw new IOException("Failed to delete " + finalizedDir);
    }
    if (!DatanodeUtil.dirNoFilesRecursive(lazypersistDir) || !FileUtil.fullyDelete(lazypersistDir)) {
      throw new IOException("Failed to delete " + lazypersistDir);
    }
    FileUtil.fullyDelete(tmpDir);
    for (    File f : FileUtil.listFiles(bpCurrentDir)) {
      if (!f.delete()) {
        throw new IOException("Failed to delete " + f);
      }
    }
    if (!bpCurrentDir.delete()) {
      throw new IOException("Failed to delete " + bpCurrentDir);
    }
    for (    File f : FileUtil.listFiles(bpDir)) {
      if (!f.delete()) {
        throw new IOException("Failed to delete " + f);
      }
    }
    if (!bpDir.delete()) {
      throw new IOException("Failed to delete " + bpDir);
    }
  }
}
