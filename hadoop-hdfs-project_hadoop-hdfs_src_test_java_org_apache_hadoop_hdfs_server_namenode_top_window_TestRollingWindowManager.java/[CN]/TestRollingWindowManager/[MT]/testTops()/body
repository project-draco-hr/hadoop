{
  long time=WINDOW_LEN_MS + BUCKET_LEN * 3 / 2;
  for (int i=0; i < users.length; i++)   manager.recordMetric(time,"open",users[i],(i + 1) * 2);
  time++;
  for (int i=0; i < users.length; i++)   manager.recordMetric(time,"close",users[i],i + 1);
  time++;
  MetricValueMap tops=manager.snapshot(time);
  assertEquals("The number of returned top metrics is invalid",2 * (N_TOP_USERS + 1),tops.size());
  int userIndex=users.length - 2;
  String metricName=RollingWindowManager.createMetricName("open",users[userIndex]);
  boolean includes=tops.containsKey(metricName);
  assertTrue("The order of entries in top metrics is wrong",includes);
  assertEquals("The reported value by top is different from recorded one",(userIndex + 1) * 2,((Long)tops.get(metricName)).longValue());
  time+=WINDOW_LEN_MS - 2;
  tops=manager.snapshot(time);
  assertEquals("The number of returned top metrics is invalid",N_TOP_USERS + 1,tops.size());
  includes=tops.containsKey(metricName);
  assertFalse("After rolling, the top list still includes the stale metrics",includes);
  metricName=RollingWindowManager.createMetricName("close",users[userIndex]);
  includes=tops.containsKey(metricName);
  assertTrue("The order of entries in top metrics is wrong",includes);
  assertEquals("The reported value by top is different from recorded one",(userIndex + 1),((Long)tops.get(metricName)).longValue());
}
