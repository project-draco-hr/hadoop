{
  FilterList list=new FilterList(Operator.MUST_PASS_ONE);
  FamilyFilter infoColumnFamily=new FamilyFilter(CompareOp.EQUAL,new BinaryComparator(FlowRunColumnFamily.INFO.getBytes()));
  TimelineDataToRetrieve dataToRetrieve=getDataToRetrieve();
  if (!singleEntityRead && !dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS) && !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL)) {
    FilterList infoColFamilyList=new FilterList(Operator.MUST_PASS_ONE);
    infoColFamilyList.addFilter(infoColumnFamily);
    infoColFamilyList.addFilter(new QualifierFilter(CompareOp.NOT_EQUAL,new BinaryPrefixComparator(FlowRunColumnPrefix.METRIC.getColumnPrefixBytes(""))));
    list.addFilter(infoColFamilyList);
  }
  if (dataToRetrieve.getMetricsToRetrieve() != null && !dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty()) {
    FilterList infoColFamilyList=new FilterList();
    infoColFamilyList.addFilter(infoColumnFamily);
    infoColFamilyList.addFilter(TimelineFilterUtils.createHBaseFilterList(FlowRunColumnPrefix.METRIC,dataToRetrieve.getMetricsToRetrieve()));
    list.addFilter(infoColFamilyList);
  }
  return list;
}
