{
  NodeStatusUpdater nodeStatusUpdater=Mockito.mock(NodeStatusUpdater.class);
  Mockito.when(nodeStatusUpdater.getRMIdentifier()).thenReturn(12345l);
  Context context=Mockito.mock(Context.class);
  NMContainerTokenSecretManager nmContainerTokenSecretManager=new NMContainerTokenSecretManager(conf);
  MasterKey mKey=new MasterKey(){
    @Override public int getKeyId(){
      return 1;
    }
    @Override public void setKeyId(    int keyId){
    }
    @Override public ByteBuffer getBytes(){
      return ByteBuffer.allocate(8);
    }
    @Override public void setBytes(    ByteBuffer bytes){
    }
  }
;
  nmContainerTokenSecretManager.setMasterKey(mKey);
  Mockito.when(context.getContainerTokenSecretManager()).thenReturn(nmContainerTokenSecretManager);
  OpportunisticContainerAllocator containerAllocator=new OpportunisticContainerAllocator(nodeStatusUpdater,context,7777);
  NMTokenSecretManagerInNM nmTokenSecretManagerInNM=new NMTokenSecretManagerInNM();
  nmTokenSecretManagerInNM.setMasterKey(mKey);
  localScheduler.initLocal(ApplicationAttemptId.newInstance(ApplicationId.newInstance(1,1),1),containerAllocator,nmTokenSecretManagerInNM,"test");
  RequestInterceptor finalReqIntcptr=Mockito.mock(RequestInterceptor.class);
  localScheduler.setNextInterceptor(finalReqIntcptr);
  return finalReqIntcptr;
}
