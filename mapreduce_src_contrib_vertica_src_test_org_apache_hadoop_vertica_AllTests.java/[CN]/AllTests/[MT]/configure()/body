{
  if (run_tests) {
    return;
  }
  Properties properties=System.getProperties();
  String test_setup=properties.getProperty("vertica.test_setup","vertica_test.sql");
  hostname=properties.getProperty("vertica.hostname",VERTICA_HOSTNAME);
  username=properties.getProperty("vertica.username",VERTICA_USERNAME);
  password=properties.getProperty("vertica.password",VERTICA_PASSWORD);
  database=properties.getProperty("vertica.database",VERTICA_DATABASE);
  LOG.info("Inititializing database with " + test_setup);
  try {
    Class.forName(VerticaConfiguration.VERTICA_DRIVER_CLASS);
    String url="jdbc:vertica://" + hostname + ":5433/"+ database+ "?user="+ username+ "&password="+ password;
    LOG.info("Conencting to " + url);
    Connection conn=DriverManager.getConnection(url);
    Statement stmt=conn.createStatement();
    InputStream strm_cmds=new FileInputStream(test_setup);
    if (strm_cmds != null) {
      byte[] b=new byte[strm_cmds.available()];
      strm_cmds.read(b);
      String[] cmds=new String(b).split("\n");
      StringBuffer no_comment=new StringBuffer();
      for (      String cmd : cmds) {
        if (!cmd.startsWith("--"))         no_comment.append(cmd).append("\n");
      }
      for (      String cmd : no_comment.toString().split(";")) {
        LOG.debug(cmd);
        try {
          stmt.execute(cmd);
        }
 catch (        SQLException e) {
          LOG.debug(e.getSQLState() + " : " + e.getMessage());
          if (e.getSQLState().equals("42V01"))           continue;
 else           throw new RuntimeException(e);
        }
      }
      run_tests=true;
    }
  }
 catch (  ClassNotFoundException e) {
    LOG.warn("No vertica driver found: " + e.getMessage() + " - skipping vertica tests");
  }
catch (  SQLException e) {
    LOG.warn("Could not connect to vertica database: " + e.getMessage() + " - skipping vertica tests");
  }
catch (  IOException e) {
    LOG.warn("Missing vertica test setup file " + test_setup + ": "+ e.getMessage()+ " - skipping vertica tests");
  }
}
