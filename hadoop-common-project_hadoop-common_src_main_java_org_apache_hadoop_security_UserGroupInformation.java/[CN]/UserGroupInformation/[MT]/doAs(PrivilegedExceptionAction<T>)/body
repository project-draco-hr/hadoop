{
  try {
    logPrivilegedAction(subject,action);
    return Subject.doAs(subject,action);
  }
 catch (  PrivilegedActionException pae) {
    Throwable cause=pae.getCause();
    if (LOG.isDebugEnabled()) {
      LOG.debug("PrivilegedActionException as:" + this + " cause:"+ cause);
    }
    if (cause == null) {
      throw new RuntimeException("PrivilegedActionException with no " + "underlying cause. UGI [" + this + "]"+ ": "+ pae,pae);
    }
 else     if (cause instanceof IOException) {
      throw (IOException)cause;
    }
 else     if (cause instanceof Error) {
      throw (Error)cause;
    }
 else     if (cause instanceof RuntimeException) {
      throw (RuntimeException)cause;
    }
 else     if (cause instanceof InterruptedException) {
      throw (InterruptedException)cause;
    }
 else {
      throw new UndeclaredThrowableException(cause);
    }
  }
}
