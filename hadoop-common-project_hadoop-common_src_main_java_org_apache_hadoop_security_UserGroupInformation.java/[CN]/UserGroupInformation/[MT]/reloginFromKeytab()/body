{
  if (!isSecurityEnabled() || user.getAuthenticationMethod() != AuthenticationMethod.KERBEROS || !isKeytab)   return;
  long now=Time.now();
  if (!shouldRenewImmediatelyForTests && !hasSufficientTimeElapsed(now)) {
    return;
  }
  KerberosTicket tgt=getTGT();
  if (tgt != null && !shouldRenewImmediatelyForTests && now < getRefreshTime(tgt)) {
    return;
  }
  LoginContext login=getLogin();
  if (login == null || keytabFile == null) {
    throw new IOException("loginUserFromKeyTab must be done first");
  }
  long start=0;
  user.setLastLogin(now);
  try {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Initiating logout for " + getUserName());
    }
synchronized (UserGroupInformation.class) {
      login.logout();
      login=newLoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME,getSubject(),new HadoopConfiguration());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Initiating re-login for " + keytabPrincipal);
      }
      start=Time.now();
      login.login();
      metrics.loginSuccess.add(Time.now() - start);
      setLogin(login);
    }
  }
 catch (  LoginException le) {
    if (start > 0) {
      metrics.loginFailure.add(Time.now() - start);
    }
    throw new IOException("Login failure for " + keytabPrincipal + " from keytab "+ keytabFile,le);
  }
}
