{
  Map<String,String> nullMap=null;
  Assert.assertNull(TimelineServiceHelper.mapCastToHashMap(nullMap));
  Map<String,String> emptyHashMap=new HashMap<String,String>();
  Assert.assertEquals(TimelineServiceHelper.mapCastToHashMap(emptyHashMap).size(),0);
  Map<String,String> emptyTreeMap=new TreeMap<String,String>();
  Assert.assertEquals(TimelineServiceHelper.mapCastToHashMap(emptyTreeMap).size(),0);
  Map<String,String> firstHashMap=new HashMap<String,String>();
  String key="KEY";
  String value="VALUE";
  firstHashMap.put(key,value);
  Assert.assertEquals(TimelineServiceHelper.mapCastToHashMap(firstHashMap),firstHashMap);
  Map<String,String> firstTreeMap=new TreeMap<String,String>();
  firstTreeMap.put(key,value);
  HashMap<String,String> alternateHashMap=TimelineServiceHelper.mapCastToHashMap(firstTreeMap);
  Assert.assertEquals(firstTreeMap.size(),alternateHashMap.size());
  Assert.assertEquals(alternateHashMap.get(key),value);
  Map<String,Set<String>> complicatedHashMap=new HashMap<String,Set<String>>();
  Set<String> hashSet=new HashSet<String>();
  hashSet.add(value);
  complicatedHashMap.put(key,hashSet);
  Assert.assertEquals(TimelineServiceHelper.mapCastToHashMap(complicatedHashMap),complicatedHashMap);
  Map<String,Set<String>> complicatedTreeMap=new TreeMap<String,Set<String>>();
  complicatedTreeMap.put(key,hashSet);
  Assert.assertEquals(TimelineServiceHelper.mapCastToHashMap(complicatedTreeMap).get(key),hashSet);
}
