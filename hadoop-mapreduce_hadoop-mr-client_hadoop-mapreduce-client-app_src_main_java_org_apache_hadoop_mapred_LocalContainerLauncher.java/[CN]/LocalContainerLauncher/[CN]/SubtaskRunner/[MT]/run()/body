{
  ContainerLauncherEvent event=null;
  while (!Thread.currentThread().isInterrupted()) {
    try {
      event=eventQueue.take();
    }
 catch (    InterruptedException e) {
      LOG.error("Returning, interrupted : " + e);
      return;
    }
    LOG.info("Processing the event " + event.toString());
    if (event.getType() == EventType.CONTAINER_REMOTE_LAUNCH) {
      ContainerRemoteLaunchEvent launchEv=(ContainerRemoteLaunchEvent)event;
      TaskAttemptId attemptID=launchEv.getTaskAttemptID();
      Job job=context.getAllJobs().get(attemptID.getTaskId().getJobId());
      int numMapTasks=job.getTotalMaps();
      int numReduceTasks=job.getTotalReduces();
      org.apache.hadoop.mapreduce.v2.app.job.Task ytask=job.getTask(attemptID.getTaskId());
      org.apache.hadoop.mapred.Task remoteTask=launchEv.getRemoteTask();
      context.getEventHandler().handle(new TaskAttemptEvent(attemptID,TaskAttemptEventType.TA_CONTAINER_LAUNCHED));
      if (numMapTasks == 0) {
        doneWithMaps=true;
      }
      try {
        if (remoteTask.isMapOrReduce()) {
          JobCounterUpdateEvent jce=new JobCounterUpdateEvent(attemptID.getTaskId().getJobId());
          jce.addCounterUpdate(JobCounter.TOTAL_LAUNCHED_UBERTASKS,1);
          if (remoteTask.isMapTask()) {
            jce.addCounterUpdate(JobCounter.NUM_UBER_SUBMAPS,1);
          }
 else {
            jce.addCounterUpdate(JobCounter.NUM_UBER_SUBREDUCES,1);
          }
          context.getEventHandler().handle(jce);
        }
        runSubtask(remoteTask,ytask.getType(),attemptID,numMapTasks,(numReduceTasks > 0));
      }
 catch (      RuntimeException re) {
        JobCounterUpdateEvent jce=new JobCounterUpdateEvent(attemptID.getTaskId().getJobId());
        jce.addCounterUpdate(JobCounter.NUM_FAILED_UBERTASKS,1);
        context.getEventHandler().handle(jce);
        context.getEventHandler().handle(new TaskAttemptEvent(attemptID,TaskAttemptEventType.TA_CONTAINER_COMPLETED));
      }
catch (      IOException ioe) {
        LOG.fatal("oopsie...  this can never happen: " + StringUtils.stringifyException(ioe));
        System.exit(-1);
      }
    }
 else     if (event.getType() == EventType.CONTAINER_REMOTE_CLEANUP) {
      context.getEventHandler().handle(new TaskAttemptEvent(event.getTaskAttemptID(),TaskAttemptEventType.TA_CONTAINER_CLEANED));
    }
 else {
      LOG.warn("Ignoring unexpected event " + event.toString());
    }
  }
}
