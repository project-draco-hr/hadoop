{
  mr.waitUntilIdle();
  int trackers=mr.getNumTaskTrackers();
  List<String> observedJobDirs=new ArrayList<String>();
  List<String> observedFilesInsideJobDir=new ArrayList<String>();
  for (int i=0; i < trackers; ++i) {
    File localDir=new File(mr.getTaskTrackerLocalDir(i));
    assertTrue("Local dir " + localDir + " does not exist.",localDir.isDirectory());
    LOG.info("Verifying contents of " + MRConfig.LOCAL_DIR + " "+ localDir.getAbsolutePath());
    File trackerSubDir=new File(localDir,TaskTracker.SUBDIR);
    if (trackerSubDir.isDirectory()) {
      File userDir=new File(trackerSubDir,user);
      if (userDir.isDirectory()) {
        LOG.info("Verifying contents of user-dir " + userDir.getAbsolutePath());
        verifyContents(new String[]{TaskTracker.JOBCACHE,TaskTracker.DISTCACHEDIR},userDir.list());
        File jobCacheDir=new File(localDir,TaskTracker.getJobCacheSubdir(user));
        String[] jobDirs=jobCacheDir.list();
        observedJobDirs.addAll(Arrays.asList(jobDirs));
        for (        String jobDir : jobDirs) {
          String[] attemptDirs=new File(jobCacheDir,jobDir).list();
          observedFilesInsideJobDir.addAll(Arrays.asList(attemptDirs));
        }
      }
    }
  }
  LOG.info("Verifying the list of job directories");
  verifyContents(jobIds,observedJobDirs.toArray(new String[observedJobDirs.size()]));
  LOG.info("Verifying the list of task directories");
  for (int j=0; j < taskDirs.length; j++) {
    assertTrue("Expected task-directory " + taskDirs[j] + " is not present!",observedFilesInsideJobDir.contains(taskDirs[j]));
  }
}
