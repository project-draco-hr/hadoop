{
  if (capacities == null) {
    return;
  }
  float capacity;
  float usedCapacity;
  float maxCapacity;
  float absCapacity;
  float absUsedCapacity;
  float absMaxCapacity;
  float maxAMLimitPercentage;
  for (  String partitionName : capacities.getExistingNodeLabels()) {
    usedCapacity=capacities.getUsedCapacity(partitionName) * 100;
    capacity=capacities.getCapacity(partitionName) * 100;
    maxCapacity=capacities.getMaximumCapacity(partitionName);
    absCapacity=CapacitySchedulerQueueInfo.cap(capacities.getAbsoluteCapacity(partitionName),0f,1f) * 100;
    absUsedCapacity=CapacitySchedulerQueueInfo.cap(capacities.getAbsoluteUsedCapacity(partitionName),0f,1f) * 100;
    absMaxCapacity=CapacitySchedulerQueueInfo.cap(capacities.getAbsoluteMaximumCapacity(partitionName),0f,1f) * 100;
    maxAMLimitPercentage=capacities.getMaxAMResourcePercentage(partitionName) * 100;
    if (maxCapacity < CapacitySchedulerQueueInfo.EPSILON || maxCapacity > 1f)     maxCapacity=1f;
    maxCapacity=maxCapacity * 100;
    queueCapacitiesByPartition.add(new PartitionQueueCapacitiesInfo(partitionName,capacity,usedCapacity,maxCapacity,absCapacity,absUsedCapacity,absMaxCapacity,considerAMUsage ? maxAMLimitPercentage : 0f));
  }
}
