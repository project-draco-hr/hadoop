{
  String source=null;
  JarOutputStream jarOut=null;
  JarFile jarSource=null;
  jarOut=new JarOutputStream(new FileOutputStream(dstJar));
  boolean throwing=false;
  try {
    if (srcNames != null) {
      Iterator iter=srcNames.iterator();
      while (iter.hasNext()) {
        source=(String)iter.next();
        File fsource=new File(source);
        String base=getBasePathInJarOut(source);
        if (!fsource.exists()) {
          throwing=true;
          throw new FileNotFoundException(fsource.getAbsolutePath());
        }
        if (fsource.isDirectory()) {
          addDirectory(jarOut,base,fsource,0);
        }
 else {
          addFileStream(jarOut,base,fsource);
        }
      }
    }
    if (srcUnjar != null) {
      Iterator iter=srcUnjar.iterator();
      while (iter.hasNext()) {
        source=(String)iter.next();
        jarSource=new JarFile(source);
        addJarEntries(jarOut,jarSource);
        jarSource.close();
      }
    }
  }
  finally {
    try {
      jarOut.close();
    }
 catch (    ZipException z) {
      if (!throwing) {
        throw new IOException(z.toString());
      }
    }
  }
}
