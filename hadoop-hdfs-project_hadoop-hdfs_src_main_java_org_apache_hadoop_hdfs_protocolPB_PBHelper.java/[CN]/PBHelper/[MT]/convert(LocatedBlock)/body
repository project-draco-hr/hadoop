{
  if (b == null)   return null;
  Builder builder=LocatedBlockProto.newBuilder();
  DatanodeInfo[] locs=b.getLocations();
  List<DatanodeInfo> cachedLocs=Lists.newLinkedList(Arrays.asList(b.getCachedLocations()));
  for (int i=0; i < locs.length; i++) {
    DatanodeInfo loc=locs[i];
    builder.addLocs(i,PBHelper.convert(loc));
    boolean locIsCached=cachedLocs.contains(loc);
    builder.addIsCached(locIsCached);
    if (locIsCached) {
      cachedLocs.remove(loc);
    }
  }
  Preconditions.checkArgument(cachedLocs.size() == 0,"Found additional cached replica locations that are not in the set of" + " storage-backed locations!");
  return builder.setB(PBHelper.convert(b.getBlock())).setBlockToken(PBHelper.convert(b.getBlockToken())).setCorrupt(b.isCorrupt()).setOffset(b.getStartOffset()).build();
}
