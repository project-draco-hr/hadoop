{
  if (proto == null)   return null;
  List<DatanodeInfoProto> locs=proto.getLocsList();
  DatanodeInfo[] targets=new DatanodeInfo[locs.size()];
  for (int i=0; i < locs.size(); i++) {
    targets[i]=PBHelper.convert(locs.get(i));
  }
  final StorageType[] storageTypes=convertStorageTypes(proto.getStorageTypesList(),locs.size());
  final int storageIDsCount=proto.getStorageIDsCount();
  final String[] storageIDs;
  if (storageIDsCount == 0) {
    storageIDs=null;
  }
 else {
    Preconditions.checkState(storageIDsCount == locs.size());
    storageIDs=proto.getStorageIDsList().toArray(new String[storageIDsCount]);
  }
  int[] indices=null;
  final int indexCount=proto.getBlockIndexCount();
  if (indexCount > 0) {
    indices=new int[indexCount];
    for (int i=0; i < indexCount; i++) {
      indices[i]=proto.getBlockIndex(i);
    }
  }
  List<DatanodeInfo> cachedLocs=new ArrayList<DatanodeInfo>(locs.size());
  List<Boolean> isCachedList=proto.getIsCachedList();
  for (int i=0; i < isCachedList.size(); i++) {
    if (isCachedList.get(i)) {
      cachedLocs.add(targets[i]);
    }
  }
  final LocatedBlock lb;
  if (indices == null) {
    lb=new LocatedBlock(PBHelper.convert(proto.getB()),targets,storageIDs,storageTypes,proto.getOffset(),proto.getCorrupt(),cachedLocs.toArray(new DatanodeInfo[cachedLocs.size()]));
  }
 else {
    lb=new LocatedStripedBlock(PBHelper.convert(proto.getB()),targets,storageIDs,storageTypes,indices,proto.getOffset(),proto.getCorrupt(),cachedLocs.toArray(new DatanodeInfo[cachedLocs.size()]));
  }
  lb.setBlockToken(PBHelper.convert(proto.getBlockToken()));
  return lb;
}
