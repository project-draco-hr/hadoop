{
  try {
    YarnConfiguration conf=new YarnConfiguration();
    conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    conf.setInt(YarnConfiguration.TIMELINE_SERVICE_CLIENT_MAX_RETRIES,-2);
    createTimelineClient(conf);
    Assert.fail();
  }
 catch (  IllegalArgumentException e) {
    Assert.assertTrue(e.getMessage().contains(YarnConfiguration.TIMELINE_SERVICE_CLIENT_MAX_RETRIES));
  }
  try {
    YarnConfiguration conf=new YarnConfiguration();
    conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
    conf.setLong(YarnConfiguration.TIMELINE_SERVICE_CLIENT_RETRY_INTERVAL_MS,0);
    createTimelineClient(conf);
    Assert.fail();
  }
 catch (  IllegalArgumentException e) {
    Assert.assertTrue(e.getMessage().contains(YarnConfiguration.TIMELINE_SERVICE_CLIENT_RETRY_INTERVAL_MS));
  }
  int newMaxRetries=5;
  long newIntervalMs=500;
  YarnConfiguration conf=new YarnConfiguration();
  conf.setInt(YarnConfiguration.TIMELINE_SERVICE_CLIENT_MAX_RETRIES,newMaxRetries);
  conf.setLong(YarnConfiguration.TIMELINE_SERVICE_CLIENT_RETRY_INTERVAL_MS,newIntervalMs);
  conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
  TimelineClientImpl client=createTimelineClient(conf);
  try {
    client.putEntities(generateEntity());
    Assert.fail("Exception expected! " + "Timeline server should be off to run this test. ");
  }
 catch (  RuntimeException ce) {
    Assert.assertTrue("Handler exception for reason other than retry: " + ce.getMessage(),ce.getMessage().contains("Connection retries limit exceeded"));
    Assert.assertTrue("Retry filter didn't perform any retries! ",client.connectionRetry.retried);
  }
}
