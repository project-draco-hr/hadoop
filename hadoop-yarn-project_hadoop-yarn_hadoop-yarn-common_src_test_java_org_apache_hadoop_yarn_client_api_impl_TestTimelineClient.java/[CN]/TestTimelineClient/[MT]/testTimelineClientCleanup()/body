{
  YarnConfiguration conf=new YarnConfiguration();
  conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,true);
  conf.setInt(YarnConfiguration.TIMELINE_SERVICE_CLIENT_MAX_RETRIES,0);
  File testDir=TestGenericTestUtils.getTestDir();
  String sslConfDir=KeyStoreTestUtil.getClasspathDir(TestTimelineClient.class);
  KeyStoreTestUtil.setupSSLConfig(testDir.getAbsolutePath(),sslConfDir,conf,false);
  client=createTimelineClient(conf);
  ThreadGroup threadGroup=Thread.currentThread().getThreadGroup();
  while (threadGroup.getParent() != null) {
    threadGroup=threadGroup.getParent();
  }
  Thread[] threads=new Thread[threadGroup.activeCount()];
  threadGroup.enumerate(threads);
  Thread reloaderThread=null;
  for (  Thread thread : threads) {
    if ((thread.getName() != null) && (thread.getName().contains("Truststore reloader thread"))) {
      reloaderThread=thread;
    }
  }
  Assert.assertTrue("Reloader is not alive",reloaderThread.isAlive());
  client.close();
  boolean reloaderStillAlive=true;
  for (int i=0; i < 10; i++) {
    reloaderStillAlive=reloaderThread.isAlive();
    if (!reloaderStillAlive) {
      break;
    }
    Thread.sleep(1000);
  }
  Assert.assertFalse("Reloader is still alive",reloaderStillAlive);
}
