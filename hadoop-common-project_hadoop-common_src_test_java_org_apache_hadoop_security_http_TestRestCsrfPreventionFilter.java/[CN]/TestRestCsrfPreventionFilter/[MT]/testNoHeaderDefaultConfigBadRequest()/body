{
  FilterConfig filterConfig=Mockito.mock(FilterConfig.class);
  Mockito.when(filterConfig.getInitParameter(RestCsrfPreventionFilter.CUSTOM_HEADER_PARAM)).thenReturn(null);
  Mockito.when(filterConfig.getInitParameter(RestCsrfPreventionFilter.CUSTOM_METHODS_TO_IGNORE_PARAM)).thenReturn(null);
  HttpServletRequest mockReq=Mockito.mock(HttpServletRequest.class);
  Mockito.when(mockReq.getHeader(RestCsrfPreventionFilter.HEADER_DEFAULT)).thenReturn(null);
  Mockito.when(mockReq.getHeader(RestCsrfPreventionFilter.HEADER_USER_AGENT)).thenReturn(BROWSER_AGENT);
  HttpServletResponse mockRes=Mockito.mock(HttpServletResponse.class);
  FilterChain mockChain=Mockito.mock(FilterChain.class);
  RestCsrfPreventionFilter filter=new RestCsrfPreventionFilter();
  filter.init(filterConfig);
  filter.doFilter(mockReq,mockRes,mockChain);
  verify(mockRes,atLeastOnce()).sendError(HttpServletResponse.SC_BAD_REQUEST,EXPECTED_MESSAGE);
  Mockito.verifyZeroInteractions(mockChain);
}
