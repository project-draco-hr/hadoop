{
  Configuration conf=new Configuration();
  FileContext files=FileContext.getLocalFSFileContext(conf);
  final Path basedir=files.makeQualified(new Path("target",TestFSDownload.class.getSimpleName()));
  files.mkdir(basedir,null,true);
  conf.setStrings(TestFSDownload.class.getName(),basedir.toString());
  ExecutorService singleThreadedExec=HadoopExecutors.newSingleThreadExecutor();
  LocalDirAllocator dirs=new LocalDirAllocator(TestFSDownload.class.getName());
  Path destPath=dirs.getLocalPathForWrite(basedir.toString(),conf);
  destPath=new Path(destPath,Long.toString(uniqueNumberGenerator.incrementAndGet()));
  Path p=new Path(basedir,"dir" + 0 + ".jar");
  LocalResourceVisibility vis=LocalResourceVisibility.PRIVATE;
  LocalResource rsrc=createJar(files,p,vis);
  FSDownload fsd=new FSDownload(files,UserGroupInformation.getCurrentUser(),conf,destPath,rsrc);
  Future<Path> rPath=singleThreadedExec.submit(fsd);
  singleThreadedExec.shutdown();
  while (!singleThreadedExec.awaitTermination(1000,TimeUnit.MILLISECONDS))   ;
  Assert.assertTrue(rPath.isDone());
  Assert.assertEquals(destPath,rPath.get().getParent());
}
