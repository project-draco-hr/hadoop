{
  cluster=new MiniDFSCluster.Builder(config).numDataNodes(2).manageNameDfsDirs(false).build();
  cluster.waitActive();
  try {
    FSImage fsi=cluster.getNameNode().getFSImage();
    boolean restore=fsi.getStorage().getRestoreFailedStorage();
    LOG.info("Restore is " + restore);
    assertEquals(restore,true);
    String cmd="-fs NAMENODE -restoreFailedStorage false";
    String namenode=config.get(DFSConfigKeys.FS_DEFAULT_NAME_KEY,"file:///");
    CommandExecutor executor=new CLITestCmdDFS(cmd,new CLICommandDFSAdmin()).getExecutor(namenode,config);
    executor.executeCommand(cmd);
    restore=fsi.getStorage().getRestoreFailedStorage();
    assertFalse("After set true call restore is " + restore,restore);
    cmd="-fs NAMENODE -restoreFailedStorage true";
    executor.executeCommand(cmd);
    restore=fsi.getStorage().getRestoreFailedStorage();
    assertTrue("After set false call restore is " + restore,restore);
    cmd="-fs NAMENODE -restoreFailedStorage check";
    CommandExecutor.Result cmdResult=executor.executeCommand(cmd);
    restore=fsi.getStorage().getRestoreFailedStorage();
    assertTrue("After check call restore is " + restore,restore);
    String commandOutput=cmdResult.getCommandOutput();
    commandOutput.trim();
    assertTrue(commandOutput.contains("restoreFailedStorage is set to true"));
  }
  finally {
    cluster.shutdown();
  }
}
