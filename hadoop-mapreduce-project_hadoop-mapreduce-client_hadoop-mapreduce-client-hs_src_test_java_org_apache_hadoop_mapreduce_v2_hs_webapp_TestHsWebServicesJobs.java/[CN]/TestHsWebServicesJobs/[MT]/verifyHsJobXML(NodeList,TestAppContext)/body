{
  assertEquals("incorrect number of elements",1,nodes.getLength());
  for (int i=0; i < nodes.getLength(); i++) {
    Element element=(Element)nodes.item(i);
    Job job=appContext.getJob(MRApps.toJobID(WebServicesTestUtils.getXmlString(element,"id")));
    assertNotNull("Job not found - output incorrect",job);
    VerifyJobsUtils.verifyHsJobGeneric(job,WebServicesTestUtils.getXmlString(element,"id"),WebServicesTestUtils.getXmlString(element,"user"),WebServicesTestUtils.getXmlString(element,"name"),WebServicesTestUtils.getXmlString(element,"state"),WebServicesTestUtils.getXmlString(element,"queue"),WebServicesTestUtils.getXmlLong(element,"startTime"),WebServicesTestUtils.getXmlLong(element,"finishTime"),WebServicesTestUtils.getXmlInt(element,"mapsTotal"),WebServicesTestUtils.getXmlInt(element,"mapsCompleted"),WebServicesTestUtils.getXmlInt(element,"reducesTotal"),WebServicesTestUtils.getXmlInt(element,"reducesCompleted"));
    VerifyJobsUtils.verifyHsJobGenericSecure(job,WebServicesTestUtils.getXmlBoolean(element,"uberized"),WebServicesTestUtils.getXmlString(element,"diagnostics"),WebServicesTestUtils.getXmlLong(element,"avgMapTime"),WebServicesTestUtils.getXmlLong(element,"avgReduceTime"),WebServicesTestUtils.getXmlLong(element,"avgShuffleTime"),WebServicesTestUtils.getXmlLong(element,"avgMergeTime"),WebServicesTestUtils.getXmlInt(element,"failedReduceAttempts"),WebServicesTestUtils.getXmlInt(element,"killedReduceAttempts"),WebServicesTestUtils.getXmlInt(element,"successfulReduceAttempts"),WebServicesTestUtils.getXmlInt(element,"failedMapAttempts"),WebServicesTestUtils.getXmlInt(element,"killedMapAttempts"),WebServicesTestUtils.getXmlInt(element,"successfulMapAttempts"));
  }
}
