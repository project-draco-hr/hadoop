{
  WebResource r=resource();
  try {
    r.path("ws").path("v1").path("history").path("mapreduce").path("jobs").path("job_foo").accept(MediaType.APPLICATION_JSON).get(JSONObject.class);
    fail("should have thrown exception on invalid uri");
  }
 catch (  UniformInterfaceException ue) {
    ClientResponse response=ue.getResponse();
    assertEquals(Status.NOT_FOUND,response.getClientResponseStatus());
    assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    JSONObject msg=response.getEntity(JSONObject.class);
    JSONObject exception=msg.getJSONObject("RemoteException");
    assertEquals("incorrect number of elements",3,exception.length());
    String message=exception.getString("message");
    String type=exception.getString("exception");
    String classname=exception.getString("javaClassName");
    verifyJobIdInvalid(message,type,classname);
  }
}
