{
  conf=new Configuration();
  conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY,1000L);
  conf.set("dfs.replication.pending.timeout.sec","2");
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,1L);
  conf.set("dfs.block.replicator.classname","org.apache.hadoop.hdfs.server.namenode.BlockPlacementPolicyRaid");
  conf.set(RaidNode.STRIPE_LENGTH_KEY,"2");
  conf.set(RaidNode.RS_PARITY_LENGTH_KEY,"3");
  conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY,1);
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).racks(rack1).hosts(host1).build();
  cluster.waitActive();
  namesystem=cluster.getNameNode().getNamesystem();
  Assert.assertTrue("BlockPlacementPolicy type is not correct.",namesystem.blockManager.replicator instanceof BlockPlacementPolicyRaid);
  policy=(BlockPlacementPolicyRaid)namesystem.blockManager.replicator;
  fs=cluster.getFileSystem();
  xorPrefix=RaidNode.xorDestinationPath(conf).toUri().getPath();
  raidTempPrefix=RaidNode.xorTempPrefix(conf);
  raidrsTempPrefix=RaidNode.rsTempPrefix(conf);
  raidrsHarTempPrefix=RaidNode.rsHarTempPrefix(conf);
}
