{
  for (int i=0; i < 3; i++) {
    dataNodes[i].updateHeartbeat(2 * HdfsConstants.MIN_BLOCKS_FOR_WRITE * BLOCK_SIZE,0L,(HdfsConstants.MIN_BLOCKS_FOR_WRITE - 1) * BLOCK_SIZE,0L,0,0);
  }
  DatanodeStorageInfo[] targets;
  targets=chooseTarget(0);
  assertEquals(targets.length,0);
  targets=chooseTarget(1);
  assertEquals(targets.length,1);
  assertFalse(isOnSameRack(dataNodes[0],targets[0]));
  targets=chooseTarget(2);
  assertEquals(targets.length,2);
  assertFalse(isOnSameRack(dataNodes[0],targets[0]));
  assertFalse(isOnSameRack(targets[0],targets[1]));
  targets=chooseTarget(3);
  assertEquals(targets.length,3);
  for (int i=0; i < 3; i++) {
    assertFalse(isOnSameRack(dataNodes[0],targets[i]));
  }
  verifyNoTwoTargetsOnSameNodeGroup(targets);
  assertTrue(isOnSameRack(targets[0],targets[1]) || isOnSameRack(targets[1],targets[2]));
  assertFalse(isOnSameRack(targets[0],targets[2]));
}
