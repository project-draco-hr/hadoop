{
  Configuration conf=new Configuration();
  File editLog=new File(GenericTestUtils.getTempPath("testCorruptEditLog"));
  LOG.debug("Creating test edit log file: " + editLog);
  EditLogFileOutputStream elos=new EditLogFileOutputStream(conf,editLog.getAbsoluteFile(),8192);
  elos.create(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION);
  FSEditLogOp.OpInstanceCache cache=new FSEditLogOp.OpInstanceCache();
  FSEditLogOp.MkdirOp mkdirOp=FSEditLogOp.MkdirOp.getInstance(cache);
  mkdirOp.reset();
  mkdirOp.setRpcCallId(123);
  mkdirOp.setTransactionId(1);
  mkdirOp.setInodeId(789L);
  mkdirOp.setPath("/mydir");
  PermissionStatus perms=PermissionStatus.createImmutable("myuser","mygroup",FsPermission.createImmutable((short)0777));
  mkdirOp.setPermissionStatus(perms);
  elos.write(mkdirOp);
  mkdirOp.reset();
  mkdirOp.setRpcCallId(456);
  mkdirOp.setTransactionId(2);
  mkdirOp.setInodeId(123L);
  mkdirOp.setPath("/mydir2");
  perms=PermissionStatus.createImmutable("myuser","mygroup",FsPermission.createImmutable((short)0666));
  mkdirOp.setPermissionStatus(perms);
  elos.write(mkdirOp);
  elos.setReadyToFlush();
  elos.flushAndSync(false);
  elos.close();
  long fileLen=editLog.length();
  LOG.debug("Corrupting last 4 bytes of edit log file " + editLog + ", whose length is "+ fileLen);
  RandomAccessFile rwf=new RandomAccessFile(editLog,"rw");
  rwf.seek(fileLen - 4);
  int b=rwf.readInt();
  rwf.seek(fileLen - 4);
  rwf.writeInt(b + 1);
  rwf.close();
  EditLogFileInputStream elis=new EditLogFileInputStream(editLog);
  Assert.assertEquals(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION,elis.getVersion(true));
  Assert.assertEquals(1,elis.scanNextOp());
  LOG.debug("Read transaction 1 from " + editLog);
  try {
    elis.scanNextOp();
    Assert.fail("Expected scanNextOp to fail when op checksum was corrupt.");
  }
 catch (  IOException e) {
    LOG.debug("Caught expected checksum error when reading corrupt " + "transaction 2",e);
    GenericTestUtils.assertExceptionContains("Transaction is corrupt.",e);
  }
  elis.close();
}
