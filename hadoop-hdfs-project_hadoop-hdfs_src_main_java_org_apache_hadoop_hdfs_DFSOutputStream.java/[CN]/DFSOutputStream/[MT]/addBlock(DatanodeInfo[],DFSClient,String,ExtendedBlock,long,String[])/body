{
  final DfsClientConf conf=dfsClient.getConf();
  int retries=conf.getNumBlockWriteLocateFollowingRetry();
  long sleeptime=conf.getBlockWriteLocateFollowingInitialDelayMs();
  long localstart=Time.monotonicNow();
  while (true) {
    try {
      return dfsClient.namenode.addBlock(src,dfsClient.clientName,prevBlock,excludedNodes,fileId,favoredNodes);
    }
 catch (    RemoteException e) {
      IOException ue=e.unwrapRemoteException(FileNotFoundException.class,AccessControlException.class,NSQuotaExceededException.class,DSQuotaExceededException.class,QuotaByStorageTypeExceededException.class,UnresolvedPathException.class);
      if (ue != e) {
        throw ue;
      }
      if (NotReplicatedYetException.class.getName().equals(e.getClassName())) {
        if (retries == 0) {
          throw e;
        }
 else {
          --retries;
          LOG.info("Exception while adding a block",e);
          long elapsed=Time.monotonicNow() - localstart;
          if (elapsed > 5000) {
            LOG.info("Waiting for replication for " + (elapsed / 1000) + " seconds");
          }
          try {
            LOG.warn("NotReplicatedYetException sleeping " + src + " retries left "+ retries);
            Thread.sleep(sleeptime);
            sleeptime*=2;
          }
 catch (          InterruptedException ie) {
            LOG.warn("Caught exception",ie);
          }
        }
      }
 else {
        throw e;
      }
    }
  }
}
