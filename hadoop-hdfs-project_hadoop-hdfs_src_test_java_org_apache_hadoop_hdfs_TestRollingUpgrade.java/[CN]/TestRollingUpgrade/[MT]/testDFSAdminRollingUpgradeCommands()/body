{
  final Configuration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).build();
    cluster.waitActive();
    final Path foo=new Path("/foo");
    final Path bar=new Path("/bar");
    final Path baz=new Path("/baz");
{
      final DistributedFileSystem dfs=cluster.getFileSystem();
      final DFSAdmin dfsadmin=new DFSAdmin(conf);
      dfs.mkdirs(foo);
      runCmd(dfsadmin,false,"-rollingUpgrade","abc");
      checkMxBeanIsNull();
      runCmd(dfsadmin,true,"-rollingUpgrade");
      dfs.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
      runCmd(dfsadmin,true,"-rollingUpgrade","prepare");
      dfs.setSafeMode(SafeModeAction.SAFEMODE_LEAVE);
      runCmd(dfsadmin,true,"-rollingUpgrade","query");
      checkMxBean();
      dfs.mkdirs(bar);
      runCmd(dfsadmin,true,"-rollingUpgrade","finalize");
      assertNull(dfs.rollingUpgrade(RollingUpgradeAction.QUERY));
      checkMxBeanIsNull();
      dfs.mkdirs(baz);
      runCmd(dfsadmin,true,"-rollingUpgrade");
      Assert.assertTrue(dfs.exists(foo));
      Assert.assertTrue(dfs.exists(bar));
      Assert.assertTrue(dfs.exists(baz));
      dfs.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
      dfs.saveNamespace();
      dfs.setSafeMode(SafeModeAction.SAFEMODE_LEAVE);
    }
    cluster.restartNameNode();
{
      final DistributedFileSystem dfs=cluster.getFileSystem();
      Assert.assertTrue(dfs.exists(foo));
      Assert.assertTrue(dfs.exists(bar));
      Assert.assertTrue(dfs.exists(baz));
    }
  }
  finally {
    if (cluster != null)     cluster.shutdown();
  }
}
