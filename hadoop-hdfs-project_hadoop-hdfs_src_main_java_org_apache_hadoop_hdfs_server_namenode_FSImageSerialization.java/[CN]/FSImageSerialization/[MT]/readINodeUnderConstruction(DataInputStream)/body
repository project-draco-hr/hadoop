{
  byte[] name=readBytes(in);
  short blockReplication=in.readShort();
  long modificationTime=in.readLong();
  long preferredBlockSize=in.readLong();
  int numBlocks=in.readInt();
  BlockInfo[] blocks=new BlockInfo[numBlocks];
  Block blk=new Block();
  int i=0;
  for (; i < numBlocks - 1; i++) {
    blk.readFields(in);
    blocks[i]=new BlockInfo(blk,blockReplication);
  }
  if (numBlocks > 0) {
    blk.readFields(in);
    blocks[i]=new BlockInfoUnderConstruction(blk,blockReplication,BlockUCState.UNDER_CONSTRUCTION,null);
  }
  PermissionStatus perm=PermissionStatus.read(in);
  String clientName=readString(in);
  String clientMachine=readString(in);
  int numLocs=in.readInt();
  DatanodeDescriptor[] locations=new DatanodeDescriptor[numLocs];
  for (i=0; i < numLocs; i++) {
    locations[i]=new DatanodeDescriptor();
    locations[i].readFields(in);
  }
  return new INodeFileUnderConstruction(name,blockReplication,modificationTime,preferredBlockSize,blocks,perm,clientName,clientMachine,null);
}
