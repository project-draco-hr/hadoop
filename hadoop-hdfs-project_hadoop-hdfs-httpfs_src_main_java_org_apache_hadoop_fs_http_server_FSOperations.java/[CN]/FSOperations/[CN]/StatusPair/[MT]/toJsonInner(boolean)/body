{
  Map<String,Object> json=new LinkedHashMap<String,Object>();
  json.put(HttpFSFileSystem.PATH_SUFFIX_JSON,(emptyPathSuffix) ? "" : fileStatus.getPath().getName());
  json.put(HttpFSFileSystem.TYPE_JSON,HttpFSFileSystem.FILE_TYPE.getType(fileStatus).toString());
  json.put(HttpFSFileSystem.LENGTH_JSON,fileStatus.getLen());
  json.put(HttpFSFileSystem.OWNER_JSON,fileStatus.getOwner());
  json.put(HttpFSFileSystem.GROUP_JSON,fileStatus.getGroup());
  json.put(HttpFSFileSystem.PERMISSION_JSON,HttpFSFileSystem.permissionToString(fileStatus.getPermission()));
  json.put(HttpFSFileSystem.ACCESS_TIME_JSON,fileStatus.getAccessTime());
  json.put(HttpFSFileSystem.MODIFICATION_TIME_JSON,fileStatus.getModificationTime());
  json.put(HttpFSFileSystem.BLOCK_SIZE_JSON,fileStatus.getBlockSize());
  json.put(HttpFSFileSystem.REPLICATION_JSON,fileStatus.getReplication());
  json.put(HttpFSFileSystem.LAZY_PERSIST_JSON,fileStatus.isLazyPersist());
  if ((aclStatus != null) && !(aclStatus.getEntries().isEmpty())) {
    json.put(HttpFSFileSystem.ACL_BIT_JSON,true);
  }
  return json;
}
