{
  Configuration conf=context.getConfiguration();
  CompressionCodec codec=null;
  CompressionType compressionType=CompressionType.NONE;
  if (getCompressOutput(context)) {
    compressionType=SequenceFileOutputFormat.getOutputCompressionType(context);
    Class<?> codecClass=getOutputCompressorClass(context,DefaultCodec.class);
    codec=(CompressionCodec)ReflectionUtils.newInstance(codecClass,conf);
  }
  Path file=getDefaultWorkFile(context,"");
  FileSystem fs=file.getFileSystem(conf);
  final MapFile.Writer out=new MapFile.Writer(conf,fs,file.toString(),context.getOutputKeyClass().asSubclass(WritableComparable.class),context.getOutputValueClass().asSubclass(Writable.class),compressionType,codec,context);
  return new RecordWriter<WritableComparable<?>,Writable>(){
    public void write(    WritableComparable<?> key,    Writable value) throws IOException {
      out.append(key,value);
    }
    public void close(    TaskAttemptContext context) throws IOException {
      out.close();
    }
  }
;
}
