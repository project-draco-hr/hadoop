{
  Configuration conf=new Configuration();
  FSImage fsImage=Mockito.mock(FSImage.class);
  FSEditLog fsEditLog=Mockito.mock(FSEditLog.class);
  Mockito.when(fsImage.getEditLog()).thenReturn(fsEditLog);
  FSNamesystem fsn;
  List<AuditLogger> auditLoggers;
  conf.set(DFSConfigKeys.DFS_NAMENODE_AUDIT_LOGGERS_KEY,"");
  conf.setBoolean(DFSConfigKeys.NNTOP_ENABLED_KEY,false);
  fsn=new FSNamesystem(conf,fsImage);
  auditLoggers=fsn.getAuditLoggers();
  assertTrue(auditLoggers.size() == 1);
  assertTrue(auditLoggers.get(0) instanceof FSNamesystem.DefaultAuditLogger);
  conf.set(DFSConfigKeys.DFS_NAMENODE_AUDIT_LOGGERS_KEY,"");
  conf.setBoolean(DFSConfigKeys.NNTOP_ENABLED_KEY,true);
  fsn=new FSNamesystem(conf,fsImage);
  auditLoggers=fsn.getAuditLoggers();
  assertTrue(auditLoggers.size() == 2);
  for (  AuditLogger auditLogger : auditLoggers) {
    assertThat(auditLogger,either(instanceOf(FSNamesystem.DefaultAuditLogger.class)).or(instanceOf(TopAuditLogger.class)));
  }
  conf.set(DFSConfigKeys.DFS_NAMENODE_AUDIT_LOGGERS_KEY,"default");
  conf.setBoolean(DFSConfigKeys.NNTOP_ENABLED_KEY,true);
  fsn=new FSNamesystem(conf,fsImage);
  auditLoggers=fsn.getAuditLoggers();
  assertTrue(auditLoggers.size() == 2);
  for (  AuditLogger auditLogger : auditLoggers) {
    assertThat(auditLogger,either(instanceOf(FSNamesystem.DefaultAuditLogger.class)).or(instanceOf(TopAuditLogger.class)));
  }
  conf.set(DFSConfigKeys.DFS_NAMENODE_AUDIT_LOGGERS_KEY," default, org.apache.hadoop.hdfs.server.namenode.TestFSNamesystem$DummyAuditLogger  ");
  conf.setBoolean(DFSConfigKeys.NNTOP_ENABLED_KEY,true);
  fsn=new FSNamesystem(conf,fsImage);
  auditLoggers=fsn.getAuditLoggers();
  assertTrue(auditLoggers.size() == 3);
  for (  AuditLogger auditLogger : auditLoggers) {
    assertThat(auditLogger,either(instanceOf(FSNamesystem.DefaultAuditLogger.class)).or(instanceOf(TopAuditLogger.class)).or(instanceOf(DummyAuditLogger.class)));
  }
}
