{
  final int threadCount=3;
  final CountDownLatch latch=new CountDownLatch(threadCount);
  final FSNamesystemLock rwLock=new FSNamesystemLock(true);
  rwLock.writeLock().lock();
  ExecutorService helper=Executors.newFixedThreadPool(threadCount);
  for (int x=0; x < threadCount; x++) {
    helper.execute(new Runnable(){
      @Override public void run(){
        latch.countDown();
        rwLock.readLock().lock();
      }
    }
);
  }
  latch.await();
  try {
    GenericTestUtils.waitFor(new Supplier<Boolean>(){
      @Override public Boolean get(){
        return (threadCount == rwLock.getQueueLength());
      }
    }
,10,1000);
  }
 catch (  TimeoutException e) {
    fail("Expected number of blocked thread not found");
  }
}
