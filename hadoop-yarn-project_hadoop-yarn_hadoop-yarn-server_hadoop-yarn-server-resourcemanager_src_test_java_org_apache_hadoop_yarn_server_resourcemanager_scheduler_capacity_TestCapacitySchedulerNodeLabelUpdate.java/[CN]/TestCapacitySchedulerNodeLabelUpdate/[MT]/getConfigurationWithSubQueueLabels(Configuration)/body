{
  CapacitySchedulerConfiguration conf2=new CapacitySchedulerConfiguration(config);
  conf2.setQueues(CapacitySchedulerConfiguration.ROOT,new String[]{"a","b"});
  conf2.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"x",100);
  conf2.setCapacityByLabel(CapacitySchedulerConfiguration.ROOT,"y",100);
  final String a=CapacitySchedulerConfiguration.ROOT + ".a";
  final String b=CapacitySchedulerConfiguration.ROOT + ".b";
  final String aa1=a + ".a1";
  final String aa2=a + ".a2";
  final String aa3=a + ".a3";
  final String aa4=a + ".a4";
  conf2.setQueues(a,new String[]{"a1","a2","a3","a4"});
  conf2.setCapacity(a,50);
  conf2.setCapacity(b,50);
  conf2.setCapacity(aa1,40);
  conf2.setCapacity(aa2,20);
  conf2.setCapacity(aa3,20);
  conf2.setCapacity(aa4,20);
  conf2.setAccessibleNodeLabels(a,ImmutableSet.of("x","y","z"));
  conf2.setAccessibleNodeLabels(aa1,ImmutableSet.of("x","y"));
  conf2.setAccessibleNodeLabels(aa2,ImmutableSet.of("y"));
  conf2.setAccessibleNodeLabels(aa3,ImmutableSet.of("x","y","z"));
  conf2.setAccessibleNodeLabels(aa4,ImmutableSet.of("x","y"));
  conf2.setCapacityByLabel(a,"x",50);
  conf2.setCapacityByLabel(a,"y",50);
  conf2.setCapacityByLabel(a,"z",50);
  conf2.setCapacityByLabel(b,"x",50);
  conf2.setCapacityByLabel(b,"y",50);
  conf2.setCapacityByLabel(b,"z",50);
  conf2.setCapacityByLabel(aa1,"x",50);
  conf2.setCapacityByLabel(aa3,"x",25);
  conf2.setCapacityByLabel(aa4,"x",25);
  conf2.setCapacityByLabel(aa1,"y",25);
  conf2.setCapacityByLabel(aa2,"y",25);
  conf2.setCapacityByLabel(aa4,"y",50);
  conf2.setCapacityByLabel(aa3,"z",50);
  conf2.setCapacityByLabel(aa4,"z",50);
  return conf2;
}
