{
  RecoveredContainerState rcs=new RecoveredContainerState();
  rcs.status=RecoveredContainerStatus.REQUESTED;
  while (iter.hasNext()) {
    Entry<byte[],byte[]> entry=iter.peekNext();
    String key=asString(entry.getKey());
    if (!key.startsWith(keyPrefix)) {
      break;
    }
    iter.next();
    String suffix=key.substring(keyPrefix.length() - 1);
    if (suffix.equals(CONTAINER_REQUEST_KEY_SUFFIX)) {
      rcs.startRequest=new StartContainerRequestPBImpl(StartContainerRequestProto.parseFrom(entry.getValue()));
    }
 else     if (suffix.equals(CONTAINER_DIAGS_KEY_SUFFIX)) {
      rcs.diagnostics=asString(entry.getValue());
    }
 else     if (suffix.equals(CONTAINER_QUEUED_KEY_SUFFIX)) {
      if (rcs.status == RecoveredContainerStatus.REQUESTED) {
        rcs.status=RecoveredContainerStatus.QUEUED;
      }
    }
 else     if (suffix.equals(CONTAINER_LAUNCHED_KEY_SUFFIX)) {
      if ((rcs.status == RecoveredContainerStatus.REQUESTED) || (rcs.status == RecoveredContainerStatus.QUEUED)) {
        rcs.status=RecoveredContainerStatus.LAUNCHED;
      }
    }
 else     if (suffix.equals(CONTAINER_KILLED_KEY_SUFFIX)) {
      rcs.killed=true;
    }
 else     if (suffix.equals(CONTAINER_EXIT_CODE_KEY_SUFFIX)) {
      rcs.status=RecoveredContainerStatus.COMPLETED;
      rcs.exitCode=Integer.parseInt(asString(entry.getValue()));
    }
 else     if (suffix.equals(CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX)) {
      rcs.capability=new ResourcePBImpl(ResourceProto.parseFrom(entry.getValue()));
    }
 else     if (suffix.equals(CONTAINER_REMAIN_RETRIES_KEY_SUFFIX)) {
      rcs.setRemainingRetryAttempts(Integer.parseInt(asString(entry.getValue())));
    }
 else     if (suffix.equals(CONTAINER_WORK_DIR_KEY_SUFFIX)) {
      rcs.setWorkDir(asString(entry.getValue()));
    }
 else     if (suffix.equals(CONTAINER_LOG_DIR_KEY_SUFFIX)) {
      rcs.setLogDir(asString(entry.getValue()));
    }
 else {
      throw new IOException("Unexpected container state key: " + key);
    }
  }
  return rcs;
}
