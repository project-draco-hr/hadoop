{
  String jobTrackerJSP=jtURL + "/jobtracker.jsp?a=b";
  String url=jobTrackerJSP + "&killJobs=true";
  conf.set(MRJobConfig.JOB_ACL_VIEW_JOB," ");
  conf.set(MRJobConfig.JOB_ACL_MODIFY_JOB," ");
  Job job1=startSleepJobAsUser(jobSubmitter,conf);
  org.apache.hadoop.mapreduce.JobID jobid=job1.getJobID();
  getTIPId(cluster,jobid);
  url=url.concat("&jobCheckBox=" + jobid.toString());
  Job job2=startSleepJobAsUser(jobSubmitter1,conf);
  jobid=job2.getJobID();
  getTIPId(cluster,jobid);
  url=url.concat("&jobCheckBox=" + jobid.toString());
  Job job3=startSleepJobAsUser(jobSubmitter2,conf);
  jobid=job3.getJobID();
  getTIPId(cluster,jobid);
  url=url.concat("&jobCheckBox=" + jobid.toString());
  conf.set(MRJobConfig.JOB_ACL_MODIFY_JOB,jobSubmitter1);
  Job job4=startSleepJobAsUser(jobSubmitter3,conf);
  jobid=job4.getJobID();
  getTIPId(cluster,jobid);
  url=url.concat("&jobCheckBox=" + jobid.toString());
  try {
    assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED,getHttpStatusCode(url,jobSubmitter1,"POST"));
    assertFalse("killJob succeeded for a job for which user doesnot " + " have job-modify permission",job1.isComplete());
    assertFalse("killJob succeeded for a job for which user doesnot " + " have job-modify permission",job3.isComplete());
    assertTrue("killJob failed for a job for which user has " + "job-modify permission",job2.isComplete());
    assertTrue("killJob failed for a job for which user has " + "job-modify permission",job4.isComplete());
  }
  finally {
    assertEquals(HttpURLConnection.HTTP_OK,getHttpStatusCode(url,mrOwner,"GET"));
  }
}
