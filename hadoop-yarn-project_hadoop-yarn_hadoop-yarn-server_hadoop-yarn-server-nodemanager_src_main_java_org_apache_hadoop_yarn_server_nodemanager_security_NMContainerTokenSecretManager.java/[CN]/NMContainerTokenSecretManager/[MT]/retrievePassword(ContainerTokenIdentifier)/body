{
  int keyId=identifier.getMasterKeyId();
  MasterKeyData masterKeyToUse=null;
  if (this.previousMasterKey != null && keyId == this.previousMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=this.previousMasterKey;
  }
 else   if (keyId == super.currentMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=super.currentMasterKey;
  }
  if (nodeHostAddr != null && !identifier.getNmHostAddress().equals(nodeHostAddr)) {
    throw new SecretManager.InvalidToken("Given Container " + identifier.getContainerID().toString() + " identifier is not valid for current Node manager. Expected : "+ nodeHostAddr+ " Found : "+ identifier.getNmHostAddress());
  }
  if (masterKeyToUse != null) {
    return retrievePasswordInternal(identifier,masterKeyToUse);
  }
  throw new SecretManager.InvalidToken("Given Container " + identifier.getContainerID().toString() + " seems to have an illegally generated token.");
}
