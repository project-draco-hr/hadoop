{
  int keyId=identifier.getMasterKeyId();
  ContainerId containerId=identifier.getContainerID();
  ApplicationId appId=containerId.getApplicationAttemptId().getApplicationId();
  MasterKeyData masterKeyToUse=null;
  if (this.previousMasterKey != null && keyId == this.previousMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=this.previousMasterKey;
  }
 else   if (keyId == super.currentMasterKey.getMasterKey().getKeyId()) {
    masterKeyToUse=super.currentMasterKey;
  }
 else   if (this.oldMasterKeys.containsKey(appId) && this.oldMasterKeys.get(appId).containsKey(containerId)) {
    masterKeyToUse=this.oldMasterKeys.get(appId).get(containerId);
  }
  if (masterKeyToUse != null) {
    return retrievePasswordInternal(identifier,masterKeyToUse);
  }
  throw new SecretManager.InvalidToken("Given Container " + identifier.getContainerID().toString() + " seems to have an illegally generated token.");
}
