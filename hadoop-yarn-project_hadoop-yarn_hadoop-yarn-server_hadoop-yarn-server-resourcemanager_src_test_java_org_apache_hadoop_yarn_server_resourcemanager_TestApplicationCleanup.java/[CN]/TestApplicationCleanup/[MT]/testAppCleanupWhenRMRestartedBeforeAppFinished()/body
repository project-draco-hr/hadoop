{
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,1);
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  MockRM rm1=new MockRM(conf,memStore);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",1024,rm1.getResourceTrackerService());
  nm1.registerNode();
  MockNM nm2=new MockNM("127.0.0.1:5678",1024,rm1.getResourceTrackerService());
  nm2.registerNode();
  RMApp app0=rm1.submitApp(200);
  MockAM am0=launchAM(app0,rm1,nm1);
  AllocateResponse allocResponse=am0.allocate(Arrays.asList(ResourceRequest.newInstance(Priority.newInstance(1),"*",Resource.newInstance(1024,0),1)),null);
  while (null == allocResponse.getAllocatedContainers() || allocResponse.getAllocatedContainers().isEmpty()) {
    nm2.nodeHeartbeat(true);
    allocResponse=am0.allocate(null,null);
    Thread.sleep(1000);
  }
  MockRM rm2=new MockRM(conf,memStore);
  rm2.start();
  nm1.setResourceTrackerService(rm2.getResourceTrackerService());
  nm1.registerNode(Arrays.asList(NMContainerStatus.newInstance(ContainerId.newInstance(am0.getApplicationAttemptId(),1),ContainerState.COMPLETE,Resource.newInstance(1024,1),"",0)),Arrays.asList(app0.getApplicationId()));
  nm2.setResourceTrackerService(rm2.getResourceTrackerService());
  nm2.registerNode(Arrays.asList(app0.getApplicationId()));
  rm2.waitForState(app0.getApplicationId(),RMAppState.FAILED);
  waitForAppCleanupMessageRecved(nm1,app0.getApplicationId());
  waitForAppCleanupMessageRecved(nm2,app0.getApplicationId());
  rm1.stop();
  rm2.stop();
}
