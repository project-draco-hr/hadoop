{
  FileSystem localFs=FileSystem.getLocal(fConf);
  getLocalizer().initializeAttemptDirs(task.getUser(),task.getJobID().toString(),task.getTaskID().toString(),task.isTaskCleanupTask());
  Path cwd=lDirAlloc.getLocalPathForWrite(getTaskWorkDir(task.getUser(),task.getJobID().toString(),task.getTaskID().toString(),task.isTaskCleanupTask()),defaultJobConf);
  if (!localFs.mkdirs(cwd)) {
    throw new IOException("Mkdirs failed to create " + cwd.toString());
  }
  localJobConf.set(LOCAL_DIR,fConf.get(LOCAL_DIR));
  if (fConf.get(TT_HOST_NAME) != null) {
    localJobConf.set(TT_HOST_NAME,fConf.get(TT_HOST_NAME));
  }
  keepFailedTaskFiles=localJobConf.getKeepFailedTaskFiles();
  task.localizeConfiguration(localJobConf);
  List<String[]> staticResolutions=NetUtils.getAllStaticResolutions();
  if (staticResolutions != null && staticResolutions.size() > 0) {
    StringBuffer str=new StringBuffer();
    for (int i=0; i < staticResolutions.size(); i++) {
      String[] hostToResolved=staticResolutions.get(i);
      str.append(hostToResolved[0] + "=" + hostToResolved[1]);
      if (i != staticResolutions.size() - 1) {
        str.append(',');
      }
    }
    localJobConf.set(TT_STATIC_RESOLUTIONS,str.toString());
  }
  if (task.isMapTask()) {
    debugCommand=localJobConf.getMapDebugScript();
  }
 else {
    debugCommand=localJobConf.getReduceDebugScript();
  }
  String keepPattern=localJobConf.getKeepTaskFilesPattern();
  if (keepPattern != null) {
    alwaysKeepTaskFiles=Pattern.matches(keepPattern,task.getTaskID().toString());
  }
 else {
    alwaysKeepTaskFiles=false;
  }
  if (debugCommand != null || localJobConf.getProfileEnabled() || alwaysKeepTaskFiles || keepFailedTaskFiles) {
    localJobConf.setNumTasksToExecutePerJvm(1);
  }
  task.setConf(localJobConf);
}
