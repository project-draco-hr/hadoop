{
  Credentials credentials=new Credentials();
  Text service1=new Text("singleTokenFs1");
  Text service2=new Text("singleTokenFs2");
  Text service4=new Text("singleTokenFs4");
  Text multiService=new Text("multiTokenFs");
  Token<?> token2=mock(Token.class);
  credentials.addToken(service2,token2);
  MockFileSystem fs1=createFileSystemForServiceName(service1);
  MockFileSystem fs1B=createFileSystemForServiceName(service1);
  MockFileSystem fs2=createFileSystemForServiceName(service2);
  MockFileSystem fs3=createFileSystemForServiceName(null);
  MockFileSystem fs4=createFileSystemForServiceName(service4);
  MockFileSystem multiFs=createFileSystemForServiceName(multiService,fs1,fs1B,fs2,fs2,new FilterFileSystem(fs3),new FilterFileSystem(new FilterFileSystem(fs4)));
  MockFileSystem superMultiFs=createFileSystemForServiceName(null,fs1,fs1B,fs1,new FilterFileSystem(fs3),new FilterFileSystem(multiFs));
  superMultiFs.addDelegationTokens(renewer,credentials);
  verifyTokenFetch(superMultiFs,false);
  verifyTokenFetch(multiFs,true);
  verifyTokenFetch(fs1,true);
  verifyTokenFetch(fs2,false);
  verifyTokenFetch(fs3,false);
  verifyTokenFetch(fs4,true);
  assertEquals(4,credentials.numberOfTokens());
  assertNotNull(credentials.getToken(service1));
  assertNotNull(credentials.getToken(service2));
  assertSame(token2,credentials.getToken(service2));
  assertNotNull(credentials.getToken(multiService));
  assertNotNull(credentials.getToken(service4));
}
