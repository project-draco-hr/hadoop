{
  dispatcher=new DrainDispatcher();
  dispatcher.init(new Configuration());
  localizerBus=mock(EventHandler.class);
  launcherBus=mock(EventHandler.class);
  monitorBus=mock(EventHandler.class);
  auxBus=mock(EventHandler.class);
  appBus=mock(EventHandler.class);
  LogBus=mock(EventHandler.class);
  dispatcher.register(LocalizationEventType.class,localizerBus);
  dispatcher.register(ContainersLauncherEventType.class,launcherBus);
  dispatcher.register(ContainersMonitorEventType.class,monitorBus);
  dispatcher.register(AuxServicesEventType.class,auxBus);
  dispatcher.register(ApplicationEventType.class,appBus);
  dispatcher.register(LogHandlerEventType.class,LogBus);
  ctxt=mock(ContainerLaunchContext.class);
  org.apache.hadoop.yarn.api.records.Container mockContainer=mock(org.apache.hadoop.yarn.api.records.Container.class);
  cId=BuilderUtils.newContainerId(appId,1,timestamp,id);
  when(mockContainer.getId()).thenReturn(cId);
  Resource resource=BuilderUtils.newResource(1024,1);
  when(mockContainer.getResource()).thenReturn(resource);
  String host="127.0.0.1";
  int port=1234;
  long currentTime=System.currentTimeMillis();
  ContainerTokenIdentifier identifier=new ContainerTokenIdentifier(cId,"127.0.0.1",user,resource,currentTime + 10000L,123,currentTime);
  ContainerToken token=BuilderUtils.newContainerToken(BuilderUtils.newNodeId(host,port),"password".getBytes(),identifier);
  when(mockContainer.getContainerToken()).thenReturn(token);
  if (withLocalRes) {
    Random r=new Random();
    long seed=r.nextLong();
    r.setSeed(seed);
    System.out.println("WrappedContainerLocalResource seed: " + seed);
    localResources=createLocalResources(r);
  }
 else {
    localResources=Collections.<String,LocalResource>emptyMap();
  }
  when(ctxt.getLocalResources()).thenReturn(localResources);
  if (withServiceData) {
    Random r=new Random();
    long seed=r.nextLong();
    r.setSeed(seed);
    System.out.println("ServiceData seed: " + seed);
    serviceData=createServiceData(r);
  }
 else {
    serviceData=Collections.<String,ByteBuffer>emptyMap();
  }
  when(ctxt.getServiceData()).thenReturn(serviceData);
  c=newContainer(dispatcher,ctxt,mockContainer,identifier);
  dispatcher.start();
}
