{
  PermissionStatus p=new PermissionStatus("joeDoe","people",new FsPermission((short)0777));
  INodeDirectory dirInode=new INodeDirectory(p,0L);
  editLog.logMkDir(BASE_PATH,dirInode);
  long blockSize=10;
  BlockInfo[] blocks=new BlockInfo[blocksPerFile];
  for (int iB=0; iB < blocksPerFile; ++iB) {
    blocks[iB]=new BlockInfo(new Block(0,blockSize,BLOCK_GENERATION_STAMP),replication);
  }
  long currentBlockId=startingBlockId;
  long bidAtSync=startingBlockId;
  for (int iF=0; iF < numFiles; iF++) {
    for (int iB=0; iB < blocksPerFile; ++iB) {
      blocks[iB].setBlockId(currentBlockId++);
    }
    INodeFileUnderConstruction inode=new INodeFileUnderConstruction(null,replication,0,blockSize,blocks,p,"","",null);
    String path="_" + iF + "_B"+ blocks[0].getBlockId()+ "_to_B"+ blocks[blocksPerFile - 1].getBlockId()+ "_";
    String filePath=nameGenerator.getNextFileName("");
    filePath=filePath + path;
    if ((iF % nameGenerator.getFilesPerDirectory()) == 0) {
      String currentDir=nameGenerator.getCurrentDir();
      dirInode=new INodeDirectory(p,0L);
      editLog.logMkDir(currentDir,dirInode);
    }
    editLog.logOpenFile(filePath,new INodeFileUnderConstruction(p,replication,0,blockSize,"","",null));
    editLog.logCloseFile(filePath,inode);
    if (currentBlockId - bidAtSync >= 2000) {
      editLog.logSync();
      bidAtSync=currentBlockId;
    }
  }
  System.out.println("Created edits log in directory " + edits_dir);
  System.out.println(" containing " + numFiles + " File-Creates, each file with "+ blocksPerFile+ " blocks");
  System.out.println(" blocks range: " + startingBlockId + " to "+ (currentBlockId - 1));
}
