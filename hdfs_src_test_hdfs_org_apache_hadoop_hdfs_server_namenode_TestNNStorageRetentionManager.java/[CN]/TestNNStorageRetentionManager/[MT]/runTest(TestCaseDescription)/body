{
  Configuration conf=new Configuration();
  StoragePurger mockPurger=Mockito.mock(NNStorageRetentionManager.StoragePurger.class);
  ArgumentCaptor<FoundFSImage> imagesPurgedCaptor=ArgumentCaptor.forClass(FoundFSImage.class);
  ArgumentCaptor<FoundEditLog> logsPurgedCaptor=ArgumentCaptor.forClass(FoundEditLog.class);
  new NNStorageRetentionManager(conf,tc.mockStorage(),tc.mockEditLog(),mockPurger).purgeOldStorage();
  Mockito.verify(mockPurger,Mockito.atLeast(0)).purgeImage(imagesPurgedCaptor.capture());
  Mockito.verify(mockPurger,Mockito.atLeast(0)).purgeLog(logsPurgedCaptor.capture());
  Set<String> purgedPaths=Sets.newHashSet();
  for (  FoundFSImage purged : imagesPurgedCaptor.getAllValues()) {
    purgedPaths.add(purged.getFile().toString());
  }
  Assert.assertEquals(Joiner.on(",").join(tc.expectedPurgedImages),Joiner.on(",").join(purgedPaths));
  purgedPaths.clear();
  for (  FoundEditLog purged : logsPurgedCaptor.getAllValues()) {
    purgedPaths.add(purged.getFile().toString());
  }
  Assert.assertEquals(Joiner.on(",").join(tc.expectedPurgedLogs),Joiner.on(",").join(purgedPaths));
}
