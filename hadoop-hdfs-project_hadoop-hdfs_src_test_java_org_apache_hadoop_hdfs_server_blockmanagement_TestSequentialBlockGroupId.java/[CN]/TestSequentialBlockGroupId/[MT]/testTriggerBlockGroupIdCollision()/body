{
  long blockGroupIdInitialValue=blockGrpIdGenerator.getCurrentValue();
  Path path1=new Path(eczone,"testBlockGrpIdCollisionDetection_file1.dat");
  DFSTestUtil.createFile(fs,path1,cellSize,fileLen,blockSize,REPLICATION,SEED);
  List<LocatedBlock> blocks1=DFSTestUtil.getAllBlocks(fs,path1);
  assertThat("Wrong BlockGrps",blocks1.size(),is(blockGrpCount));
  blockGrpIdGenerator.setCurrentValue(blockGroupIdInitialValue);
  Path path2=new Path(eczone,"testBlockGrpIdCollisionDetection_file2.dat");
  DFSTestUtil.createFile(fs,path2,cellSize,fileLen,blockSize,REPLICATION,SEED);
  List<LocatedBlock> blocks2=DFSTestUtil.getAllBlocks(fs,path2);
  assertThat("Wrong BlockGrps",blocks2.size(),is(blockGrpCount));
  for (  LocatedBlock locBlock1 : blocks1) {
    long blockId1=locBlock1.getBlock().getBlockId();
    for (    LocatedBlock locBlock2 : blocks2) {
      long blockId2=locBlock2.getBlock().getBlockId();
      assertThat("BlockGrpId mismatches!",blockId1,is(not(blockId2)));
    }
  }
}
