{
  String result=readOutput(new URL(baseUrl,"/jmx?qry=java.lang:type=Runtime"));
  assertReFind("\"name\"\\s*:\\s*\"java.lang:type=Runtime\"",result);
  assertReFind("\"modelerType\"",result);
  result=readOutput(new URL(baseUrl,"/jmx?qry=java.lang:type=Memory"));
  assertReFind("\"name\"\\s*:\\s*\"java.lang:type=Memory\"",result);
  assertReFind("\"modelerType\"",result);
  result=readOutput(new URL(baseUrl,"/jmx"));
  assertReFind("\"name\"\\s*:\\s*\"java.lang:type=Memory\"",result);
  result=readOutput(new URL(baseUrl,"/jmx?get=java.lang:type=Memory::HeapMemoryUsage"));
  assertReFind("\"name\"\\s*:\\s*\"java.lang:type=Memory\"",result);
  assertReFind("\"committed\"\\s*:",result);
  result=readOutput(new URL(baseUrl,"/jmx?get=java.lang:type=Memory::"));
  assertReFind("\"ERROR\"",result);
  HttpURLConnection conn=(HttpURLConnection)new URL(baseUrl,"/jmx?qry=java.lang:type=Memory").openConnection();
  assertEquals("GET",conn.getHeaderField(ACCESS_CONTROL_ALLOW_METHODS));
  assertNotNull(conn.getHeaderField(ACCESS_CONTROL_ALLOW_ORIGIN));
}
