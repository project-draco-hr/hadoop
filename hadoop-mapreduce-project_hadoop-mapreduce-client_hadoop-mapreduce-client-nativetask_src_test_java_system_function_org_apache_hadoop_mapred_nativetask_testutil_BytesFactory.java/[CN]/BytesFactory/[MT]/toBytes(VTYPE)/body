{
  final String className=obj.getClass().getName();
  if (className.equals(IntWritable.class.getName())) {
    return BytesUtil.toBytes(((IntWritable)obj).get());
  }
 else   if (className.equals(FloatWritable.class.getName())) {
    return BytesUtil.toBytes(((FloatWritable)obj).get());
  }
 else   if (className.equals(DoubleWritable.class.getName())) {
    return BytesUtil.toBytes(((DoubleWritable)obj).get());
  }
 else   if (className.equals(LongWritable.class.getName())) {
    return BytesUtil.toBytes(((LongWritable)obj).get());
  }
 else   if (className.equals(VIntWritable.class.getName())) {
    return BytesUtil.toBytes(((VIntWritable)obj).get());
  }
 else   if (className.equals(VLongWritable.class.getName())) {
    return BytesUtil.toBytes(((VLongWritable)obj).get());
  }
 else   if (className.equals(BooleanWritable.class.getName())) {
    return BytesUtil.toBytes(((BooleanWritable)obj).get());
  }
 else   if (className.equals(Text.class.getName())) {
    return BytesUtil.toBytes(((Text)obj).toString());
  }
 else   if (className.equals(ByteWritable.class.getName())) {
    return BytesUtil.toBytes(((ByteWritable)obj).get());
  }
 else   if (className.equals(BytesWritable.class.getName())) {
    return ((BytesWritable)obj).getBytes();
  }
 else {
    return new byte[0];
  }
}
