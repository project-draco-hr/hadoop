{
  if (rmContext.isHAEnabled()) {
    curatorEnabled=conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);
    autoFailoverEnabled=HAUtil.isAutomaticFailoverEnabled(conf);
    if (autoFailoverEnabled && !curatorEnabled) {
      if (HAUtil.isAutomaticFailoverEmbedded(conf)) {
        embeddedElector=createEmbeddedElectorService();
        addIfService(embeddedElector);
      }
    }
  }
  masterServiceBindAddress=conf.getSocketAddr(YarnConfiguration.RM_BIND_HOST,YarnConfiguration.RM_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_ADMIN_PORT);
  daemonUser=UserGroupInformation.getCurrentUser();
  authorizer=YarnAuthorizationProvider.getInstance(conf);
  authorizer.setAdmins(getAdminAclList(conf),UserGroupInformation.getCurrentUser());
  rmId=conf.get(YarnConfiguration.RM_HA_ID);
  isCentralizedNodeLabelConfiguration=YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);
  super.serviceInit(conf);
}
