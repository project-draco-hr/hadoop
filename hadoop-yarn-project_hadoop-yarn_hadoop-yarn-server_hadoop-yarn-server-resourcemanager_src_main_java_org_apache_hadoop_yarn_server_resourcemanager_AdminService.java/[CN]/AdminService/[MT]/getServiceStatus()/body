{
  checkAccess("getServiceState");
  if (curatorEnabled) {
    HAServiceStatus state;
    if (rmContext.getLeaderElectorService().hasLeaderShip()) {
      state=new HAServiceStatus(HAServiceState.ACTIVE);
    }
 else {
      state=new HAServiceStatus(HAServiceState.STANDBY);
    }
    state.setNotReadyToBecomeActive("");
    return state;
  }
 else {
    HAServiceState haState=rmContext.getHAServiceState();
    HAServiceStatus ret=new HAServiceStatus(haState);
    if (isRMActive() || haState == HAServiceProtocol.HAServiceState.STANDBY) {
      ret.setReadyToBecomeActive();
    }
 else {
      ret.setNotReadyToBecomeActive("State is " + haState);
    }
    return ret;
  }
}
