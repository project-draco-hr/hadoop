{
  String argName="refreshNodesResources";
  UserGroupInformation user=checkAcls(argName);
  final String msg="refresh nodes.";
  checkRMStatus(user.getShortUserName(),argName,msg);
  RefreshNodesResourcesResponse response=recordFactory.newRecordInstance(RefreshNodesResourcesResponse.class);
  try {
    Configuration conf=getConfig();
    Configuration configuration=new Configuration(conf);
    DynamicResourceConfiguration newConf;
    InputStream drInputStream=this.rmContext.getConfigurationProvider().getConfigurationInputStream(configuration,YarnConfiguration.DR_CONFIGURATION_FILE);
    if (drInputStream != null) {
      newConf=new DynamicResourceConfiguration(configuration,drInputStream);
    }
 else {
      newConf=new DynamicResourceConfiguration(configuration);
    }
    if (newConf.getNodes() != null && newConf.getNodes().length != 0) {
      Map<NodeId,ResourceOption> nodeResourceMap=newConf.getNodeResourceMap();
      UpdateNodeResourceRequest updateRequest=UpdateNodeResourceRequest.newInstance(nodeResourceMap);
      updateNodeResource(updateRequest);
    }
    this.rmContext.getResourceTrackerService().updateDynamicResourceConfiguration(newConf);
    RMAuditLogger.logSuccess(user.getShortUserName(),argName,"AdminService");
    return response;
  }
 catch (  IOException ioe) {
    throw logAndWrapException(ioe,user.getShortUserName(),argName,msg);
  }
}
