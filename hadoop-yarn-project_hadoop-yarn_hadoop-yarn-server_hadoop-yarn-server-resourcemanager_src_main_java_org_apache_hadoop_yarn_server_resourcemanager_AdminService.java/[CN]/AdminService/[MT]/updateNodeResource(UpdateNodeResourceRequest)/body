{
  final String operation="updateNodeResource";
  UserGroupInformation user=checkAcls(operation);
  checkRMStatus(user.getShortUserName(),operation,"update node resource.");
  Map<NodeId,ResourceOption> nodeResourceMap=request.getNodeResourceMap();
  Set<NodeId> nodeIds=nodeResourceMap.keySet();
  for (  NodeId nodeId : nodeIds) {
    RMNode node=this.rmContext.getRMNodes().get(nodeId);
    if (node == null) {
      LOG.error("Resource update get failed on all nodes due to change " + "resource on an unrecognized node: " + nodeId);
      throw RPCUtil.getRemoteException("Resource update get failed on all nodes due to change resource " + "on an unrecognized node: " + nodeId);
    }
  }
  boolean allSuccess=true;
  for (  Map.Entry<NodeId,ResourceOption> entry : nodeResourceMap.entrySet()) {
    ResourceOption newResourceOption=entry.getValue();
    NodeId nodeId=entry.getKey();
    RMNode node=this.rmContext.getRMNodes().get(nodeId);
    if (node == null) {
      LOG.warn("Resource update get failed on an unrecognized node: " + nodeId);
      allSuccess=false;
    }
 else {
      this.rmContext.getDispatcher().getEventHandler().handle(new RMNodeResourceUpdateEvent(nodeId,newResourceOption));
      LOG.info("Update resource on node(" + node.getNodeID() + ") with resource("+ newResourceOption.toString()+ ")");
    }
  }
  if (allSuccess) {
    RMAuditLogger.logSuccess(user.getShortUserName(),operation,"AdminService");
  }
  UpdateNodeResourceResponse response=UpdateNodeResourceResponse.newInstance();
  return response;
}
