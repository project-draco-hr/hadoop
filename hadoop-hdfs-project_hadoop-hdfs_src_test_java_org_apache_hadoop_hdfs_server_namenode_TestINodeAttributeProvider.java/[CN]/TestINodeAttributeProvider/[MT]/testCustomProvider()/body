{
  FileSystem fs=FileSystem.get(miniDFS.getConfiguration(0));
  fs.mkdirs(new Path("/user/xxx"));
  FileStatus status=fs.getFileStatus(new Path("/user/xxx"));
  Assert.assertEquals(System.getProperty("user.name"),status.getOwner());
  Assert.assertEquals("supergroup",status.getGroup());
  Assert.assertEquals(new FsPermission((short)0755),status.getPermission());
  fs.mkdirs(new Path("/user/authz"));
  Path p=new Path("/user/authz");
  status=fs.getFileStatus(p);
  Assert.assertEquals("foo",status.getOwner());
  Assert.assertEquals("bar",status.getGroup());
  Assert.assertEquals(new FsPermission((short)0770),status.getPermission());
  AclStatus aclStatus=fs.getAclStatus(p);
  Assert.assertEquals(1,aclStatus.getEntries().size());
  Assert.assertEquals(AclEntryType.GROUP,aclStatus.getEntries().get(0).getType());
  Assert.assertEquals("xxx",aclStatus.getEntries().get(0).getName());
  Assert.assertEquals(FsAction.ALL,aclStatus.getEntries().get(0).getPermission());
  Map<String,byte[]> xAttrs=fs.getXAttrs(p);
  Assert.assertTrue(xAttrs.containsKey("user.test"));
  Assert.assertEquals(2,xAttrs.get("user.test").length);
}
