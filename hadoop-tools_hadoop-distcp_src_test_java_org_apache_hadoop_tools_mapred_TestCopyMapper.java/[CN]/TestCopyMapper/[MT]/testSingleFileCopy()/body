{
  try {
    deleteState();
    touchFile(SOURCE_PATH + "/1");
    Path sourceFilePath=pathList.get(0);
    Path targetFilePath=new Path(sourceFilePath.toString().replaceAll(SOURCE_PATH,TARGET_PATH));
    touchFile(targetFilePath.toString());
    FileSystem fs=cluster.getFileSystem();
    CopyMapper copyMapper=new CopyMapper();
    StubContext stubContext=new StubContext(getConfiguration(),null,0);
    Mapper<Text,CopyListingFileStatus,Text,Text>.Context context=stubContext.getContext();
    context.getConfiguration().set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH,targetFilePath.getParent().toString());
    copyMapper.setup(context);
    final CopyListingFileStatus sourceFileStatus=new CopyListingFileStatus(fs.getFileStatus(sourceFilePath));
    long before=fs.getFileStatus(targetFilePath).getModificationTime();
    copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH),sourceFilePath)),sourceFileStatus,context);
    long after=fs.getFileStatus(targetFilePath).getModificationTime();
    Assert.assertTrue("File should have been skipped",before == after);
    context.getConfiguration().set(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH,targetFilePath.toString());
    copyMapper.setup(context);
    before=fs.getFileStatus(targetFilePath).getModificationTime();
    try {
      Thread.sleep(2);
    }
 catch (    Throwable ignore) {
    }
    copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH),sourceFilePath)),sourceFileStatus,context);
    after=fs.getFileStatus(targetFilePath).getModificationTime();
    Assert.assertTrue("File should have been overwritten.",before < after);
  }
 catch (  Exception exception) {
    Assert.fail("Unexpected exception: " + exception.getMessage());
    exception.printStackTrace();
  }
}
