{
  try {
    deleteState();
    createSourceData();
    FileSystem fs=cluster.getFileSystem();
    CopyMapper copyMapper=new CopyMapper();
    StubContext stubContext=new StubContext(getConfiguration(),null,0);
    Mapper<Text,CopyListingFileStatus,Text,Text>.Context context=stubContext.getContext();
    Configuration configuration=context.getConfiguration();
    configuration.setBoolean(DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(),ignoreFailures);
    configuration.setBoolean(DistCpOptionSwitch.OVERWRITE.getConfigLabel(),true);
    configuration.setBoolean(DistCpOptionSwitch.SKIP_CRC.getConfigLabel(),true);
    copyMapper.setup(context);
    for (    Path path : pathList) {
      final FileStatus fileStatus=fs.getFileStatus(path);
      if (!fileStatus.isDirectory()) {
        fs.delete(path,true);
        copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH),path)),new CopyListingFileStatus(fileStatus),context);
      }
    }
    if (ignoreFailures) {
      for (      Text value : stubContext.getWriter().values()) {
        Assert.assertTrue(value.toString() + " is not skipped",value.toString().startsWith("FAIL:"));
      }
    }
    Assert.assertTrue("There should have been an exception.",ignoreFailures);
  }
 catch (  Exception e) {
    Assert.assertTrue("Unexpected exception: " + e.getMessage(),!ignoreFailures);
    e.printStackTrace();
  }
}
