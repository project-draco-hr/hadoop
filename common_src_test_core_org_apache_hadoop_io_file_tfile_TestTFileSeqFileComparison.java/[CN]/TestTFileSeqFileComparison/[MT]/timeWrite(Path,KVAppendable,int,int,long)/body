{
  int maxKlen=baseKlen * 2;
  int maxVlen=baseVlen * 2;
  BytesWritable key=new BytesWritable();
  BytesWritable value=new BytesWritable();
  byte[] keyBuffer=new byte[maxKlen];
  byte[] valueBuffer=new byte[maxVlen];
  Random rng=new Random(options.seed);
  long totalBytes=0;
  printlnWithTimestamp("Start writing: " + path.getName() + "...");
  startTime();
  for (long i=0; true; ++i) {
    if (i % 1000 == 0) {
      if (fs.getFileStatus(path).getLen() >= fileSize) {
        break;
      }
    }
    int klen=rng.nextInt(baseKlen) + baseKlen;
    int vlen=rng.nextInt(baseVlen) + baseVlen;
    fillBuffer(rng,key,keyBuffer,klen);
    fillBuffer(rng,value,valueBuffer,vlen);
    key.set(keyBuffer,0,klen);
    value.set(valueBuffer,0,vlen);
    appendable.append(key,value);
    totalBytes+=klen;
    totalBytes+=vlen;
  }
  stopTime();
  appendable.close();
  reportStats(path,totalBytes);
}
