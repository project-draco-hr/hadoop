{
  if (line.hasOption('h')) {
    HelpFormatter formatter=new HelpFormatter();
    System.out.println("TFile and SeqFile benchmark.");
    System.out.println();
    formatter.printHelp(100,"java ... TestTFileSeqFileComparison [options]","\nSupported options:",opts,"");
    return;
  }
  if (line.hasOption('c')) {
    compress=line.getOptionValue('c');
  }
  if (line.hasOption('d')) {
    dictSize=Integer.parseInt(line.getOptionValue('d'));
  }
  if (line.hasOption('s')) {
    fileSize=Long.parseLong(line.getOptionValue('s')) * 1024 * 1024;
  }
  if (line.hasOption('f')) {
    format=line.getOptionValue('f');
  }
  if (line.hasOption('i')) {
    fsInputBufferSize=Integer.parseInt(line.getOptionValue('i'));
  }
  if (line.hasOption('o')) {
    fsOutputBufferSize=Integer.parseInt(line.getOptionValue('o'));
  }
  if (line.hasOption('k')) {
    keyLength=Integer.parseInt(line.getOptionValue('k'));
  }
  if (line.hasOption('v')) {
    valueLength=Integer.parseInt(line.getOptionValue('v'));
  }
  if (line.hasOption('b')) {
    minBlockSize=Integer.parseInt(line.getOptionValue('b')) * 1024;
  }
  if (line.hasOption('r')) {
    rootDir=line.getOptionValue('r');
  }
  if (line.hasOption('S')) {
    seed=Long.parseLong(line.getOptionValue('S'));
  }
  if (line.hasOption('w')) {
    String min_max=line.getOptionValue('w');
    StringTokenizer st=new StringTokenizer(min_max," \t,");
    if (st.countTokens() != 2) {
      throw new ParseException("Bad word length specification: " + min_max);
    }
    minWordLen=Integer.parseInt(st.nextToken());
    maxWordLen=Integer.parseInt(st.nextToken());
  }
  if (line.hasOption('x')) {
    String strOp=line.getOptionValue('x');
    if (strOp.equals("r")) {
      op=OP_READ;
    }
 else     if (strOp.equals("w")) {
      op=OP_CREATE;
    }
 else     if (strOp.equals("rw")) {
      op=OP_CREATE | OP_READ;
    }
 else {
      throw new ParseException("Unknown action specifier: " + strOp);
    }
  }
  proceed=true;
}
