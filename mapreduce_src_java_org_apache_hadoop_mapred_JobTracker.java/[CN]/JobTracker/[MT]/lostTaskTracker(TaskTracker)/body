{
  String trackerName=taskTracker.getTrackerName();
  LOG.info("Lost tracker '" + trackerName + "'");
synchronized (trackerToJobsToCleanup) {
    trackerToJobsToCleanup.remove(trackerName);
  }
synchronized (trackerToTasksToCleanup) {
    trackerToTasksToCleanup.remove(trackerName);
  }
  Set<TaskAttemptID> lostTasks=trackerToTaskMap.get(trackerName);
  trackerToTaskMap.remove(trackerName);
  if (lostTasks != null) {
    Set<JobInProgress> jobsWithFailures=new HashSet<JobInProgress>();
    for (    TaskAttemptID taskId : lostTasks) {
      TaskInProgress tip=taskidToTIPMap.get(taskId);
      JobInProgress job=tip.getJob();
      if (!tip.isComplete() || (tip.isMapTask() && !tip.isJobSetupTask() && job.desiredReduces() != 0)) {
        if (job.getStatus().getRunState() == JobStatus.RUNNING || job.getStatus().getRunState() == JobStatus.PREP) {
          TaskStatus.State killState=(tip.isRunningTask(taskId) && !tip.isJobSetupTask() && !tip.isJobCleanupTask()) ? TaskStatus.State.KILLED_UNCLEAN : TaskStatus.State.KILLED;
          job.failedTask(tip,taskId,("Lost task tracker: " + trackerName),(tip.isMapTask() ? TaskStatus.Phase.MAP : TaskStatus.Phase.REDUCE),killState,trackerName);
          jobsWithFailures.add(job);
        }
      }
 else {
        markCompletedTaskAttempt(trackerName,taskId);
      }
    }
    for (    JobInProgress job : jobsWithFailures) {
      job.addTrackerTaskFailure(trackerName,taskTracker);
    }
    taskTracker.cancelAllReservations();
    removeMarkedTasks(trackerName);
  }
}
