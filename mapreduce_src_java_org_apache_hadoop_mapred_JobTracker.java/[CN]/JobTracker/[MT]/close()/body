{
  if (plugins != null) {
    for (    ServicePlugin p : plugins) {
      try {
        p.stop();
        LOG.info("Stopped plug-in " + p + " of type "+ p.getClass());
      }
 catch (      Throwable t) {
        LOG.warn("ServicePlugin " + p + " of type "+ p.getClass()+ " could not be stopped",t);
      }
    }
  }
  if (this.infoServer != null) {
    LOG.info("Stopping infoServer");
    try {
      this.infoServer.stop();
    }
 catch (    Exception ex) {
      LOG.warn("Exception shutting down JobTracker",ex);
    }
  }
  if (this.interTrackerServer != null) {
    LOG.info("Stopping interTrackerServer");
    this.interTrackerServer.stop();
  }
  stopExpireTrackersThread();
  if (taskScheduler != null) {
    taskScheduler.terminate();
  }
  if (this.expireLaunchingTaskThread != null && this.expireLaunchingTaskThread.isAlive()) {
    LOG.info("Stopping expireLaunchingTasks");
    this.expireLaunchingTaskThread.interrupt();
    try {
      this.expireLaunchingTaskThread.join();
    }
 catch (    InterruptedException ex) {
      ex.printStackTrace();
    }
  }
  if (this.completedJobsStoreThread != null && this.completedJobsStoreThread.isAlive()) {
    LOG.info("Stopping completedJobsStore thread");
    this.completedJobsStoreThread.interrupt();
    try {
      this.completedJobsStoreThread.join();
    }
 catch (    InterruptedException ex) {
      ex.printStackTrace();
    }
  }
  if (jobHistory != null) {
    jobHistory.shutDown();
  }
  DelegationTokenRenewal.close();
  LOG.info("stopped all jobtracker services");
  return;
}
