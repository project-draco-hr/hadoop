{
synchronized (this) {
    if (state != State.INIT) {
      LOG.info("Service cannot be started in state - " + state);
      return;
    }
    state=State.STARTING_UP;
  }
  if (internalRpcServer) {
    LOG.info("Starting rpc server");
    rpcServer.start();
  }
  boolean registered=false;
  boolean handshakeComplete=false;
  boolean rollEdits=false;
  while (state == State.STARTING_UP) {
    try {
      if (!handshakeComplete) {
        handshake();
        handshakeComplete=true;
        LOG.info("handshake completed");
      }
      if (!registered) {
        registerWithNamenode();
        registered=true;
        LOG.info("Registration completed");
      }
      if (!rollEdits) {
        namenode.rollEditLog();
        rollEdits=true;
        LOG.info("Editlog roll completed");
        break;
      }
    }
 catch (    IOException ioe) {
      LOG.warn("Encountered exception ",ioe);
    }
catch (    Exception e) {
      LOG.warn("Encountered exception ",e);
    }
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ie) {
      LOG.warn("Encountered exception ",ie);
    }
  }
synchronized (this) {
    state=State.RUNNING;
  }
}
