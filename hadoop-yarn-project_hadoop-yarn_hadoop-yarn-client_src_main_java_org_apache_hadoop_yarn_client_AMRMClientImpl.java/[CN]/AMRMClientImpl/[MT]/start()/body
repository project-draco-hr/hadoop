{
  final YarnConfiguration conf=new YarnConfiguration(getConfig());
  final YarnRPC rpc=YarnRPC.create(conf);
  final InetSocketAddress rmAddress=conf.getSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);
  UserGroupInformation currentUser;
  try {
    currentUser=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException e) {
    throw new YarnException(e);
  }
  if (UserGroupInformation.isSecurityEnabled()) {
    String tokenURLEncodedStr=System.getenv().get(ApplicationConstants.APPLICATION_MASTER_TOKEN_ENV_NAME);
    Token<? extends TokenIdentifier> token=new Token<TokenIdentifier>();
    try {
      token.decodeFromUrlString(tokenURLEncodedStr);
    }
 catch (    IOException e) {
      throw new YarnException(e);
    }
    SecurityUtil.setTokenService(token,rmAddress);
    if (LOG.isDebugEnabled()) {
      LOG.debug("AppMasterToken is " + token);
    }
    currentUser.addToken(token);
  }
  rmClient=currentUser.doAs(new PrivilegedAction<AMRMProtocol>(){
    @Override public AMRMProtocol run(){
      return (AMRMProtocol)rpc.getProxy(AMRMProtocol.class,rmAddress,conf);
    }
  }
);
  LOG.debug("Connecting to ResourceManager at " + rmAddress);
  super.start();
}
