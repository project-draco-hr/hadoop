{
  Set<String> allRacks=new HashSet<String>();
  if (req.racks != null) {
    allRacks.addAll(req.racks);
    if (req.racks.size() != allRacks.size()) {
      Joiner joiner=Joiner.on(',');
      LOG.warn("ContainerRequest has duplicate racks: " + joiner.join(req.racks));
    }
  }
  allRacks.addAll(resolveRacks(req.nodes));
  if (req.nodes != null) {
    HashSet<String> dedupedNodes=new HashSet<String>(req.nodes);
    if (dedupedNodes.size() != req.nodes.size()) {
      Joiner joiner=Joiner.on(',');
      LOG.warn("ContainerRequest has duplicate nodes: " + joiner.join(req.nodes));
    }
    for (    String node : dedupedNodes) {
      addResourceRequest(req.priority,node,req.capability,req.containerCount,req);
    }
  }
  for (  String rack : allRacks) {
    addResourceRequest(req.priority,rack,req.capability,req.containerCount,req);
  }
  addResourceRequest(req.priority,ResourceRequest.ANY,req.capability,req.containerCount,req);
}
