{
  Timing timing=new Timing();
  ChildReaper reaper=null;
  CuratorFramework client=CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1));
  try {
    client.start();
    Random r=new Random();
    int nonEmptyNodes=0;
    for (int i=0; i < 10; ++i) {
      client.create().creatingParentsIfNeeded().forPath("/test/" + Integer.toString(i));
      if (r.nextBoolean()) {
        client.create().forPath("/test/" + Integer.toString(i) + "/foo");
        ++nonEmptyNodes;
      }
    }
    reaper=new ChildReaper(client,"/test",Reaper.Mode.REAP_UNTIL_DELETE,1);
    reaper.start();
    timing.forWaiting().sleepABit();
    Stat stat=client.checkExists().forPath("/test");
    Assert.assertEquals(stat.getNumChildren(),nonEmptyNodes);
  }
  finally {
    CloseableUtils.closeQuietly(reaper);
    CloseableUtils.closeQuietly(client);
  }
}
