{
  Configuration conf=createJobConf();
  final String input="hello1\n";
  Job job=MapReduceTestUtil.createJob(conf,getInputDir(),getOutputDir(),1,1,input);
  job.setJobName("disable-profile-fetch");
  job.setProfileEnabled(true);
  job.setProfileParams("-agentlib:,verbose=n,file=%s");
  job.setMaxMapAttempts(1);
  job.setMaxReduceAttempts(1);
  job.setJobSetupCleanupNeeded(false);
  job.waitForCompletion(true);
  Job job2=MapReduceTestUtil.createJob(conf,getInputDir(),getOutputDir(),1,1,input);
  job2.setJobName("enable-profile-fetch");
  job2.setProfileEnabled(true);
  job2.setProfileParams("-agentlib:hprof=cpu=samples,heap=sites,force=n," + "thread=y,verbose=n,file=%s");
  job2.setProfileTaskRange(true,"0-1");
  job2.setProfileTaskRange(false,"");
  job2.setMaxMapAttempts(1);
  job2.setMaxReduceAttempts(1);
  job2.setJobSetupCleanupNeeded(false);
  job2.waitForCompletion(true);
  TaskReport[] reports=job2.getTaskReports(TaskType.MAP);
  assertTrue("No task reports found!",reports.length > 0);
  TaskReport report=reports[0];
  TaskID id=report.getTaskId();
  assertTrue(TaskType.MAP == id.getTaskType());
  System.out.println("Using task id: " + id);
  TaskAttemptID attemptId=new TaskAttemptID(id,0);
  File profileOutFile=new File(attemptId.toString() + ".profile");
  assertTrue("Couldn't find profiler output",profileOutFile.exists());
  assertTrue("Couldn't remove profiler output",profileOutFile.delete());
}
