{
  CLI jc=createJobClient();
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  File f=new File("src/test/resources/job_1329348432655_0001-10.jhist");
  FileSystem localFs=FileSystem.getLocal(conf);
  String historyFileUri=new Path(f.getAbsolutePath()).makeQualified(localFs.getUri(),localFs.getWorkingDirectory()).toUri().toString();
  int exitCode=runTool(conf,jc,new String[]{"-history","all",historyFileUri},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryHumanOutput(out);
  File outFile=File.createTempFile("myout",".txt");
  exitCode=runTool(conf,jc,new String[]{"-history","all",historyFileUri,"-outfile",outFile.getAbsolutePath()},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryHumanFileOutput(out,outFile);
  outFile=File.createTempFile("myout",".txt");
  exitCode=runTool(conf,jc,new String[]{"-history","all",historyFileUri,"-outfile",outFile.getAbsolutePath(),"-format","human"},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryHumanFileOutput(out,outFile);
  exitCode=runTool(conf,jc,new String[]{"-history",historyFileUri,"-format","human"},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryHumanOutput(out);
  exitCode=runTool(conf,jc,new String[]{"-history","all",historyFileUri,"-format","json"},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryJSONOutput(out);
  outFile=File.createTempFile("myout",".txt");
  exitCode=runTool(conf,jc,new String[]{"-history","all",historyFileUri,"-outfile",outFile.getAbsolutePath(),"-format","json"},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryJSONFileOutput(out,outFile);
  exitCode=runTool(conf,jc,new String[]{"-history",historyFileUri,"-format","json"},out);
  assertEquals("Exit code",0,exitCode);
  checkHistoryJSONOutput(out);
  exitCode=runTool(conf,jc,new String[]{"-history",historyFileUri,"foo"},out);
  assertEquals("Exit code",-1,exitCode);
  exitCode=runTool(conf,jc,new String[]{"-history",historyFileUri,"-format"},out);
  assertEquals("Exit code",-1,exitCode);
  runTool(conf,jc,new String[]{"-history",historyFileUri,"-outfile"},out);
  assertEquals("Exit code",-1,exitCode);
  try {
    runTool(conf,jc,new String[]{"-history",historyFileUri,"-format","foo"},out);
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
}
