{
  if (!(showLocations || showRacks || showReplicaDetails)) {
    return "";
  }
  final boolean isComplete=storedBlock.isComplete();
  DatanodeStorageInfo[] storages=isComplete ? blockManager.getStorages(storedBlock) : storedBlock.getUnderConstructionFeature().getExpectedStorageLocations();
  StringBuilder sb=new StringBuilder(" [");
  for (int i=0; i < storages.length; i++) {
    DatanodeStorageInfo storage=storages[i];
    DatanodeDescriptor dnDesc=storage.getDatanodeDescriptor();
    if (showRacks) {
      sb.append(NodeBase.getPath(dnDesc));
    }
 else {
      sb.append(new DatanodeInfoWithStorage(dnDesc,storage.getStorageID(),storage.getStorageType()));
    }
    if (showReplicaDetails) {
      Collection<DatanodeDescriptor> corruptReplicas=blockManager.getCorruptReplicas(storedBlock);
      sb.append("(");
      if (dnDesc.isDecommissioned()) {
        sb.append("DECOMMISSIONED)");
      }
 else       if (dnDesc.isDecommissionInProgress()) {
        sb.append("DECOMMISSIONING)");
      }
 else       if (corruptReplicas != null && corruptReplicas.contains(dnDesc)) {
        sb.append("CORRUPT)");
      }
 else       if (blockManager.isExcess(dnDesc,storedBlock)) {
        sb.append("EXCESS)");
      }
 else       if (dnDesc.isStale(this.staleInterval)) {
        sb.append("STALE_NODE)");
      }
 else       if (storage.areBlockContentsStale()) {
        sb.append("STALE_BLOCK_CONTENT)");
      }
 else {
        sb.append("LIVE)");
      }
    }
    if (i < storages.length - 1) {
      sb.append(", ");
    }
  }
  sb.append(']');
  return sb.toString();
}
