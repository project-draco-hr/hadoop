{
  Assert.assertEquals("Mismatch in acceptNewTask",this.acceptNewTasks,otherAcceptNewTasks);
  List<TaskStatus> taskReports=this.status.getTaskReports();
  List<TaskStatus> otherTaskReports=otherStatus.getTaskReports();
  Assert.assertEquals("Mismatch in number of reported tasks",taskReports.size(),otherTaskReports.size());
  for (  TaskStatus report : taskReports) {
    boolean found=false;
    for (    TaskStatus otherReport : otherTaskReports) {
      if (report.getTaskID() == otherReport.getTaskID()) {
        Assert.assertEquals("Map/reduce task mismatch",report.getIsMap(),otherReport.getIsMap());
        Assert.assertEquals("Mismatch in run state",report.getRunState(),otherReport.getRunState());
        Assert.assertEquals("Mismatch in run phase",report.getPhase(),otherReport.getPhase());
        found=true;
        break;
      }
    }
    Assert.assertTrue("Task status report not found, taskID=" + report.getTaskID(),found);
  }
}
