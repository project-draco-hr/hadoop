{
  String dir=TestDirHelper.getTestDir().getAbsolutePath();
  String services=StringUtils.join(",",Arrays.asList(InstrumentationService.class.getName(),SchedulerService.class.getName()));
  Configuration conf=new Configuration(false);
  conf.set("server.services",services);
  Server server=new Server("server",dir,dir,dir,dir,conf);
  server.init();
  Instrumentation instrumentation=server.get(Instrumentation.class);
  final AtomicInteger count=new AtomicInteger();
  Instrumentation.Variable<Long> varToSample=new Instrumentation.Variable<Long>(){
    @Override public Long getValue(){
      return (long)count.incrementAndGet();
    }
  }
;
  instrumentation.addSampler("g","s",10,varToSample);
  sleep(2000);
  int i=count.get();
  Assert.assertTrue(i > 0);
  Map<String,Map<String,?>> snapshot=instrumentation.getSnapshot();
  Map<String,Map<String,Object>> samplers=(Map<String,Map<String,Object>>)snapshot.get("samplers");
  InstrumentationService.Sampler sampler=(InstrumentationService.Sampler)samplers.get("g").get("s");
  Assert.assertTrue(sampler.getRate() > 0);
  server.destroy();
}
