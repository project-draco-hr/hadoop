{
  LOG.info("Creating a HadoopYarnRpc server for protocol " + protocol + " with "+ numHandlers+ " handlers");
  RPC.setProtocolEngine(conf,protocol,AvroSpecificRpcEngine.class);
  final RPC.Server hadoopServer;
  try {
    hadoopServer=RPC.getServer(protocol,instance,addr.getHostName(),addr.getPort(),numHandlers,false,conf,secretManager);
  }
 catch (  IOException e) {
    throw new YarnException(e);
  }
  Server server=new Server(){
    @Override public void close(){
      hadoopServer.stop();
    }
    @Override public int getPort(){
      return hadoopServer.getListenerAddress().getPort();
    }
    @Override public void join() throws InterruptedException {
      hadoopServer.join();
    }
    @Override public void start(){
      hadoopServer.start();
    }
  }
;
  return server;
}
