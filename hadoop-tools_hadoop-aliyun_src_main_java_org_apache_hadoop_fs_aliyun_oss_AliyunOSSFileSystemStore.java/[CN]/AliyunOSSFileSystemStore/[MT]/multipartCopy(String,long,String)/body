{
  long realPartSize=AliyunOSSUtils.calculatePartSize(contentLength,uploadPartSize);
  int partNum=(int)(contentLength / realPartSize);
  if (contentLength % realPartSize != 0) {
    partNum++;
  }
  InitiateMultipartUploadRequest initiateMultipartUploadRequest=new InitiateMultipartUploadRequest(bucketName,dstKey);
  ObjectMetadata meta=new ObjectMetadata();
  if (StringUtils.isNotEmpty(serverSideEncryptionAlgorithm)) {
    meta.setServerSideEncryption(serverSideEncryptionAlgorithm);
  }
  initiateMultipartUploadRequest.setObjectMetadata(meta);
  InitiateMultipartUploadResult initiateMultipartUploadResult=ossClient.initiateMultipartUpload(initiateMultipartUploadRequest);
  String uploadId=initiateMultipartUploadResult.getUploadId();
  List<PartETag> partETags=new ArrayList<PartETag>();
  try {
    for (int i=0; i < partNum; i++) {
      long skipBytes=realPartSize * i;
      long size=(realPartSize < contentLength - skipBytes) ? realPartSize : contentLength - skipBytes;
      UploadPartCopyRequest partCopyRequest=new UploadPartCopyRequest();
      partCopyRequest.setSourceBucketName(bucketName);
      partCopyRequest.setSourceKey(srcKey);
      partCopyRequest.setBucketName(bucketName);
      partCopyRequest.setKey(dstKey);
      partCopyRequest.setUploadId(uploadId);
      partCopyRequest.setPartSize(size);
      partCopyRequest.setBeginIndex(skipBytes);
      partCopyRequest.setPartNumber(i + 1);
      UploadPartCopyResult partCopyResult=ossClient.uploadPartCopy(partCopyRequest);
      statistics.incrementWriteOps(1);
      partETags.add(partCopyResult.getPartETag());
    }
    CompleteMultipartUploadRequest completeMultipartUploadRequest=new CompleteMultipartUploadRequest(bucketName,dstKey,uploadId,partETags);
    CompleteMultipartUploadResult completeMultipartUploadResult=ossClient.completeMultipartUpload(completeMultipartUploadRequest);
    LOG.debug(completeMultipartUploadResult.getETag());
    return true;
  }
 catch (  OSSException|ClientException e) {
    AbortMultipartUploadRequest abortMultipartUploadRequest=new AbortMultipartUploadRequest(bucketName,dstKey,uploadId);
    ossClient.abortMultipartUpload(abortMultipartUploadRequest);
    return false;
  }
}
