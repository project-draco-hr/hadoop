{
  String test="hi";
  final int maxSize=16;
  TaskStatus status=new TaskStatus(null,0,0,null,test,test,null,null,null){
    @Override protected int getMaxStringSize(){
      return maxSize;
    }
    @Override public void addFetchFailedMap(    TaskAttemptID mapTaskId){
    }
    @Override public boolean getIsMap(){
      return false;
    }
  }
;
  assertEquals("Small diagnostic info test failed",status.getDiagnosticInfo(),test);
  assertEquals("Small state string test failed",status.getStateString(),test);
  String newDInfo=test.concat(test);
  status.setDiagnosticInfo(test);
  status.setStateString(newDInfo);
  assertEquals("Small diagnostic info append failed",newDInfo,status.getDiagnosticInfo());
  assertEquals("Small state-string append failed",newDInfo,status.getStateString());
  TaskStatus newStatus=(TaskStatus)status.clone();
  String newSInfo="hi1";
  newStatus.setStateString(newSInfo);
  status.statusUpdate(newStatus);
  newDInfo=newDInfo.concat(newStatus.getDiagnosticInfo());
  assertEquals("Status-update on diagnostic-info failed",newDInfo,status.getDiagnosticInfo());
  assertEquals("Status-update on state-string failed",newSInfo,status.getStateString());
  newSInfo="hi2";
  status.statusUpdate(0,newSInfo,null);
  assertEquals("Status-update on state-string failed",newSInfo,status.getStateString());
  newSInfo="hi3";
  status.statusUpdate(null,0,newSInfo,null,0);
  assertEquals("Status-update on state-string failed",newSInfo,status.getStateString());
  String large="hihihihihihihihihihi";
  status.setDiagnosticInfo(large);
  status.setStateString(large);
  assertEquals("Large diagnostic info append test failed",maxSize,status.getDiagnosticInfo().length());
  assertEquals("Large state-string append test failed",maxSize,status.getStateString().length());
  newStatus.setDiagnosticInfo(large + "0");
  newStatus.setStateString(large + "1");
  status.statusUpdate(newStatus);
  assertEquals("Status-update on diagnostic info failed",maxSize,status.getDiagnosticInfo().length());
  assertEquals("Status-update on state-string failed",maxSize,status.getStateString().length());
  status.statusUpdate(0,large + "2",null);
  assertEquals("Status-update on state-string failed",maxSize,status.getStateString().length());
  status.statusUpdate(null,0,large + "3",null,0);
  assertEquals("Status-update on state-string failed",maxSize,status.getStateString().length());
  status=new TaskStatus(null,0,0,null,large,large,null,null,null){
    @Override protected int getMaxStringSize(){
      return maxSize;
    }
    @Override public void addFetchFailedMap(    TaskAttemptID mapTaskId){
    }
    @Override public boolean getIsMap(){
      return false;
    }
  }
;
  assertEquals("Large diagnostic info test failed",maxSize,status.getDiagnosticInfo().length());
  assertEquals("Large state-string test failed",maxSize,status.getStateString().length());
}
