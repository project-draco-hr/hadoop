{
  bmSafeMode.activate(BLOCK_TOTAL);
  injectBlocksWithFugureGS(40L);
  String tip=bmSafeMode.getSafeModeTip();
  assertTrue(tip.contains(String.format("The reported blocks %d needs additional %d blocks to reach the " + "threshold %.4f of total blocks %d.%n",0,BLOCK_THRESHOLD,THRESHOLD,BLOCK_TOTAL)));
  assertTrue(tip.contains("Name node detected blocks with generation stamps " + "in future. This means that Name node metadata is inconsistent. " + "This can happen if Name node metadata files have been manually "+ "replaced. Exiting safe mode will cause loss of " + 40 + " byte(s). Please restart name node with "+ "right metadata or use \"hdfs dfsadmin -safemode forceExit\" "+ "if you are certain that the NameNode was started with the "+ "correct FsImage and edit logs. If you encountered this during "+ "a rollback, it is safe to exit with -safemode forceExit."));
  assertFalse(tip.contains("Safe mode will be turned off"));
  setBlockSafe(BLOCK_THRESHOLD);
  tip=bmSafeMode.getSafeModeTip();
  assertTrue(tip.contains(String.format("The reported blocks %d has reached the threshold" + " %.4f of total blocks %d. ",getblockSafe(),THRESHOLD,BLOCK_TOTAL)));
  assertTrue(tip.contains("Name node detected blocks with generation stamps " + "in future. This means that Name node metadata is inconsistent. " + "This can happen if Name node metadata files have been manually "+ "replaced. Exiting safe mode will cause loss of " + 40 + " byte(s). Please restart name node with "+ "right metadata or use \"hdfs dfsadmin -safemode forceExit\" "+ "if you are certain that the NameNode was started with the "+ "correct FsImage and edit logs. If you encountered this during "+ "a rollback, it is safe to exit with -safemode forceExit."));
  assertFalse(tip.contains("Safe mode will be turned off"));
}
