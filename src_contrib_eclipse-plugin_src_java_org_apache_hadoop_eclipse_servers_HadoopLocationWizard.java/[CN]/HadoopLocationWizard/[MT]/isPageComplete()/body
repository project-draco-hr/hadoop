{
{
    String locName=location.getConfProp(ConfProp.PI_LOCATION_NAME);
    if ((locName == null) || (locName.length() == 0) || locName.contains("/")) {
      setMessage("Bad location name: " + "the location name should not contain " + "any character prohibited in a file name.",WARNING);
      return false;
    }
  }
{
    String master=location.getConfProp(ConfProp.PI_JOB_TRACKER_HOST);
    if ((master == null) || (master.length() == 0)) {
      setMessage("Bad master host name: " + "the master host name refers to the machine " + "that runs the Job tracker.",WARNING);
      return false;
    }
  }
{
    String jobTracker=location.getConfProp(ConfProp.JOB_TRACKER_URI);
    String[] strs=jobTracker.split(":");
    boolean ok=(strs.length == 2);
    if (ok) {
      try {
        int port=Integer.parseInt(strs[1]);
        ok=(port >= 0) && (port < 65536);
      }
 catch (      NumberFormatException nfe) {
        ok=false;
      }
    }
    if (!ok) {
      setMessage("The job tracker information (" + ConfProp.JOB_TRACKER_URI.name + ") is invalid. "+ "This usually looks like \"host:port\"",WARNING);
      return false;
    }
  }
{
    String fsDefaultURI=location.getConfProp(ConfProp.FS_DEFAULT_URI);
    try {
      URI uri=new URI(fsDefaultURI);
    }
 catch (    URISyntaxException e) {
      setMessage("The default file system URI is invalid. " + "This usually looks like \"hdfs://host:port/\" " + "or \"file:///dir/\"",WARNING);
    }
  }
  setMessage("Define the location of a Hadoop infrastructure " + "for running MapReduce applications.");
  return true;
}
