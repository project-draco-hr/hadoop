{
  try {
    if (retryInfo != null) {
      return processWaitTimeAndRetryInfo();
    }
    final long failoverCount=retryInvocationHandler.getFailoverCount();
    try {
      return invoke();
    }
 catch (    Exception e) {
      if (LOG.isTraceEnabled()) {
        LOG.trace(toString(),e);
      }
      if (Thread.currentThread().isInterrupted()) {
        throw e;
      }
      retryInfo=retryInvocationHandler.handleException(method,callId,retryPolicy,counters,failoverCount,e);
      return processWaitTimeAndRetryInfo();
    }
  }
 catch (  Throwable t) {
    return new CallReturn(t);
  }
}
