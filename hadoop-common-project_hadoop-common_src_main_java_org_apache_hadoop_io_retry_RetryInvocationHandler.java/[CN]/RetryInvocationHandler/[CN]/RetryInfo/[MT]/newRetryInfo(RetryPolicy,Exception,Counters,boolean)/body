{
  long maxRetryDelay=0;
  RetryAction failover=null;
  RetryAction retry=null;
  RetryAction fail=null;
  final Iterable<Exception> exceptions=e instanceof MultiException ? ((MultiException)e).getExceptions().values() : Collections.singletonList(e);
  for (  Exception exception : exceptions) {
    final RetryAction a=policy.shouldRetry(exception,counters.retries,counters.failovers,idempotentOrAtMostOnce);
    if (a.action == RetryAction.RetryDecision.FAIL) {
      fail=a;
    }
 else {
      if (a.action == RetryAction.RetryDecision.FAILOVER_AND_RETRY) {
        failover=a;
      }
 else {
        retry=a;
      }
      if (a.delayMillis > maxRetryDelay) {
        maxRetryDelay=a.delayMillis;
      }
    }
  }
  return new RetryInfo(maxRetryDelay,failover,failover == null && retry == null ? fail : null);
}
