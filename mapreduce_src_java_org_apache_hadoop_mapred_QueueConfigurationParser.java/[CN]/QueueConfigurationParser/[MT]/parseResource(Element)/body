{
  Queue rootNode=null;
  try {
    if (!QUEUES_TAG.equals(queuesNode.getTagName())) {
      LOG.info("Bad conf file: top-level element not <queues>");
      throw new RuntimeException("No queues defined ");
    }
    NamedNodeMap nmp=queuesNode.getAttributes();
    Node acls=nmp.getNamedItem(ACLS_ENABLED_TAG);
    if (acls != null) {
      LOG.warn("Configuring " + ACLS_ENABLED_TAG + " flag in "+ QueueManager.QUEUE_CONF_FILE_NAME+ " is not valid. "+ "This tag is ignored. Configure "+ MRConfig.MR_ACLS_ENABLED+ " in mapred-site.xml. See the "+ " documentation of "+ MRConfig.MR_ACLS_ENABLED+ ", which is used for enabling job level authorization and "+ " queue level authorization.");
    }
    NodeList props=queuesNode.getChildNodes();
    if (props == null || props.getLength() <= 0) {
      LOG.info(" Bad configuration no queues defined ");
      throw new RuntimeException(" No queues defined ");
    }
    for (int i=0; i < props.getLength(); i++) {
      Node propNode=props.item(i);
      if (!(propNode instanceof Element)) {
        continue;
      }
      if (!propNode.getNodeName().equals(QUEUE_TAG)) {
        LOG.info("At root level only \" queue \" tags are allowed ");
        throw new RuntimeException("Malformed xml document no queue defined ");
      }
      Element prop=(Element)propNode;
      Queue q=createHierarchy("",prop);
      if (rootNode == null) {
        rootNode=new Queue();
        rootNode.setName("");
      }
      rootNode.addChild(q);
    }
    return rootNode;
  }
 catch (  DOMException e) {
    LOG.info("Error parsing conf file: " + e);
    throw new RuntimeException(e);
  }
}
