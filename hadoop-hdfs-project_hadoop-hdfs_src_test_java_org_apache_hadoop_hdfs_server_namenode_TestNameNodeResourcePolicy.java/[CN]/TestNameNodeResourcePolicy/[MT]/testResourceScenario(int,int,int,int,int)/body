{
  Collection<CheckableNameNodeResource> resources=new ArrayList<CheckableNameNodeResource>();
  for (int i=0; i < numRedundantResources; i++) {
    CheckableNameNodeResource r=mock(CheckableNameNodeResource.class);
    when(r.isRequired()).thenReturn(false);
    when(r.isResourceAvailable()).thenReturn(i >= numFailedRedundantResources);
    resources.add(r);
  }
  for (int i=0; i < numRequiredResources; i++) {
    CheckableNameNodeResource r=mock(CheckableNameNodeResource.class);
    when(r.isRequired()).thenReturn(true);
    when(r.isResourceAvailable()).thenReturn(i >= numFailedRequiredResources);
    resources.add(r);
  }
  return NameNodeResourcePolicy.areResourcesAvailable(resources,minimumRedundantResources);
}
