{
  Configuration conf=job.getConfiguration();
  short replication=(short)conf.getInt(Job.SUBMIT_REPLICATION,Job.DEFAULT_SUBMIT_REPLICATION);
  if (!(conf.getBoolean(Job.USED_GENERIC_PARSER,false))) {
    LOG.warn("Hadoop command-line option parsing not performed. " + "Implement the Tool interface and execute your application " + "with ToolRunner to remedy this.");
  }
  LOG.debug("default FileSystem: " + jtFs.getUri());
  if (jtFs.exists(submitJobDir)) {
    throw new IOException("Not submitting job. Job directory " + submitJobDir + " already exists!! This is unexpected.Please check what's there in"+ " that directory");
  }
  submitJobDir=jtFs.makeQualified(submitJobDir);
  submitJobDir=new Path(submitJobDir.toUri().getPath());
  FsPermission mapredSysPerms=new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);
  FileSystem.mkdirs(jtFs,submitJobDir,mapredSysPerms);
  uploadFiles(conf,submitJobDir,mapredSysPerms,replication);
  uploadLibJars(conf,submitJobDir,mapredSysPerms,replication);
  uploadArchives(conf,submitJobDir,mapredSysPerms,replication);
  uploadJobJar(job,submitJobDir,replication);
  addLog4jToDistributedCache(job,submitJobDir);
  ClientDistributedCacheManager.determineTimestampsAndCacheVisibilities(conf);
  ClientDistributedCacheManager.getDelegationTokens(conf,job.getCredentials());
}
