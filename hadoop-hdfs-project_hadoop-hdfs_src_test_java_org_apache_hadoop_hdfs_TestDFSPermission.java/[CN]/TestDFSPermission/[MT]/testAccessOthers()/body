{
  FileSystem rootFs=FileSystem.get(conf);
  Path p3=new Path("/p3");
  rootFs.mkdirs(p3);
  rootFs.setPermission(p3,new FsPermission((short)0774));
  fs=USER1.doAs(new PrivilegedExceptionAction<FileSystem>(){
    @Override public FileSystem run() throws Exception {
      return FileSystem.get(conf);
    }
  }
);
  fs.access(p3,FsAction.READ);
  try {
    fs.access(p3,FsAction.READ_WRITE);
    fail("The access call should have failed.");
  }
 catch (  AccessControlException e) {
    assertTrue("Permission denied messages must carry the username",e.getMessage().contains(USER1_NAME));
    assertTrue("Permission denied messages must carry the path parent",e.getMessage().contains(p3.getParent().toUri().getPath()));
  }
}
