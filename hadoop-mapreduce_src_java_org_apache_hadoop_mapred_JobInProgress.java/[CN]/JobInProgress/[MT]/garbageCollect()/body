{
synchronized (this) {
    cancelReservedSlots();
    jobtracker.getInstrumentation().decWaitingMaps(getJobID(),pendingMaps());
    jobtracker.getInstrumentation().decWaitingReduces(getJobID(),pendingReduces());
    jobtracker.storeCompletedJob(this);
    jobtracker.finalizeJob(this);
    try {
      if (localJobFile != null) {
        localFs.delete(localJobFile,true);
        localJobFile=null;
      }
      Path tempDir=jobtracker.getSystemDirectoryForJob(getJobID());
      new CleanupQueue().addToQueue(new PathDeletionContext(jobtracker.getFileSystem(),tempDir.toUri().getPath()));
    }
 catch (    IOException e) {
      LOG.warn("Error cleaning up " + profile.getJobID() + ": "+ e);
    }
    this.nonRunningMapCache=null;
    this.runningMapCache=null;
    this.nonRunningReduces=null;
    this.runningReduces=null;
  }
  if (conf.getBoolean(MRJobConfig.JOB_CANCEL_DELEGATION_TOKEN,true)) {
    DelegationTokenRenewal.removeDelegationTokenRenewalForJob(jobId);
  }
}
