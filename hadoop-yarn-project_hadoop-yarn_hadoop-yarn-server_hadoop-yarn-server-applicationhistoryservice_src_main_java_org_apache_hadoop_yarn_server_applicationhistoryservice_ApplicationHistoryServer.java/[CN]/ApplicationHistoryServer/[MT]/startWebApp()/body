{
  Configuration conf=getConfig();
  String initializers=conf.get("hadoop.http.filter.initializers");
  initializers=initializers == null || initializers.length() == 0 ? "" : "," + initializers;
  if (!initializers.contains(TimelineAuthenticationFilterInitializer.class.getName())) {
    conf.set("hadoop.http.filter.initializers",TimelineAuthenticationFilterInitializer.class.getName() + initializers);
  }
  String bindAddress=WebAppUtils.getAHSWebAppURLWithoutScheme(conf);
  LOG.info("Instantiating AHSWebApp at " + bindAddress);
  try {
    AHSWebApp ahsWebApp=AHSWebApp.getInstance();
    ahsWebApp.setApplicationHistoryManager(historyManager);
    ahsWebApp.setTimelineStore(timelineStore);
    ahsWebApp.setTimelineDelegationTokenSecretManagerService(secretManagerService);
    ahsWebApp.setTimelineACLsManager(timelineACLsManager);
    webApp=WebApps.$for("applicationhistory",ApplicationHistoryClientService.class,ahsClientService,"ws").with(conf).at(bindAddress).start(ahsWebApp);
  }
 catch (  Exception e) {
    String msg="AHSWebApp failed to start.";
    LOG.error(msg,e);
    throw new YarnRuntimeException(msg,e);
  }
}
