{
  statistics.incrementWriteOps(1);
  storageStatistics.incrementOpCounter(OpType.DISALLOW_SNAPSHOT);
  Path absF=fixRelativePart(path);
  new FileSystemLinkResolver<Void>(){
    @Override public Void doCall(    final Path p) throws IOException {
      dfs.disallowSnapshot(getPathName(p));
      return null;
    }
    @Override public Void next(    final FileSystem fs,    final Path p) throws IOException {
      if (fs instanceof DistributedFileSystem) {
        DistributedFileSystem myDfs=(DistributedFileSystem)fs;
        myDfs.disallowSnapshot(p);
      }
 else {
        throw new UnsupportedOperationException("Cannot perform snapshot" + " operations on a symlink to a non-DistributedFileSystem: " + path + " -> "+ p);
      }
      return null;
    }
  }
.resolve(this,absF);
}
