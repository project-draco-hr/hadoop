{
  statistics.incrementWriteOps(1);
  Path absF=fixRelativePart(trg);
  Path[] srcs=new Path[psrcs.length];
  for (int i=0; i < psrcs.length; i++) {
    srcs[i]=fixRelativePart(psrcs[i]);
  }
  String[] srcsStr=new String[psrcs.length];
  try {
    for (int i=0; i < psrcs.length; i++) {
      srcsStr[i]=getPathName(srcs[i]);
    }
    dfs.concat(getPathName(absF),srcsStr);
  }
 catch (  UnresolvedLinkException e) {
    FileStatus stat=getFileLinkStatus(absF);
    if (stat.isSymlink()) {
      throw new IOException("Cannot concat with a symlink target: " + trg + " -> "+ stat.getPath());
    }
    absF=fixRelativePart(stat.getPath());
    for (int i=0; i < psrcs.length; i++) {
      stat=getFileLinkStatus(srcs[i]);
      if (stat.isSymlink()) {
        throw new IOException("Cannot concat with a symlink src: " + psrcs[i] + " -> "+ stat.getPath());
      }
      srcs[i]=fixRelativePart(stat.getPath());
    }
    for (int i=0; i < psrcs.length; i++) {
      srcsStr[i]=getPathName(srcs[i]);
    }
    dfs.concat(getPathName(absF),srcsStr);
  }
}
