{
  Path absF=fixRelativePart(f);
  return new FileSystemLinkResolver<Boolean>(){
    @Override public Boolean doCall(    final Path p) throws IOException {
      return dfs.recoverLease(getPathName(p));
    }
    @Override public Boolean next(    final FileSystem fs,    final Path p) throws IOException {
      if (fs instanceof DistributedFileSystem) {
        DistributedFileSystem myDfs=(DistributedFileSystem)fs;
        return myDfs.recoverLease(p);
      }
      throw new UnsupportedOperationException("Cannot recoverLease through" + " a symlink to a non-DistributedFileSystem: " + f + " -> "+ p);
    }
  }
.resolve(this,absF);
}
