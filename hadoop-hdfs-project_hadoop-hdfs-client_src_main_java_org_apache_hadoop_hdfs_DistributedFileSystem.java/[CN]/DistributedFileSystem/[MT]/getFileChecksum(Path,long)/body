{
  statistics.incrementReadOps(1);
  Path absF=fixRelativePart(f);
  return new FileSystemLinkResolver<FileChecksum>(){
    @Override public FileChecksum doCall(    final Path p) throws IOException, UnresolvedLinkException {
      return dfs.getFileChecksum(getPathName(p),length);
    }
    @Override public FileChecksum next(    final FileSystem fs,    final Path p) throws IOException {
      if (fs instanceof DistributedFileSystem) {
        return ((DistributedFileSystem)fs).getFileChecksum(p,length);
      }
 else {
        throw new UnsupportedFileSystemException("getFileChecksum(Path, long) is not supported by " + fs.getClass().getSimpleName());
      }
    }
  }
.resolve(this,absF);
}
