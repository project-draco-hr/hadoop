{
  DataNode.BPOfferService myMockBPOS=mock(DataNode.BPOfferService.class);
  doCallRealMethod().when(myMockBPOS).register();
  myMockBPOS.bpRegistration=mock(DatanodeRegistration.class);
  when(myMockBPOS.bpRegistration.getStorageID()).thenReturn("myTestStorageID");
  NamespaceInfo fakeNSInfo=mock(NamespaceInfo.class);
  when(fakeNSInfo.getBuildVersion()).thenReturn("NSBuildVersion");
  DatanodeProtocol fakeDNProt=mock(DatanodeProtocol.class);
  when(fakeDNProt.versionRequest()).thenReturn(fakeNSInfo);
  doCallRealMethod().when(myMockBPOS).setNameNode(fakeDNProt);
  myMockBPOS.setNameNode(fakeDNProt);
  try {
    myMockBPOS.register();
    fail("register() did not throw exception! " + "Expected: IncorrectVersionException");
  }
 catch (  IncorrectVersionException ie) {
    LOG.info("register() returned correct Exception: IncorrectVersionException");
  }
}
