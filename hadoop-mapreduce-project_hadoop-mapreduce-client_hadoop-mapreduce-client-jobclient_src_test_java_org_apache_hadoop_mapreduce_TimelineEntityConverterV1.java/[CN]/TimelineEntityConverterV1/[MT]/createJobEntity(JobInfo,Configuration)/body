{
  TimelineEntity job=new TimelineEntity();
  job.setEntityType(JOB);
  job.setEntityId(jobInfo.getJobId().toString());
  job.setStartTime(jobInfo.getSubmitTime());
  job.addPrimaryFilter("JOBNAME",jobInfo.getJobname());
  job.addPrimaryFilter("USERNAME",jobInfo.getUsername());
  job.addOtherInfo("JOB_QUEUE_NAME",jobInfo.getJobQueueName());
  job.addOtherInfo("SUBMIT_TIME",jobInfo.getSubmitTime());
  job.addOtherInfo("LAUNCH_TIME",jobInfo.getLaunchTime());
  job.addOtherInfo("FINISH_TIME",jobInfo.getFinishTime());
  job.addOtherInfo("JOB_STATUS",jobInfo.getJobStatus());
  job.addOtherInfo("PRIORITY",jobInfo.getPriority());
  job.addOtherInfo("TOTAL_MAPS",jobInfo.getTotalMaps());
  job.addOtherInfo("TOTAL_REDUCES",jobInfo.getTotalReduces());
  job.addOtherInfo("UBERIZED",jobInfo.getUberized());
  job.addOtherInfo("ERROR_INFO",jobInfo.getErrorInfo());
  LOG.info("converted job " + jobInfo.getJobId() + " to a timeline entity");
  return job;
}
