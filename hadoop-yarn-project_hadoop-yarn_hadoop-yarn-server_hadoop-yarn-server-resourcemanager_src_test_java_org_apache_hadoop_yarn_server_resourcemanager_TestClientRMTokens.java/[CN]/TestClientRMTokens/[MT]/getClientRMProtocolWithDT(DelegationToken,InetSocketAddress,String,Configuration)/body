{
  UserGroupInformation ugi=UserGroupInformation.createRemoteUser(user);
  ugi.addToken(ProtoUtils.convertFromProtoFormat(token,rmAddress));
  final YarnRPC rpc=YarnRPC.create(conf);
  ClientRMProtocol clientRMWithDT=ugi.doAs(new PrivilegedAction<ClientRMProtocol>(){
    @Override public ClientRMProtocol run(){
      return (ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class,rmAddress,conf);
    }
  }
);
  return clientRMWithDT;
}
