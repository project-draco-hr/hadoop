{
  long[] counts=new long[items.size()];
  StringBuffer sb=new StringBuffer();
  Iterator<Object> iter=items.values().iterator();
  int i=0;
  while (iter.hasNext()) {
    Long count=(Long)iter.next();
    counts[i]=count.longValue();
    i+=1;
  }
  Arrays.sort(counts);
  sb.append(counts.length);
  i=0;
  long acc=0;
  while (i < counts.length) {
    long nextVal=counts[i];
    int j=i + 1;
    while (j < counts.length && counts[j] == nextVal) {
      j++;
    }
    acc+=nextVal * (j - i);
    i=j;
  }
  double average=0.0;
  double sd=0.0;
  if (counts.length > 0) {
    sb.append("\t").append(counts[0]);
    sb.append("\t").append(counts[counts.length / 2]);
    sb.append("\t").append(counts[counts.length - 1]);
    average=acc * 1.0 / counts.length;
    sb.append("\t").append(average);
    i=0;
    while (i < counts.length) {
      double nextDiff=counts[i] - average;
      sd+=nextDiff * nextDiff;
      i+=1;
    }
    sd=Math.sqrt(sd / counts.length);
    sb.append("\t").append(sd);
  }
  return sb.toString();
}
