{
  ApplicationAttemptId applicationAttemptId=authorizeRequest();
  AllocateResponseLock lock=responseMap.get(applicationAttemptId);
  if (lock == null) {
    throwApplicationDoesNotExistInCacheException(applicationAttemptId);
  }
synchronized (lock) {
    if (!hasApplicationMasterRegistered(applicationAttemptId)) {
      String message="Application Master is trying to unregister before registering for: " + applicationAttemptId.getApplicationId();
      LOG.error(message);
      RMAuditLogger.logFailure(this.rmContext.getRMApps().get(applicationAttemptId.getApplicationId()).getUser(),AuditConstants.UNREGISTER_AM,"","ApplicationMasterService",message,applicationAttemptId.getApplicationId(),applicationAttemptId);
      throw new InvalidApplicationMasterRequestException(message);
    }
    this.amLivelinessMonitor.receivedPing(applicationAttemptId);
    RMApp rmApp=rmContext.getRMApps().get(applicationAttemptId.getApplicationId());
    if (rmApp.getApplicationSubmissionContext().getUnmanagedAM()) {
      rmContext.getDispatcher().getEventHandler().handle(new RMAppAttemptUnregistrationEvent(applicationAttemptId,request.getTrackingUrl(),request.getFinalApplicationStatus(),request.getDiagnostics()));
      return FinishApplicationMasterResponse.newInstance(true);
    }
    if (rmApp.isAppSafeToTerminate()) {
      return FinishApplicationMasterResponse.newInstance(true);
    }
 else {
      rmContext.getDispatcher().getEventHandler().handle(new RMAppAttemptUnregistrationEvent(applicationAttemptId,request.getTrackingUrl(),request.getFinalApplicationStatus(),request.getDiagnostics()));
      return FinishApplicationMasterResponse.newInstance(false);
    }
  }
}
