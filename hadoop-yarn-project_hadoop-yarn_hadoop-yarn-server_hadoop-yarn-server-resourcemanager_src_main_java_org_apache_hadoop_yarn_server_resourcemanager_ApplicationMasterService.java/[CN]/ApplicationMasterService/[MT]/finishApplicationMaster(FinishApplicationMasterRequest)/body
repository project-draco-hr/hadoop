{
  ApplicationAttemptId applicationAttemptId=authorizeRequest().getApplicationAttemptId();
  ApplicationId appId=applicationAttemptId.getApplicationId();
  AllocateResponseLock lock=responseMap.get(applicationAttemptId);
  if (lock == null) {
    throwApplicationDoesNotExistInCacheException(applicationAttemptId);
  }
synchronized (lock) {
    if (!hasApplicationMasterRegistered(applicationAttemptId)) {
      String message="Application Master is trying to unregister before registering for: " + appId;
      LOG.error(message);
      RMAuditLogger.logFailure(this.rmContext.getRMApps().get(appId).getUser(),AuditConstants.UNREGISTER_AM,"","ApplicationMasterService",message,appId,applicationAttemptId);
      throw new ApplicationMasterNotRegisteredException(message);
    }
    this.amLivelinessMonitor.receivedPing(applicationAttemptId);
    RMApp rmApp=rmContext.getRMApps().get(appId);
    if (rmApp.isAppFinalStateStored()) {
      return FinishApplicationMasterResponse.newInstance(true);
    }
    rmContext.getDispatcher().getEventHandler().handle(new RMAppAttemptUnregistrationEvent(applicationAttemptId,request.getTrackingUrl(),request.getFinalApplicationStatus(),request.getDiagnostics()));
    return FinishApplicationMasterResponse.newInstance(rmApp.getApplicationSubmissionContext().getUnmanagedAM());
  }
}
