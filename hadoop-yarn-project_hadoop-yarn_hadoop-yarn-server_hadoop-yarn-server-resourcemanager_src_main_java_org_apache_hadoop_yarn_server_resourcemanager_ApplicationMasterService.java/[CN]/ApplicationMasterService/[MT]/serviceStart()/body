{
  Configuration conf=getConfig();
  YarnRPC rpc=YarnRPC.create(conf);
  Configuration serverConf=conf;
  serverConf=new Configuration(conf);
  serverConf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,SaslRpcServer.AuthMethod.TOKEN.toString());
  this.server=getServer(rpc,serverConf,masterServiceAddress,this.rmContext.getAMRMTokenSecretManager());
  this.server.addTerseExceptions(ApplicationMasterNotRegisteredException.class);
  if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,false)) {
    InputStream inputStream=this.rmContext.getConfigurationProvider().getConfigurationInputStream(conf,YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);
    if (inputStream != null) {
      conf.addResource(inputStream);
    }
    refreshServiceAcls(conf,RMPolicyProvider.getInstance());
  }
  this.server.start();
  this.masterServiceAddress=conf.updateConnectAddr(YarnConfiguration.RM_BIND_HOST,YarnConfiguration.RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,server.getListenerAddress());
  super.serviceStart();
}
