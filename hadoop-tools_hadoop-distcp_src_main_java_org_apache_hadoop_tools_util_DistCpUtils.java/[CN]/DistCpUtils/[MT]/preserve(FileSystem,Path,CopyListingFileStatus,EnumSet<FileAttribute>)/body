{
  FileStatus targetFileStatus=targetFS.getFileStatus(path);
  String group=targetFileStatus.getGroup();
  String user=targetFileStatus.getOwner();
  boolean chown=false;
  if (attributes.contains(FileAttribute.ACL)) {
    List<AclEntry> srcAcl=srcFileStatus.getAclEntries();
    List<AclEntry> targetAcl=getAcl(targetFS,targetFileStatus);
    if (!srcAcl.equals(targetAcl)) {
      targetFS.setAcl(path,srcAcl);
    }
    if (srcFileStatus.getPermission().getStickyBit() != targetFileStatus.getPermission().getStickyBit()) {
      targetFS.setPermission(path,srcFileStatus.getPermission());
    }
  }
 else   if (attributes.contains(FileAttribute.PERMISSION) && !srcFileStatus.getPermission().equals(targetFileStatus.getPermission())) {
    targetFS.setPermission(path,srcFileStatus.getPermission());
  }
  if (attributes.contains(FileAttribute.XATTR)) {
    Map<String,byte[]> srcXAttrs=srcFileStatus.getXAttrs();
    Map<String,byte[]> targetXAttrs=getXAttrs(targetFS,path);
    if (!srcXAttrs.equals(targetXAttrs)) {
      Iterator<Entry<String,byte[]>> iter=srcXAttrs.entrySet().iterator();
      while (iter.hasNext()) {
        Entry<String,byte[]> entry=iter.next();
        targetFS.setXAttr(path,entry.getKey(),entry.getValue());
      }
    }
  }
  if (attributes.contains(FileAttribute.REPLICATION) && !targetFileStatus.isDirectory() && srcFileStatus.getReplication() != targetFileStatus.getReplication()) {
    targetFS.setReplication(path,srcFileStatus.getReplication());
  }
  if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) {
    group=srcFileStatus.getGroup();
    chown=true;
  }
  if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) {
    user=srcFileStatus.getOwner();
    chown=true;
  }
  if (chown) {
    targetFS.setOwner(path,user,group);
  }
}
