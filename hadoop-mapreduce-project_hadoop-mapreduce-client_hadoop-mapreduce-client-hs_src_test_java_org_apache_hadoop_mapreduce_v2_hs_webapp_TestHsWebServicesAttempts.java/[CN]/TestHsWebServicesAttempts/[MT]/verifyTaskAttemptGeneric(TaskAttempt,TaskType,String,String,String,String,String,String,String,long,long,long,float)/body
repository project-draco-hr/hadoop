{
  TaskAttemptId attid=ta.getID();
  String attemptId=MRApps.toString(attid);
  WebServicesTestUtils.checkStringMatch("id",attemptId,id);
  WebServicesTestUtils.checkStringMatch("type",ttype.toString(),type);
  WebServicesTestUtils.checkStringMatch("state",ta.getState().toString(),state);
  WebServicesTestUtils.checkStringMatch("rack",ta.getNodeRackName(),rack);
  WebServicesTestUtils.checkStringMatch("nodeHttpAddress",ta.getNodeHttpAddress(),nodeHttpAddress);
  String expectDiag="";
  List<String> diagnosticsList=ta.getDiagnostics();
  if (diagnosticsList != null && !diagnostics.isEmpty()) {
    StringBuffer b=new StringBuffer();
    for (    String diag : diagnosticsList) {
      b.append(diag);
    }
    expectDiag=b.toString();
  }
  WebServicesTestUtils.checkStringMatch("diagnostics",expectDiag,diagnostics);
  WebServicesTestUtils.checkStringMatch("assignedContainerId",ta.getAssignedContainerID().toString(),assignedContainerId);
  assertEquals("startTime wrong",ta.getLaunchTime(),startTime);
  assertEquals("finishTime wrong",ta.getFinishTime(),finishTime);
  assertEquals("elapsedTime wrong",finishTime - startTime,elapsedTime);
  assertEquals("progress wrong",ta.getProgress() * 100,progress,1e-3f);
}
