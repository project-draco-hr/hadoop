{
  WebResource r=resource();
  Map<JobId,Job> jobsMap=appContext.getAllJobs();
  for (  JobId id : jobsMap.keySet()) {
    String jobId=MRApps.toString(id);
    for (    Task task : jobsMap.get(id).getTasks().values()) {
      String tid=MRApps.toString(task.getID());
      ClientResponse response=r.path("ws").path("v1").path("history").path("mapreduce").path("jobs").path(jobId).path("tasks").path(tid).path("attempts").accept(MediaType.APPLICATION_XML).get(ClientResponse.class);
      assertEquals(MediaType.APPLICATION_XML_TYPE,response.getType());
      String xml=response.getEntity(String.class);
      DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
      DocumentBuilder db=dbf.newDocumentBuilder();
      InputSource is=new InputSource();
      is.setCharacterStream(new StringReader(xml));
      Document dom=db.parse(is);
      NodeList attempts=dom.getElementsByTagName("taskAttempts");
      assertEquals("incorrect number of elements",1,attempts.getLength());
      NodeList nodes=dom.getElementsByTagName("taskAttempt");
      verifyHsTaskAttemptsXML(nodes,task);
    }
  }
}
