{
  Path ecFile=new Path(ecDir,filename);
  writeStripedFile(dfs,ecFile,writeBytes);
  List<DatanodeInfo> decommisionNodes=getDecommissionDatanode(dfs,ecFile,writeBytes,decomNodeCount);
  int deadDecomissioned=fsn.getNumDecomDeadDataNodes();
  int liveDecomissioned=fsn.getNumDecomLiveDataNodes();
  List<LocatedBlock> lbs=((HdfsDataInputStream)dfs.open(ecFile)).getAllBlocks();
  List<HashMap<DatanodeInfo,Byte>> locToIndexList=new ArrayList<>();
  List<HashMap<DatanodeInfo,Token<BlockTokenIdentifier>>> locToTokenList=new ArrayList<>();
  prepareBlockIndexAndTokenList(lbs,locToIndexList,locToTokenList);
  decommissionNode(0,decommisionNodes,AdminStates.DECOMMISSIONED);
  assertEquals(deadDecomissioned,fsn.getNumDecomDeadDataNodes());
  assertEquals(liveDecomissioned + decommisionNodes.size(),fsn.getNumDecomLiveDataNodes());
  DFSClient client=getDfsClient(cluster.getNameNode(0),conf);
  assertEquals("All datanodes must be alive",numDNs,client.datanodeReport(DatanodeReportType.LIVE).length);
  assertNull(checkFile(dfs,ecFile,storageCount,decommisionNodes,numDNs));
  StripedFileTestUtil.checkData(dfs,ecFile,writeBytes,decommisionNodes,null);
  assertBlockIndexAndTokenPosition(lbs,locToIndexList,locToTokenList);
  cleanupFile(dfs,ecFile);
}
