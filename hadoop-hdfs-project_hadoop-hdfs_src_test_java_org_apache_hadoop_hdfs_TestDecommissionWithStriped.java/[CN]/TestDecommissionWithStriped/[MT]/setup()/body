{
  conf=new HdfsConfiguration();
  localFileSys=FileSystem.getLocal(conf);
  Path workingDir=localFileSys.getWorkingDirectory();
  decommissionDir=new Path(workingDir,PathUtils.getTestDirName(getClass()) + "/work-dir/decommission");
  hostsFile=new Path(decommissionDir,"hosts");
  excludeFile=new Path(decommissionDir,"exclude");
  writeConfigFile(hostsFile,null);
  writeConfigFile(excludeFile,null);
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,false);
  conf.set(DFSConfigKeys.DFS_HOSTS,hostsFile.toUri().getPath());
  conf.set(DFSConfigKeys.DFS_HOSTS_EXCLUDE,excludeFile.toUri().getPath());
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY,2000);
  conf.setInt(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,HEARTBEAT_INTERVAL);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_INTERVAL_KEY,1);
  conf.setInt(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY,BLOCKREPORT_INTERVAL_MSEC);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_PENDING_TIMEOUT_SEC_KEY,4);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_INTERVAL_KEY,NAMENODE_REPLICATION_INTERVAL);
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,blockSize);
  conf.setInt(DFSConfigKeys.DFS_DN_EC_RECONSTRUCTION_STRIPED_READ_BUFFER_SIZE_KEY,StripedFileTestUtil.BLOCK_STRIPED_CELL_SIZE - 1);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_INTERVAL_KEY,1);
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_REPLICATION_CONSIDERLOAD_KEY,false);
  numDNs=NUM_DATA_BLOCKS + NUM_PARITY_BLOCKS + 2;
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDNs).build();
  cluster.waitActive();
  dfs=cluster.getFileSystem(0);
  fsn=cluster.getNamesystem();
  bm=fsn.getBlockManager();
  client=getDfsClient(cluster.getNameNode(0),conf);
  dfs.mkdirs(ecDir);
  dfs.setErasureCodingPolicy(ecDir,null);
}
