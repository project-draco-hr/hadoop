{
  StaticMapping.resetMap();
  Configuration conf=new HdfsConfiguration();
  final ArrayList<String> rackList=new ArrayList<String>();
  final ArrayList<String> hostList=new ArrayList<String>();
  for (int i=0; i < 10; i++) {
    for (int j=0; j < 2; j++) {
      rackList.add("/rack" + i);
      hostList.add("/host" + i + j);
    }
  }
  conf.setClass(DFSConfigKeys.DFS_BLOCK_REPLICATOR_CLASSNAME_KEY,BlockPlacementPolicyRackFaultTolarent.class,BlockPlacementPolicy.class);
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,DEFAULT_BLOCK_SIZE);
  conf.setInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY,DEFAULT_BLOCK_SIZE / 2);
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(hostList.size()).racks(rackList.toArray(new String[rackList.size()])).hosts(hostList.toArray(new String[hostList.size()])).build();
  cluster.waitActive();
  nameNodeRpc=cluster.getNameNodeRpc();
  namesystem=cluster.getNamesystem();
  perm=new PermissionStatus("TestBlockPlacementPolicyEC",null,FsPermission.getDefault());
}
