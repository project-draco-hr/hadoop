{
  final int numBlocks=4;
  final int numStripes=4;
  final Path filePath=new Path("/corrupt");
  final FSNamesystem ns=cluster.getNameNode().getNamesystem();
  final BlockManager bm=ns.getBlockManager();
  DFSTestUtil.createStripedFile(cluster,filePath,null,numBlocks,numStripes,false);
  INodeFile fileNode=ns.getFSDirectory().getINode(filePath.toString()).asFile();
  Assert.assertTrue(fileNode.isStriped());
  BlockInfo stored=fileNode.getBlocks()[0];
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(0,ns.getCorruptReplicaBlocks());
  DatanodeStorage storage=new DatanodeStorage(UUID.randomUUID().toString());
  final Block reported=new Block(stored);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE);
  StorageReceivedDeletedBlocks[] reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(0).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(0,ns.getCorruptReplicaBlocks());
  reported.setBlockId(stored.getBlockId() + 1);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE - 1);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(1).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  reported.setBlockId(stored.getBlockId() + NUM_DATA_BLOCKS);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(2).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  reported.setBlockId(stored.getBlockId() + NUM_DATA_BLOCKS);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE + 1);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(3).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  Assert.assertEquals(2,bm.getCorruptReplicas(stored).size());
  stored.setNumBytes(stored.getNumBytes() + 10);
  reported.setBlockId(stored.getBlockId() + NUM_DATA_BLOCKS + 2);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(4).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  Assert.assertEquals(3,bm.getCorruptReplicas(stored).size());
  stored.setNumBytes(stored.getNumBytes() + BLOCK_STRIPED_CELL_SIZE);
  reported.setBlockId(stored.getBlockId());
  reported.setNumBytes((numStripes + 1) * BLOCK_STRIPED_CELL_SIZE);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(0).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  Assert.assertEquals(3,bm.getCorruptReplicas(stored).size());
  reported.setBlockId(stored.getBlockId() + 1);
  reported.setNumBytes(numStripes * BLOCK_STRIPED_CELL_SIZE + 10);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(0).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  Assert.assertEquals(3,bm.getCorruptReplicas(stored).size());
  reported.setBlockId(stored.getBlockId() + NUM_DATA_BLOCKS);
  reported.setNumBytes((numStripes + 1) * BLOCK_STRIPED_CELL_SIZE);
  reports=DFSTestUtil.makeReportForReceivedBlock(reported,ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK,storage);
  ns.processIncrementalBlockReport(cluster.getDataNodes().get(2).getDatanodeId(),reports[0]);
  BlockManagerTestUtil.updateState(ns.getBlockManager());
  Assert.assertEquals(1,ns.getCorruptReplicaBlocks());
  Assert.assertEquals(3,bm.getCorruptReplicas(stored).size());
}
