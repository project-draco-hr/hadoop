{
  String version="RecordBench v0.1";
  System.out.println(version + "\n");
  if (args.length != 3) {
    exitOnError();
  }
  String typeName=args[0];
  String format=args[1];
  int numRecords=Integer.decode(args[2]).intValue();
  Method bench=null;
  try {
    bench=RecordBench.class.getDeclaredMethod("run" + toCamelCase(format) + "Bench",new Class[]{String.class,Integer.TYPE,Times.class});
  }
 catch (  NoSuchMethodException ex) {
    ex.printStackTrace();
    exitOnError();
  }
  if (numRecords < 0) {
    exitOnError();
  }
  rand.setSeed(SEED);
  Times times=new Times();
  try {
    bench.invoke(null,new Object[]{typeName,numRecords,times});
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.exit(1);
  }
  rand.setSeed(SEED);
  try {
    bench.invoke(null,new Object[]{typeName,numRecords,times});
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.exit(1);
  }
  printTimes(typeName,format,numRecords,times);
}
