{
  StringBuilder tokenFullPathnames=new StringBuilder();
  String tokenFilenames="token1,token2";
  String tokenFiles[]=tokenFilenames.split("\\s*,\\s*+");
  final File testDir=new File("target",TestUserGroupInformation.class.getName() + "-tmpDir").getAbsoluteFile();
  String testDirPath=testDir.getAbsolutePath();
  for (  String tokenFile : tokenFiles) {
    if (tokenFullPathnames.length() > 0) {
      tokenFullPathnames.append(",");
    }
    tokenFullPathnames.append(testDirPath).append("/").append(tokenFile);
  }
  TestTokenIdentifier tokenId=new TestTokenIdentifier();
  Credentials cred1=new Credentials();
  Token<TestTokenIdentifier> token1=new Token<TestTokenIdentifier>(tokenId.getBytes(),"password".getBytes(),tokenId.getKind(),new Text("token-service1"));
  cred1.addToken(token1.getService(),token1);
  cred1.writeTokenStorageFile(new Path(testDirPath,tokenFiles[0]),conf);
  Credentials cred2=new Credentials();
  Token<TestTokenIdentifier> token2=new Token<TestTokenIdentifier>(tokenId.getBytes(),"password".getBytes(),tokenId.getKind(),new Text("token-service2"));
  cred2.addToken(token2.getService(),token2);
  cred2.writeTokenStorageFile(new Path(testDirPath,tokenFiles[1]),conf);
  System.setProperty("hadoop.token.files",tokenFullPathnames.toString());
  UserGroupInformation.setLoginUser(null);
  UserGroupInformation tokenUgi=UserGroupInformation.getLoginUser();
  Collection<Token<?>> credsugiTokens=tokenUgi.getTokens();
  assertTrue(credsugiTokens.contains(token1));
  assertTrue(credsugiTokens.contains(token2));
}
