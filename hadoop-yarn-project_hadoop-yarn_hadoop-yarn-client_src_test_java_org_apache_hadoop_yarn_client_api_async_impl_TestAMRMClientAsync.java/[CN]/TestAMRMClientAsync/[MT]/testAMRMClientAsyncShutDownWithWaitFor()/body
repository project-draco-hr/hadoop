{
  Configuration conf=new Configuration();
  final TestCallbackHandler callbackHandler=new TestCallbackHandler();
  @SuppressWarnings("unchecked") AMRMClient<ContainerRequest> client=mock(AMRMClientImpl.class);
  final AllocateResponse shutDownResponse=createAllocateResponse(new ArrayList<ContainerStatus>(),new ArrayList<Container>(),null);
  shutDownResponse.setAMCommand(AMCommand.AM_SHUTDOWN);
  when(client.allocate(anyFloat())).thenReturn(shutDownResponse);
  AMRMClientAsync<ContainerRequest> asyncClient=AMRMClientAsync.createAMRMClientAsync(client,10,callbackHandler);
  asyncClient.init(conf);
  asyncClient.start();
  Supplier<Boolean> checker=new Supplier<Boolean>(){
    @Override public Boolean get(){
      return callbackHandler.reboot;
    }
  }
;
  asyncClient.registerApplicationMaster("localhost",1234,null);
  asyncClient.waitFor(checker);
  asyncClient.stop();
  Assert.assertTrue(callbackHandler.callbackCount == 0);
  verify(client,times(1)).allocate(anyFloat());
  asyncClient.stop();
}
