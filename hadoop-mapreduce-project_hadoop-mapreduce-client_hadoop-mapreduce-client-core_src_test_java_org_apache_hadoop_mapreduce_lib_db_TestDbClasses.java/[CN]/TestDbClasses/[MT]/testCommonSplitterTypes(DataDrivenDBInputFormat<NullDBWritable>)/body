{
  assertEquals(BigDecimalSplitter.class,format.getSplitter(Types.DECIMAL).getClass());
  assertEquals(BigDecimalSplitter.class,format.getSplitter(Types.NUMERIC).getClass());
  assertEquals(BooleanSplitter.class,format.getSplitter(Types.BOOLEAN).getClass());
  assertEquals(BooleanSplitter.class,format.getSplitter(Types.BIT).getClass());
  assertEquals(IntegerSplitter.class,format.getSplitter(Types.BIGINT).getClass());
  assertEquals(IntegerSplitter.class,format.getSplitter(Types.TINYINT).getClass());
  assertEquals(IntegerSplitter.class,format.getSplitter(Types.SMALLINT).getClass());
  assertEquals(IntegerSplitter.class,format.getSplitter(Types.INTEGER).getClass());
  assertEquals(FloatSplitter.class,format.getSplitter(Types.DOUBLE).getClass());
  assertEquals(FloatSplitter.class,format.getSplitter(Types.REAL).getClass());
  assertEquals(FloatSplitter.class,format.getSplitter(Types.FLOAT).getClass());
  assertEquals(TextSplitter.class,format.getSplitter(Types.LONGVARCHAR).getClass());
  assertEquals(TextSplitter.class,format.getSplitter(Types.CHAR).getClass());
  assertEquals(TextSplitter.class,format.getSplitter(Types.VARCHAR).getClass());
  assertNull(format.getSplitter(Types.BINARY));
}
