{
  Preconditions.checkArgument(xface.isAssignableFrom(NamenodeProtocols.class),"Interface %s is not a NameNode protocol",xface);
  try {
    Constructor<FailoverProxyProvider<?>> ctor=failoverProxyProviderClass.getConstructor(Class.class);
    FailoverProxyProvider<?> provider=ctor.newInstance(xface);
    ReflectionUtils.setConf(provider,conf);
    return (FailoverProxyProvider<T>)provider;
  }
 catch (  Exception e) {
    if (e.getCause() instanceof IOException) {
      throw (IOException)e.getCause();
    }
 else {
      throw new IOException("Couldn't create proxy provider " + failoverProxyProviderClass,e);
    }
  }
}
