{
  Class<FailoverProxyProvider<T>> failoverProxyProviderClass=HAUtil.getFailoverProxyProviderClass(conf,nameNodeUri,xface);
  if (failoverProxyProviderClass == null) {
    return createNonHAProxy(conf,nameNodeUri,xface);
  }
 else {
    FailoverProxyProvider<T> failoverProxyProvider=HAUtil.createFailoverProxyProvider(conf,failoverProxyProviderClass,xface,nameNodeUri);
    Conf config=new Conf(conf);
    T proxy=(T)RetryProxy.create(xface,failoverProxyProvider,RetryPolicies.failoverOnNetworkException(RetryPolicies.TRY_ONCE_THEN_FAIL,config.maxFailoverAttempts,config.failoverSleepBaseMillis,config.failoverSleepMaxMillis));
    Text dtService=buildTokenServiceForLogicalUri(nameNodeUri);
    return new ProxyAndInfo<T>(proxy,dtService);
  }
}
