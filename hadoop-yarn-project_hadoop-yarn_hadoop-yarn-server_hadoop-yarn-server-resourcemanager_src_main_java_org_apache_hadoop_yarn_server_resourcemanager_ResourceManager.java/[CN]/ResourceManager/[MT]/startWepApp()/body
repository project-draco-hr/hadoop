{
  Builder<ApplicationMasterService> builder=WebApps.$for("cluster",ApplicationMasterService.class,masterService,"ws").with(conf).withHttpSpnegoPrincipalKey(YarnConfiguration.RM_WEBAPP_SPNEGO_USER_NAME_KEY).withHttpSpnegoKeytabKey(YarnConfiguration.RM_WEBAPP_SPNEGO_KEYTAB_FILE_KEY).at(this.conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS));
  String proxyHostAndPort=YarnConfiguration.getProxyHostAndPort(conf);
  if (YarnConfiguration.getRMWebAppHostAndPort(conf).equals(proxyHostAndPort)) {
    AppReportFetcher fetcher=new AppReportFetcher(conf,getClientRMService());
    builder.withServlet(ProxyUriUtils.PROXY_SERVLET_NAME,ProxyUriUtils.PROXY_PATH_SPEC,WebAppProxyServlet.class);
    builder.withAttribute(WebAppProxy.FETCHER_ATTRIBUTE,fetcher);
    String[] proxyParts=proxyHostAndPort.split(":");
    builder.withAttribute(WebAppProxy.PROXY_HOST_ATTRIBUTE,proxyParts[0]);
  }
  webApp=builder.start(new RMWebApp(this));
}
