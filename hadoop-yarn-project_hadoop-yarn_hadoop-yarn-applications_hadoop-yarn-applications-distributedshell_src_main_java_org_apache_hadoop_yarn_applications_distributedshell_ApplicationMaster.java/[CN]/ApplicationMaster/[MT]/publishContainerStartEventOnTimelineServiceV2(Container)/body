{
  final org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity entity=new org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity();
  entity.setId(container.getId().toString());
  entity.setType(DSEntity.DS_CONTAINER.toString());
  long ts=System.currentTimeMillis();
  entity.setCreatedTime(ts);
  entity.addInfo("user",appSubmitterUgi.getShortUserName());
  org.apache.hadoop.yarn.api.records.timelineservice.TimelineEvent event=new org.apache.hadoop.yarn.api.records.timelineservice.TimelineEvent();
  event.setTimestamp(ts);
  event.setId(DSEvent.DS_CONTAINER_START.toString());
  event.addInfo("Node",container.getNodeId().toString());
  event.addInfo("Resources",container.getResource().toString());
  entity.addEvent(event);
  try {
    appSubmitterUgi.doAs(new PrivilegedExceptionAction<Object>(){
      @Override public TimelinePutResponse run() throws Exception {
        timelineClient.putEntities(entity);
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    LOG.error("Container start event could not be published for " + container.getId().toString(),e instanceof UndeclaredThrowableException ? e.getCause() : e);
  }
}
