{
  LOG.info("Starting ApplicationMaster");
  AMRMClientAsync.CallbackHandler allocListener=new RMCallbackHandler();
  resourceManager=AMRMClientAsync.createAMRMClientAsync(appAttemptID,1000,allocListener);
  resourceManager.init(conf);
  resourceManager.start();
  containerListener=new NMCallbackHandler();
  nmClientAsync=new NMClientAsyncImpl(containerListener);
  nmClientAsync.init(conf);
  nmClientAsync.start();
  RegisterApplicationMasterResponse response=resourceManager.registerApplicationMaster(appMasterHostname,appMasterRpcPort,appMasterTrackingUrl);
  int maxMem=response.getMaximumResourceCapability().getMemory();
  LOG.info("Max mem capabililty of resources in this cluster " + maxMem);
  if (containerMemory > maxMem) {
    LOG.info("Container memory specified above max threshold of cluster." + " Using max value." + ", specified=" + containerMemory + ", max="+ maxMem);
    containerMemory=maxMem;
  }
  ContainerRequest containerAsk=setupContainerAskForRM(numTotalContainers);
  resourceManager.addContainerRequest(containerAsk);
  numRequestedContainers.set(numTotalContainers);
  while (!done) {
    try {
      Thread.sleep(200);
    }
 catch (    InterruptedException ex) {
    }
  }
  finish();
  return success;
}
