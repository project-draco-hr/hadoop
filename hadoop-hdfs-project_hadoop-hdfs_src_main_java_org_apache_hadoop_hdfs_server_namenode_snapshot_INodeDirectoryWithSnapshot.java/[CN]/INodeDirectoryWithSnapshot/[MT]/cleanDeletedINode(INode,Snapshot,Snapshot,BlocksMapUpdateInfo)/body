{
  Quota.Counts counts=Quota.Counts.newInstance();
  Deque<INode> queue=new ArrayDeque<INode>();
  queue.addLast(inode);
  while (!queue.isEmpty()) {
    INode topNode=queue.pollFirst();
    if (topNode instanceof FileWithSnapshot) {
      FileWithSnapshot fs=(FileWithSnapshot)topNode;
      counts.add(fs.getDiffs().deleteSnapshotDiff(post,prior,topNode.asFile(),collectedBlocks));
    }
 else     if (topNode.isDirectory()) {
      INodeDirectory dir=topNode.asDirectory();
      if (dir instanceof INodeDirectoryWithSnapshot) {
        INodeDirectoryWithSnapshot sdir=(INodeDirectoryWithSnapshot)dir;
        DirectoryDiff priorDiff=sdir.getDiffs().getDiff(prior);
        if (priorDiff != null) {
          counts.add(priorDiff.diff.destroyCreatedList(sdir,collectedBlocks));
        }
      }
      for (      INode child : dir.getChildrenList(prior)) {
        queue.addLast(child);
      }
    }
  }
  return counts;
}
