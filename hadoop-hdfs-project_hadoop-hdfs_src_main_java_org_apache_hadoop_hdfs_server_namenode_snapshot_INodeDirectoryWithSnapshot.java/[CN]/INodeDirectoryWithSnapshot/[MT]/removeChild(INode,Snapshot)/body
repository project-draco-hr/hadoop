{
  Diff diff=null;
  Triple<Integer,INode,Integer> undoInfo=null;
  if (latest != null) {
    diff=checkAndAddLatestDiff(latest);
    undoInfo=diff.delete(child);
  }
  final INode removed=super.removeChild(child,null);
  if (undoInfo != null) {
    if (removed == null) {
      diff.undoDelete(child,undoInfo);
    }
 else {
      final INode previous=undoInfo.middle;
      if (previous != null && previous instanceof FileWithSnapshot) {
        ((FileWithSnapshot)previous).removeSelf();
      }
    }
  }
  return removed;
}
