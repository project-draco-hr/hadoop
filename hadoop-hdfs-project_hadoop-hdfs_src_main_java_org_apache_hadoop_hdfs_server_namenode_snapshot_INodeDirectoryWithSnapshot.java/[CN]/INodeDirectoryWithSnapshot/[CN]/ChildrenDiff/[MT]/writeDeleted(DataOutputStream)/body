{
  final List<INode> deleted=getDeletedList();
  out.writeInt(deleted.size());
  for (  INode node : deleted) {
    if (node.isDirectory()) {
      FSImageSerialization.writeINodeDirectory((INodeDirectory)node,out);
    }
 else {
      final List<INode> created=getCreatedList();
      int createdIndex=search(created,node.getKey());
      if (createdIndex < 0) {
        FSImageSerialization.writeINodeFile((INodeFile)node,out,true);
      }
 else {
        INodeFile cNode=(INodeFile)created.get(createdIndex);
        INodeFile dNode=(INodeFile)node;
        if (INodeFile.isOfSameFile(cNode,dNode)) {
          FSImageSerialization.writeINodeFile(dNode,out,false);
        }
 else {
          FSImageSerialization.writeINodeFile(dNode,out,true);
        }
      }
    }
  }
}
