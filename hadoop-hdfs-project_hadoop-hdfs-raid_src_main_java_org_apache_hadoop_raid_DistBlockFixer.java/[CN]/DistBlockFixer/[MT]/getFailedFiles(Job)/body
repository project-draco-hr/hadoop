{
  Set<String> failedFiles=new HashSet<String>();
  Path outDir=SequenceFileOutputFormat.getOutputPath(job);
  FileSystem fs=outDir.getFileSystem(getConf());
  if (!fs.getFileStatus(outDir).isDir()) {
    throw new IOException(outDir.toString() + " is not a directory");
  }
  FileStatus[] files=fs.listStatus(outDir);
  for (  FileStatus f : files) {
    Path fPath=f.getPath();
    if ((!f.isDir()) && (fPath.getName().startsWith(PART_PREFIX))) {
      LOG.info("opening " + fPath.toString());
      SequenceFile.Reader reader=new SequenceFile.Reader(fs,fPath,getConf());
      Text key=new Text();
      Text value=new Text();
      while (reader.next(key,value)) {
        failedFiles.add(key.toString());
      }
      reader.close();
    }
  }
  return failedFiles;
}
