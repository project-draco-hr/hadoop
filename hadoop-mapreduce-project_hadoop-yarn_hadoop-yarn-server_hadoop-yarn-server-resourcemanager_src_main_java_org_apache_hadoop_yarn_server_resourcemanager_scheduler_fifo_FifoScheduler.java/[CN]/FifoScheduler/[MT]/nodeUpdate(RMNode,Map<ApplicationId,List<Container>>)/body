{
  SchedulerNode node=getNode(rmNode.getNodeID());
  for (  List<Container> appContainers : remoteContainers.values()) {
    for (    Container container : appContainers) {
      if (getApplication(container.getId().getAppAttemptId()) != null) {
        if (container.getState() == ContainerState.RUNNING) {
          containerLaunchedOnNode(container,node);
        }
 else {
          containerCompleted(getRMContainer(container.getId()),RMContainerEventType.FINISHED);
        }
      }
 else {
        LOG.warn("Scheduler not tracking application " + container.getId().getAppAttemptId());
      }
    }
  }
  if (Resources.greaterThanOrEqual(node.getAvailableResource(),minimumAllocation)) {
    LOG.info("Node heartbeat " + rmNode.getNodeID() + " available resource = "+ node.getAvailableResource());
    assignContainers(node);
    LOG.info("Node after allocation " + rmNode.getNodeID() + " resource = "+ node.getAvailableResource());
  }
  metrics.setAvailableResourcesToQueue(Resources.subtract(clusterResource,usedResource));
}
