{
  LOG.info("-delete option is enabled. About to remove entries from " + "target that are missing in source");
  Path sourceListing=new Path(conf.get(DistCpConstants.CONF_LABEL_LISTING_FILE_PATH));
  FileSystem clusterFS=sourceListing.getFileSystem(conf);
  Path sortedSourceListing=DistCpUtils.sortListing(clusterFS,conf,sourceListing);
  Path targetListing=new Path(sourceListing.getParent(),"targetListing.seq");
  CopyListing target=new GlobbedCopyListing(new Configuration(conf),null);
  List<Path> targets=new ArrayList<Path>(1);
  Path targetFinalPath=new Path(conf.get(DistCpConstants.CONF_LABEL_TARGET_FINAL_PATH));
  targets.add(targetFinalPath);
  DistCpOptions options=new DistCpOptions(targets,new Path("/NONE"));
  options.setOverwrite(overwrite);
  options.setSyncFolder(syncFolder);
  options.setTargetPathExists(targetPathExists);
  target.buildListing(targetListing,options);
  Path sortedTargetListing=DistCpUtils.sortListing(clusterFS,conf,targetListing);
  long totalLen=clusterFS.getFileStatus(sortedTargetListing).getLen();
  SequenceFile.Reader sourceReader=new SequenceFile.Reader(conf,SequenceFile.Reader.file(sortedSourceListing));
  SequenceFile.Reader targetReader=new SequenceFile.Reader(conf,SequenceFile.Reader.file(sortedTargetListing));
  long deletedEntries=0;
  try {
    FileStatus srcFileStatus=new FileStatus();
    Text srcRelPath=new Text();
    FileStatus trgtFileStatus=new FileStatus();
    Text trgtRelPath=new Text();
    FileSystem targetFS=targetFinalPath.getFileSystem(conf);
    boolean srcAvailable=sourceReader.next(srcRelPath,srcFileStatus);
    while (targetReader.next(trgtRelPath,trgtFileStatus)) {
      while (srcAvailable && trgtRelPath.compareTo(srcRelPath) > 0) {
        srcAvailable=sourceReader.next(srcRelPath,srcFileStatus);
      }
      if (srcAvailable && trgtRelPath.equals(srcRelPath))       continue;
      boolean result=(!targetFS.exists(trgtFileStatus.getPath()) || targetFS.delete(trgtFileStatus.getPath(),true));
      if (result) {
        LOG.info("Deleted " + trgtFileStatus.getPath() + " - Missing at source");
        deletedEntries++;
      }
 else {
        throw new IOException("Unable to delete " + trgtFileStatus.getPath());
      }
      taskAttemptContext.progress();
      taskAttemptContext.setStatus("Deleting missing files from target. [" + targetReader.getPosition() * 100 / totalLen + "%]");
    }
  }
  finally {
    IOUtils.closeStream(sourceReader);
    IOUtils.closeStream(targetReader);
  }
  LOG.info("Deleted " + deletedEntries + " from target: "+ targets.get(0));
}
