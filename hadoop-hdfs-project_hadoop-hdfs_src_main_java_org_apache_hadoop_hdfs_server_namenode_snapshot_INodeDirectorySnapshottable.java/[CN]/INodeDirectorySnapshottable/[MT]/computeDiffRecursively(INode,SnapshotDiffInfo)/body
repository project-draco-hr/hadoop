{
  ChildrenDiff diff=new ChildrenDiff();
  if (node instanceof INodeDirectory) {
    INodeDirectory dir=(INodeDirectory)node;
    if (dir instanceof INodeDirectoryWithSnapshot) {
      INodeDirectoryWithSnapshot sdir=(INodeDirectoryWithSnapshot)dir;
      boolean change=sdir.computeDiffBetweenSnapshots(diffReport.from,diffReport.to,diff);
      if (change) {
        diffReport.addDirDiff(sdir,diff);
      }
    }
    ReadOnlyList<INode> children=dir.getChildrenList(diffReport.isFromEarlier() ? diffReport.to : diffReport.from);
    for (    INode child : children) {
      if (diff.searchCreated(child.getLocalNameBytes()) == null && diff.searchDeleted(child.getLocalNameBytes()) == null) {
        computeDiffRecursively(child,diffReport);
      }
    }
  }
 else   if (node instanceof FileWithSnapshot) {
    FileWithSnapshot file=(FileWithSnapshot)node;
    Snapshot earlierSnapshot=diffReport.isFromEarlier() ? diffReport.from : diffReport.to;
    Snapshot laterSnapshot=diffReport.isFromEarlier() ? diffReport.to : diffReport.from;
    boolean change=file.getDiffs().changedBetweenSnapshots(earlierSnapshot,laterSnapshot);
    if (change) {
      diffReport.addFileDiff(file.asINodeFile());
    }
  }
}
