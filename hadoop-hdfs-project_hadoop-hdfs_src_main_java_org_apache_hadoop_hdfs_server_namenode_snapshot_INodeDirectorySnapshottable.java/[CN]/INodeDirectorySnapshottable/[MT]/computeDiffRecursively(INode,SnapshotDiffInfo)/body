{
  ChildrenDiff diff=new ChildrenDiff();
  if (node.isDirectory()) {
    INodeDirectory dir=node.asDirectory();
    if (dir instanceof INodeDirectoryWithSnapshot) {
      INodeDirectoryWithSnapshot sdir=(INodeDirectoryWithSnapshot)dir;
      boolean change=sdir.computeDiffBetweenSnapshots(diffReport.from,diffReport.to,diff);
      if (change) {
        diffReport.addDirDiff(sdir,diff);
      }
    }
    ReadOnlyList<INode> children=dir.getChildrenList(diffReport.isFromEarlier() ? diffReport.to : diffReport.from);
    for (    INode child : children) {
      final byte[] name=child.getLocalNameBytes();
      if (diff.searchIndex(ListType.CREATED,name) < 0 && diff.searchIndex(ListType.DELETED,name) < 0) {
        computeDiffRecursively(child,diffReport);
      }
    }
  }
 else   if (node.isFile() && node.asFile() instanceof FileWithSnapshot) {
    FileWithSnapshot file=(FileWithSnapshot)node.asFile();
    Snapshot earlierSnapshot=diffReport.isFromEarlier() ? diffReport.from : diffReport.to;
    Snapshot laterSnapshot=diffReport.isFromEarlier() ? diffReport.to : diffReport.from;
    boolean change=file.getDiffs().changedBetweenSnapshots(earlierSnapshot,laterSnapshot);
    if (change) {
      diffReport.addFileDiff(file.asINodeFile());
    }
  }
}
