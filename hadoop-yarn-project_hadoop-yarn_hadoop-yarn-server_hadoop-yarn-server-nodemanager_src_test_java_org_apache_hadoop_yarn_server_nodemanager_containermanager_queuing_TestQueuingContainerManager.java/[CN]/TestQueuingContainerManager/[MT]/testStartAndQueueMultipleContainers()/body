{
  shouldDeleteWait=true;
  containerManager.start();
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  List<StartContainerRequest> list=new ArrayList<>();
  list.add(StartContainerRequest.newInstance(containerLaunchContext,createContainerToken(createContainerId(0),DUMMY_RM_IDENTIFIER,context.getNodeId(),user,BuilderUtils.newResource(2048,1),context.getContainerTokenSecretManager(),null,ExecutionType.OPPORTUNISTIC)));
  list.add(StartContainerRequest.newInstance(containerLaunchContext,createContainerToken(createContainerId(1),DUMMY_RM_IDENTIFIER,context.getNodeId(),user,BuilderUtils.newResource(1024,1),context.getContainerTokenSecretManager(),null,ExecutionType.OPPORTUNISTIC)));
  list.add(StartContainerRequest.newInstance(containerLaunchContext,createContainerToken(createContainerId(2),DUMMY_RM_IDENTIFIER,context.getNodeId(),user,BuilderUtils.newResource(1024,1),context.getContainerTokenSecretManager(),null,ExecutionType.OPPORTUNISTIC)));
  StartContainersRequest allRequests=StartContainersRequest.newInstance(list);
  containerManager.startContainers(allRequests);
  Thread.sleep(5000);
  List<ContainerId> statList=new ArrayList<ContainerId>();
  for (int i=0; i < 3; i++) {
    statList.add(createContainerId(i));
  }
  GetContainerStatusesRequest statRequest=GetContainerStatusesRequest.newInstance(Arrays.asList(createContainerId(0)));
  List<ContainerStatus> containerStatuses=containerManager.getContainerStatuses(statRequest).getContainerStatuses();
  for (  ContainerStatus status : containerStatuses) {
    if (status.getContainerId().equals(createContainerId(0))) {
      Assert.assertEquals(org.apache.hadoop.yarn.api.records.ContainerState.RUNNING,status.getState());
    }
 else {
      Assert.assertEquals(org.apache.hadoop.yarn.api.records.ContainerState.QUEUED,status.getState());
    }
  }
  Assert.assertEquals(2,containerManager.getContext().getQueuingContext().getQueuedContainers().size());
  Assert.assertEquals(0,((QueuingContainerManagerImpl)containerManager).getNumQueuedGuaranteedContainers());
  Assert.assertEquals(2,((QueuingContainerManagerImpl)containerManager).getNumQueuedOpportunisticContainers());
}
