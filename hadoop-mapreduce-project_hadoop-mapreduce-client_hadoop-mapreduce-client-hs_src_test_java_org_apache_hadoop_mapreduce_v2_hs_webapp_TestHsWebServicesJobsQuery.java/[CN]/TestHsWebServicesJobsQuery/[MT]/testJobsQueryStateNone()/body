{
  WebResource r=resource();
  ArrayList<JobState> JOB_STATES=new ArrayList<JobState>(Arrays.asList(JobState.values()));
  Map<JobId,Job> jobsMap=appContext.getAllJobs();
  for (  Map.Entry<JobId,Job> entry : jobsMap.entrySet()) {
    JOB_STATES.remove(entry.getValue().getState());
  }
  assertTrue("No unused job states",JOB_STATES.size() > 0);
  JobState notInUse=JOB_STATES.get(0);
  ClientResponse response=r.path("ws").path("v1").path("history").path("mapreduce").path("jobs").queryParam("state",notInUse.toString()).accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  JSONObject json=response.getEntity(JSONObject.class);
  assertEquals("incorrect number of elements",1,json.length());
  assertEquals("jobs is not null",JSONObject.NULL,json.get("jobs"));
}
