{
  WebResource r=resource();
  ClientResponse response=r.path("ws").path("v1").path("history").path("mapreduce").path("jobs").queryParam("startedTimeEnd","efsd").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(Status.BAD_REQUEST,response.getClientResponseStatus());
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  JSONObject msg=response.getEntity(JSONObject.class);
  JSONObject exception=msg.getJSONObject("RemoteException");
  assertEquals("incorrect number of elements",3,exception.length());
  String message=exception.getString("message");
  String type=exception.getString("exception");
  String classname=exception.getString("javaClassName");
  WebServicesTestUtils.checkStringMatch("exception message","java.lang.Exception: Invalid number format: For input string: \"efsd\"",message);
  WebServicesTestUtils.checkStringMatch("exception type","BadRequestException",type);
  WebServicesTestUtils.checkStringMatch("exception classname","org.apache.hadoop.yarn.webapp.BadRequestException",classname);
}
