{
  Random rand=new Random();
  int serverPort=30000 + rand.nextInt(10000);
  int retries=10;
  while (true) {
    try {
      RpcProgram program=new TestFrameDecoder.TestRpcProgram("TestRpcProgram","localhost",serverPort,100000,1,2);
      SimpleTcpServer tcpServer=new SimpleTcpServer(serverPort,program,1);
      tcpServer.run();
      break;
    }
 catch (    ChannelException ce) {
      if (retries-- > 0) {
        serverPort+=rand.nextInt(20);
      }
 else {
        throw ce;
      }
    }
  }
  XDR xdrOut=createGetportMount();
  int headerSize=xdrOut.size();
  int bufsize=2 * 1024 * 1024;
  byte[] buffer=new byte[bufsize];
  xdrOut.writeFixedOpaque(buffer);
  int requestSize=xdrOut.size() - headerSize;
  testRequest(xdrOut,serverPort);
  assertEquals(requestSize,resultSize);
}
