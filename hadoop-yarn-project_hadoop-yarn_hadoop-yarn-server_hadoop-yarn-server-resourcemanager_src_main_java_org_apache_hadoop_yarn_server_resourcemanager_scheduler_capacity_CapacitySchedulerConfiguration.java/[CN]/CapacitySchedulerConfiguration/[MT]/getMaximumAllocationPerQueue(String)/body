{
  String queuePrefix=getQueuePrefix(queue);
  long maxAllocationMbPerQueue=getInt(queuePrefix + MAXIMUM_ALLOCATION_MB,(int)UNDEFINED);
  int maxAllocationVcoresPerQueue=getInt(queuePrefix + MAXIMUM_ALLOCATION_VCORES,(int)UNDEFINED);
  if (LOG.isDebugEnabled()) {
    LOG.debug("max alloc mb per queue for " + queue + " is "+ maxAllocationMbPerQueue);
    LOG.debug("max alloc vcores per queue for " + queue + " is "+ maxAllocationVcoresPerQueue);
  }
  Resource clusterMax=getMaximumAllocation();
  if (maxAllocationMbPerQueue == (int)UNDEFINED) {
    LOG.info("max alloc mb per queue for " + queue + " is undefined");
    maxAllocationMbPerQueue=clusterMax.getMemorySize();
  }
  if (maxAllocationVcoresPerQueue == (int)UNDEFINED) {
    LOG.info("max alloc vcore per queue for " + queue + " is undefined");
    maxAllocationVcoresPerQueue=clusterMax.getVirtualCores();
  }
  Resource result=Resources.createResource(maxAllocationMbPerQueue,maxAllocationVcoresPerQueue);
  if (maxAllocationMbPerQueue > clusterMax.getMemorySize() || maxAllocationVcoresPerQueue > clusterMax.getVirtualCores()) {
    throw new IllegalArgumentException("Queue maximum allocation cannot be larger than the cluster setting" + " for queue " + queue + " max allocation per queue: "+ result+ " cluster setting: "+ clusterMax);
  }
  return result;
}
