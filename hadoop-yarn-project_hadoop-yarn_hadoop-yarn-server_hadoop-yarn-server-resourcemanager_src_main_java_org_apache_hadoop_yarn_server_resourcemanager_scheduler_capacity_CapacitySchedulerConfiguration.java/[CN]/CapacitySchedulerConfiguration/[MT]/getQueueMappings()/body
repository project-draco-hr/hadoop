{
  List<QueueMapping> mappings=new ArrayList<QueueMapping>();
  Collection<String> mappingsString=getTrimmedStringCollection(QUEUE_MAPPING);
  for (  String mappingValue : mappingsString) {
    String[] mapping=getTrimmedStringCollection(mappingValue,":").toArray(new String[]{});
    if (mapping.length != 3 || mapping[1].length() == 0 || mapping[2].length() == 0) {
      throw new IllegalArgumentException("Illegal queue mapping " + mappingValue);
    }
    QueueMapping m;
    try {
      QueueMapping.MappingType mappingType;
      if (mapping[0].equals("u")) {
        mappingType=QueueMapping.MappingType.USER;
      }
 else       if (mapping[0].equals("g")) {
        mappingType=QueueMapping.MappingType.GROUP;
      }
 else {
        throw new IllegalArgumentException("unknown mapping prefix " + mapping[0]);
      }
      m=new QueueMapping(mappingType,mapping[1],mapping[2]);
    }
 catch (    Throwable t) {
      throw new IllegalArgumentException("Illegal queue mapping " + mappingValue);
    }
    if (m != null) {
      mappings.add(m);
    }
  }
  return mappings;
}
