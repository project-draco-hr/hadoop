{
  Map<String,MetricsConfig> map=c.getInstanceConfigs("t1");
  Map<String,MetricsConfig> map2=c.getInstanceConfigs("t2");
  assertEquals("number of t1 instances",2,map.size());
  assertEquals("number of t2 instances",1,map2.size());
  assertTrue("contains t1 instance i1",map.containsKey("i1"));
  assertTrue("contains t1 instance 42",map.containsKey("42"));
  assertTrue("contains t2 instance i1",map2.containsKey("i1"));
  MetricsConfig t1i1=map.get("i1");
  MetricsConfig t1i42=map.get("42");
  MetricsConfig t2i1=map2.get("i1");
  LOG.debug("--- t1 instance i1:" + t1i1);
  LOG.debug("--- t1 instance 42:" + t1i42);
  LOG.debug("--- t2 instance i1:" + t2i1);
  Configuration t1expected1=new ConfigBuilder().add("name","p1.t1.i1.name").config;
  Configuration t1expected42=new ConfigBuilder().add("bar","p1.t1.42.bar").config;
  Configuration t2expected1=new ConfigBuilder().add("foo","p1.t2.i1.foo").config;
  assertEq(t1expected1,t1i1);
  assertEq(t1expected42,t1i42);
  assertEq(t2expected1,t2i1);
  LOG.debug("asserting foo == default foo");
  assertEquals("value of foo in t1 instance i1","default foo",t1i1.getString("foo"));
  assertEquals("value of bar in t1 instance i1","p1.t1 default bar",t1i1.getString("bar"));
  assertEquals("value of foo in t1 instance 42","default foo",t1i42.getString("foo"));
  assertEquals("value of foo in t2 instance i1","p1.t2.i1.foo",t2i1.getString("foo"));
  assertEquals("value of bar in t2 instance i1","p1 default bar",t2i1.getString("bar"));
}
