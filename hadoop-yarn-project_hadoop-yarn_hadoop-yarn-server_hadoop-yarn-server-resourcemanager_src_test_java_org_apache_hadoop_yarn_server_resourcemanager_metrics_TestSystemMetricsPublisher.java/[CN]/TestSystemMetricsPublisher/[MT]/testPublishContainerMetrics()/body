{
  ContainerId containerId=ContainerId.newContainerId(ApplicationAttemptId.newInstance(ApplicationId.newInstance(0,1),1),1);
  RMContainer container=createRMContainer(containerId);
  metricsPublisher.containerCreated(container,container.getCreationTime());
  metricsPublisher.containerFinished(container,container.getFinishTime());
  TimelineEntity entity=null;
  do {
    entity=store.getEntity(containerId.toString(),ContainerMetricsConstants.ENTITY_TYPE,EnumSet.allOf(Field.class));
  }
 while (entity == null || entity.getEvents().size() < 2);
  Assert.assertEquals(ContainerMetricsConstants.ENTITY_TYPE,entity.getEntityType());
  Assert.assertEquals(containerId.toString(),entity.getEntityId());
  Assert.assertEquals(containerId.getApplicationAttemptId().toString(),entity.getPrimaryFilters().get(ContainerMetricsConstants.PARENT_PRIMARIY_FILTER).iterator().next());
  Assert.assertEquals(container.getAllocatedNode().getHost(),entity.getOtherInfo().get(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO));
  Assert.assertEquals(container.getAllocatedNode().getPort(),entity.getOtherInfo().get(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO));
  Assert.assertEquals(container.getAllocatedResource().getMemory(),entity.getOtherInfo().get(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO));
  Assert.assertEquals(container.getAllocatedResource().getVirtualCores(),entity.getOtherInfo().get(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO));
  Assert.assertEquals(container.getAllocatedPriority().getPriority(),entity.getOtherInfo().get(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO));
  boolean hasCreatedEvent=false;
  boolean hasFinishedEvent=false;
  for (  TimelineEvent event : entity.getEvents()) {
    if (event.getEventType().equals(ContainerMetricsConstants.CREATED_EVENT_TYPE)) {
      hasCreatedEvent=true;
      Assert.assertEquals(container.getCreationTime(),event.getTimestamp());
    }
 else     if (event.getEventType().equals(ContainerMetricsConstants.FINISHED_EVENT_TYPE)) {
      hasFinishedEvent=true;
      Assert.assertEquals(container.getFinishTime(),event.getTimestamp());
      Assert.assertEquals(container.getDiagnosticsInfo(),event.getEventInfo().get(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO));
      Assert.assertEquals(container.getContainerExitStatus(),event.getEventInfo().get(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO));
      Assert.assertEquals(container.getContainerState().toString(),event.getEventInfo().get(ContainerMetricsConstants.STATE_EVENT_INFO));
    }
  }
  Assert.assertTrue(hasCreatedEvent && hasFinishedEvent);
}
