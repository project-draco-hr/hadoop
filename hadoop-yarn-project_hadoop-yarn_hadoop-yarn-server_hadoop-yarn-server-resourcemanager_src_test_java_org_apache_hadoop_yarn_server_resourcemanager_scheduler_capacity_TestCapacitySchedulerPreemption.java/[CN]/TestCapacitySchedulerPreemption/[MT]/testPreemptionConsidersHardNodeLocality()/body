{
  MockRM rm1=new MockRM(conf);
  rm1.getRMContext().setNodeLabelManager(mgr);
  rm1.start();
  MockNM nm1=rm1.registerNode("h1:1234",4 * GB);
  MockNM nm2=rm1.registerNode("h2:1234",4 * GB);
  CapacityScheduler cs=(CapacityScheduler)rm1.getResourceScheduler();
  RMNode rmNode1=rm1.getRMContext().getRMNodes().get(nm1.getNodeId());
  RMNode rmNode2=rm1.getRMContext().getRMNodes().get(nm2.getNodeId());
  RMApp app1=rm1.submitApp(1 * GB,"app","user",null,"a");
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  am1.allocate("*",1 * GB,6,new ArrayList<ContainerId>());
  for (int i=0; i < 3; i++) {
    cs.handle(new NodeUpdateSchedulerEvent(rmNode1));
  }
  for (int i=0; i < 3; i++) {
    cs.handle(new NodeUpdateSchedulerEvent(rmNode2));
  }
  FiCaSchedulerApp schedulerApp1=cs.getApplicationAttempt(am1.getApplicationAttemptId());
  Assert.assertEquals(7,schedulerApp1.getLiveContainers().size());
  RMApp app2=rm1.submitApp(1 * GB,"app","user",null,"c");
  MockAM am2=MockRM.launchAndRegisterAM(app2,rm1,nm2);
  Assert.assertEquals(0 * GB,cs.getNode(nm1.getNodeId()).getUnallocatedResource().getMemory());
  Assert.assertEquals(0 * GB,cs.getNode(nm2.getNodeId()).getUnallocatedResource().getMemory());
  am2.allocate(Arrays.asList(ResourceRequest.newInstance(Priority.newInstance(1),ResourceRequest.ANY,Resources.createResource(1 * GB),1,true),ResourceRequest.newInstance(Priority.newInstance(1),"h3",Resources.createResource(1 * GB),1,false),ResourceRequest.newInstance(Priority.newInstance(1),"/default-rack",Resources.createResource(1 * GB),1,false)),null);
  SchedulingEditPolicy editPolicy=getSchedulingEditPolicy(rm1);
  editPolicy.editSchedule();
  editPolicy.editSchedule();
  PreemptionManager pm=cs.getPreemptionManager();
  Map<ContainerId,RMContainer> killableContainers=waitKillableContainersSize(pm,"a",RMNodeLabelsManager.NO_LABEL,1);
  Assert.assertEquals(killableContainers.entrySet().iterator().next().getKey().getApplicationAttemptId(),am1.getApplicationAttemptId());
  cs.handle(new NodeUpdateSchedulerEvent(rmNode2));
  FiCaSchedulerApp schedulerApp2=cs.getApplicationAttempt(am2.getApplicationAttemptId());
  Assert.assertEquals(7,schedulerApp1.getLiveContainers().size());
  Assert.assertEquals(1,schedulerApp2.getLiveContainers().size());
  cs.handle(new NodeUpdateSchedulerEvent(rmNode2));
  Assert.assertEquals(7,schedulerApp1.getLiveContainers().size());
  Assert.assertEquals(1,schedulerApp2.getLiveContainers().size());
  rm1.close();
}
