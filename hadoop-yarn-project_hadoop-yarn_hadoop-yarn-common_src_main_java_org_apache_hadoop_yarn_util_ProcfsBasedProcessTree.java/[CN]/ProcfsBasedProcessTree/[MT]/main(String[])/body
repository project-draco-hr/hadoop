{
  if (args.length != 1) {
    System.out.println("Provide <pid of process to monitor>");
    return;
  }
  int numprocessors=ResourceCalculatorPlugin.getResourceCalculatorPlugin(null,null).getNumProcessors();
  System.out.println("Number of processors " + numprocessors);
  System.out.println("Creating ProcfsBasedProcessTree for process " + args[0]);
  ProcfsBasedProcessTree procfsBasedProcessTree=new ProcfsBasedProcessTree(args[0]);
  procfsBasedProcessTree.updateProcessTree();
  System.out.println(procfsBasedProcessTree.getProcessTreeDump());
  System.out.println("Get cpu usage " + procfsBasedProcessTree.getCpuUsagePercent());
  try {
    Thread.sleep(500L);
  }
 catch (  InterruptedException e) {
  }
  procfsBasedProcessTree.updateProcessTree();
  System.out.println(procfsBasedProcessTree.getProcessTreeDump());
  System.out.println("Cpu usage  " + procfsBasedProcessTree.getCpuUsagePercent());
  System.out.println("Vmem usage in bytes " + procfsBasedProcessTree.getVirtualMemorySize());
  System.out.println("Rss mem usage in bytes " + procfsBasedProcessTree.getRssMemorySize());
}
