{
  long total=UNAVAILABLE;
  for (  ProcessInfo p : processTree.values()) {
    if ((p != null) && (p.getAge() > olderThanAge)) {
      ProcessTreeSmapMemInfo procMemInfo=processSMAPTree.get(p.getPid());
      if (procMemInfo != null) {
        for (        ProcessSmapMemoryInfo info : procMemInfo.getMemoryInfoList()) {
          if (info.getPermission().trim().equalsIgnoreCase(READ_ONLY_WITH_SHARED_PERMISSION) || info.getPermission().trim().equalsIgnoreCase(READ_EXECUTE_WITH_SHARED_PERMISSION)) {
            continue;
          }
          if (total == UNAVAILABLE) {
            total=0;
          }
          total+=Math.min(info.sharedDirty,info.pss) + info.privateDirty + info.privateClean;
          if (LOG.isDebugEnabled()) {
            LOG.debug(" total(" + olderThanAge + "): PID : "+ p.getPid()+ ", SharedDirty : "+ info.sharedDirty+ ", PSS : "+ info.pss+ ", Private_Dirty : "+ info.privateDirty+ ", Private_Clean : "+ info.privateClean+ ", total : "+ (total * KB_TO_BYTES));
          }
        }
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug(procMemInfo.toString());
      }
    }
  }
  if (total > 0) {
    total*=KB_TO_BYTES;
  }
  LOG.info("SmapBasedCumulativeRssmem (bytes) : " + total);
  return total;
}
