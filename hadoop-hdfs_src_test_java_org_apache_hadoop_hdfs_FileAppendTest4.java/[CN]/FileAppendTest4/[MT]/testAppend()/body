{
  final int maxOldFileLen=2 * BLOCK_SIZE + 1;
  final int maxFlushedBytes=BLOCK_SIZE;
  byte[] contents=AppendTestUtil.initBuffer(maxOldFileLen + 2 * maxFlushedBytes);
  for (int oldFileLen=0; oldFileLen <= maxOldFileLen; oldFileLen++) {
    for (int flushedBytes1=0; flushedBytes1 <= maxFlushedBytes; flushedBytes1++) {
      for (int flushedBytes2=0; flushedBytes2 <= maxFlushedBytes; flushedBytes2++) {
        final int fileLen=oldFileLen + flushedBytes1 + flushedBytes2;
        final Path p=new Path("foo" + oldFileLen + "_"+ flushedBytes1+ "_"+ flushedBytes2);
        LOG.info("Creating file " + p);
        FSDataOutputStream out=fs.create(p,false,conf.getInt("io.file.buffer.size",4096),REPLICATION,BLOCK_SIZE);
        out.write(contents,0,oldFileLen);
        out.close();
        out=fs.append(p);
        out.write(contents,oldFileLen,flushedBytes1);
        out.hflush();
        out.write(contents,oldFileLen + flushedBytes1,flushedBytes2);
        out.close();
        AppendTestUtil.checkFullFile(fs,p,fileLen,contents,p.toString());
        fs.delete(p,false);
      }
    }
  }
}
