{
  if (b == null) {
    throw new IllegalArgumentException();
  }
 else   if (off < 0 || len < 0 || len > b.length - off) {
    throw new IndexOutOfBoundsException();
  }
 else   if (len == 0) {
    return 0;
  }
  if (streamIsClosed) {
    throw new IOException("Stream already closed");
  }
  int status=doBufferAvailabilityCheck();
  if (status == -1) {
    return status;
  }
  int byteRead=0;
  long availableBytes=validDataHoldingSize - off;
  long requestedBytes=bufferOffset + len - off;
  if (requestedBytes <= availableBytes) {
    System.arraycopy(data,bufferOffset,b,off,len);
    bufferOffset+=len;
    byteRead=len;
  }
 else {
    byteRead=super.read(b,off,len);
  }
  if (statistics != null) {
    statistics.incrementBytesRead(byteRead);
  }
  return byteRead;
}
