{
  if (status == null) {
    return null;
  }
  if (featureGetBlockLocationLocallyBundled) {
    if ((offset < 0) || (length < 0)) {
      throw new IllegalArgumentException("Invalid start or len parameter");
    }
    if (status.getLen() < offset) {
      return new BlockLocation[0];
    }
    final String[] name={"localhost"};
    final String[] host={"localhost"};
    long blockSize=ADLConfKeys.DEFAULT_EXTENT_SIZE;
    int numberOfLocations=(int)(length / blockSize) + ((length % blockSize == 0) ? 0 : 1);
    BlockLocation[] locations=new BlockLocation[numberOfLocations];
    for (int i=0; i < locations.length; i++) {
      long currentOffset=offset + (i * blockSize);
      long currentLength=Math.min(blockSize,offset + length - currentOffset);
      locations[i]=new BlockLocation(name,host,currentOffset,currentLength);
    }
    return locations;
  }
 else {
    return getFileBlockLocations(status.getPath(),offset,length);
  }
}
