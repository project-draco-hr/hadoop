{
  MiniMRCluster mr=null;
  Path parent=new Path(TEST_DIR,"parent");
  try {
    FileSystem fs=FileSystem.getLocal(new JobConf());
    if (fs.exists(TEST_DIR) && !fs.delete(TEST_DIR,true)) {
      fail("Cannot delete TEST_DIR!");
    }
    if (fs.mkdirs(new Path(TEST_DIR,parent))) {
      if (!(new File(parent.toUri().getPath()).setWritable(false,false))) {
        fail("Cannot chmod parent!");
      }
    }
 else {
      fail("Cannot create parent dir!");
    }
    JobConf config=new JobConf();
    config.set(JTConfig.JT_PERSIST_JOBSTATUS,"true");
    config.set(JTConfig.JT_PERSIST_JOBSTATUS_HOURS,"1");
    config.set(JTConfig.JT_PERSIST_JOBSTATUS_DIR,new Path(parent,"child").toUri().getPath());
    boolean started=true;
    JobConf conf=MiniMRCluster.configureJobConf(config,"file:///",0,0,null);
    try {
      JobTracker jt=JobTracker.startTracker(conf);
    }
 catch (    IOException ex) {
      started=false;
    }
    assertFalse(started);
  }
  finally {
    new File(parent.toUri().getPath()).setWritable(true,false);
  }
}
