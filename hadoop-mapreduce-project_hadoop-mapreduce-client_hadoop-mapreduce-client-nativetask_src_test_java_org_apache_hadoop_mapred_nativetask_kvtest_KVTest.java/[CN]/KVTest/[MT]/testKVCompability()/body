{
  final FileSystem fs=FileSystem.get(nativekvtestconf);
  final String jobName="Test:" + keyclass.getSimpleName() + "--"+ valueclass.getSimpleName();
  final String inputPath=TestConstants.NATIVETASK_KVTEST_INPUTDIR + "/" + keyclass.getName()+ "/"+ valueclass.getName();
  final String nativeOutputPath=TestConstants.NATIVETASK_KVTEST_NATIVE_OUTPUTDIR + "/" + keyclass.getName()+ "/"+ valueclass.getName();
  fs.delete(new Path(nativeOutputPath),true);
  nativekvtestconf.set(TestConstants.NATIVETASK_KVTEST_CREATEFILE,"true");
  final KVJob nativeJob=new KVJob(jobName,nativekvtestconf,keyclass,valueclass,inputPath,nativeOutputPath);
  assertTrue("job should complete successfully",nativeJob.runJob());
  final String normalOutputPath=TestConstants.NATIVETASK_KVTEST_NORMAL_OUTPUTDIR + "/" + keyclass.getName()+ "/"+ valueclass.getName();
  fs.delete(new Path(normalOutputPath),true);
  hadoopkvtestconf.set(TestConstants.NATIVETASK_KVTEST_CREATEFILE,"false");
  final KVJob normalJob=new KVJob(jobName,hadoopkvtestconf,keyclass,valueclass,inputPath,normalOutputPath);
  assertTrue("job should complete successfully",normalJob.runJob());
  final boolean compareRet=ResultVerifier.verify(normalOutputPath,nativeOutputPath);
  assertEquals("job output not the same",true,compareRet);
  ResultVerifier.verifyCounters(normalJob.job,nativeJob.job);
  fs.close();
}
