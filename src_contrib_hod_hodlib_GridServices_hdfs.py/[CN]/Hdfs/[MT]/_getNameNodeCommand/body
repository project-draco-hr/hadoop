def _getNameNodeCommand(self, format=False, upgrade=False):
    sd = self.serviceDesc
    parentDirs = self.workDirs
    workDirs = []
    attrs = sd.getfinalAttrs().copy()
    envs = sd.getEnvs().copy()
    if ('fs.default.name' not in attrs):
        attrs['fs.default.name'] = 'fillinhostport'
    if (self.version < 16):
        if ('dfs.info.port' not in attrs):
            attrs['dfs.info.port'] = 'fillinport'
    elif ('dfs.http.address' not in attrs):
        attrs['dfs.http.address'] = 'fillinhostport'
    self._setWorkDirs(workDirs, envs, attrs, parentDirs, 'hdfs-nn')
    dict = {'name': 'namenode', }
    dict['program'] = os.path.join('bin', 'hadoop')
    argv = ['namenode']
    if format:
        argv.append('-format')
    elif upgrade:
        argv.append('-upgrade')
    dict['argv'] = argv
    dict['envs'] = envs
    dict['pkgdirs'] = sd.getPkgDirs()
    dict['workdirs'] = workDirs
    dict['final-attrs'] = attrs
    dict['attrs'] = sd.getAttrs()
    if format:
        dict['fg'] = 'true'
        dict['stdin'] = 'Y'
    cmd = CommandDesc(dict)
    return cmd
