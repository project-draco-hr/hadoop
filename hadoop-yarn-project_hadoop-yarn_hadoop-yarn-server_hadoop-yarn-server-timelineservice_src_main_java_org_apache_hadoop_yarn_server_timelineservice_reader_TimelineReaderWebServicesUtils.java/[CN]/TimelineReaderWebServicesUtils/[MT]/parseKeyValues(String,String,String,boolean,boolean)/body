{
  if (str == null) {
    return null;
  }
  TimelineFilterList list=new TimelineFilterList();
  String[] pairs=str.split(pairsDelim);
  for (  String pair : pairs) {
    if (pair == null || pair.trim().isEmpty()) {
      continue;
    }
    String[] pairStrs=pair.split(keyValuesDelim);
    if (pairStrs.length < 2) {
      continue;
    }
    if (!stringValue) {
      try {
        Object value=GenericObjectMapper.OBJECT_READER.readValue(pairStrs[1].trim());
        list.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,pairStrs[0].trim(),value));
      }
 catch (      IOException e) {
        list.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,pairStrs[0].trim(),pairStrs[1].trim()));
      }
    }
 else {
      String key=pairStrs[0].trim();
      if (multipleValues) {
        Set<Object> values=new HashSet<Object>();
        for (int i=1; i < pairStrs.length; i++) {
          values.add(pairStrs[i].trim());
        }
        list.addFilter(new TimelineKeyValuesFilter(TimelineCompareOp.EQUAL,key,values));
      }
 else {
        list.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,key,pairStrs[1].trim()));
      }
    }
  }
  return list;
}
