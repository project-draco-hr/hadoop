{
  int lsLimit=2;
  final Configuration conf=getTestConfiguration();
  conf.setInt(DFSConfigKeys.DFS_LIST_LIMIT,lsLimit);
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  try {
    final FileSystem fs=cluster.getFileSystem();
    Path dir=new Path("/test");
    Path file=new Path(dir,"file");
    int readOps=DFSTestUtil.getStatistics(fs).getReadOps();
    int writeOps=DFSTestUtil.getStatistics(fs).getWriteOps();
    int largeReadOps=DFSTestUtil.getStatistics(fs).getLargeReadOps();
    fs.mkdirs(dir);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    FSDataOutputStream out=fs.create(file,(short)1);
    out.close();
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    FileStatus status=fs.getFileStatus(file);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    fs.getFileBlockLocations(file,0,0);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    fs.getFileBlockLocations(status,0,0);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    FSDataInputStream in=fs.open(file);
    in.close();
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    fs.setReplication(file,(short)2);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    Path file1=new Path(dir,"file1");
    fs.rename(file,file1);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    fs.getContentSummary(file1);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    for (int i=0; i < 10; i++) {
      Path p=new Path(dir,Integer.toString(i));
      fs.mkdirs(p);
      FileStatus[] list=fs.listStatus(dir);
      if (list.length > lsLimit) {
        int iterations=(int)Math.ceil((double)list.length / lsLimit);
        largeReadOps+=iterations;
        readOps+=iterations;
      }
 else {
        readOps++;
      }
      checkStatistics(fs,readOps,++writeOps,largeReadOps);
    }
    fs.getStatus(file1);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    fs.getFileChecksum(file1);
    checkStatistics(fs,++readOps,writeOps,largeReadOps);
    fs.setPermission(file1,new FsPermission((short)0777));
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    fs.setTimes(file1,0L,0L);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    UserGroupInformation ugi=UserGroupInformation.getCurrentUser();
    fs.setOwner(file1,ugi.getUserName(),ugi.getGroupNames()[0]);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
    fs.delete(dir,true);
    checkStatistics(fs,readOps,++writeOps,largeReadOps);
  }
  finally {
    if (cluster != null)     cluster.shutdown();
  }
}
