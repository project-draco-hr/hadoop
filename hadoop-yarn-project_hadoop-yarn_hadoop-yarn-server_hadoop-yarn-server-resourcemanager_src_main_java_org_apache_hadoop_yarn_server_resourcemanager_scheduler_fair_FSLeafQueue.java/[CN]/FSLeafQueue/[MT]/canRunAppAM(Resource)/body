{
  float maxAMShare=scheduler.getAllocationConfiguration().getQueueMaxAMShare(getName());
  if (Math.abs(maxAMShare - -1.0f) < 0.0001) {
    return true;
  }
  Resource maxAMResource=Resources.multiply(getFairShare(),maxAMShare);
  Resource ifRunAMResource=Resources.add(amResourceUsage,amResource);
  boolean overMaxAMShareLimit=policy.checkIfAMResourceUsageOverLimit(ifRunAMResource,maxAMResource);
  if (!overMaxAMShareLimit && !policy.equals(SchedulingPolicy.getInstance(DominantResourceFairnessPolicy.class))) {
    overMaxAMShareLimit=isVCoresOverMaxResource(ifRunAMResource.getVirtualCores()) || ifRunAMResource.getVirtualCores() >= scheduler.getRootQueueMetrics().getAvailableVirtualCores();
  }
  return !overMaxAMShareLimit;
}
