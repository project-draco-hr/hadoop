{
  float maxAMShare=scheduler.getAllocationConfiguration().getQueueMaxAMShare(getName());
  if (Math.abs(maxAMShare - -1.0f) < 0.0001) {
    return true;
  }
  Resource maxResource=Resources.clone(getFairShare());
  if (maxResource.getMemorySize() == 0) {
    maxResource.setMemory(Math.min(scheduler.getRootQueueMetrics().getAvailableMB(),getMaxShare().getMemorySize()));
  }
  if (maxResource.getVirtualCoresSize() == 0) {
    maxResource.setVirtualCores(Math.min(scheduler.getRootQueueMetrics().getAvailableVirtualCores(),getMaxShare().getVirtualCoresSize()));
  }
  Resource maxAMResource=Resources.multiply(maxResource,maxAMShare);
  Resource ifRunAMResource=Resources.add(amResourceUsage,amResource);
  return Resources.fitsIn(ifRunAMResource,maxAMResource);
}
