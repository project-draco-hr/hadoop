{
  Resource assigned=Resources.none();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Node " + node.getNodeName() + " offered to queue: "+ getName()+ " fairShare: "+ getFairShare());
  }
  if (!assignContainerPreCheck(node)) {
    return assigned;
  }
  TreeSet<FSAppAttempt> pendingForResourceApps=new TreeSet<FSAppAttempt>(policy.getComparator());
  readLock.lock();
  try {
    for (    FSAppAttempt app : runnableApps) {
      Resource pending=app.getAppAttemptResourceUsage().getPending();
      if (!pending.equals(Resources.none())) {
        pendingForResourceApps.add(app);
      }
    }
  }
  finally {
    readLock.unlock();
  }
  for (  FSAppAttempt sched : pendingForResourceApps) {
    if (SchedulerAppUtils.isBlacklisted(sched,node,LOG)) {
      continue;
    }
    assigned=sched.assignContainer(node);
    if (!assigned.equals(Resources.none())) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Assigned container in queue:" + getName() + " "+ "container:"+ assigned);
      }
      break;
    }
  }
  return assigned;
}
