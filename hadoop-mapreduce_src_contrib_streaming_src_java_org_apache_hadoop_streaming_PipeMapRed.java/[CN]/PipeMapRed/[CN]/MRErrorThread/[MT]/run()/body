{
  Text line=new Text();
  LineReader lineReader=null;
  try {
    lineReader=new LineReader((InputStream)clientErr_,job_);
    while (lineReader.readLine(line) > 0) {
      String lineStr=line.toString();
      if (matchesReporter(lineStr)) {
        if (matchesCounter(lineStr)) {
          incrCounter(lineStr);
        }
 else         if (matchesStatus(lineStr)) {
          processProvidedStatus_=true;
          setStatus(lineStr);
        }
 else {
          LOG.warn("Cannot parse reporter line: " + lineStr);
        }
      }
 else {
        System.err.println(lineStr);
      }
      long now=System.currentTimeMillis();
      if (reporter != null && now - lastStderrReport > reporterErrDelay_) {
        lastStderrReport=now;
        reporter.progress();
      }
      line.clear();
    }
    if (lineReader != null) {
      lineReader.close();
    }
    if (clientErr_ != null) {
      clientErr_.close();
      clientErr_=null;
      LOG.info("MRErrorThread done");
    }
  }
 catch (  Throwable th) {
    outerrThreadsThrowable=th;
    LOG.warn(th);
    try {
      if (lineReader != null) {
        lineReader.close();
      }
      if (clientErr_ != null) {
        clientErr_.close();
        clientErr_=null;
      }
    }
 catch (    IOException io) {
      LOG.info(io);
    }
  }
}
