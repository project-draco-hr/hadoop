{
  Path p1=new Path("/p1");
  fs.mkdirs(p1);
  fs.setOwner(p1,BRUCE.getShortUserName(),"groupX");
  fsAsBruce.setAcl(p1,Lists.newArrayList(aclEntry(ACCESS,USER,READ),aclEntry(ACCESS,USER,"bruce",READ),aclEntry(ACCESS,GROUP,NONE),aclEntry(ACCESS,OTHER,NONE)));
  fsAsBruce.access(p1,FsAction.READ);
  try {
    fsAsBruce.access(p1,FsAction.WRITE);
    fail("The access call should have failed.");
  }
 catch (  AccessControlException e) {
  }
  Path badPath=new Path("/bad/bad");
  try {
    fsAsBruce.access(badPath,FsAction.READ);
    fail("The access call should have failed");
  }
 catch (  FileNotFoundException e) {
  }
  fsAsBruce.modifyAclEntries(p1,Lists.newArrayList(aclEntry(ACCESS,GROUP,"groupY",READ)));
  fsAsBob.access(p1,READ);
  try {
    fsAsBob.access(p1,WRITE);
    fail("The access call should have failed.");
  }
 catch (  AccessControlException e) {
  }
  fsAsBruce.modifyAclEntries(p1,Lists.newArrayList(aclEntry(ACCESS,GROUP,"groupZ",WRITE)));
  fsAsBob.access(p1,WRITE);
  fsAsBruce.modifyAclEntries(p1,Lists.newArrayList(aclEntry(ACCESS,USER,"bob",NONE)));
  try {
    fsAsBob.access(p1,READ);
    fail("The access call should have failed.");
  }
 catch (  AccessControlException e) {
  }
}
