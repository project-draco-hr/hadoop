{
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
  try {
    FileSystem fs=cluster.getFileSystem();
    Assert.assertTrue(fs.mkdirs(dir));
    Path a=new Path(dir,"a");
    Path b=new Path(dir,"b");
    DataOutputStream a_out=fs.create(a);
    a_out.writeBytes("something");
    Assert.assertTrue(hasLease(cluster,a));
    Assert.assertTrue(!hasLease(cluster,b));
    DataOutputStream b_out=fs.create(b);
    b_out.writeBytes("something");
    Assert.assertTrue(hasLease(cluster,a));
    Assert.assertTrue(hasLease(cluster,b));
    a_out.close();
    b_out.close();
    Assert.assertTrue(!hasLease(cluster,a));
    Assert.assertTrue(!hasLease(cluster,b));
    Path fileA=new Path(dir,"fileA");
    FSDataOutputStream fileA_out=fs.create(fileA);
    fileA_out.writeBytes("something");
    Assert.assertTrue("Failed to get the lease!",hasLease(cluster,fileA));
    fs.delete(dir,true);
    try {
      fileA_out.hflush();
      Assert.fail("Should validate file existence!");
    }
 catch (    FileNotFoundException e) {
      GenericTestUtils.assertExceptionContains("File does not exist",e);
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
