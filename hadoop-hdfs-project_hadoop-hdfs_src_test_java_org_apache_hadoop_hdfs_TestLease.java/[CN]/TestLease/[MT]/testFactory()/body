{
  final String[] groups=new String[]{"supergroup"};
  final UserGroupInformation[] ugi=new UserGroupInformation[3];
  for (int i=0; i < ugi.length; i++) {
    ugi[i]=UserGroupInformation.createUserForTesting("user" + i,groups);
  }
  final Configuration conf=new Configuration();
  final DFSClient c1=createDFSClientAs(ugi[0],conf);
  final DFSClient c2=createDFSClientAs(ugi[0],conf);
  Assert.assertEquals(c1.leaserenewer,c2.leaserenewer);
  final DFSClient c3=createDFSClientAs(ugi[1],conf);
  Assert.assertTrue(c1.leaserenewer != c3.leaserenewer);
  final DFSClient c4=createDFSClientAs(ugi[1],conf);
  Assert.assertEquals(c3.leaserenewer,c4.leaserenewer);
  final DFSClient c5=createDFSClientAs(ugi[2],conf);
  Assert.assertTrue(c1.leaserenewer != c5.leaserenewer);
  Assert.assertTrue(c3.leaserenewer != c5.leaserenewer);
}
