{
  int maxConcurrentMovers=10;
  for (int i=0; i < NUM_DATA_NODE; i++) {
    DataNode dn=cluster.getDataNodes().get(i);
    try {
      dn.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,"text");
      fail("ReconfigurationException expected");
    }
 catch (    ReconfigurationException expected) {
      assertTrue("expecting NumberFormatException",expected.getCause() instanceof NumberFormatException);
    }
    try {
      dn.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,String.valueOf(-1));
      fail("ReconfigurationException expected");
    }
 catch (    ReconfigurationException expected) {
      assertTrue("expecting IllegalArgumentException",expected.getCause() instanceof IllegalArgumentException);
    }
    try {
      dn.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,String.valueOf(0));
      fail("ReconfigurationException expected");
    }
 catch (    ReconfigurationException expected) {
      assertTrue("expecting IllegalArgumentException",expected.getCause() instanceof IllegalArgumentException);
    }
    dn.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,String.valueOf(maxConcurrentMovers));
    assertEquals(String.format("%s has wrong value",DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY),maxConcurrentMovers,dn.xserver.balanceThrottler.getMaxConcurrentMovers());
    assertEquals(String.format("%s has wrong value",DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY),maxConcurrentMovers,Integer.parseInt(dn.getConf().get(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY)));
    dn.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,null);
    assertEquals(String.format("%s has wrong value",DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY),DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_DEFAULT,dn.xserver.balanceThrottler.getMaxConcurrentMovers());
    assertEquals(String.format("expect %s is not configured",DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY),null,dn.getConf().get(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY));
  }
}
