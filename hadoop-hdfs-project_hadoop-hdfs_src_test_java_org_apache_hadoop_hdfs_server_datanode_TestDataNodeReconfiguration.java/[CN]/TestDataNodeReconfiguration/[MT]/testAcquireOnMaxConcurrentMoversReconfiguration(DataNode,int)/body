{
  int defaultMaxThreads=dataNode.getConf().getInt(DFSConfigKeys.DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,DFSConfigKeys.DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_DEFAULT);
  for (int i=0; i < defaultMaxThreads; i++) {
    assertEquals("should be able to get thread quota",true,dataNode.xserver.balanceThrottler.acquire());
  }
  assertEquals("should not be able to get thread quota",false,dataNode.xserver.balanceThrottler.acquire());
  dataNode.reconfigureProperty(DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,String.valueOf(maxConcurrentMovers));
  assertEquals("thread quota is wrong",maxConcurrentMovers,dataNode.xserver.balanceThrottler.getMaxConcurrentMovers());
  int val=Math.abs(maxConcurrentMovers - defaultMaxThreads);
  if (defaultMaxThreads < maxConcurrentMovers) {
    for (int i=0; i < val; i++) {
      assertEquals("should be able to get thread quota",true,dataNode.xserver.balanceThrottler.acquire());
    }
  }
 else   if (defaultMaxThreads > maxConcurrentMovers) {
    for (int i=0; i < val; i++) {
      assertEquals("should not be able to get thread quota",false,dataNode.xserver.balanceThrottler.acquire());
    }
  }
  assertEquals("should not be able to get thread quota",false,dataNode.xserver.balanceThrottler.acquire());
}
