{
  String[] editsDirs=cluster.getConfiguration(0).getTrimmedStrings(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY);
  shutDownMiniCluster();
  Configuration conf=getConf();
  conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_REQUIRED_KEY,editsDirs[0]);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_MINIMUM_KEY,0);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_KEY,0);
  setUpMiniCluster(conf,true);
  assertTrue(doAnEdit());
  invalidateEditsDirAtIndex(0,false,false);
  JournalAndStream nonRequiredJas=getJournalAndStream(1);
  EditLogFileOutputStream nonRequiredSpy=spyOnStream(nonRequiredJas);
  assertTrue(nonRequiredJas.isActive());
  try {
    doAnEdit();
    fail("A single failure of a required journal should have halted the NN");
  }
 catch (  RemoteException re) {
    assertTrue(re.getClassName().contains("ExitException"));
    GenericTestUtils.assertExceptionContains("setReadyToFlush failed for required journal",re);
  }
  Mockito.verify(nonRequiredSpy,Mockito.never()).setReadyToFlush();
  assertFalse(nonRequiredJas.isActive());
}
