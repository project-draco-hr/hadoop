{
  PeriodicStatsAccumulator cumulative=new CumulativePeriodicStats(8);
  PeriodicStatsAccumulator status=new StatePeriodicStats(8);
  cumulative.extend(0.0D,0);
  cumulative.extend(0.4375D,700);
  cumulative.extend(0.5625D,1100);
  cumulative.extend(0.625D,1300);
  cumulative.extend(1.0D,7901);
  int total=0;
  int[] results=cumulative.getValues();
  for (int i=0; i < 8; ++i) {
    System.err.println("segment i = " + results[i]);
  }
  assertEquals("Bad interpolation in cumulative segment 0",200,results[0]);
  assertEquals("Bad interpolation in cumulative segment 1",200,results[1]);
  assertEquals("Bad interpolation in cumulative segment 2",200,results[2]);
  assertEquals("Bad interpolation in cumulative segment 3",300,results[3]);
  assertEquals("Bad interpolation in cumulative segment 4",400,results[4]);
  assertEquals("Bad interpolation in cumulative segment 5",2200,results[5]);
  assertEquals("Bad interpolation in cumulative segment 6",2200,results[6]);
  assertEquals("Bad interpolation in cumulative segment 7",2201,results[7]);
  status.extend(0.0D,0);
  status.extend(1.0D / 16.0D,300);
  status.extend(3.0D / 16.0D,700);
  status.extend(7.0D / 16.0D,2300);
  status.extend(1.0D,1400);
  ;
  results=status.getValues();
  assertEquals("Bad interpolation in status segment 0",275,results[0]);
  assertEquals("Bad interpolation in status segment 1",750,results[1]);
  assertEquals("Bad interpolation in status segment 2",1500,results[2]);
  assertEquals("Bad interpolation in status segment 3",2175,results[3]);
  assertEquals("Bad interpolation in status segment 4",2100,results[4]);
  assertEquals("Bad interpolation in status segment 5",1900,results[5]);
  assertEquals("Bad interpolation in status segment 6",1700,results[6]);
  assertEquals("Bad interpolation in status segment 7",1500,results[7]);
}
