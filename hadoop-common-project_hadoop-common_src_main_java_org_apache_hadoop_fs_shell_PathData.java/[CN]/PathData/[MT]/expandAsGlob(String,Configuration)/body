{
  Path globPath=new Path(pattern);
  FileSystem fs=globPath.getFileSystem(conf);
  FileStatus[] stats=fs.globStatus(globPath);
  PathData[] items=null;
  if (stats == null) {
    pattern=pattern.replaceAll("\\\\(.)","$1");
    items=new PathData[]{new PathData(fs,pattern,null)};
  }
 else {
    PathType globType;
    URI globUri=globPath.toUri();
    if (globUri.getScheme() != null) {
      globType=PathType.HAS_SCHEME;
    }
 else     if (!globUri.getPath().isEmpty() && new Path(globUri.getPath()).isAbsolute()) {
      globType=PathType.SCHEMELESS_ABSOLUTE;
    }
 else {
      globType=PathType.RELATIVE;
    }
    items=new PathData[stats.length];
    int i=0;
    for (    FileStatus stat : stats) {
      URI matchUri=stat.getPath().toUri();
      String globMatch=null;
switch (globType) {
case HAS_SCHEME:
        if (globUri.getAuthority() == null) {
          matchUri=removeAuthority(matchUri);
        }
      globMatch=uriToString(matchUri,false);
    break;
case SCHEMELESS_ABSOLUTE:
  globMatch=matchUri.getPath();
break;
case RELATIVE:
URI cwdUri=fs.getWorkingDirectory().toUri();
globMatch=relativize(cwdUri,matchUri,stat.isDirectory());
break;
}
items[i++]=new PathData(fs,globMatch,stat);
}
}
Arrays.sort(items);
return items;
}
