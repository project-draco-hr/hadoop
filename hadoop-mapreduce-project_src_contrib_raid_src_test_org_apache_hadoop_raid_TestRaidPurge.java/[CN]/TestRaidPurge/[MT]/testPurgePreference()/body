{
  createClusters(true);
  Path dir=new Path("/user/test/raidtest/");
  Path file1=new Path(dir + "/file1");
  PolicyInfo infoXor=new PolicyInfo("testPurgePreference",conf);
  infoXor.setSrcPath("/user/test/raidtest");
  infoXor.setErasureCode("xor");
  infoXor.setDescription("test policy");
  infoXor.setProperty("targetReplication","2");
  infoXor.setProperty("metaReplication","2");
  PolicyInfo infoRs=new PolicyInfo("testPurgePreference",conf);
  infoRs.setSrcPath("/user/test/raidtest");
  infoRs.setErasureCode("rs");
  infoRs.setDescription("test policy");
  infoRs.setProperty("targetReplication","1");
  infoRs.setProperty("metaReplication","1");
  try {
    TestRaidNode.createOldFile(fileSys,file1,1,9,8192L);
    FileStatus stat=fileSys.getFileStatus(file1);
    RaidNode.doRaid(conf,infoXor,stat,new RaidNode.Statistics(),Reporter.NULL);
    RaidNode.doRaid(conf,infoRs,stat,new RaidNode.Statistics(),Reporter.NULL);
    Path xorParity=new Path(RaidNode.DEFAULT_RAID_LOCATION,"user/test/raidtest/file1");
    Path rsParity=new Path(RaidNode.DEFAULT_RAIDRS_LOCATION,"user/test/raidtest/file1");
    assertTrue(fileSys.exists(xorParity));
    assertTrue(fileSys.exists(rsParity));
    RaidNode cnode=RaidNode.createRaidNode(conf);
    FileStatus raidRsStat=fileSys.getFileStatus(new Path(RaidNode.DEFAULT_RAIDRS_LOCATION));
    cnode.purgeMonitor.recursePurge(infoRs.getErasureCode(),fileSys,fileSys,RaidNode.DEFAULT_RAIDRS_LOCATION,raidRsStat);
    assertTrue(fileSys.exists(xorParity));
    assertTrue(fileSys.exists(rsParity));
    FileStatus raidStat=fileSys.getFileStatus(new Path(RaidNode.DEFAULT_RAID_LOCATION));
    cnode.purgeMonitor.recursePurge(infoXor.getErasureCode(),fileSys,fileSys,RaidNode.DEFAULT_RAID_LOCATION,raidStat);
    assertFalse(fileSys.exists(xorParity));
    assertTrue(fileSys.exists(rsParity));
    fileSys.delete(rsParity);
    Path xorHar=new Path(RaidNode.DEFAULT_RAID_LOCATION,"user/test/raidtest/raidtest" + RaidNode.HAR_SUFFIX);
    RaidNode.doRaid(conf,infoXor,stat,new RaidNode.Statistics(),Reporter.NULL);
    assertTrue(fileSys.exists(xorParity));
    assertFalse(fileSys.exists(xorHar));
    long cutoff=System.currentTimeMillis();
    cnode.recurseHar(infoXor,fileSys,raidStat,RaidNode.DEFAULT_RAID_LOCATION,fileSys,cutoff,RaidNode.tmpHarPathForCode(conf,infoXor.getErasureCode()));
    cnode.purgeMonitor.recursePurge(infoXor.getErasureCode(),fileSys,fileSys,RaidNode.DEFAULT_RAID_LOCATION,raidStat);
    assertFalse(fileSys.exists(xorParity));
    assertTrue(fileSys.exists(xorHar));
    RaidNode.doRaid(conf,infoRs,stat,new RaidNode.Statistics(),Reporter.NULL);
    cnode.purgeMonitor.recursePurge(infoXor.getErasureCode(),fileSys,fileSys,RaidNode.DEFAULT_RAID_LOCATION,raidStat);
    assertTrue(fileSys.exists(rsParity));
    assertFalse(fileSys.exists(xorParity));
    assertFalse(fileSys.exists(xorHar));
  }
  finally {
    stopClusters();
  }
}
