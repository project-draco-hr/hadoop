{
  HistoryFileManager historyManager=mock(HistoryFileManager.class);
  JobHistory jobHistory=spy(new JobHistory());
  doReturn(historyManager).when(jobHistory).createHistoryFileManager();
  Configuration conf=new Configuration();
  conf.setInt(JHAdminConfig.MR_HISTORY_LOADED_TASKS_CACHE_SIZE,500);
  jobHistory.init(conf);
  jobHistory.start();
  CachedHistoryStorage storage=spy((CachedHistoryStorage)jobHistory.getHistoryStorage());
  assertTrue(storage.getUseLoadedTasksCache());
  assertEquals(storage.getLoadedTasksCacheSize(),500);
  Job[] lgJobs=new Job[10];
  JobId[] lgJobIds=new JobId[10];
  for (int i=0; i < lgJobs.length; i++) {
    lgJobs[i]=mock(Job.class);
    lgJobIds[i]=mock(JobId.class);
    when(lgJobs[i].getID()).thenReturn(lgJobIds[i]);
    when(lgJobs[i].getTotalMaps()).thenReturn(700);
    when(lgJobs[i].getTotalReduces()).thenReturn(50);
  }
  HistoryFileInfo fileInfo=mock(HistoryFileInfo.class);
  when(historyManager.getFileInfo(any(JobId.class))).thenReturn(fileInfo);
  when(fileInfo.loadJob()).thenReturn(lgJobs[0]).thenReturn(lgJobs[1]).thenReturn(lgJobs[2]).thenReturn(lgJobs[3]).thenReturn(lgJobs[4]).thenReturn(lgJobs[5]).thenReturn(lgJobs[6]).thenReturn(lgJobs[7]).thenReturn(lgJobs[8]).thenReturn(lgJobs[9]);
  Cache<JobId,Job> jobCache=storage.getLoadedJobCache();
  long[] cacheSize=new long[10];
  for (int i=0; i < lgJobs.length; i++) {
    storage.getFullJob(lgJobs[i].getID());
    assertTrue(jobCache.size() > 0);
  }
}
