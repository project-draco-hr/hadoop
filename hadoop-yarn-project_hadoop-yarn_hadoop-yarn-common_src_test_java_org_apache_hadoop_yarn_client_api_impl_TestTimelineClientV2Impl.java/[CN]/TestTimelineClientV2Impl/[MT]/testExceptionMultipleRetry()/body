{
  TestV2TimelineClientForExceptionHandling client=new TestV2TimelineClientForExceptionHandling(ApplicationId.newInstance(0,0));
  int maxRetries=2;
  conf.setInt(YarnConfiguration.TIMELINE_SERVICE_CLIENT_MAX_RETRIES,maxRetries);
  client.init(conf);
  client.start();
  client.setTimelineServiceAddress("localhost:12345");
  try {
    client.putEntities(new TimelineEntity());
  }
 catch (  IOException e) {
    Assert.fail("YARN exception is expected");
  }
catch (  YarnException e) {
    Throwable cause=e.getCause();
    Assert.assertTrue("IOException is expected",cause instanceof IOException);
    Assert.assertTrue("YARN exception is expected",cause.getMessage().contains("TimelineClient has reached to max retry times : " + maxRetries));
  }
  client.setThrowYarnException(true);
  try {
    client.putEntities(new TimelineEntity());
  }
 catch (  IOException e) {
    Assert.fail("YARN exception is expected");
  }
catch (  YarnException e) {
    Throwable cause=e.getCause();
    Assert.assertTrue("YARN exception is expected",cause instanceof YarnException);
    Assert.assertTrue("YARN exception is expected",cause.getMessage().contains(EXCEPTION_MSG));
  }
  client.stop();
}
