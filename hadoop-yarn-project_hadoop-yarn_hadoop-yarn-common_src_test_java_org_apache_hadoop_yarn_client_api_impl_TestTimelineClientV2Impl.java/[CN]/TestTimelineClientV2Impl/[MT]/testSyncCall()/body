{
  try {
    client.putEntities(generateEntity("1"));
    client.putEntitiesAsync(generateEntity("2"));
    client.putEntitiesAsync(generateEntity("3"));
    client.putEntities(generateEntity("4"));
  }
 catch (  YarnException e) {
    Assert.fail("Exception is not expected");
  }
  for (int i=0; i < 4; i++) {
    if (client.getNumOfTimelineEntitiesPublished() == 3) {
      break;
    }
    Thread.sleep(TIME_TO_SLEEP);
  }
  printReceivedEntities();
  Assert.assertEquals("TimelineEntities not published as desired",3,client.getNumOfTimelineEntitiesPublished());
  TimelineEntities firstPublishedEntities=client.getPublishedEntities(0);
  Assert.assertEquals("sync entities should not be merged with async",1,firstPublishedEntities.getEntities().size());
  TimelineEntities secondPublishedEntities=client.getPublishedEntities(1);
  Assert.assertEquals("async entities should be merged before publishing sync",2,secondPublishedEntities.getEntities().size());
  Assert.assertEquals("Order of Async Events Needs to be FIFO","2",secondPublishedEntities.getEntities().get(0).getId());
  Assert.assertEquals("Order of Async Events Needs to be FIFO","3",secondPublishedEntities.getEntities().get(1).getId());
  TimelineEntities thirdPublishedEntities=client.getPublishedEntities(2);
  Assert.assertEquals("sync entities had to be published at the last",1,thirdPublishedEntities.getEntities().size());
  Assert.assertEquals("Expected last sync Event is not proper","4",thirdPublishedEntities.getEntities().get(0).getId());
}
