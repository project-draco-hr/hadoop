{
  ApplicationId appId=ApplicationId.newInstance(1,2);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,0);
  JobId jobId=MRBuilderUtils.newJobId(appId,1);
  TaskId taskId=MRBuilderUtils.newTaskId(jobId,1,TaskType.MAP);
  TaskAttemptId attemptId=MRBuilderUtils.newTaskAttemptId(taskId,0);
  Path jobFile=mock(Path.class);
  MockEventHandler eventHandler=new MockEventHandler();
  TaskAttemptListener taListener=mock(TaskAttemptListener.class);
  when(taListener.getAddress()).thenReturn(new InetSocketAddress("localhost",0));
  JobConf jobConf=new JobConf();
  jobConf.setClass("fs.file.impl",StubbedFS.class,FileSystem.class);
  jobConf.setBoolean("fs.file.impl.disable.cache",true);
  jobConf.set(JobConf.MAPRED_MAP_TASK_ENV,"");
  jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID,"10");
  TaskSplitMetaInfo splits=mock(TaskSplitMetaInfo.class);
  when(splits.getLocations()).thenReturn(new String[]{"127.0.0.1"});
  AppContext appCtx=mock(AppContext.class);
  ClusterInfo clusterInfo=mock(ClusterInfo.class);
  Resource resource=mock(Resource.class);
  when(appCtx.getClusterInfo()).thenReturn(clusterInfo);
  when(resource.getMemorySize()).thenReturn(1024L);
  setupTaskAttemptFinishingMonitor(eventHandler,jobConf,appCtx);
  TaskAttemptImpl taImpl=new MapTaskAttemptImpl(taskId,1,eventHandler,jobFile,1,splits,jobConf,taListener,new Token(),new Credentials(),SystemClock.getInstance(),appCtx);
  NodeId nid=NodeId.newInstance("127.0.0.1",0);
  ContainerId contId=ContainerId.newContainerId(appAttemptId,3);
  Container container=mock(Container.class);
  when(container.getId()).thenReturn(contId);
  when(container.getNodeId()).thenReturn(nid);
  when(container.getNodeHttpAddress()).thenReturn("localhost:0");
  taImpl.handle(new TaskAttemptDiagnosticsUpdateEvent(attemptId,"Task got killed"));
  assertFalse("InternalError occurred trying to handle TA_DIAGNOSTICS_UPDATE on assigned task",eventHandler.internalError);
}
