{
  assumeTrue(NativeIO.isAvailable());
  final long memlockLimit=NativeIO.POSIX.getCacheManipulator().getMemlockLimit();
  assumeTrue(memlockLimit != Long.MAX_VALUE);
  Configuration conf=cluster.getConfiguration(0);
  long prevLimit=conf.getLong(DFSConfigKeys.DFS_DATANODE_MAX_LOCKED_MEMORY_KEY,DFSConfigKeys.DFS_DATANODE_MAX_LOCKED_MEMORY_DEFAULT);
  try {
    conf.setLong(DFSConfigKeys.DFS_DATANODE_MAX_LOCKED_MEMORY_KEY,memlockLimit);
    DataNode dn=null;
    dn=DataNode.createDataNode(new String[]{},conf);
    dn.shutdown();
    conf.setLong(DFSConfigKeys.DFS_DATANODE_MAX_LOCKED_MEMORY_KEY,memlockLimit + 1);
    try {
      dn=DataNode.createDataNode(new String[]{},conf);
    }
 catch (    RuntimeException e) {
      GenericTestUtils.assertExceptionContains("more than the datanode's available RLIMIT_MEMLOCK",e);
    }
  }
  finally {
    conf.setLong(DFSConfigKeys.DFS_DATANODE_MAX_LOCKED_MEMORY_KEY,prevLimit);
  }
}
