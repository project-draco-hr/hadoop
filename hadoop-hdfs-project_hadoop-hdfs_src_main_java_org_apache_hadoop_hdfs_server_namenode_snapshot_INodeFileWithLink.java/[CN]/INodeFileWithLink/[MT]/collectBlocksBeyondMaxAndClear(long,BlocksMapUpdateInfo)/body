{
  final BlockInfo[] oldBlocks=getBlocks();
  if (oldBlocks != null) {
    int n=0;
    for (long size=0; n < oldBlocks.length && max > size; n++) {
      size+=oldBlocks[n].getNumBytes();
    }
    BlocksMapINodeUpdateEntry entry=new BlocksMapINodeUpdateEntry(this,next);
    if (info != null) {
      for (int i=0; i < n; i++) {
        info.addUpdateBlock(oldBlocks[i],entry);
      }
    }
    if (n < oldBlocks.length) {
      final BlockInfo[] newBlocks;
      if (n == 0) {
        newBlocks=null;
      }
 else {
        newBlocks=new BlockInfo[n];
        System.arraycopy(oldBlocks,0,newBlocks,0,n);
      }
      for (INodeFileWithLink i=next; i != this; i=i.getNext()) {
        i.setBlocks(newBlocks);
      }
      if (info != null) {
        for (; n < oldBlocks.length; n++) {
          info.addDeleteBlock(oldBlocks[n]);
        }
      }
    }
    setBlocks(null);
  }
}
