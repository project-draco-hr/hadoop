{
  if (inReset) {
    try {
      if (backupStore.hasNext()) {
        backupStore.next();
        DataInputBuffer next=backupStore.nextValue();
        buffer.reset(next.getData(),next.getPosition(),next.getLength() - next.getPosition());
        value=valueDeserializer.deserialize(value);
        return value;
      }
 else {
        inReset=false;
        backupStore.exitResetMode();
        if (clearMarkFlag) {
          clearMarkFlag=false;
          isMarked=false;
        }
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
      throw new RuntimeException("next value iterator failed",e);
    }
  }
  if (firstValue) {
    firstValue=false;
    return value;
  }
  if (!nextKeyIsSame) {
    throw new NoSuchElementException("iterate past last value");
  }
  try {
    nextKeyValue();
    return value;
  }
 catch (  IOException ie) {
    throw new RuntimeException("next value iterator failed",ie);
  }
catch (  InterruptedException ie) {
    throw new RuntimeException("next value iterator interrupted",ie);
  }
}
