{
  assertEquals(0,journal.getLastPromisedEpoch());
  NewEpochResponseProto newEpoch=journal.newEpoch(FAKE_NSINFO,1);
  assertFalse(newEpoch.hasLastSegmentTxId());
  assertEquals(1,journal.getLastPromisedEpoch());
  journal.newEpoch(FAKE_NSINFO,3);
  assertFalse(newEpoch.hasLastSegmentTxId());
  assertEquals(3,journal.getLastPromisedEpoch());
  try {
    journal.newEpoch(FAKE_NSINFO,3);
    fail("Should have failed to promise same epoch twice");
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("Proposed epoch 3 <= last promise 3",ioe);
  }
  try {
    journal.startLogSegment(new RequestInfo(JID,1L,1L),12345L);
    fail("Should have rejected call from prior epoch");
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("epoch 1 is less than the last promised epoch 3",ioe);
  }
  try {
    journal.journal(new RequestInfo(JID,1L,1L),100L,0,new byte[0]);
    fail("Should have rejected call from prior epoch");
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("epoch 1 is less than the last promised epoch 3",ioe);
  }
}
