{
  describe("try to mkdir where a parent is a file");
  FileSystem fs=getFileSystem();
  Path path=path("testMkdirOverParentFile");
  byte[] dataset=dataset(1024,' ','z');
  createFile(getFileSystem(),path,false,dataset);
  Path child=new Path(path,"child-to-mkdir");
  try {
    boolean made=fs.mkdirs(child);
    fail("mkdirs did not fail over a file but returned " + made + "; "+ ls(path));
  }
 catch (  ParentNotDirectoryException e) {
    handleExpectedException(e);
  }
catch (  FileAlreadyExistsException e) {
    handleExpectedException(e);
  }
catch (  IOException e) {
    handleRelaxedException("mkdirs","ParentNotDirectoryException",e);
  }
  assertIsFile(path);
  byte[] bytes=ContractTestUtils.readDataset(getFileSystem(),path,dataset.length);
  ContractTestUtils.compareByteArrays(dataset,bytes,dataset.length);
  assertPathExists("mkdir failed",path);
  assertDeleted(path,true);
}
