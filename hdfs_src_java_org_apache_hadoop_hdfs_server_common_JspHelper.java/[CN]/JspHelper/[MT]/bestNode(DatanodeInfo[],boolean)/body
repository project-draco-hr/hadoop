{
  TreeSet<DatanodeInfo> deadNodes=new TreeSet<DatanodeInfo>();
  DatanodeInfo chosenNode=null;
  int failures=0;
  Socket s=null;
  int index=-1;
  if (nodes == null || nodes.length == 0) {
    throw new IOException("No nodes contain this block");
  }
  while (s == null) {
    if (chosenNode == null) {
      do {
        if (doRandom) {
          index=DFSUtil.getRandom().nextInt(nodes.length);
        }
 else {
          index++;
        }
        chosenNode=nodes[index];
      }
 while (deadNodes.contains(chosenNode));
    }
    chosenNode=nodes[index];
    InetSocketAddress targetAddr=NetUtils.createSocketAddr(chosenNode.getHost() + ":" + chosenNode.getInfoPort());
    try {
      s=new Socket();
      s.connect(targetAddr,HdfsConstants.READ_TIMEOUT);
      s.setSoTimeout(HdfsConstants.READ_TIMEOUT);
    }
 catch (    IOException e) {
      deadNodes.add(chosenNode);
      s.close();
      s=null;
      failures++;
    }
    if (failures == nodes.length)     throw new IOException("Could not reach the block containing the data. Please try again");
  }
  s.close();
  return chosenNode;
}
