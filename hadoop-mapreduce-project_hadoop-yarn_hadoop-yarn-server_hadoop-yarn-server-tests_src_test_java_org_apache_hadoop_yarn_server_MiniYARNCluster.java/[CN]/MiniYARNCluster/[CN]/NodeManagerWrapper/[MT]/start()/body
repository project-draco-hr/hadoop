{
  try {
    File localDir=new File(testWorkDir,MiniYARNCluster.this.getName() + "-localDir-nm-" + index);
    localDir.mkdir();
    LOG.info("Created localDir in " + localDir.getAbsolutePath());
    getConfig().set(YarnConfiguration.NM_LOCAL_DIRS,localDir.getAbsolutePath());
    File logDir=new File(testWorkDir,MiniYARNCluster.this.getName() + "-logDir-nm-" + index);
    File remoteLogDir=new File(testWorkDir,MiniYARNCluster.this.getName() + "-remoteLogDir-nm-" + index);
    logDir.mkdir();
    remoteLogDir.mkdir();
    LOG.info("Created logDir in " + logDir.getAbsolutePath());
    getConfig().set(YarnConfiguration.NM_LOG_DIRS,logDir.getAbsolutePath());
    getConfig().set(YarnConfiguration.NM_REMOTE_APP_LOG_DIR,remoteLogDir.getAbsolutePath());
    getConfig().setInt(YarnConfiguration.NM_PMEM_MB,4 * 1024);
    getConfig().set(YarnConfiguration.NM_ADDRESS,"0.0.0.0:0");
    getConfig().set(YarnConfiguration.NM_LOCALIZER_ADDRESS,"0.0.0.0:0");
    getConfig().set(YarnConfiguration.NM_WEBAPP_ADDRESS,"0.0.0.0:0");
    LOG.info("Starting NM: " + index);
    nodeManagers[index].init(getConfig());
    new Thread(){
      public void run(){
        nodeManagers[index].start();
      }
    }
.start();
    int waitCount=0;
    while (nodeManagers[index].getServiceState() == STATE.INITED && waitCount++ < 60) {
      LOG.info("Waiting for NM " + index + " to start...");
      Thread.sleep(1000);
    }
    if (nodeManagers[index].getServiceState() != STATE.STARTED) {
      throw new IOException("NodeManager " + index + " failed to start");
    }
    super.start();
  }
 catch (  Throwable t) {
    throw new YarnException(t);
  }
}
