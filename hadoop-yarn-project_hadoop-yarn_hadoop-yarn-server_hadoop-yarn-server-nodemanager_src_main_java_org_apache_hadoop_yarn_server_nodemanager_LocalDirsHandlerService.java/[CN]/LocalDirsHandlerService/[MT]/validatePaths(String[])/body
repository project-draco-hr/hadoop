{
  ArrayList<String> validPaths=new ArrayList<String>();
  for (int i=0; i < paths.length; ++i) {
    try {
      URI uriPath=(new Path(paths[i])).toUri();
      if (uriPath.getScheme() == null || uriPath.getScheme().equals(FILE_SCHEME)) {
        validPaths.add(uriPath.getPath());
      }
 else {
        LOG.warn(paths[i] + " is not a valid path. Path should be with " + FILE_SCHEME+ " scheme or without scheme");
        throw new YarnException(paths[i] + " is not a valid path. Path should be with " + FILE_SCHEME+ " scheme or without scheme");
      }
    }
 catch (    IllegalArgumentException e) {
      LOG.warn(e.getMessage());
      throw new YarnException(paths[i] + " is not a valid path. Path should be with " + FILE_SCHEME+ " scheme or without scheme");
    }
  }
  String[] arrValidPaths=new String[validPaths.size()];
  validPaths.toArray(arrValidPaths);
  return arrValidPaths;
}
