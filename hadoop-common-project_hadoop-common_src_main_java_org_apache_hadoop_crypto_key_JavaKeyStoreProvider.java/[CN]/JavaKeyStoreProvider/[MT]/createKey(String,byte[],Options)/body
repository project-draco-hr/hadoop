{
  Preconditions.checkArgument(name.equals(StringUtils.toLowerCase(name)),"Uppercase key names are unsupported: %s",name);
  writeLock.lock();
  try {
    try {
      if (keyStore.containsAlias(name) || cache.containsKey(name)) {
        throw new IOException("Key " + name + " already exists in "+ this);
      }
    }
 catch (    KeyStoreException e) {
      throw new IOException("Problem looking up key " + name + " in "+ this,e);
    }
    Metadata meta=new Metadata(options.getCipher(),options.getBitLength(),options.getDescription(),options.getAttributes(),new Date(),1);
    if (options.getBitLength() != 8 * material.length) {
      throw new IOException("Wrong key length. Required " + options.getBitLength() + ", but got "+ (8 * material.length));
    }
    cache.put(name,meta);
    String versionName=buildVersionName(name,0);
    return innerSetKeyVersion(name,versionName,material,meta.getCipher());
  }
  finally {
    writeLock.unlock();
  }
}
