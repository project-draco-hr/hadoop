{
  ShellScriptBuilder sb=new ShellScriptBuilder();
  if (System.getenv("YARN_HOME") != null) {
    sb.env("YARN_HOME",System.getenv("YARN_HOME"));
  }
  sb.env(ApplicationConstants.LOCAL_DIR_ENV,StringUtils.join(",",appDirs));
  if (!Shell.WINDOWS) {
    sb.env("JVM_PID","$$");
  }
  if (environment != null) {
    for (    Map.Entry<String,String> env : environment.entrySet()) {
      sb.env(env.getKey().toString(),env.getValue().toString());
    }
  }
  if (resources != null) {
    for (    Map.Entry<Path,String> link : resources.entrySet()) {
      sb.symlink(link.getKey(),link.getValue());
    }
  }
  ArrayList<String> cmd=new ArrayList<String>(2 * command.size() + 5);
  cmd.add(ContainerExecutor.isSetsidAvailable ? "exec setsid " : "exec ");
  cmd.add("/bin/bash ");
  cmd.add("-c ");
  cmd.add("\"");
  for (  String cs : command) {
    cmd.add(cs.toString());
    cmd.add(" ");
  }
  cmd.add("\"");
  sb.line(cmd.toArray(new String[cmd.size()]));
  PrintStream pout=null;
  try {
    pout=new PrintStream(out);
    sb.write(pout);
  }
  finally {
    if (out != null) {
      out.close();
    }
  }
}
