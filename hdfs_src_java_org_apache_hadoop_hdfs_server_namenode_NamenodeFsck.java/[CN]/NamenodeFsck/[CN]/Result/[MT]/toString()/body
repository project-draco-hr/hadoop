{
  StringBuilder res=new StringBuilder();
  res.append("Status: " + (isHealthy() ? "HEALTHY" : "CORRUPT"));
  res.append("\n Total size:\t" + totalSize + " B");
  if (totalOpenFilesSize != 0)   res.append(" (Total open files size: " + totalOpenFilesSize + " B)");
  res.append("\n Total dirs:\t" + totalDirs);
  res.append("\n Total files:\t" + totalFiles);
  if (totalOpenFiles != 0)   res.append(" (Files currently being written: " + totalOpenFiles + ")");
  res.append("\n Total blocks (validated):\t" + totalBlocks);
  if (totalBlocks > 0)   res.append(" (avg. block size " + (totalSize / totalBlocks) + " B)");
  if (totalOpenFilesBlocks != 0)   res.append(" (Total open file blocks (not validated): " + totalOpenFilesBlocks + ")");
  if (corruptFiles > 0) {
    res.append("\n  ********************************");
    res.append("\n  CORRUPT FILES:\t" + corruptFiles);
    if (missingSize > 0) {
      res.append("\n  MISSING BLOCKS:\t" + missingIds.size());
      res.append("\n  MISSING SIZE:\t\t" + missingSize + " B");
    }
    if (corruptBlocks > 0) {
      res.append("\n  CORRUPT BLOCKS: \t" + corruptBlocks);
    }
    res.append("\n  ********************************");
  }
  res.append("\n Minimally replicated blocks:\t" + numMinReplicatedBlocks);
  if (totalBlocks > 0)   res.append(" (" + ((float)(numMinReplicatedBlocks * 100) / (float)totalBlocks) + " %)");
  res.append("\n Over-replicated blocks:\t" + numOverReplicatedBlocks);
  if (totalBlocks > 0)   res.append(" (" + ((float)(numOverReplicatedBlocks * 100) / (float)totalBlocks) + " %)");
  res.append("\n Under-replicated blocks:\t" + numUnderReplicatedBlocks);
  if (totalBlocks > 0)   res.append(" (" + ((float)(numUnderReplicatedBlocks * 100) / (float)totalBlocks) + " %)");
  res.append("\n Mis-replicated blocks:\t\t" + numMisReplicatedBlocks);
  if (totalBlocks > 0)   res.append(" (" + ((float)(numMisReplicatedBlocks * 100) / (float)totalBlocks) + " %)");
  res.append("\n Default replication factor:\t" + replication);
  res.append("\n Average block replication:\t" + getReplicationFactor());
  res.append("\n Corrupt blocks:\t\t" + corruptBlocks);
  res.append("\n Missing replicas:\t\t" + missingReplicas);
  if (totalReplicas > 0)   res.append(" (" + ((float)(missingReplicas * 100) / (float)totalReplicas) + " %)");
  return res.toString();
}
