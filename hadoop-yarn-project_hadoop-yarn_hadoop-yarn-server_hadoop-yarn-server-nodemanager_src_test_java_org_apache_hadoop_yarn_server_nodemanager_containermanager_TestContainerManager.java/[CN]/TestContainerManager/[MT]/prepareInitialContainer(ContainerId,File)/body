{
  File scriptFileOld=Shell.appendScriptExtension(tmpDir,"scriptFile");
  PrintWriter fileWriterOld=new PrintWriter(scriptFileOld);
  writeScriptFile(fileWriterOld,"Hello World!",startFile,cId,false);
  ContainerLaunchContext containerLaunchContext=prepareContainerLaunchContext(scriptFileOld,"dest_file",false);
  StartContainerRequest scRequest=StartContainerRequest.newInstance(containerLaunchContext,createContainerToken(cId,DUMMY_RM_IDENTIFIER,context.getNodeId(),user,context.getContainerTokenSecretManager()));
  List<StartContainerRequest> list=new ArrayList<>();
  list.add(scRequest);
  StartContainersRequest allRequests=StartContainersRequest.newInstance(list);
  containerManager.startContainers(allRequests);
  int timeoutSecs=0;
  while (!startFile.exists() && timeoutSecs++ < 20) {
    Thread.sleep(1000);
    LOG.info("Waiting for process start-file to be created");
  }
  Assert.assertTrue("ProcessStartFile doesn't exist!",startFile.exists());
  BufferedReader reader=new BufferedReader(new FileReader(startFile));
  Assert.assertEquals("Hello World!",reader.readLine());
  String pid=reader.readLine().trim();
  Assert.assertEquals(null,reader.readLine());
  Assert.assertTrue("Process is not alive!",DefaultContainerExecutor.containerIsAlive(pid));
  Assert.assertTrue("Process is not alive!",DefaultContainerExecutor.containerIsAlive(pid));
  return pid;
}
