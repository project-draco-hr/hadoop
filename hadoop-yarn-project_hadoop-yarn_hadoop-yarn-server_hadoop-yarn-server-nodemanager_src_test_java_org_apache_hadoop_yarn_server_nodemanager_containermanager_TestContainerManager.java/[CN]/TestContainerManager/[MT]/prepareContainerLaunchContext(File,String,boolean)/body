{
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  URL resourceAlpha=null;
  if (putBadFile) {
    File fileToDelete=new File(tmpDir,"fileToDelete").getAbsoluteFile();
    resourceAlpha=URL.fromPath(localFS.makeQualified(new Path(fileToDelete.getAbsolutePath())));
    fileToDelete.delete();
  }
 else {
    resourceAlpha=URL.fromPath(localFS.makeQualified(new Path(scriptFile.getAbsolutePath())));
  }
  LocalResource rsrcAlpha=recordFactory.newRecordInstance(LocalResource.class);
  rsrcAlpha.setResource(resourceAlpha);
  rsrcAlpha.setSize(-1);
  rsrcAlpha.setVisibility(LocalResourceVisibility.APPLICATION);
  rsrcAlpha.setType(LocalResourceType.FILE);
  rsrcAlpha.setTimestamp(scriptFile.lastModified());
  Map<String,LocalResource> localResources=new HashMap<>();
  localResources.put(destFName,rsrcAlpha);
  containerLaunchContext.setLocalResources(localResources);
  ContainerRetryContext containerRetryContext=ContainerRetryContext.newInstance(ContainerRetryPolicy.RETRY_ON_SPECIFIC_ERROR_CODES,new HashSet<>(Arrays.asList(Integer.valueOf(111))),4,0);
  containerLaunchContext.setContainerRetryContext(containerRetryContext);
  List<String> commands=Arrays.asList(Shell.getRunScriptCommand(scriptFile));
  containerLaunchContext.setCommands(commands);
  return containerLaunchContext;
}
