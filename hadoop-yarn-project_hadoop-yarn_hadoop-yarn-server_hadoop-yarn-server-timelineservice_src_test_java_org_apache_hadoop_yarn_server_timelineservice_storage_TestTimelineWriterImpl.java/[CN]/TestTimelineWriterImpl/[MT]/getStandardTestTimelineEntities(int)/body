{
  TimelineEntities te=new TimelineEntities();
  for (int i=0; i < listSize; i++) {
    TimelineEntity entity=new TimelineEntity();
    String id="hello" + i;
    String type="testType";
    entity.setId(id);
    entity.setType(type);
    entity.setCreatedTime(1425016501000L + i);
    entity.setModifiedTime(1425016502000L + i);
    if (i > 0) {
      entity.addRelatesToEntity(type,"hello" + i);
      entity.addRelatesToEntity(type,"hello" + (i - 1));
    }
    if (i < listSize - 1) {
      entity.addIsRelatedToEntity(type,"hello" + i);
      entity.addIsRelatedToEntity(type,"hello" + (i + 1));
    }
    int category=i % 4;
switch (category) {
case 0:
      entity.addConfig("config","config" + i);
case 1:
    entity.addInfo("info1",new Integer(i));
  entity.addInfo("info2","helloworld");
case 2:
break;
case 3:
entity.addConfig("config","config" + i);
TimelineEvent event=new TimelineEvent();
event.setId("test event");
event.setTimestamp(1425016501100L + i);
event.addInfo("test_info","content for " + entity.getId());
event.addInfo("test_info1",new Integer(i));
entity.addEvent(event);
TimelineMetric metric=new TimelineMetric();
metric.setId("HDFS_BYTES_READ");
metric.addValue(1425016501100L + i,8000 + i);
entity.addMetric(metric);
break;
}
te.addEntity(entity);
}
return te;
}
