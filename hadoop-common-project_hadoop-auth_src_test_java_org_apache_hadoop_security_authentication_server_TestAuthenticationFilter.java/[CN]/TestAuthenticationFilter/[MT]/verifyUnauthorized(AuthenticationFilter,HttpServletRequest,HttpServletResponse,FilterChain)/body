{
  final Map<String,String> cookieMap=new HashMap<String,String>();
  Mockito.doAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      String cookieHeader=(String)invocation.getArguments()[1];
      parseCookieMap(cookieHeader,cookieMap);
      return null;
    }
  }
).when(response).addHeader(Mockito.eq("Set-Cookie"),Mockito.anyString());
  filter.doFilter(request,response,chain);
  Mockito.verify(response).sendError(Mockito.eq(HttpServletResponse.SC_UNAUTHORIZED),Mockito.anyString());
  Mockito.verify(chain,Mockito.never()).doFilter(Mockito.any(ServletRequest.class),Mockito.any(ServletResponse.class));
  Assert.assertTrue("cookie is missing",cookieMap.containsKey(AuthenticatedURL.AUTH_COOKIE));
  Assert.assertEquals("",cookieMap.get(AuthenticatedURL.AUTH_COOKIE));
}
