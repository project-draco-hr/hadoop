{
  conf=configuration;
  cGroupsHandler.mountCGroupController(CGroupsHandler.CGroupController.NET_CLS);
  device=conf.get(YarnConfiguration.NM_NETWORK_RESOURCE_INTERFACE,YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_INTERFACE);
  strictMode=configuration.getBoolean(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);
  rootBandwidthMbit=conf.getInt(YarnConfiguration.NM_NETWORK_RESOURCE_OUTBOUND_BANDWIDTH_MBIT,YarnConfiguration.DEFAULT_NM_NETWORK_RESOURCE_OUTBOUND_BANDWIDTH_MBIT);
  yarnBandwidthMbit=conf.getInt(YarnConfiguration.NM_NETWORK_RESOURCE_OUTBOUND_BANDWIDTH_YARN_MBIT,rootBandwidthMbit);
  containerBandwidthMbit=(int)Math.ceil((double)yarnBandwidthMbit / MAX_CONTAINER_COUNT);
  StringBuffer logLine=new StringBuffer("strict mode is set to :").append(strictMode).append(System.lineSeparator());
  if (strictMode) {
    logLine.append("container bandwidth will be capped to soft limit.").append(System.lineSeparator());
  }
 else {
    logLine.append("containers will be allowed to use spare YARN bandwidth.").append(System.lineSeparator());
  }
  logLine.append("containerBandwidthMbit soft limit (in mbit/sec) is set to : ").append(containerBandwidthMbit);
  LOG.info(logLine);
  trafficController.bootstrap(device,rootBandwidthMbit,yarnBandwidthMbit);
  return null;
}
