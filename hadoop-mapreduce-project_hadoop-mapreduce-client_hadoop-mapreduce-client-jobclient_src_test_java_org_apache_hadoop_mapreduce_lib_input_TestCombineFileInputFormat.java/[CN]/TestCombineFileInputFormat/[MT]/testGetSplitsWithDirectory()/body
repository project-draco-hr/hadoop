{
  MiniDFSCluster dfs=null;
  try {
    Configuration conf=new Configuration();
    dfs=new MiniDFSCluster.Builder(conf).racks(rack1).hosts(hosts1).build();
    dfs.waitActive();
    dfs=new MiniDFSCluster.Builder(conf).racks(rack1).hosts(hosts1).build();
    dfs.waitActive();
    FileSystem fileSys=dfs.getFileSystem();
    Path dir1=new Path("/dir1");
    Path file=new Path("/dir1/file1");
    Path dir2=new Path("/dir1/dir2");
    if (!fileSys.mkdirs(dir1)) {
      throw new IOException("Mkdirs failed to create " + dir1.toString());
    }
    FSDataOutputStream out=fileSys.create(file);
    out.write(new byte[0]);
    out.close();
    if (!fileSys.mkdirs(dir2)) {
      throw new IOException("Mkdirs failed to create " + dir2.toString());
    }
    DummyInputFormat inFormat=new DummyInputFormat();
    Job job=Job.getInstance(conf);
    FileInputFormat.setInputPaths(job,"/dir1");
    List<InputSplit> splits=inFormat.getSplits(job);
    assertEquals(1,splits.size());
    CombineFileSplit fileSplit=(CombineFileSplit)splits.get(0);
    assertEquals(1,fileSplit.getNumPaths());
    assertEquals(file.getName(),fileSplit.getPath(0).getName());
    assertEquals(0,fileSplit.getOffset(0));
    assertEquals(0,fileSplit.getLength(0));
  }
  finally {
    if (dfs != null) {
      dfs.shutdown();
    }
  }
}
