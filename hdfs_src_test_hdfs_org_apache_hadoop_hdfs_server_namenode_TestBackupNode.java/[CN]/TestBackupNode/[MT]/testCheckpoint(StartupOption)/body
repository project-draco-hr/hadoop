{
  Path file1=new Path("checkpoint.dat");
  Path file2=new Path("checkpoint2.dat");
  Configuration conf=new HdfsConfiguration();
  short replication=(short)conf.getInt(DFSConfigKeys.DFS_REPLICATION_KEY,3);
  conf.set(DFSConfigKeys.DFS_BLOCKREPORT_INITIAL_DELAY_KEY,"0");
  conf.setInt(DFSConfigKeys.DFS_DATANODE_SCAN_PERIOD_HOURS_KEY,-1);
  int numDatanodes=Math.max(3,replication);
  MiniDFSCluster cluster=null;
  FileSystem fileSys=null;
  BackupNode backup=null;
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).build();
    fileSys=cluster.getFileSystem();
    assertTrue(!fileSys.exists(file1));
    assertTrue(!fileSys.exists(file2));
    writeFile(fileSys,file1,replication);
    checkFile(fileSys,file1,replication);
    backup=startBackupNode(conf,op,1);
    waitCheckpointDone(backup);
  }
 catch (  IOException e) {
    LOG.error("Error in TestBackupNode:",e);
    assertTrue(e.getLocalizedMessage(),false);
  }
 finally {
    if (backup != null)     backup.stop();
    if (fileSys != null)     fileSys.close();
    if (cluster != null)     cluster.shutdown();
  }
  File imageFileNN=new File(BASE_DIR,"name1/current/fsimage");
  File imageFileBN=new File(getBackupNodeDir(op,1),"/current/fsimage");
  LOG.info("NameNode fsimage length = " + imageFileNN.length());
  LOG.info("Backup Node fsimage length = " + imageFileBN.length());
  assertTrue(imageFileNN.length() == imageFileBN.length());
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).format(false).build();
    fileSys=cluster.getFileSystem();
    checkFile(fileSys,file1,replication);
    cleanupFile(fileSys,file1);
    writeFile(fileSys,file2,replication);
    checkFile(fileSys,file2,replication);
    backup=startBackupNode(conf,op,1);
    waitCheckpointDone(backup);
  }
 catch (  IOException e) {
    LOG.error("Error in TestBackupNode:",e);
    assertTrue(e.getLocalizedMessage(),false);
  }
 finally {
    if (backup != null)     backup.stop();
    if (fileSys != null)     fileSys.close();
    if (cluster != null)     cluster.shutdown();
  }
  LOG.info("NameNode fsimage length = " + imageFileNN.length());
  LOG.info("Backup Node fsimage length = " + imageFileBN.length());
  assertTrue(imageFileNN.length() == imageFileBN.length());
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).format(false).build();
    fileSys=cluster.getFileSystem();
    assertTrue(!fileSys.exists(file1));
    checkFile(fileSys,file2,replication);
  }
 catch (  IOException e) {
    LOG.error("Error in TestBackupNode:",e);
    assertTrue(e.getLocalizedMessage(),false);
  }
 finally {
    fileSys.close();
    cluster.shutdown();
  }
}
