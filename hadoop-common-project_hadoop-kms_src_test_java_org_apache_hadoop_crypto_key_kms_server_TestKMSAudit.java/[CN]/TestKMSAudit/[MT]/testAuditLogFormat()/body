{
  UserGroupInformation luser=Mockito.mock(UserGroupInformation.class);
  Mockito.when(luser.getShortUserName()).thenReturn("luser");
  kmsAudit.ok(luser,KMSOp.GENERATE_EEK,"k4","testmsg");
  kmsAudit.ok(luser,KMSOp.GENERATE_EEK,"testmsg");
  kmsAudit.evictCacheForTesting();
  kmsAudit.unauthorized(luser,KMSOp.DECRYPT_EEK,"k4");
  kmsAudit.error(luser,"method","url","testmsg");
  kmsAudit.unauthenticated("remotehost","method","url","testmsg");
  String out=getAndResetLogOutput();
  System.out.println(out);
  Assert.assertTrue(out.matches("OK\\[op=GENERATE_EEK, key=k4, user=luser, accessCount=1, interval=[^m]{1,4}ms\\] testmsg" + "OK\\[op=GENERATE_EEK, user=luser\\] testmsg" + "OK\\[op=GENERATE_EEK, key=k4, user=luser, accessCount=1, interval=[^m]{1,4}ms\\] testmsg"+ "UNAUTHORIZED\\[op=DECRYPT_EEK, key=k4, user=luser\\] "+ "ERROR\\[user=luser\\] Method:'method' Exception:'testmsg'"+ "UNAUTHENTICATED RemoteHost:remotehost Method:method URL:url ErrorMsg:'testmsg'"));
}
