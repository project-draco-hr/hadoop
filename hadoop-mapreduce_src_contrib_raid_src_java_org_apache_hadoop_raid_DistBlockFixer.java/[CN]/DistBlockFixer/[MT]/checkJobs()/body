{
  Iterator<Job> jobIter=jobIndex.keySet().iterator();
  while (jobIter.hasNext()) {
    Job job=jobIter.next();
    try {
      if (job.isComplete()) {
        long filesSucceeded=job.getCounters().findCounter(Counter.FILES_SUCCEEDED).getValue();
        long filesFailed=job.getCounters().findCounter(Counter.FILES_FAILED).getValue();
        long filesNoAction=job.getCounters().findCounter(Counter.FILES_NOACTION).getValue();
        int files=jobIndex.get(job).size();
        if (job.isSuccessful() && (filesSucceeded + filesFailed + filesNoAction == ((long)files))) {
          succeedJob(job,filesSucceeded,filesFailed);
        }
 else {
          failJob(job);
        }
        jobIter.remove();
      }
 else {
        LOG.info("job " + job.getJobName() + " still running");
      }
    }
 catch (    Exception e) {
      LOG.error(StringUtils.stringifyException(e));
      failJob(job);
      try {
        job.killJob();
      }
 catch (      Exception ee) {
        LOG.error(StringUtils.stringifyException(ee));
      }
      jobIter.remove();
    }
  }
  purgeFileIndex();
}
