{
  int bytesin=random.nextInt() % 10000;
  int recsin=bytesin / 10;
  int bytesout=(int)(bytesin * 1.5);
  int recsout=bytesout / 10;
  int maxMem=1000000;
  long mapRunTime=5678;
  long reduceShuffleTime=0;
  long reduceSortTime=0;
  long reduceRunTime=1234;
  TaskInfo task=new TaskInfo(bytesin,recsin,bytesout,recsout,maxMem);
  TaskAttemptInfo tAInfo=null;
  if (taskType == TaskType.MAP) {
    tAInfo=new MapTaskAttemptInfo(TaskStatus.State.SUCCEEDED,task,mapRunTime);
  }
 else   if (taskType == TaskType.REDUCE) {
    tAInfo=new ReduceTaskAttemptInfo(TaskStatus.State.SUCCEEDED,task,reduceShuffleTime,reduceSortTime,reduceRunTime);
  }
 else {
    throw new IllegalArgumentException("Unsupported TaskType " + taskType);
  }
  return tAInfo;
}
