{
  Options opts=new Options();
  opts.addOption(HELP_CMD,false,"Displays help for all commands.");
  Option appIdOpt=new Option(APPLICATION_ID_OPTION,true,"ApplicationId (required)");
  opts.addOption(appIdOpt);
  opts.addOption(CONTAINER_ID_OPTION,true,"ContainerId. " + "By default, it will only print syslog if the application is running." + " Work with -logFiles to get other logs. If specified, the"+ " applicationId can be omitted");
  opts.addOption(NODE_ADDRESS_OPTION,true,"NodeAddress in the format " + "nodename:port");
  opts.addOption(APP_OWNER_OPTION,true,"AppOwner (assumed to be current user if not specified)");
  Option amOption=new Option(AM_CONTAINER_OPTION,true,"Prints the AM Container logs for this application. " + "Specify comma-separated value to get logs for related AM " + "Container. For example, If we specify -am 1,2, we will get "+ "the logs for the first AM Container as well as the second "+ "AM Container. To get logs for all AM Containers, use -am ALL. "+ "To get logs for the latest AM Container, use -am -1. "+ "By default, it will only print out syslog. Work with -logFiles "+ "to get other logs");
  amOption.setValueSeparator(',');
  amOption.setArgs(Option.UNLIMITED_VALUES);
  amOption.setArgName("AM Containers");
  opts.addOption(amOption);
  Option logFileOpt=new Option(CONTAINER_LOG_FILES,true,"Specify comma-separated value " + "to get specified container log files. Use \"ALL\" to fetch all the " + "log files for the container. It also supports Java Regex.");
  logFileOpt.setValueSeparator(',');
  logFileOpt.setArgs(Option.UNLIMITED_VALUES);
  logFileOpt.setArgName("Log File Name");
  opts.addOption(logFileOpt);
  opts.addOption(SHOW_META_INFO,false,"Show the log metadata, " + "including log-file names, the size of the log files. " + "You can combine this with --containerId to get log metadata for "+ "the specific container, or with --nodeAddress to get log metadata "+ "for all the containers on the specific NodeManager. "+ "Currently, this option can only be used for finished "+ "applications.");
  opts.addOption(LIST_NODES_OPTION,false,"Show the list of nodes that successfully aggregated logs. " + "This option can only be used with finished applications.");
  opts.addOption(OUT_OPTION,true,"Local directory for storing individual " + "container logs. The container logs will be stored based on the " + "node the container ran on.");
  opts.addOption(SIZE_OPTION,true,"Prints the log file's first 'n' bytes " + "or the last 'n' bytes. Use negative values as bytes to read from " + "the end and positive values as bytes to read from the beginning.");
  opts.getOption(APPLICATION_ID_OPTION).setArgName("Application ID");
  opts.getOption(CONTAINER_ID_OPTION).setArgName("Container ID");
  opts.getOption(NODE_ADDRESS_OPTION).setArgName("Node Address");
  opts.getOption(APP_OWNER_OPTION).setArgName("Application Owner");
  opts.getOption(AM_CONTAINER_OPTION).setArgName("AM Containers");
  opts.getOption(OUT_OPTION).setArgName("Local Directory");
  opts.getOption(SIZE_OPTION).setArgName("size");
  return opts;
}
