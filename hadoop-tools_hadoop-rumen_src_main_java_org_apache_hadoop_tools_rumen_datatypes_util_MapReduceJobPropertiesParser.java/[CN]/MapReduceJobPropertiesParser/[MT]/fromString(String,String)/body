{
  if (value != null) {
    String latestKey=getLatestKeyName(key);
    if (MRJobConfig.JOB_NAME.equals(latestKey)) {
      return new JobName(value);
    }
    if (MRJobConfig.USER_NAME.equals(latestKey)) {
      return new UserName(value);
    }
    if (MRJobConfig.QUEUE_NAME.equals(latestKey)) {
      return new QueueName(value);
    }
    if (MRJobConfig.MAP_JAVA_OPTS.equals(latestKey) || MRJobConfig.REDUCE_JAVA_OPTS.equals(latestKey)) {
      List<String> heapOptions=new ArrayList<String>();
      extractMaxHeapOpts(value,heapOptions,new ArrayList<String>());
      extractMinHeapOpts(value,heapOptions,new ArrayList<String>());
      return new DefaultDataType(StringUtils.join(heapOptions,' '));
    }
    try {
      format.parse(value);
      return new DefaultDataType(value);
    }
 catch (    ParseException pe) {
    }
    if ("true".equals(value) || "false".equals(value)) {
      Boolean.parseBoolean(value);
      return new DefaultDataType(value);
    }
    if (latestKey.endsWith(".class") || latestKey.endsWith(".codec")) {
      return new ClassName(value);
    }
    if (latestKey.endsWith("sizes") || latestKey.endsWith(".timestamps")) {
      new DefaultDataType(value);
    }
    if (latestKey.endsWith(".dir") || latestKey.endsWith(".location") || latestKey.endsWith(".jar")|| latestKey.endsWith(".path")|| latestKey.endsWith(".logfile")|| latestKey.endsWith(".file")|| latestKey.endsWith(".files")|| latestKey.endsWith(".archives")) {
      try {
        return new FileName(value);
      }
 catch (      Exception ioe) {
      }
    }
  }
  return null;
}
