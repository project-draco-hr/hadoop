{
{
    final LightWeightGSet<Integer,Integer> gset=new LightWeightGSet<Integer,Integer>(16);
    try {
      gset.contains(null);
      Assert.fail();
    }
 catch (    NullPointerException e) {
      LightWeightGSet.LOG.info("GOOD: getting " + e,e);
    }
  }
{
    final LightWeightGSet<Integer,Integer> gset=new LightWeightGSet<Integer,Integer>(16);
    try {
      gset.get(null);
      Assert.fail();
    }
 catch (    NullPointerException e) {
      LightWeightGSet.LOG.info("GOOD: getting " + e,e);
    }
  }
{
    final LightWeightGSet<Integer,Integer> gset=new LightWeightGSet<Integer,Integer>(16);
    try {
      gset.put(null);
      Assert.fail();
    }
 catch (    NullPointerException e) {
      LightWeightGSet.LOG.info("GOOD: getting " + e,e);
    }
    try {
      gset.put(1);
      Assert.fail();
    }
 catch (    IllegalArgumentException e) {
      LightWeightGSet.LOG.info("GOOD: getting " + e,e);
    }
  }
{
    final IntElement[] data=new IntElement[5];
    for (int i=0; i < data.length; i++) {
      data[i]=new IntElement(i,i);
    }
    for (int v=1; v < data.length - 1; v++) {
{
        final GSet<IntElement,IntElement> gset=createGSet(data);
        for (        IntElement i : gset) {
          if (i.value == v) {
            gset.remove(data[0]);
          }
        }
        try {
          for (          IntElement i : gset) {
            if (i.value == v) {
              gset.remove(data[1]);
            }
          }
          Assert.fail();
        }
 catch (        ConcurrentModificationException e) {
          LightWeightGSet.LOG.info("GOOD: getting " + e,e);
        }
      }
{
        final GSet<IntElement,IntElement> gset=createGSet(data);
        try {
          for (          IntElement i : gset) {
            if (i.value == v) {
              gset.put(data[0]);
            }
          }
          Assert.fail();
        }
 catch (        ConcurrentModificationException e) {
          LightWeightGSet.LOG.info("GOOD: getting " + e,e);
        }
      }
{
        final GSet<IntElement,IntElement> gset=createGSet(data);
        try {
          for (          IntElement i : gset) {
            if (i.value == v) {
              gset.put(data[3]);
            }
          }
          Assert.fail();
        }
 catch (        ConcurrentModificationException e) {
          LightWeightGSet.LOG.info("GOOD: getting " + e,e);
        }
      }
    }
  }
}
