{
  Assert.assertTrue("Volume map can't be null",volumeMap != null);
  long id=1;
  for (  String bpId : bpList) {
    for (    FsVolumeImpl volume : volumes) {
      ReplicaInfo finalizedReplica=new FinalizedReplica(id,1,id,volume,DatanodeUtil.idToBlockDir(volume.getFinalizedDir(bpId),id));
      volumeMap.add(bpId,finalizedReplica);
      id++;
      ReplicaInfo rbwReplica=new ReplicaBeingWritten(id,1,id,volume,volume.getRbwDir(bpId),null,100);
      volumeMap.add(bpId,rbwReplica);
      id++;
      ReplicaInfo rwrReplica=new ReplicaWaitingToBeRecovered(id,1,id,volume,volume.getRbwDir(bpId));
      volumeMap.add(bpId,rwrReplica);
      id++;
      ReplicaInfo ripReplica=new ReplicaInPipeline(id,id,volume,volume.getTmpDir(bpId),0);
      volumeMap.add(bpId,ripReplica);
      id++;
    }
  }
  for (  String bpId : bpList) {
    for (    ReplicaInfo replicaInfo : volumeMap.replicas(bpId)) {
      File parentFile=replicaInfo.getBlockFile().getParentFile();
      if (!parentFile.exists()) {
        if (!parentFile.mkdirs()) {
          throw new IOException("Failed to mkdirs " + parentFile);
        }
      }
      replicaInfo.getBlockFile().createNewFile();
      replicaInfo.getMetaFile().createNewFile();
    }
  }
}
