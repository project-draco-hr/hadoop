{
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[FINALIZED]);
    Assert.fail("Should not have created a temporary replica that was " + "finalized " + blocks[FINALIZED]);
  }
 catch (  ReplicaAlreadyExistsException e) {
  }
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[TEMPORARY]);
    Assert.fail("Should not have created a replica that had created as" + "temporary " + blocks[TEMPORARY]);
  }
 catch (  ReplicaAlreadyExistsException e) {
  }
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[RBW]);
    Assert.fail("Should not have created a replica that had created as RBW " + blocks[RBW]);
  }
 catch (  ReplicaAlreadyExistsException e) {
  }
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[RWR]);
    Assert.fail("Should not have created a replica that was waiting to be " + "recovered " + blocks[RWR]);
  }
 catch (  ReplicaAlreadyExistsException e) {
  }
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[RUR]);
    Assert.fail("Should not have created a replica that was under recovery " + blocks[RUR]);
  }
 catch (  ReplicaAlreadyExistsException e) {
  }
  dataSet.createTemporary(StorageType.DEFAULT,blocks[NON_EXISTENT]);
  try {
    dataSet.createTemporary(StorageType.DEFAULT,blocks[NON_EXISTENT]);
    Assert.fail("Should not have created a replica that had already been " + "created " + blocks[NON_EXISTENT]);
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getMessage().contains(blocks[NON_EXISTENT].getBlockName()));
    Assert.assertTrue(e instanceof ReplicaAlreadyExistsException);
  }
  long newGenStamp=blocks[NON_EXISTENT].getGenerationStamp() * 10;
  blocks[NON_EXISTENT].setGenerationStamp(newGenStamp);
  try {
    ReplicaInPipeline replicaInfo=dataSet.createTemporary(StorageType.DEFAULT,blocks[NON_EXISTENT]);
    Assert.assertTrue(replicaInfo.getGenerationStamp() == newGenStamp);
    Assert.assertTrue(replicaInfo.getBlockId() == blocks[NON_EXISTENT].getBlockId());
  }
 catch (  ReplicaAlreadyExistsException e) {
    Assert.fail("createRbw() Should have removed the block with the older " + "genstamp and replaced it with the newer one: " + blocks[NON_EXISTENT]);
  }
}
