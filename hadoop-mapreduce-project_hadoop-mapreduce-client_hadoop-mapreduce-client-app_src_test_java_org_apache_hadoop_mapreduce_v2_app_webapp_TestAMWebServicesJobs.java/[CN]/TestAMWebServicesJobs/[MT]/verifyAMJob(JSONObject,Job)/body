{
  assertEquals("incorrect number of elements",30,info.length());
  verifyAMJobGeneric(job,info.getString("id"),info.getString("user"),info.getString("name"),info.getString("state"),info.getLong("startTime"),info.getLong("finishTime"),info.getLong("elapsedTime"),info.getInt("mapsTotal"),info.getInt("mapsCompleted"),info.getInt("reducesTotal"),info.getInt("reducesCompleted"),(float)info.getDouble("reduceProgress"),(float)info.getDouble("mapProgress"));
  String diagnostics="";
  if (info.has("diagnostics")) {
    diagnostics=info.getString("diagnostics");
  }
  verifyAMJobGenericSecure(job,info.getInt("mapsPending"),info.getInt("mapsRunning"),info.getInt("reducesPending"),info.getInt("reducesRunning"),info.getBoolean("uberized"),diagnostics,info.getInt("newReduceAttempts"),info.getInt("runningReduceAttempts"),info.getInt("failedReduceAttempts"),info.getInt("killedReduceAttempts"),info.getInt("successfulReduceAttempts"),info.getInt("newMapAttempts"),info.getInt("runningMapAttempts"),info.getInt("failedMapAttempts"),info.getInt("killedMapAttempts"),info.getInt("successfulMapAttempts"));
  Map<JobACL,AccessControlList> allacls=job.getJobACLs();
  if (allacls != null) {
    for (    Map.Entry<JobACL,AccessControlList> entry : allacls.entrySet()) {
      String expectName=entry.getKey().getAclName();
      String expectValue=entry.getValue().getAclString();
      Boolean found=false;
      if (info.has("acls")) {
        JSONArray arr=info.getJSONArray("acls");
        for (int i=0; i < arr.length(); i++) {
          JSONObject aclInfo=arr.getJSONObject(i);
          if (expectName.matches(aclInfo.getString("name"))) {
            found=true;
            WebServicesTestUtils.checkStringMatch("value",expectValue,aclInfo.getString("value"));
          }
        }
      }
 else {
        fail("should have acls in the web service info");
      }
      assertTrue("acl: " + expectName + " not found in webservice output",found);
    }
  }
}
