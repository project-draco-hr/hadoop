{
  if (!ready) {
    return;
  }
  INode srcInode=srcInodes[srcInodes.length - 1];
  INode commonAncestor=null;
  for (int i=0; srcInodes[i] == dstInodes[i]; i++) {
    commonAncestor=srcInodes[i];
  }
  INode.DirCounts srcCounts=new INode.DirCounts();
  srcInode.spaceConsumedInTree(srcCounts);
  long nsDelta=srcCounts.getNsCount();
  long dsDelta=srcCounts.getDsCount();
  INode dstInode=dstInodes[dstInodes.length - 1];
  if (dstInode != null) {
    INode.DirCounts dstCounts=new INode.DirCounts();
    dstInode.spaceConsumedInTree(dstCounts);
    nsDelta-=dstCounts.getNsCount();
    dsDelta-=dstCounts.getDsCount();
  }
  verifyQuota(dstInodes,dstInodes.length - 1,nsDelta,dsDelta,commonAncestor);
}
