{
  Statement s=connection.createStatement();
  final String DATE_TABLE="datetable";
  final String COL="foo";
  try {
    s.executeUpdate("DROP TABLE " + DATE_TABLE);
  }
 catch (  SQLException e) {
  }
  s.executeUpdate("CREATE TABLE " + DATE_TABLE + "("+ COL+ " TIMESTAMP)");
  s.executeUpdate("INSERT INTO " + DATE_TABLE + " VALUES('2010-04-01')");
  s.executeUpdate("INSERT INTO " + DATE_TABLE + " VALUES('2010-04-02')");
  s.executeUpdate("INSERT INTO " + DATE_TABLE + " VALUES('2010-05-01')");
  s.executeUpdate("INSERT INTO " + DATE_TABLE + " VALUES('2011-04-01')");
  connection.commit();
  Configuration conf=new Configuration();
  conf.set("fs.defaultFS","file:///");
  FileSystem fs=FileSystem.getLocal(conf);
  fs.delete(new Path(OUT_DIR),true);
  Job job=Job.getInstance(conf);
  job.setMapperClass(ValMapper.class);
  job.setReducerClass(Reducer.class);
  job.setMapOutputKeyClass(DateCol.class);
  job.setMapOutputValueClass(NullWritable.class);
  job.setOutputKeyClass(DateCol.class);
  job.setOutputValueClass(NullWritable.class);
  job.setNumReduceTasks(1);
  job.getConfiguration().setInt("mapreduce.map.tasks",2);
  FileOutputFormat.setOutputPath(job,new Path(OUT_DIR));
  DBConfiguration.configureDB(job.getConfiguration(),DRIVER_CLASS,DB_URL,null,null);
  DataDrivenDBInputFormat.setInput(job,DateCol.class,DATE_TABLE,null,COL,COL);
  boolean ret=job.waitForCompletion(true);
  assertTrue("job failed",ret);
  assertEquals("Did not get all the records",4,job.getCounters().findCounter(TaskCounter.REDUCE_OUTPUT_RECORDS).getValue());
}
