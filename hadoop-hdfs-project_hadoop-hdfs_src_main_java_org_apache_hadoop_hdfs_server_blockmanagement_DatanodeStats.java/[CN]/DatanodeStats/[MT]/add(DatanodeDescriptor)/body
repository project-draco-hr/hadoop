{
  xceiverCount+=node.getXceiverCount();
  if (!(node.isDecommissionInProgress() || node.isDecommissioned())) {
    capacityUsed+=node.getDfsUsed();
    blockPoolUsed+=node.getBlockPoolUsed();
    nodesInService++;
    nodesInServiceXceiverCount+=node.getXceiverCount();
    capacityTotal+=node.getCapacity();
    capacityRemaining+=node.getRemaining();
    cacheCapacity+=node.getCacheCapacity();
    cacheUsed+=node.getCacheUsed();
  }
 else   if (!node.isDecommissioned()) {
    cacheCapacity+=node.getCacheCapacity();
    cacheUsed+=node.getCacheUsed();
  }
  Set<StorageType> storageTypes=new HashSet<>();
  for (  DatanodeStorageInfo storageInfo : node.getStorageInfos()) {
    if (storageInfo.getState() != DatanodeStorage.State.FAILED) {
      statsMap.addStorage(storageInfo,node);
      storageTypes.add(storageInfo.getStorageType());
    }
  }
  for (  StorageType storageType : storageTypes) {
    statsMap.addNode(storageType,node);
  }
}
