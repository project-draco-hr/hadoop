{
  AppContext appCtx=mock(AppContext.class);
  View.ViewContext ctx=mock(View.ViewContext.class);
  JobId jobId=new JobIdPBImpl();
  jobId.setId(0);
  jobId.setAppId(ApplicationIdPBImpl.newInstance(0,1));
  TaskId mapTaskId=new TaskIdPBImpl();
  mapTaskId.setId(0);
  mapTaskId.setTaskType(TaskType.MAP);
  mapTaskId.setJobId(jobId);
  Task mapTask=mock(Task.class);
  when(mapTask.getID()).thenReturn(mapTaskId);
  TaskReport mapReport=mock(TaskReport.class);
  when(mapTask.getReport()).thenReturn(mapReport);
  when(mapTask.getType()).thenReturn(TaskType.MAP);
  TaskId reduceTaskId=new TaskIdPBImpl();
  reduceTaskId.setId(0);
  reduceTaskId.setTaskType(TaskType.REDUCE);
  reduceTaskId.setJobId(jobId);
  Task reduceTask=mock(Task.class);
  when(reduceTask.getID()).thenReturn(reduceTaskId);
  TaskReport reduceReport=mock(TaskReport.class);
  when(reduceTask.getReport()).thenReturn(reduceReport);
  when(reduceTask.getType()).thenReturn(TaskType.REDUCE);
  Map<TaskId,Task> tasks=new HashMap<TaskId,Task>();
  tasks.put(mapTaskId,mapTask);
  tasks.put(reduceTaskId,reduceTask);
  Job job=mock(Job.class);
  when(job.getTasks()).thenReturn(tasks);
  when(appCtx.getJob(any(JobId.class))).thenReturn(job);
  SingleCounterBlockForMapTest blockForMapTest=spy(new SingleCounterBlockForMapTest(appCtx,ctx));
  PrintWriter pWriterForMapTest=new PrintWriter(data);
  Block htmlForMapTest=new BlockForTest(new HtmlBlockForTest(),pWriterForMapTest,0,false);
  blockForMapTest.render(htmlForMapTest);
  pWriterForMapTest.flush();
  assertTrue(data.toString().contains("task_0_0001_m_000000"));
  assertFalse(data.toString().contains("task_0_0001_r_000000"));
  data.reset();
  SingleCounterBlockForReduceTest blockForReduceTest=spy(new SingleCounterBlockForReduceTest(appCtx,ctx));
  PrintWriter pWriterForReduceTest=new PrintWriter(data);
  Block htmlForReduceTest=new BlockForTest(new HtmlBlockForTest(),pWriterForReduceTest,0,false);
  blockForReduceTest.render(htmlForReduceTest);
  pWriterForReduceTest.flush();
  System.out.println(data.toString());
  assertFalse(data.toString().contains("task_0_0001_m_000000"));
  assertTrue(data.toString().contains("task_0_0001_r_000000"));
}
