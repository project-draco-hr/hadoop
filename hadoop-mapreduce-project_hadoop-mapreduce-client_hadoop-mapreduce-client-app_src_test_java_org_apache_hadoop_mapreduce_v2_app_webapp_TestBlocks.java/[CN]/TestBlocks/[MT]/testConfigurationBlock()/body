{
  AppContext ctx=mock(AppContext.class);
  Job job=mock(Job.class);
  Path path=new Path("conf");
  Configuration configuration=new Configuration();
  configuration.set("Key for test","Value for test");
  final String redactedProp="Key for redaction";
  configuration.set(MRJobConfig.MR_JOB_REDACTED_PROPERTIES,redactedProp);
  when(job.getConfFile()).thenReturn(path);
  when(job.loadConfFile()).thenReturn(configuration);
  when(ctx.getJob(any(JobId.class))).thenReturn(job);
  ConfBlockForTest configurationBlock=new ConfBlockForTest(ctx);
  PrintWriter pWriter=new PrintWriter(data);
  Block html=new BlockForTest(new HtmlBlockForTest(),pWriter,0,false);
  configurationBlock.render(html);
  pWriter.flush();
  assertTrue(data.toString().contains("Sorry, can't do anything without a JobID"));
  configurationBlock.addParameter(AMParams.JOB_ID,"job_01_01");
  data.reset();
  configurationBlock.render(html);
  pWriter.flush();
  assertTrue(data.toString().contains("Key for test"));
  assertTrue(data.toString().contains("Value for test"));
  assertTrue(data.toString().contains(redactedProp));
  assertTrue(data.toString().contains(MRJobConfUtil.REDACTION_REPLACEMENT_VAL));
}
