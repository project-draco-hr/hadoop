{
  return SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction<QJournalProtocol>(){
    @Override public QJournalProtocol run() throws IOException {
      RPC.setProtocolEngine(conf,QJournalProtocolPB.class,ProtobufRpcEngine.class);
      QJournalProtocolPB pbproxy=RPC.getProxy(QJournalProtocolPB.class,RPC.getProtocolVersion(QJournalProtocolPB.class),addr,conf);
      return new QJournalProtocolTranslatorPB(pbproxy);
    }
  }
);
}
