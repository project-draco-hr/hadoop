{
  IIndexUpdater updater=new IndexUpdater();
  updater.run(conf,new Path[]{inputPath},outputPath,numMapTasks,shards);
  Path[] doneFileNames=new Path[shards.length];
  int count=0;
  FileStatus[] fileStatus=fs.listStatus(outputPath);
  for (int i=0; i < fileStatus.length; i++) {
    FileStatus[] doneFiles=fs.listStatus(fileStatus[i].getPath());
    for (int j=0; j < doneFiles.length; j++) {
      doneFileNames[count++]=doneFiles[j].getPath();
    }
  }
  assertEquals(shards.length,count);
  for (int i=0; i < count; i++) {
    assertTrue(doneFileNames[i].getName().startsWith(IndexUpdateReducer.DONE.toString()));
  }
  IndexReader[] readers=new IndexReader[shards.length];
  for (int i=0; i < shards.length; i++) {
    Directory dir=new FileSystemDirectory(fs,new Path(shards[i].getDirectory()),false,conf);
    readers[i]=IndexReader.open(dir);
  }
  IndexReader reader=new MultiReader(readers);
  IndexSearcher searcher=new IndexSearcher(reader);
  Hits hits=searcher.search(new TermQuery(new Term("content","apache")));
  assertEquals(numRuns * numDocsPerRun,hits.length());
  int[] counts=new int[numDocsPerRun];
  for (int i=0; i < hits.length(); i++) {
    Document doc=hits.doc(i);
    counts[Integer.parseInt(doc.get("id"))]++;
  }
  for (int i=0; i < numDocsPerRun; i++) {
    assertEquals(numRuns,counts[i]);
  }
  hits=searcher.search(new TermQuery(new Term("content","dot")));
  assertEquals(numRuns,hits.length());
  hits=searcher.search(new TermQuery(new Term("content","org")));
  assertEquals(0,hits.length());
  searcher.close();
  reader.close();
  for (int i=0; i < shards.length; i++) {
    Directory dir=new FileSystemDirectory(fs,new Path(shards[i].getDirectory()),false,conf);
    IndexWriter writer=new IndexWriter(dir,false,null,new KeepOnlyLastCommitDeletionPolicy());
    writer.close();
  }
  for (int i=0; i < shards.length; i++) {
    PathFilter cfsFilter=new PathFilter(){
      public boolean accept(      Path path){
        return path.getName().endsWith(".cfs");
      }
    }
;
    FileStatus[] cfsFiles=fs.listStatus(new Path(shards[i].getDirectory()),cfsFilter);
    assertEquals(1,cfsFiles.length);
  }
}
