{
  RMAppRecoverEvent recoverEvent=(RMAppRecoverEvent)event;
  try {
    app.recover(recoverEvent.getRMState());
  }
 catch (  Exception e) {
    String msg=app.applicationId + " failed to recover. " + e.getMessage();
    failToRecoverApp(app,event,msg,e);
    return RMAppState.FINAL_SAVING;
  }
  if (app.recoveredFinalState != null) {
    app.recoverAppAttempts();
    new FinalTransition(app.recoveredFinalState).transition(app,event);
    return app.recoveredFinalState;
  }
  if (UserGroupInformation.isSecurityEnabled()) {
    try {
      app.rmContext.getDelegationTokenRenewer().addApplicationSync(app.getApplicationId(),app.parseCredentials(),app.submissionContext.getCancelTokensWhenComplete(),app.getUser());
    }
 catch (    Exception e) {
      String msg="Failed to renew delegation token on recovery for " + app.applicationId + e.getMessage();
      failToRecoverApp(app,event,msg,e);
      return RMAppState.FINAL_SAVING;
    }
  }
  if (app.attempts.isEmpty()) {
    app.scheduler.handle(new AppAddedSchedulerEvent(app.applicationId,app.submissionContext.getQueue(),app.user,app.submissionContext.getReservationID()));
    return RMAppState.SUBMITTED;
  }
  app.scheduler.handle(new AppAddedSchedulerEvent(app.applicationId,app.submissionContext.getQueue(),app.user,true,app.submissionContext.getReservationID()));
  app.recoverAppAttempts();
  if (app.currentAttempt != null && (app.currentAttempt.getState() == RMAppAttemptState.KILLED || app.currentAttempt.getState() == RMAppAttemptState.FINISHED || (app.currentAttempt.getState() == RMAppAttemptState.FAILED && app.getNumFailedAppAttempts() == app.maxAppAttempts))) {
    return RMAppState.ACCEPTED;
  }
  return RMAppState.ACCEPTED;
}
