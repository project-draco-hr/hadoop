{
  try {
    this.writeLock.lock();
    if (this.logAggregationEnabled && !isLogAggregationFinished()) {
      LogAggregationReport curReport=this.logAggregationStatus.get(nodeId);
      boolean stateChangedToFinal=false;
      if (curReport == null) {
        this.logAggregationStatus.put(nodeId,report);
        if (isLogAggregationFinishedForNM(report)) {
          stateChangedToFinal=true;
        }
      }
 else {
        if (isLogAggregationFinishedForNM(report)) {
          if (!isLogAggregationFinishedForNM(curReport)) {
            stateChangedToFinal=true;
          }
        }
        if (report.getLogAggregationStatus() != LogAggregationStatus.RUNNING || curReport.getLogAggregationStatus() != LogAggregationStatus.RUNNING_WITH_FAILURE) {
          if (curReport.getLogAggregationStatus() == LogAggregationStatus.TIME_OUT && report.getLogAggregationStatus() == LogAggregationStatus.RUNNING) {
            if (logAggregationFailureMessagesForNMs.get(nodeId) != null && !logAggregationFailureMessagesForNMs.get(nodeId).isEmpty()) {
              report.setLogAggregationStatus(LogAggregationStatus.RUNNING_WITH_FAILURE);
            }
          }
          curReport.setLogAggregationStatus(report.getLogAggregationStatus());
        }
      }
      updateLogAggregationDiagnosticMessages(nodeId,report);
      if (isAppInFinalState(this) && stateChangedToFinal) {
        updateLogAggregationStatus(nodeId);
      }
    }
  }
  finally {
    this.writeLock.unlock();
  }
}
