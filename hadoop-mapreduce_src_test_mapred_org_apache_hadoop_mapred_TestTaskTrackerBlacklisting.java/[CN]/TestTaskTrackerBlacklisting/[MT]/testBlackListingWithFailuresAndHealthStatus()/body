{
  runBlackListingJob(jobTracker,trackers);
  assertEquals("Tracker 1 not blacklisted",1,jobTracker.getBlacklistedTrackerCount());
  checkReasonForBlackListing(hosts[0],exceedsFailuresReasonSet);
  TaskTrackerHealthStatus status=getUnhealthyNodeStatus("ERROR");
  sendHeartBeat(status,false);
  assertEquals("All trackers not blacklisted",3,jobTracker.getBlacklistedTrackerCount());
  checkReasonForBlackListing(hosts[0],unhealthyAndExceedsFailure);
  checkReasonForBlackListing(hosts[1],nodeUnHealthyReasonSet);
  checkReasonForBlackListing(hosts[2],nodeUnHealthyReasonSet);
  clock.jumpADay=true;
  sendHeartBeat(status,false);
  assertEquals("All trackers not blacklisted",3,jobTracker.getBlacklistedTrackerCount());
  for (  String host : hosts) {
    checkReasonForBlackListing(host,nodeUnHealthyReasonSet);
  }
  sendHeartBeat(null,false);
  assertEquals("All trackers not white listed",0,jobTracker.getBlacklistedTrackerCount());
  clock.jumpADay=false;
}
