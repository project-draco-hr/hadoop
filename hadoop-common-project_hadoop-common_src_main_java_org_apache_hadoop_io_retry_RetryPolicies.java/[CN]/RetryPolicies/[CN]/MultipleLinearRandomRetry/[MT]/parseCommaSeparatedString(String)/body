{
  final String[] elements=s.split(",");
  if (elements.length == 0) {
    LOG.warn("Illegal value: there is no element in \"" + s + "\".");
    return null;
  }
  if (elements.length % 2 != 0) {
    LOG.warn("Illegal value: the number of elements in \"" + s + "\" is "+ elements.length+ " but an even number of elements is expected.");
    return null;
  }
  final List<RetryPolicies.MultipleLinearRandomRetry.Pair> pairs=new ArrayList<RetryPolicies.MultipleLinearRandomRetry.Pair>();
  for (int i=0; i < elements.length; ) {
    final int sleep=parsePositiveInt(elements,i++,s);
    if (sleep == -1) {
      return null;
    }
    final int retries=parsePositiveInt(elements,i++,s);
    if (retries == -1) {
      return null;
    }
    pairs.add(new RetryPolicies.MultipleLinearRandomRetry.Pair(retries,sleep));
  }
  return new RetryPolicies.MultipleLinearRandomRetry(pairs);
}
