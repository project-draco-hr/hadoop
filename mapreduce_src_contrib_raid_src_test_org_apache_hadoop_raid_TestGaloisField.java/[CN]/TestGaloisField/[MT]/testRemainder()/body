{
  final int TEST_LEN=15;
  for (int i=0; i < TEST_TIMES; i++) {
    int[] quotient=null;
    int[] divisor=null;
    int[] remainder=null;
    int[] dividend=null;
    while (true) {
      quotient=randGFPoly(RAND.nextInt(TEST_LEN - 3) + 3);
      divisor=randGFPoly(RAND.nextInt(quotient.length - 2) + 2);
      remainder=randGFPoly(RAND.nextInt(divisor.length - 1) + 1);
      dividend=GF.add(remainder,GF.multiply(quotient,divisor));
      if (quotient[quotient.length - 1] != 0 && divisor[divisor.length - 1] != 0 && remainder[remainder.length - 1] != 0) {
        break;
      }
    }
    GF.remainder(dividend,divisor);
    for (int j=0; j < remainder.length; j++) {
      assertTrue("Distributivity test on polynomials failed",dividend[j] == remainder[j]);
    }
  }
}
