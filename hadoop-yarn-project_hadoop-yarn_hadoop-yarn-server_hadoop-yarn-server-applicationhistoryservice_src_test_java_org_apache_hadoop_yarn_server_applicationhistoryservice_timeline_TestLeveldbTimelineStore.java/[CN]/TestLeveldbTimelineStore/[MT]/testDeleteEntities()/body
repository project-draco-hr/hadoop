{
  assertEquals(2,store.getEntities("type_1",null,null,null,null,null,null).getEntities().size());
  assertEquals(1,store.getEntities("type_2",null,null,null,null,null,null).getEntities().size());
  assertEquals(false,deleteNextEntity(entityType1,writeReverseOrderedLong(122l)));
  assertEquals(2,store.getEntities("type_1",null,null,null,null,null,null).getEntities().size());
  assertEquals(1,store.getEntities("type_2",null,null,null,null,null,null).getEntities().size());
  assertEquals(true,deleteNextEntity(entityType1,writeReverseOrderedLong(123l)));
  List<TimelineEntity> entities=store.getEntities("type_2",null,null,null,null,null,EnumSet.allOf(Field.class)).getEntities();
  assertEquals(1,entities.size());
  verifyEntityInfo(entityId2,entityType2,events2,Collections.singletonMap(entityType1,Collections.singleton(entityId1b)),EMPTY_PRIMARY_FILTERS,EMPTY_MAP,entities.get(0));
  entities=store.getEntities("type_1",null,null,null,userFilter,null,EnumSet.allOf(Field.class)).getEntities();
  assertEquals(1,entities.size());
  verifyEntityInfo(entityId1b,entityType1,events1,EMPTY_REL_ENTITIES,primaryFilters,otherInfo,entities.get(0));
  ((LeveldbTimelineStore)store).discardOldEntities(-123l);
  assertEquals(1,store.getEntities("type_1",null,null,null,null,null,null).getEntities().size());
  assertEquals(0,store.getEntities("type_2",null,null,null,null,null,null).getEntities().size());
  assertEquals(1,((LeveldbTimelineStore)store).getEntityTypes().size());
  ((LeveldbTimelineStore)store).discardOldEntities(123l);
  assertEquals(0,store.getEntities("type_1",null,null,null,null,null,null).getEntities().size());
  assertEquals(0,store.getEntities("type_2",null,null,null,null,null,null).getEntities().size());
  assertEquals(0,((LeveldbTimelineStore)store).getEntityTypes().size());
  assertEquals(0,store.getEntities("type_1",null,null,null,userFilter,null,null).getEntities().size());
}
