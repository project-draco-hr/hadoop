{
  Map<String,Set<Object>> primaryFilter=Collections.singletonMap("user",Collections.singleton((Object)"otheruser"));
  TimelineEntities atsEntities=new TimelineEntities();
  atsEntities.setEntities(Collections.singletonList(createEntity(entityId1b,entityType1,789l,Collections.singletonList(ev2),null,primaryFilter,null)));
  TimelinePutResponse response=store.put(atsEntities);
  assertEquals(0,response.getErrors().size());
  NameValuePair pfPair=new NameValuePair("user","otheruser");
  List<TimelineEntity> entities=store.getEntities("type_1",null,null,null,pfPair,null,null).getEntities();
  assertEquals(1,entities.size());
  verifyEntityInfo(entityId1b,entityType1,Collections.singletonList(ev2),EMPTY_REL_ENTITIES,primaryFilter,EMPTY_MAP,entities.get(0));
  entities=store.getEntities("type_1",null,null,null,userFilter,null,null).getEntities();
  assertEquals(2,entities.size());
  verifyEntityInfo(entityId1,entityType1,events1,EMPTY_REL_ENTITIES,primaryFilters,otherInfo,entities.get(0));
  verifyEntityInfo(entityId1b,entityType1,events1,EMPTY_REL_ENTITIES,primaryFilters,otherInfo,entities.get(1));
  ((LeveldbTimelineStore)store).discardOldEntities(-123l);
  assertEquals(1,store.getEntities("type_1",null,null,null,pfPair,null,null).getEntities().size());
  assertEquals(2,store.getEntities("type_1",null,null,null,userFilter,null,null).getEntities().size());
  ((LeveldbTimelineStore)store).discardOldEntities(123l);
  assertEquals(0,store.getEntities("type_1",null,null,null,null,null,null).getEntities().size());
  assertEquals(0,store.getEntities("type_2",null,null,null,null,null,null).getEntities().size());
  assertEquals(0,((LeveldbTimelineStore)store).getEntityTypes().size());
  assertEquals(0,store.getEntities("type_1",null,null,null,pfPair,null,null).getEntities().size());
  assertEquals(0,store.getEntities("type_1",null,null,null,userFilter,null,null).getEntities().size());
}
