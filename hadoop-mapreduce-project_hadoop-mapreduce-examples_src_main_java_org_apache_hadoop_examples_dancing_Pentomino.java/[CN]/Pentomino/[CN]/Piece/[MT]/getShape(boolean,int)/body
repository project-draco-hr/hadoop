{
  boolean[][] result;
  if (rotate % 2 == 0) {
    int height=shape.length;
    int width=shape[0].length;
    result=new boolean[height][];
    boolean flipX=rotate == 2;
    boolean flipY=flip ^ (rotate == 2);
    for (int y=0; y < height; ++y) {
      result[y]=new boolean[width];
      for (int x=0; x < width; ++x) {
        result[y][x]=shape[doFlip(flipY,y,height)][doFlip(flipX,x,width)];
      }
    }
  }
 else {
    int height=shape[0].length;
    int width=shape.length;
    result=new boolean[height][];
    boolean flipX=rotate == 3;
    boolean flipY=flip ^ (rotate == 1);
    for (int y=0; y < height; ++y) {
      result[y]=new boolean[width];
      for (int x=0; x < width; ++x) {
        result[y][x]=shape[doFlip(flipX,x,width)][doFlip(flipY,y,height)];
      }
    }
  }
  return result;
}
