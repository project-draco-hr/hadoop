{
  Configuration conf=new Configuration();
  conf.set("ns." + DecayRpcScheduler.IPC_FCQ_DECAYSCHEDULER_PERIOD_KEY,"999999999");
  conf.set("ns." + DecayRpcScheduler.IPC_FCQ_DECAYSCHEDULER_FACTOR_KEY,"0.5");
  scheduler=new DecayRpcScheduler(1,"ns",conf);
  assertEquals(0,scheduler.getTotalCallSnapshot());
  for (int i=0; i < 4; i++) {
    scheduler.getPriorityLevel(mockCall("A"));
  }
  sleep(1000);
  for (int i=0; i < 8; i++) {
    scheduler.getPriorityLevel(mockCall("B"));
  }
  assertEquals(12,scheduler.getTotalCallSnapshot());
  assertEquals(4,scheduler.getCallCountSnapshot().get("A").longValue());
  assertEquals(8,scheduler.getCallCountSnapshot().get("B").longValue());
  scheduler.forceDecay();
  assertEquals(6,scheduler.getTotalCallSnapshot());
  assertEquals(2,scheduler.getCallCountSnapshot().get("A").longValue());
  assertEquals(4,scheduler.getCallCountSnapshot().get("B").longValue());
  scheduler.forceDecay();
  assertEquals(3,scheduler.getTotalCallSnapshot());
  assertEquals(1,scheduler.getCallCountSnapshot().get("A").longValue());
  assertEquals(2,scheduler.getCallCountSnapshot().get("B").longValue());
  scheduler.forceDecay();
  assertEquals(1,scheduler.getTotalCallSnapshot());
  assertEquals(null,scheduler.getCallCountSnapshot().get("A"));
  assertEquals(1,scheduler.getCallCountSnapshot().get("B").longValue());
  scheduler.forceDecay();
  assertEquals(0,scheduler.getTotalCallSnapshot());
  assertEquals(null,scheduler.getCallCountSnapshot().get("A"));
  assertEquals(null,scheduler.getCallCountSnapshot().get("B"));
}
