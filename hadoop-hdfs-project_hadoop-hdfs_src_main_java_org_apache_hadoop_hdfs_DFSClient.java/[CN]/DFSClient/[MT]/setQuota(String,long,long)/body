{
  if ((namespaceQuota <= 0 && namespaceQuota != HdfsConstants.QUOTA_DONT_SET && namespaceQuota != HdfsConstants.QUOTA_RESET) || (diskspaceQuota <= 0 && diskspaceQuota != HdfsConstants.QUOTA_DONT_SET && diskspaceQuota != HdfsConstants.QUOTA_RESET)) {
    throw new IllegalArgumentException("Invalid values for quota : " + namespaceQuota + " and "+ diskspaceQuota);
  }
  TraceScope scope=getPathTraceScope("setQuota",src);
  try {
    namenode.setQuota(src,namespaceQuota,diskspaceQuota,null);
  }
 catch (  RemoteException re) {
    throw re.unwrapRemoteException(AccessControlException.class,FileNotFoundException.class,NSQuotaExceededException.class,DSQuotaExceededException.class,UnresolvedPathException.class,SnapshotAccessControlException.class);
  }
 finally {
    scope.close();
  }
}
