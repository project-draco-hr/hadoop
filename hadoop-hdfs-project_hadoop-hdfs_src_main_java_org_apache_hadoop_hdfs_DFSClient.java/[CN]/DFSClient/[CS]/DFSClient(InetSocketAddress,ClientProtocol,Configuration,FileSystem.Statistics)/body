{
  this.dfsClientConf=new Conf(conf);
  this.conf=conf;
  this.stats=stats;
  this.socketFactory=NetUtils.getSocketFactory(conf,ClientProtocol.class);
  this.dtpReplaceDatanodeOnFailure=ReplaceDatanodeOnFailure.get(conf);
  this.hdfsTimeout=Client.getTimeout(conf);
  this.ugi=UserGroupInformation.getCurrentUser();
  final String authority=nameNodeAddr == null ? "null" : nameNodeAddr.getHostName() + ":" + nameNodeAddr.getPort();
  this.leaserenewer=LeaseRenewer.getInstance(authority,ugi,this);
  this.clientName=leaserenewer.getClientName(dfsClientConf.taskId);
  this.socketCache=new SocketCache(dfsClientConf.socketCacheCapacity);
  if (nameNodeAddr != null && rpcNamenode == null) {
    this.namenode=DFSUtil.createNamenode(nameNodeAddr,conf,ugi);
  }
 else   if (nameNodeAddr == null && rpcNamenode != null) {
    this.namenode=rpcNamenode;
  }
 else {
    throw new IllegalArgumentException("Expecting exactly one of nameNodeAddr and rpcNamenode being null: " + "nameNodeAddr=" + nameNodeAddr + ", rpcNamenode="+ rpcNamenode);
  }
}
