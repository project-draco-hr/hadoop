{
  MiniQJMHACluster qjCluster=null;
  FileSystem fs=null;
  try {
    Builder builder=new MiniQJMHACluster.Builder(conf);
    builder.getDfsBuilder().numDataNodes(0);
    qjCluster=builder.build();
    MiniDFSCluster cluster=qjCluster.getDfsCluster();
    checkJnPreviousDirExistence(qjCluster,false);
    checkClusterPreviousDirExistence(cluster,false);
    assertCTimesEqual(cluster);
    cluster.transitionToActive(0);
    fs=HATestUtil.configureFailoverFs(cluster,conf);
    assertTrue(fs.mkdirs(new Path("/foo1")));
    cluster.shutdownNameNode(1);
    cluster.getNameNodeInfos()[0].setStartOpt(StartupOption.UPGRADE);
    cluster.restartNameNode(0,false);
    checkNnPreviousDirExistence(cluster,0,true);
    checkNnPreviousDirExistence(cluster,1,false);
    checkJnPreviousDirExistence(qjCluster,true);
    int rc=BootstrapStandby.run(new String[]{"-force"},cluster.getConfiguration(1));
    assertEquals(0,rc);
    cluster.restartNameNode(1);
    cluster.transitionToStandby(0);
    cluster.transitionToActive(1);
    runFinalizeCommand(cluster);
    checkClusterPreviousDirExistence(cluster,false);
    checkJnPreviousDirExistence(qjCluster,false);
    assertCTimesEqual(cluster);
  }
  finally {
    if (fs != null) {
      fs.close();
    }
    if (qjCluster != null) {
      qjCluster.shutdown();
    }
  }
}
