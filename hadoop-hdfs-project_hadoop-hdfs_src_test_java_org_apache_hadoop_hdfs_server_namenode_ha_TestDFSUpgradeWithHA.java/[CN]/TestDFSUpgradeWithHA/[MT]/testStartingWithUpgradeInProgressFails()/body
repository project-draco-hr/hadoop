{
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(new Configuration()).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(0).build();
    for (int i=0; i < 2; i++) {
      for (      URI uri : cluster.getNameDirs(i)) {
        File prevTmp=new File(new File(uri),Storage.STORAGE_TMP_PREVIOUS);
        LOG.info("creating previous tmp dir: " + prevTmp);
        assertTrue(prevTmp.mkdirs());
      }
    }
    cluster.restartNameNodes();
    fail("Should not have been able to start an HA NN with an in-progress upgrade");
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("Cannot start an HA namenode with name dirs that need recovery.",ioe);
    LOG.info("Got expected exception",ioe);
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
