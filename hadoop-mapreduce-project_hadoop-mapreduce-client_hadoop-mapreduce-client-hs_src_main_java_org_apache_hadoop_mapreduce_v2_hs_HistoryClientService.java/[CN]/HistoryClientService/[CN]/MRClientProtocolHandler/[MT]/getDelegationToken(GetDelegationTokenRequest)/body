{
  try {
    AuthenticationMethod authMethod=UserGroupInformation.getRealAuthenticationMethod(UserGroupInformation.getCurrentUser());
    if (UserGroupInformation.isSecurityEnabled() && (authMethod != AuthenticationMethod.KERBEROS)) {
      throw new IOException("Delegation Token can be issued only with kerberos authentication");
    }
    GetDelegationTokenResponse response=recordFactory.newRecordInstance(GetDelegationTokenResponse.class);
    MRDelegationTokenIdentifier tokenIdentifier=new MRDelegationTokenIdentifier();
    Token<MRDelegationTokenIdentifier> realJHSToken=new Token<MRDelegationTokenIdentifier>(tokenIdentifier,jhsDTSecretManager);
    DelegationToken mrDToken=BuilderUtils.newDelegationToken(realJHSToken.getIdentifier(),realJHSToken.getKind().toString(),realJHSToken.getPassword(),bindAddress.getAddress().getHostAddress() + ":" + bindAddress.getPort());
    response.setDelegationToken(mrDToken);
    return response;
  }
 catch (  IOException i) {
    throw RPCUtil.getRemoteException(i);
  }
}
