{
  Configuration conf=getConfig();
  YarnRPC rpc=YarnRPC.create(conf);
  initializeWebApp(conf);
  String serviceAddr=conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);
  InetSocketAddress address=NetUtils.createSocketAddr(serviceAddr,JHAdminConfig.DEFAULT_MR_HISTORY_PORT,JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);
  InetAddress hostNameResolved=null;
  try {
    hostNameResolved=InetAddress.getLocalHost();
  }
 catch (  UnknownHostException e) {
    throw new YarnException(e);
  }
  server=rpc.getServer(HSClientProtocol.class,protocolHandler,address,conf,jhsDTSecretManager,conf.getInt(JHAdminConfig.MR_HISTORY_CLIENT_THREAD_COUNT,JHAdminConfig.DEFAULT_MR_HISTORY_CLIENT_THREAD_COUNT));
  if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,false)) {
    server.refreshServiceAcl(conf,new ClientHSPolicyProvider());
  }
  server.start();
  this.bindAddress=NetUtils.createSocketAddr(hostNameResolved.getHostAddress() + ":" + server.getPort());
  LOG.info("Instantiated MRClientService at " + this.bindAddress);
  super.start();
}
