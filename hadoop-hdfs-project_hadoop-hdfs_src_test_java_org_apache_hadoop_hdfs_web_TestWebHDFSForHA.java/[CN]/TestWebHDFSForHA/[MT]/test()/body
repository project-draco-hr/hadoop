{
  Configuration conf=new Configuration();
  conf.setBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY,true);
  MiniDFSNNTopology topo=new MiniDFSNNTopology().addNameservice(new MiniDFSNNTopology.NSConf(LOGICAL_NAME).addNN(new MiniDFSNNTopology.NNConf("nn1")).addNN(new MiniDFSNNTopology.NNConf("nn2")));
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(topo).numDataNodes(3).build();
  HATestUtil.setFailoverConfigurations(cluster,conf,LOGICAL_NAME);
  FileSystem fs=null;
  try {
    cluster.waitActive();
    final String uri=WebHdfsFileSystem.SCHEME + "://" + LOGICAL_NAME;
    fs=(WebHdfsFileSystem)FileSystem.get(new URI(uri),conf);
    cluster.transitionToActive(0);
    final Path dir=new Path("/test");
    Assert.assertTrue(fs.mkdirs(dir));
    cluster.shutdownNameNode(0);
    cluster.transitionToActive(1);
    final Path dir2=new Path("/test2");
    Assert.assertTrue(fs.mkdirs(dir2));
  }
  finally {
    if (fs != null) {
      fs.close();
    }
    cluster.shutdown();
  }
}
