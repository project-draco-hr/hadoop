{
  ApplicationId appId=ApplicationId.newInstance(0,1);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId cid=ContainerId.newContainerId(attemptId,1);
  Map<String,LocalResource> localResources=Collections.emptyMap();
  Map<String,String> containerEnv=Collections.emptyMap();
  List<String> containerCmds=Collections.emptyList();
  Map<String,ByteBuffer> serviceData=Collections.emptyMap();
  Credentials containerCreds=new Credentials();
  DataOutputBuffer dob=new DataOutputBuffer();
  containerCreds.writeTokenStorageToStream(dob);
  ByteBuffer containerTokens=ByteBuffer.wrap(dob.getData(),0,dob.getLength());
  Map<ApplicationAccessType,String> acls=Collections.emptyMap();
  ContainerLaunchContext clc=ContainerLaunchContext.newInstance(localResources,containerEnv,containerCmds,serviceData,containerTokens,acls);
  LogAggregationContext logAggregationContext=LogAggregationContext.newInstance("includePattern","excludePattern");
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,false);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,false);
  Context context=createContext(conf,new NMNullStateStoreService());
  ContainerManagerImpl cm=spy(createContainerManager(context));
  cm.init(conf);
  cm.start();
  StartContainersResponse startResponse=startContainer(context,cm,cid,clc,logAggregationContext);
  assertEquals(1,startResponse.getSuccessfullyStartedContainers().size());
  cm.stop();
  verify(cm).handle(isA(CMgrCompletedAppsEvent.class));
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,true);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,false);
  NMMemoryStateStoreService memStore=new NMMemoryStateStoreService();
  memStore.init(conf);
  memStore.start();
  context=createContext(conf,memStore);
  cm=spy(createContainerManager(context));
  cm.init(conf);
  cm.start();
  startResponse=startContainer(context,cm,cid,clc,logAggregationContext);
  assertEquals(1,startResponse.getSuccessfullyStartedContainers().size());
  cm.stop();
  memStore.close();
  verify(cm).handle(isA(CMgrCompletedAppsEvent.class));
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_ENABLED,true);
  conf.setBoolean(YarnConfiguration.NM_RECOVERY_SUPERVISED,true);
  memStore=new NMMemoryStateStoreService();
  memStore.init(conf);
  memStore.start();
  context=createContext(conf,memStore);
  cm=spy(createContainerManager(context));
  cm.init(conf);
  cm.start();
  startResponse=startContainer(context,cm,cid,clc,logAggregationContext);
  assertEquals(1,startResponse.getSuccessfullyStartedContainers().size());
  cm.stop();
  memStore.close();
  verify(cm,never()).handle(isA(CMgrCompletedAppsEvent.class));
}
