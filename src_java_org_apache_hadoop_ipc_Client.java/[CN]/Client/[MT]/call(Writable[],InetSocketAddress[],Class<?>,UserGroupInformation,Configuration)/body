{
  if (addresses.length == 0)   return new Writable[0];
  ParallelResults results=new ParallelResults(params.length);
synchronized (results) {
    for (int i=0; i < params.length; i++) {
      ParallelCall call=new ParallelCall(params[i],results,i);
      try {
        ConnectionId remoteId=ConnectionId.getConnectionId(addresses[i],protocol,ticket,0,conf);
        Connection connection=getConnection(remoteId,call);
        connection.sendParam(call);
      }
 catch (      IOException e) {
        LOG.info("Calling " + addresses[i] + " caught: "+ e.getMessage(),e);
        results.size--;
      }
    }
    while (results.count != results.size) {
      try {
        results.wait();
      }
 catch (      InterruptedException e) {
      }
    }
    return results.values;
  }
}
