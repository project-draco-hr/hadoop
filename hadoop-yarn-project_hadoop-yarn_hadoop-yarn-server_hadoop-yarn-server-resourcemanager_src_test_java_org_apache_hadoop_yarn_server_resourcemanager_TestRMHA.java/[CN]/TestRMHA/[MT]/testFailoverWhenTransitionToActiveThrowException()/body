{
  configuration.setBoolean(YarnConfiguration.AUTO_FAILOVER_ENABLED,false);
  Configuration conf=new YarnConfiguration(configuration);
  MemoryRMStateStore memStore=new MemoryRMStateStore(){
    int count=0;
    @Override public synchronized void startInternal() throws Exception {
      if (count++ == 0) {
        throw new Exception("Session Expired");
      }
    }
  }
;
  memStore.init(conf);
  rm=new MockRM(conf,memStore);
  rm.init(conf);
  StateChangeRequestInfo requestInfo=new StateChangeRequestInfo(HAServiceProtocol.RequestSource.REQUEST_BY_USER);
  assertEquals(STATE_ERR,HAServiceState.INITIALIZING,rm.adminService.getServiceStatus().getState());
  assertFalse("RM is ready to become active before being started",rm.adminService.getServiceStatus().isReadyToBecomeActive());
  checkMonitorHealth();
  rm.start();
  checkMonitorHealth();
  checkStandbyRMFunctionality();
  try {
    rm.adminService.transitionToActive(requestInfo);
    Assert.fail("Transitioned to Active should throw exception.");
  }
 catch (  Exception e) {
    assertTrue("Error when transitioning to Active mode".contains(e.getMessage()));
  }
  rm.adminService.transitionToActive(requestInfo);
  checkMonitorHealth();
  checkActiveRMFunctionality();
}
