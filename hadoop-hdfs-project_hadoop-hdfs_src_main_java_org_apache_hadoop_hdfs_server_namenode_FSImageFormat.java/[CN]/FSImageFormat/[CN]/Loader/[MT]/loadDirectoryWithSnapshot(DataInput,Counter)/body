{
  long inodeId=in.readLong();
  final INodeDirectory parent=this.namesystem.dir.getInode(inodeId).asDirectory();
  boolean toLoadSubtree=referenceMap.toProcessSubtree(parent.getId());
  if (!toLoadSubtree) {
    return;
  }
  int numSnapshots=in.readInt();
  if (numSnapshots >= 0) {
    SnapshotFSImageFormat.loadSnapshotList(parent,numSnapshots,in,this);
    if (parent.getDirectorySnapshottableFeature().getSnapshotQuota() > 0) {
      this.namesystem.getSnapshotManager().addSnapshottable(parent);
    }
  }
  loadChildren(parent,in,counter);
  SnapshotFSImageFormat.loadDirectoryDiffList(parent,in,this);
  int numSubTree=in.readInt();
  for (int i=0; i < numSubTree; i++) {
    loadDirectoryWithSnapshot(in,counter);
  }
}
