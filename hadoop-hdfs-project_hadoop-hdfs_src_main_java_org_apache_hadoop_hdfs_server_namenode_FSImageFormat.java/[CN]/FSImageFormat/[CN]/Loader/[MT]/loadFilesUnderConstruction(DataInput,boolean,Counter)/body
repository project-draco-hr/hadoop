{
  FSDirectory fsDir=namesystem.dir;
  int size=in.readInt();
  LOG.info("Number of files under construction = " + size);
  for (int i=0; i < size; i++) {
    INodeFile cons=FSImageSerialization.readINodeUnderConstruction(in,namesystem,getLayoutVersion());
    counter.increment();
    String path=cons.getLocalName();
    INodeFile oldnode=null;
    boolean inSnapshot=false;
    if (path != null && FSDirectory.isReservedName(path) && NameNodeLayoutVersion.supports(LayoutVersion.Feature.ADD_INODE_ID,getLayoutVersion())) {
      oldnode=namesystem.dir.getInode(cons.getId()).asFile();
      inSnapshot=true;
    }
 else {
      path=renameReservedPathsOnUpgrade(path,getLayoutVersion());
      final INodesInPath iip=fsDir.getINodesInPath(path,true);
      oldnode=INodeFile.valueOf(iip.getLastINode(),path);
    }
    FileUnderConstructionFeature uc=cons.getFileUnderConstructionFeature();
    oldnode.toUnderConstruction(uc.getClientName(),uc.getClientMachine());
    if (oldnode.numBlocks() > 0) {
      BlockInfo ucBlock=cons.getLastBlock();
      BlockInfo info=namesystem.getBlockManager().addBlockCollection(ucBlock,oldnode);
      oldnode.setBlock(oldnode.numBlocks() - 1,info);
    }
    if (!inSnapshot) {
      namesystem.leaseManager.addLease(uc.getClientName(),oldnode.getId());
    }
  }
}
