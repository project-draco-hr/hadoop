{
  int prefixLen=currentDirName.position();
  if (snapshot == null) {
    if (prefixLen == 0) {
      out.writeShort(PATH_SEPARATOR.length);
      out.write(PATH_SEPARATOR);
    }
 else {
      out.writeShort(prefixLen);
      out.write(currentDirName.array(),0,prefixLen);
    }
  }
 else {
    String nonSnapshotPath=prefixLen == 0 ? Path.SEPARATOR : DFSUtil.bytes2String(currentDirName.array(),0,prefixLen);
    String snapshotFullPath=computeSnapshotPath(nonSnapshotPath,snapshot);
    byte[] snapshotFullPathBytes=DFSUtil.string2Bytes(snapshotFullPath);
    out.writeShort(snapshotFullPathBytes.length);
    out.write(snapshotFullPathBytes);
  }
  if (!toSaveSubtree) {
    return;
  }
  final ReadOnlyList<INode> children=current.getChildrenList(null);
  int dirNum=0;
  Map<Snapshot,List<INodeDirectory>> snapshotDirMap=null;
  if (current instanceof INodeDirectoryWithSnapshot) {
    snapshotDirMap=new HashMap<Snapshot,List<INodeDirectory>>();
    dirNum+=((INodeDirectoryWithSnapshot)current).getSnapshotDirectory(snapshotDirMap);
  }
  if (current instanceof INodeDirectorySnapshottable) {
    INodeDirectorySnapshottable snapshottableNode=(INodeDirectorySnapshottable)current;
    SnapshotFSImageFormat.saveSnapshots(snapshottableNode,out);
  }
 else {
    out.writeInt(-1);
  }
  dirNum+=saveChildren(children,out);
  SnapshotFSImageFormat.saveDirectoryDiffList(current,out,referenceMap);
  out.writeInt(dirNum);
  for (  INode child : children) {
    if (!child.isDirectory()) {
      continue;
    }
    boolean toSave=child.isReference() ? referenceMap.toProcessSubtree(child.getId()) : true;
    currentDirName.put(PATH_SEPARATOR).put(child.getLocalNameBytes());
    saveImage(currentDirName,child.asDirectory(),out,snapshot,toSave);
    currentDirName.position(prefixLen);
  }
  if (snapshotDirMap != null) {
    for (    Entry<Snapshot,List<INodeDirectory>> e : snapshotDirMap.entrySet()) {
      for (      INodeDirectory subDir : e.getValue()) {
        boolean toSave=subDir.getParentReference() != null ? referenceMap.toProcessSubtree(subDir.getId()) : true;
        currentDirName.put(PATH_SEPARATOR).put(subDir.getLocalNameBytes());
        saveImage(currentDirName,subDir,out,e.getKey(),toSave);
        currentDirName.position(prefixLen);
      }
    }
  }
}
