{
  store=new MemoryApplicationHistoryStore();
  Configuration conf=new Configuration();
  conf.setBoolean(YarnConfiguration.APPLICATION_HISTORY_ENABLED,true);
  conf.setClass(YarnConfiguration.APPLICATION_HISTORY_STORE,MemoryApplicationHistoryStore.class,ApplicationHistoryStore.class);
  writer=new RMApplicationHistoryWriter(){
    @Override protected ApplicationHistoryStore createApplicationHistoryStore(    Configuration conf){
      return store;
    }
    @Override protected Dispatcher createDispatcher(    Configuration conf){
      MultiThreadedDispatcher dispatcher=new MultiThreadedDispatcher(conf.getInt(YarnConfiguration.RM_HISTORY_WRITER_MULTI_THREADED_DISPATCHER_POOL_SIZE,YarnConfiguration.DEFAULT_RM_HISTORY_WRITER_MULTI_THREADED_DISPATCHER_POOL_SIZE));
      dispatcher.setDrainEventsOnStop();
      return dispatcher;
    }
class MultiThreadedDispatcher extends RMApplicationHistoryWriter.MultiThreadedDispatcher {
      public MultiThreadedDispatcher(      int num){
        super(num);
      }
      @Override protected AsyncDispatcher createDispatcher(){
        CounterDispatcher dispatcher=new CounterDispatcher();
        dispatchers.add(dispatcher);
        return dispatcher;
      }
    }
  }
;
  writer.init(conf);
  writer.start();
}
