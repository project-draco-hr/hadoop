{
  Configuration conf=new Configuration();
  AsyncDispatcher dispatcher=new AsyncDispatcher();
  dispatcher.init(conf);
  dispatcher.start();
  OutputCommitter committer=mock(OutputCommitter.class);
  doThrow(new IOException("forcefail")).when(committer).setupJob(any(JobContext.class));
  CommitterEventHandler commitHandler=createCommitterEventHandler(dispatcher,committer);
  commitHandler.init(conf);
  commitHandler.start();
  JobImpl job=createStubbedJob(conf,dispatcher,2);
  JobId jobId=job.getID();
  job.handle(new JobEvent(jobId,JobEventType.JOB_INIT));
  assertJobState(job,JobStateInternal.INITED);
  job.handle(new JobEvent(jobId,JobEventType.JOB_START));
  assertJobState(job,JobStateInternal.FAILED);
  job.handle(new JobEvent(jobId,JobEventType.JOB_TASK_COMPLETED));
  Assert.assertEquals(JobState.FAILED,job.getState());
  job.handle(new JobEvent(jobId,JobEventType.JOB_TASK_ATTEMPT_COMPLETED));
  Assert.assertEquals(JobState.FAILED,job.getState());
  job.handle(new JobEvent(jobId,JobEventType.JOB_MAP_TASK_RESCHEDULED));
  Assert.assertEquals(JobState.FAILED,job.getState());
  job.handle(new JobEvent(jobId,JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE));
  Assert.assertEquals(JobState.FAILED,job.getState());
  dispatcher.stop();
  commitHandler.stop();
}
