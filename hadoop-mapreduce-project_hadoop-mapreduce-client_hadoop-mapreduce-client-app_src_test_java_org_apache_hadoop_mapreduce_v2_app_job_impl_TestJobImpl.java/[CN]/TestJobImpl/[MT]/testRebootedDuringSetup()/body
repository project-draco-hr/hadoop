{
  Configuration conf=new Configuration();
  conf.set(MRJobConfig.MR_AM_STAGING_DIR,stagingDir);
  AsyncDispatcher dispatcher=new AsyncDispatcher();
  dispatcher.init(conf);
  dispatcher.start();
  OutputCommitter committer=new StubbedOutputCommitter(){
    @Override public synchronized void setupJob(    JobContext jobContext) throws IOException {
      while (!Thread.interrupted()) {
        try {
          wait();
        }
 catch (        InterruptedException e) {
        }
      }
    }
  }
;
  CommitterEventHandler commitHandler=createCommitterEventHandler(dispatcher,committer);
  commitHandler.init(conf);
  commitHandler.start();
  AppContext mockContext=mock(AppContext.class);
  when(mockContext.isLastAMRetry()).thenReturn(false);
  JobImpl job=createStubbedJob(conf,dispatcher,2,mockContext);
  JobId jobId=job.getID();
  job.handle(new JobEvent(jobId,JobEventType.JOB_INIT));
  assertJobState(job,JobStateInternal.INITED);
  job.handle(new JobStartEvent(jobId));
  assertJobState(job,JobStateInternal.SETUP);
  job.handle(new JobEvent(job.getID(),JobEventType.JOB_AM_REBOOT));
  assertJobState(job,JobStateInternal.REBOOT);
  Assert.assertEquals(JobState.RUNNING,job.getState());
  dispatcher.stop();
  commitHandler.stop();
}
