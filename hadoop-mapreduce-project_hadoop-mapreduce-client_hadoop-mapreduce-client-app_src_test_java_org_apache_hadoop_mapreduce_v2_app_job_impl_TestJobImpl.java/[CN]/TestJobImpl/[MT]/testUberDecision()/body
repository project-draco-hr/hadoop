{
  Configuration conf=new Configuration();
  boolean isUber=testUberDecision(conf);
  Assert.assertFalse(isUber);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,true);
  isUber=testUberDecision(conf);
  Assert.assertTrue(isUber);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,true);
  conf.setInt(MRJobConfig.JOB_UBERTASK_MAXREDUCES,0);
  conf.setInt(MRJobConfig.NUM_REDUCES,1);
  isUber=testUberDecision(conf);
  Assert.assertFalse(isUber);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,true);
  conf.setInt(MRJobConfig.JOB_UBERTASK_MAXREDUCES,1);
  conf.setInt(MRJobConfig.NUM_REDUCES,1);
  isUber=testUberDecision(conf);
  Assert.assertTrue(isUber);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,true);
  conf.setInt(MRJobConfig.JOB_UBERTASK_MAXMAPS,1);
  isUber=testUberDecision(conf);
  Assert.assertFalse(isUber);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,true);
  conf.setInt(MRJobConfig.NUM_REDUCES,0);
  conf.setInt(MRJobConfig.REDUCE_MEMORY_MB,2048);
  conf.setInt(MRJobConfig.REDUCE_CPU_VCORES,10);
  isUber=testUberDecision(conf);
  Assert.assertTrue(isUber);
}
