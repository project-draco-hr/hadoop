{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Forwarding allocate request to the" + "Distributed Scheduler Service on YARN RM");
  }
  List<Container> allocatedContainers=containerAllocator.allocateContainers(request.getAllocateRequest(),applicationAttemptId,oppContainerContext,rmIdentifier,appSubmitter);
  request.setAllocatedContainers(allocatedContainers);
  DistributedSchedulingAllocateResponse dsResp=getNextInterceptor().allocateForDistributedScheduling(request);
  setNodeList(dsResp.getNodesForScheduling());
  List<NMToken> nmTokens=dsResp.getAllocateResponse().getNMTokens();
  for (  NMToken nmToken : nmTokens) {
    nodeTokens.put(nmToken.getNodeId(),nmToken);
  }
  oppContainerContext.updateCompletedContainers(dsResp.getAllocateResponse());
  updateAllocateResponse(dsResp.getAllocateResponse(),nmTokens,allocatedContainers);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Number of opportunistic containers currently" + "allocated by application: " + oppContainerContext.getContainersAllocated().size());
  }
  return dsResp;
}
