{
  args=new String[]{"print",tokenFilename};
  rc=dt.run(args);
  assertEquals("test simple print exit code",0,rc);
  assertTrue("test simple print output kind:\n" + outContent.toString(),outContent.toString().contains(KIND.toString()));
  assertTrue("test simple print output service:\n" + outContent.toString(),outContent.toString().contains(SERVICE.toString()));
  outContent.reset();
  args=new String[]{"print",tokenLegacyFile.toString()};
  rc=dt.run(args);
  assertEquals("test legacy print exit code",0,rc);
  assertTrue("test simple print output kind:\n" + outContent.toString(),outContent.toString().contains(KIND.toString()));
  assertTrue("test simple print output service:\n" + outContent.toString(),outContent.toString().contains(SERVICE.toString()));
  outContent.reset();
  args=new String[]{"print","-alias",SERVICE.toString(),tokenFilename};
  rc=dt.run(args);
  assertEquals("test alias print exit code",0,rc);
  assertTrue("test simple print output kind:\n" + outContent.toString(),outContent.toString().contains(KIND.toString()));
  assertTrue("test simple print output service:\n" + outContent.toString(),outContent.toString().contains(SERVICE.toString()));
  outContent.reset();
  args=new String[]{"print","-alias","not-a-serivce",tokenFilename};
  rc=dt.run(args);
  assertEquals("test no alias print exit code",0,rc);
  assertFalse("test no alias print output kind:\n" + outContent.toString(),outContent.toString().contains(KIND.toString()));
  assertFalse("test no alias print output service:\n" + outContent.toString(),outContent.toString().contains(SERVICE.toString()));
}
