{
  Configuration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  cluster.waitActive();
  ArrayList<DataNode> dns=cluster.getDataNodes();
  DataNode dn=dns.get(0);
  String selfSocketAddr=dn.getSelfAddr().toString();
  System.out.println("DN Self Socket Addr == " + selfSocketAddr);
  assertTrue(selfSocketAddr.startsWith("/127.0.0.1:"));
  for (int i=0; i < dns.size(); i++) {
    DataNodeProperties dnp=cluster.stopDataNode(i);
    assertNotNull("Should have been able to stop simulated datanode",dnp);
  }
  conf.unset(DFS_DATANODE_ADDRESS_KEY);
  conf.unset(DFS_DATANODE_HTTP_ADDRESS_KEY);
  conf.unset(DFS_DATANODE_IPC_ADDRESS_KEY);
  cluster.startDataNodes(conf,1,true,StartupOption.REGULAR,null,null,null,false,true);
  dns=cluster.getDataNodes();
  dn=dns.get(0);
  selfSocketAddr=dn.getSelfAddr().toString();
  System.out.println("DN Self Socket Addr == " + selfSocketAddr);
  assertTrue(selfSocketAddr.startsWith("/127.0.0.1:"));
  for (int i=0; i < dns.size(); i++) {
    DataNodeProperties dnp=cluster.stopDataNode(i);
    assertNotNull("Should have been able to stop simulated datanode",dnp);
  }
  conf.set(DFS_DATANODE_ADDRESS_KEY,"0.0.0.0:0");
  conf.set(DFS_DATANODE_HTTP_ADDRESS_KEY,"0.0.0.0:0");
  conf.set(DFS_DATANODE_IPC_ADDRESS_KEY,"0.0.0.0:0");
  cluster.startDataNodes(conf,1,true,StartupOption.REGULAR,null,null,null,false,true);
  dns=cluster.getDataNodes();
  dn=dns.get(0);
  selfSocketAddr=dn.getSelfAddr().toString();
  System.out.println("DN Self Socket Addr == " + selfSocketAddr);
  assertTrue(selfSocketAddr.startsWith("/0.0.0.0:"));
  cluster.shutdown();
}
