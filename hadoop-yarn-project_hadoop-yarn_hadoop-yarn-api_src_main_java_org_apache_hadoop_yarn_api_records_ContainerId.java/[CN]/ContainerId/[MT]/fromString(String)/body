{
  Iterator<String> it=_SPLITTER.split(containerIdStr).iterator();
  if (!it.next().equals(CONTAINER_PREFIX)) {
    throw new IllegalArgumentException("Invalid ContainerId prefix: " + containerIdStr);
  }
  try {
    String epochOrClusterTimestampStr=it.next();
    long epoch=0;
    ApplicationAttemptId appAttemptID=null;
    if (epochOrClusterTimestampStr.startsWith(EPOCH_PREFIX)) {
      String epochStr=epochOrClusterTimestampStr;
      epoch=Integer.parseInt(epochStr.substring(EPOCH_PREFIX.length()));
      appAttemptID=toApplicationAttemptId(it);
    }
 else {
      String clusterTimestampStr=epochOrClusterTimestampStr;
      long clusterTimestamp=Long.parseLong(clusterTimestampStr);
      appAttemptID=toApplicationAttemptId(clusterTimestamp,it);
    }
    long id=Long.parseLong(it.next());
    long cid=(epoch << 40) | id;
    ContainerId containerId=ContainerId.newInstance(appAttemptID,cid);
    return containerId;
  }
 catch (  NumberFormatException n) {
    throw new IllegalArgumentException("Invalid ContainerId: " + containerIdStr,n);
  }
}
