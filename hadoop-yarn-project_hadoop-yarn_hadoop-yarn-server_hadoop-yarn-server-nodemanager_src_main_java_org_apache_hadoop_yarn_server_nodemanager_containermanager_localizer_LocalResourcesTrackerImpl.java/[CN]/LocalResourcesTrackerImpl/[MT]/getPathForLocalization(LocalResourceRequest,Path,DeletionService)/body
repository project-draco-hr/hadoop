{
  Path rPath=localDirPath;
  if (useLocalCacheDirectoryManager && localDirPath != null) {
    if (!directoryManagers.containsKey(localDirPath)) {
      directoryManagers.putIfAbsent(localDirPath,new LocalCacheDirectoryManager(conf));
    }
    LocalCacheDirectoryManager dir=directoryManagers.get(localDirPath);
    rPath=localDirPath;
    String hierarchicalPath=dir.getRelativePathForLocalization();
    if (!hierarchicalPath.isEmpty()) {
      rPath=new Path(localDirPath,hierarchicalPath);
    }
    inProgressLocalResourcesMap.put(req,rPath);
  }
  while (true) {
    Path uniquePath=new Path(rPath,Long.toString(uniqueNumberGenerator.incrementAndGet()));
    File file=new File(uniquePath.toUri().getRawPath());
    if (!file.exists()) {
      rPath=uniquePath;
      break;
    }
    LOG.warn("Directory " + uniquePath + " already exists, "+ "try next one.");
    if (delService != null) {
      delService.delete(getUser(),uniquePath);
    }
  }
  Path localPath=new Path(rPath,req.getPath().getName());
  LocalizedResource rsrc=localrsrc.get(req);
  rsrc.setLocalPath(localPath);
  LocalResource lr=LocalResource.newInstance(req.getResource(),req.getType(),req.getVisibility(),req.getSize(),req.getTimestamp());
  try {
    stateStore.startResourceLocalization(user,appId,((LocalResourcePBImpl)lr).getProto(),localPath);
  }
 catch (  IOException e) {
    LOG.error("Unable to record localization start for " + rsrc,e);
  }
  return rPath;
}
