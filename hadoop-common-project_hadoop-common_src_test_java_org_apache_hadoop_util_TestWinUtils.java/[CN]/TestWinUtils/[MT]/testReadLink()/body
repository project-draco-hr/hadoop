{
  File dir1=new File(TEST_DIR,"dir1");
  assertTrue(dir1.mkdirs());
  File file1=new File(dir1,"file1.txt");
  assertTrue(file1.createNewFile());
  File dirLink=new File(TEST_DIR,"dlink");
  File fileLink=new File(TEST_DIR,"flink");
  Shell.execCommand(Shell.WINUTILS,"symlink",dirLink.toString(),dir1.toString());
  Shell.execCommand(Shell.WINUTILS,"symlink",fileLink.toString(),file1.toString());
  String readLinkOutput=Shell.execCommand(Shell.WINUTILS,"readlink",dirLink.toString());
  assertThat(readLinkOutput,equalTo(dir1.toString()));
  readLinkOutput=Shell.execCommand(Shell.WINUTILS,"readlink",fileLink.toString());
  assertThat(readLinkOutput,equalTo(file1.toString()));
  try {
    Shell.execCommand(Shell.WINUTILS,"readlink","");
    fail("Failed to get Shell.ExitCodeException when reading bad symlink");
  }
 catch (  Shell.ExitCodeException ece) {
    assertThat(ece.getExitCode(),is(1));
  }
  try {
    Shell.execCommand(Shell.WINUTILS,"readlink","ThereIsNoSuchLink");
    fail("Failed to get Shell.ExitCodeException when reading bad symlink");
  }
 catch (  Shell.ExitCodeException ece) {
    assertThat(ece.getExitCode(),is(1));
  }
  try {
    Shell.execCommand(Shell.WINUTILS,"readlink",dir1.toString());
    fail("Failed to get Shell.ExitCodeException when reading bad symlink");
  }
 catch (  Shell.ExitCodeException ece) {
    assertThat(ece.getExitCode(),is(1));
  }
  try {
    Shell.execCommand(Shell.WINUTILS,"readlink",file1.toString());
    fail("Failed to get Shell.ExitCodeException when reading bad symlink");
  }
 catch (  Shell.ExitCodeException ece) {
    assertThat(ece.getExitCode(),is(1));
  }
  try {
    Shell.execCommand(Shell.WINUTILS,"readlink","a","b");
    fail("Failed to get Shell.ExitCodeException with bad parameters");
  }
 catch (  Shell.ExitCodeException ece) {
    assertThat(ece.getExitCode(),is(1));
  }
}
