{
  NodeStatus nodeStatus=recordFactory.newRecordInstance(NodeStatus.class);
  nodeStatus.setNodeId(this.nodeId);
  int numActiveContainers=0;
  List<ContainerStatus> containersStatuses=new ArrayList<ContainerStatus>();
  for (Iterator<Entry<ContainerId,Container>> i=this.context.getContainers().entrySet().iterator(); i.hasNext(); ) {
    Entry<ContainerId,Container> e=i.next();
    ContainerId containerId=e.getKey();
    Container container=e.getValue();
    org.apache.hadoop.yarn.api.records.ContainerStatus containerStatus=container.cloneAndGetContainerStatus();
    containersStatuses.add(containerStatus);
    ++numActiveContainers;
    LOG.info("Sending out status for container: " + containerStatus);
    if (containerStatus.getState() == ContainerState.COMPLETE) {
      i.remove();
      LOG.info("Removed completed container " + containerId);
    }
  }
  nodeStatus.setContainersStatuses(containersStatuses);
  LOG.debug(this.containerManagerBindAddress + " sending out status for " + numActiveContainers+ " containers");
  NodeHealthStatus nodeHealthStatus=this.context.getNodeHealthStatus();
  if (this.healthChecker != null) {
    this.healthChecker.setHealthStatus(nodeHealthStatus);
  }
  LOG.debug("Node's health-status : " + nodeHealthStatus.getIsNodeHealthy() + ", "+ nodeHealthStatus.getHealthReport());
  nodeStatus.setNodeHealthStatus(nodeHealthStatus);
  return nodeStatus;
}
