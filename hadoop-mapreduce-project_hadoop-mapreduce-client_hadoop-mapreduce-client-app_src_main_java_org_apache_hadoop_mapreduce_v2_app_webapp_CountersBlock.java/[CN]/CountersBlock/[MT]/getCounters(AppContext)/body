{
  JobId jobID=null;
  TaskId taskID=null;
  String tid=$(TASK_ID);
  if (!tid.isEmpty()) {
    taskID=MRApps.toTaskID(tid);
    jobID=taskID.getJobId();
  }
 else {
    String jid=$(JOB_ID);
    if (jid != null && !jid.isEmpty()) {
      jobID=MRApps.toJobID(jid);
    }
  }
  if (jobID == null) {
    return;
  }
  job=ctx.getJob(jobID);
  if (job == null) {
    return;
  }
  if (taskID != null) {
    task=job.getTask(taskID);
    if (task == null) {
      return;
    }
    total=task.getCounters();
    return;
  }
  Map<TaskId,Task> tasks=job.getTasks();
  total=job.getAllCounters();
  boolean needTotalCounters=false;
  if (total == null) {
    total=new Counters();
    needTotalCounters=true;
  }
  map=new Counters();
  reduce=new Counters();
  for (  Task t : tasks.values()) {
    Counters counters=t.getCounters();
    if (counters == null) {
      continue;
    }
switch (t.getType()) {
case MAP:
      map.incrAllCounters(counters);
    break;
case REDUCE:
  reduce.incrAllCounters(counters);
break;
}
if (needTotalCounters) {
total.incrAllCounters(counters);
}
}
}
