{
  JobId jobID=null;
  TaskId taskID=null;
  String tid=$(TASK_ID);
  if (!tid.isEmpty()) {
    taskID=MRApps.toTaskID(tid);
    jobID=taskID.getJobId();
  }
 else {
    String jid=$(JOB_ID);
    if (!jid.isEmpty()) {
      jobID=MRApps.toJobID(jid);
    }
  }
  if (jobID == null) {
    return;
  }
  job=ctx.getJob(jobID);
  if (job == null) {
    return;
  }
  if (taskID != null) {
    task=job.getTask(taskID);
    if (task == null) {
      return;
    }
    total=task.getCounters();
    return;
  }
  Map<TaskId,Task> tasks=job.getTasks();
  total=JobImpl.newCounters();
  map=JobImpl.newCounters();
  reduce=JobImpl.newCounters();
  for (  Task t : tasks.values()) {
    Counters counters=t.getCounters();
    JobImpl.incrAllCounters(total,counters);
switch (t.getType()) {
case MAP:
      JobImpl.incrAllCounters(map,counters);
    break;
case REDUCE:
  JobImpl.incrAllCounters(reduce,counters);
break;
}
}
}
