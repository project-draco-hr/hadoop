{
  this.conf=conf;
  this.clock=clock;
  this.jobFile=remoteJobConfFile;
  ReadWriteLock readWriteLock=new ReentrantReadWriteLock();
  readLock=readWriteLock.readLock();
  writeLock=readWriteLock.writeLock();
  this.attempts=Collections.emptyMap();
  this.finishedAttempts=new HashSet<TaskAttemptId>(2);
  this.failedAttempts=new HashSet<TaskAttemptId>(2);
  this.inProgressAttempts=new HashSet<TaskAttemptId>(2);
  maxAttempts=getMaxAttempts();
  taskId=MRBuilderUtils.newTaskId(jobId,partition,taskType);
  this.partition=partition;
  this.taskAttemptListener=taskAttemptListener;
  this.eventHandler=eventHandler;
  this.credentials=credentials;
  this.jobToken=jobToken;
  this.metrics=metrics;
  this.appContext=appContext;
  this.encryptedShuffle=conf.getBoolean(MRConfig.SHUFFLE_SSL_ENABLED_KEY,MRConfig.SHUFFLE_SSL_ENABLED_DEFAULT);
  stateMachine=stateMachineFactory.make(this);
  nextAttemptNumber=(appAttemptId - 1) * 1000;
}
