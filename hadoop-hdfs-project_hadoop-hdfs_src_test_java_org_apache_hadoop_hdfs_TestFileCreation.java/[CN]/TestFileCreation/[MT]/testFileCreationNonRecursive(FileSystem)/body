{
  final Path path=new Path("/" + Time.now() + "-testFileCreationNonRecursive");
  IOException expectedException=null;
  final String nonExistDir="/non-exist-" + Time.now();
  fs.delete(new Path(nonExistDir),true);
  EnumSet<CreateFlag> createFlag=EnumSet.of(CreateFlag.CREATE);
  assertNull(createNonRecursive(fs,path,1,createFlag));
  expectedException=createNonRecursive(fs,new Path(path,"Create"),1,createFlag);
  assertTrue("Create a file when parent directory exists as a file" + " should throw ParentNotDirectoryException ",expectedException != null && expectedException instanceof ParentNotDirectoryException);
  fs.delete(path,true);
  final Path path2=new Path(nonExistDir + "/testCreateNonRecursive");
  expectedException=createNonRecursive(fs,path2,1,createFlag);
  assertTrue("Create a file in a non-exist dir using" + " createNonRecursive() should throw FileNotFoundException ",expectedException != null && expectedException instanceof FileNotFoundException);
  EnumSet<CreateFlag> overwriteFlag=EnumSet.of(CreateFlag.CREATE,CreateFlag.OVERWRITE);
  assertNull(createNonRecursive(fs,path,1,overwriteFlag));
  expectedException=createNonRecursive(fs,new Path(path,"Overwrite"),1,overwriteFlag);
  assertTrue("Overwrite a file when parent directory exists as a file" + " should throw ParentNotDirectoryException ",expectedException != null && expectedException instanceof ParentNotDirectoryException);
  fs.delete(path,true);
  final Path path3=new Path(nonExistDir + "/testOverwriteNonRecursive");
  expectedException=createNonRecursive(fs,path3,1,overwriteFlag);
  assertTrue("Overwrite a file in a non-exist dir using" + " createNonRecursive() should throw FileNotFoundException ",expectedException != null && expectedException instanceof FileNotFoundException);
}
