{
  Collection<String> dirNames=conf.getTrimmedStringCollection(propertyName);
  StartupOption startOpt=NameNode.getStartupOption(conf);
  if (startOpt == StartupOption.IMPORT) {
    Configuration cE=new HdfsConfiguration(false);
    cE.addResource("core-default.xml");
    cE.addResource("core-site.xml");
    cE.addResource("hdfs-default.xml");
    Collection<String> dirNames2=cE.getTrimmedStringCollection(propertyName);
    dirNames.removeAll(dirNames2);
    if (dirNames.isEmpty())     LOG.warn("!!! WARNING !!!" + "\n\tThe NameNode currently runs without persistent storage." + "\n\tAny changes to the file system meta-data may be lost."+ "\n\tRecommended actions:"+ "\n\t\t- shutdown and restart NameNode with configured \"" + propertyName + "\" in hdfs-site.xml;"+ "\n\t\t- use Backup Node as a persistent and up-to-date storage "+ "of the file system meta-data.");
  }
 else   if (dirNames.isEmpty())   dirNames.add("file:///tmp/hadoop/dfs/name");
  return Util.stringCollectionAsURIs(dirNames);
}
