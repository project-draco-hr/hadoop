{
  String src="";
  writeLock();
  try {
    if (isInSafeMode()) {
      throw new SafeModeException("Cannot commitBlockSynchronization while in safe mode",safeMode);
    }
    LOG.info("commitBlockSynchronization(lastblock=" + lastblock + ", newgenerationstamp="+ newgenerationstamp+ ", newlength="+ newlength+ ", newtargets="+ Arrays.asList(newtargets)+ ", closeFile="+ closeFile+ ", deleteBlock="+ deleteblock+ ")");
    final BlockInfo storedBlock=blockManager.getStoredBlock(ExtendedBlock.getLocalBlock(lastblock));
    if (storedBlock == null) {
      throw new IOException("Block (=" + lastblock + ") not found");
    }
    INodeFile iFile=storedBlock.getINode();
    if (!iFile.isUnderConstruction() || storedBlock.isComplete()) {
      throw new IOException("Unexpected block (=" + lastblock + ") since the file (="+ iFile.getLocalName()+ ") is not under construction");
    }
    long recoveryId=((BlockInfoUnderConstruction)storedBlock).getBlockRecoveryId();
    if (recoveryId != newgenerationstamp) {
      throw new IOException("The recovery id " + newgenerationstamp + " does not match current recovery id "+ recoveryId+ " for block "+ lastblock);
    }
    INodeFileUnderConstruction pendingFile=(INodeFileUnderConstruction)iFile;
    if (deleteblock) {
      pendingFile.removeLastBlock(ExtendedBlock.getLocalBlock(lastblock));
      blockManager.removeBlockFromMap(storedBlock);
    }
 else {
      storedBlock.setGenerationStamp(newgenerationstamp);
      storedBlock.setNumBytes(newlength);
      DatanodeDescriptor[] descriptors=null;
      if (newtargets.length > 0) {
        descriptors=new DatanodeDescriptor[newtargets.length];
        for (int i=0; i < newtargets.length; i++) {
          descriptors[i]=blockManager.getDatanodeManager().getDatanode(newtargets[i]);
        }
      }
      if (closeFile) {
        for (int i=0; i < descriptors.length; i++) {
          descriptors[i].addBlock(storedBlock);
        }
      }
      pendingFile.setLastBlock(storedBlock,descriptors);
    }
    src=leaseManager.findPath(pendingFile);
    if (closeFile) {
      blockManager.commitOrCompleteLastBlock(pendingFile,storedBlock);
      finalizeINodeFileUnderConstruction(src,pendingFile);
    }
 else     if (supportAppends) {
      dir.persistBlocks(src,pendingFile);
    }
  }
  finally {
    writeUnlock();
  }
  getEditLog().logSync();
  if (closeFile) {
    LOG.info("commitBlockSynchronization(newblock=" + lastblock + ", file="+ src+ ", newgenerationstamp="+ newgenerationstamp+ ", newlength="+ newlength+ ", newtargets="+ Arrays.asList(newtargets)+ ") successful");
  }
 else {
    LOG.info("commitBlockSynchronization(" + lastblock + ") successful");
  }
}
