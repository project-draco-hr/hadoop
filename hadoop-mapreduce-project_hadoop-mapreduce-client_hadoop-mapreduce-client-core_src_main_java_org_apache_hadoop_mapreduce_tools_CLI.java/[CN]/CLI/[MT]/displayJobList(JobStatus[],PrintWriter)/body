{
  writer.println("Total jobs:" + jobs.length);
  writer.printf(headerPattern,"JobId","State","StartTime","UserName","Queue","Priority","UsedContainers","RsvdContainers","UsedMem","RsvdMem","NeededMem","AM info");
  for (  JobStatus job : jobs) {
    int numUsedSlots=job.getNumUsedSlots();
    int numReservedSlots=job.getNumReservedSlots();
    int usedMem=job.getUsedMem();
    int rsvdMem=job.getReservedMem();
    int neededMem=job.getNeededMem();
    writer.printf(dataPattern,job.getJobID().toString(),job.getState(),job.getStartTime(),job.getUsername(),job.getQueue(),job.getPriority().name(),numUsedSlots < 0 ? UNAVAILABLE : numUsedSlots,numReservedSlots < 0 ? UNAVAILABLE : numReservedSlots,usedMem < 0 ? UNAVAILABLE : String.format(memPattern,usedMem),rsvdMem < 0 ? UNAVAILABLE : String.format(memPattern,rsvdMem),neededMem < 0 ? UNAVAILABLE : String.format(memPattern,neededMem),job.getSchedulingInfo());
  }
  writer.flush();
}
