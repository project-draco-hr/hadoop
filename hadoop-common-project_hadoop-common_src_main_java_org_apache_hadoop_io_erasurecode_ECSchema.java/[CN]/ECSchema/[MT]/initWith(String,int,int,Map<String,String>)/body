{
  this.codecName=codecName;
  this.numDataUnits=numDataUnits;
  this.numParityUnits=numParityUnits;
  this.options=options != null ? Collections.unmodifiableMap(options) : Collections.EMPTY_MAP;
  this.chunkSize=DEFAULT_CHUNK_SIZE;
  try {
    if (this.options.containsKey(CHUNK_SIZE_KEY)) {
      this.chunkSize=Integer.parseInt(options.get(CHUNK_SIZE_KEY));
    }
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("Option value " + this.options.get(CHUNK_SIZE_KEY) + " for "+ CHUNK_SIZE_KEY+ " is found. It should be an integer");
  }
  boolean isFine=numDataUnits > 0 && numParityUnits > 0 && chunkSize > 0;
  if (!isFine) {
    throw new IllegalArgumentException("Bad codec options are found");
  }
}
