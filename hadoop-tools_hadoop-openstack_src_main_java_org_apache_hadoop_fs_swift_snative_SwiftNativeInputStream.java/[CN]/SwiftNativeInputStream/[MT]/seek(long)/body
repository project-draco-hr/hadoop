{
  if (targetPos < 0) {
    throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);
  }
  long offset=targetPos - pos;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Seek to " + targetPos + "; current pos ="+ pos+ "; offset="+ offset);
  }
  if (offset == 0) {
    LOG.debug("seek is no-op");
    return;
  }
  if (offset < 0) {
    LOG.debug("seek is backwards");
  }
 else   if ((rangeOffset + offset < bufferSize)) {
    SwiftUtils.debug(LOG,"seek is within current stream" + "; pos= %d ; targetPos=%d; " + "offset= %d ; bufferOffset=%d",pos,targetPos,offset,rangeOffset);
    try {
      LOG.debug("chomping ");
      chompBytes(offset);
    }
 catch (    IOException e) {
      LOG.debug("while chomping ",e);
    }
    if (targetPos - pos == 0) {
      LOG.trace("chomping successful");
      return;
    }
    LOG.trace("chomping failed");
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Seek is beyond buffer size of " + bufferSize);
    }
  }
  innerClose("seeking to " + targetPos);
  fillBuffer(targetPos);
}
