{
  if (reservedContainer == null) {
    if (!application.hasPendingResourceRequest(rc,node.getPartition(),clusterResource,schedulingMode)) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skip app_attempt=" + application.getApplicationAttemptId() + ", because it doesn't need more resource, schedulingMode="+ schedulingMode.name()+ " node-label="+ node.getPartition());
      }
      return CSAssignment.SKIP_ASSIGNMENT;
    }
    for (    SchedulerRequestKey schedulerKey : application.getSchedulerKeys()) {
      ContainerAllocation result=allocate(clusterResource,node,schedulingMode,resourceLimits,schedulerKey,null);
      AllocationState allocationState=result.getAllocationState();
      if (allocationState == AllocationState.PRIORITY_SKIPPED) {
        continue;
      }
      return getCSAssignmentFromAllocateResult(clusterResource,result,null);
    }
    return CSAssignment.SKIP_ASSIGNMENT;
  }
 else {
    ContainerAllocation result=allocate(clusterResource,node,schedulingMode,resourceLimits,reservedContainer.getReservedSchedulerKey(),reservedContainer);
    return getCSAssignmentFromAllocateResult(clusterResource,result,reservedContainer);
  }
}
