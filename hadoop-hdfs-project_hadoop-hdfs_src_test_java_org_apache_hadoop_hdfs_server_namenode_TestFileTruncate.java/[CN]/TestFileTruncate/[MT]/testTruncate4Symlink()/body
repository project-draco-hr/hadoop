{
  final int fileLength=3 * BLOCK_SIZE;
  fs.mkdirs(parent);
  final byte[] contents=AppendTestUtil.initBuffer(fileLength);
  final Path file=new Path(parent,"testTruncate4Symlink");
  writeContents(contents,fileLength,file);
  final Path link=new Path(parent,"link");
  fs.createSymlink(file,link,false);
  final int newLength=fileLength / 3;
  boolean isReady=fs.truncate(link,newLength);
  assertTrue("Recovery is not expected.",isReady);
  FileStatus fileStatus=fs.getFileStatus(file);
  assertThat(fileStatus.getLen(),is((long)newLength));
  ContentSummary cs=fs.getContentSummary(parent);
  assertEquals("Bad disk space usage",cs.getSpaceConsumed(),newLength * REPLICATION);
  checkFullFile(file,newLength,contents);
  fs.delete(parent,true);
}
