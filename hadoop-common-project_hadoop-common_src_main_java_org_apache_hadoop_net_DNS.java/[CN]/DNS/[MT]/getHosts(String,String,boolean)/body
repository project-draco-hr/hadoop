{
  final List<String> hosts=new Vector<String>();
  final List<InetAddress> addresses=getIPsAsInetAddressList(strInterface,true);
  for (  InetAddress address : addresses) {
    try {
      hosts.add(reverseDns(address,nameserver));
    }
 catch (    NamingException ignored) {
    }
  }
  if (hosts.isEmpty() && tryfallbackResolution) {
    for (    InetAddress address : addresses) {
      final String canonicalHostName=address.getCanonicalHostName();
      if (!InetAddresses.isInetAddress(canonicalHostName)) {
        hosts.add(canonicalHostName);
      }
    }
  }
  if (hosts.isEmpty()) {
    LOG.warn("Unable to determine hostname for interface " + strInterface);
    hosts.add(cachedHostname);
  }
  return hosts.toArray(new String[hosts.size()]);
}
