{
  System.out.println("Starting testSecondaryImageDownload");
  conf.set(DFSConfigKeys.DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY,"0.0.0.0:0");
  Path dir=new Path("/checkpoint");
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).format(false).build();
  cluster.waitActive();
  FileSystem fileSys=cluster.getFileSystem();
  FSImage image=cluster.getNameNode().getFSImage();
  try {
    assertTrue(!fileSys.exists(dir));
    SecondaryNameNode secondary=startSecondaryNameNode(conf);
    long fsimageLength=image.getStorage().getStorageFile(image.getStorage().dirIterator(NameNodeDirType.IMAGE).next(),NameNodeFile.IMAGE).length();
    assertFalse("Image is downloaded",secondary.doCheckpoint());
    for (Iterator<StorageDirectory> it=image.getStorage().dirIterator(NameNodeDirType.IMAGE); it.hasNext(); ) {
      assertTrue("Image size does not change",image.getStorage().getStorageFile(it.next(),NameNodeFile.IMAGE).length() == fsimageLength);
    }
    fileSys.mkdirs(dir);
    assertTrue("Image is not downloaded",secondary.doCheckpoint());
    for (Iterator<StorageDirectory> it=image.getStorage().dirIterator(NameNodeDirType.IMAGE); it.hasNext(); ) {
      assertTrue("Image size increased",image.getStorage().getStorageFile(it.next(),NameNodeFile.IMAGE).length() > fsimageLength);
    }
    secondary.shutdown();
  }
  finally {
    fileSys.close();
    cluster.shutdown();
  }
}
