{
  System.out.println("Check IOException handled correctly by setCheckpointTimeInStorage");
  NNStorage nnStorage=new NNStorage(new HdfsConfiguration());
  ArrayList<URI> fsImageDirs=new ArrayList<URI>();
  ArrayList<URI> editsDirs=new ArrayList<URI>();
  File filePath=new File(System.getProperty("test.build.data","/tmp"),"storageDirToCheck");
  assertTrue("Couldn't create directory storageDirToCheck",filePath.exists() || filePath.mkdirs());
  try {
    fsImageDirs.add(filePath.toURI());
    editsDirs.add(filePath.toURI());
    nnStorage.setStorageDirectories(fsImageDirs,editsDirs);
    assertTrue("List of storage directories didn't have storageDirToCheck.",nnStorage.getEditsDirectories().iterator().next().toString().indexOf("storageDirToCheck") != -1);
    assertTrue("List of removed storage directories wasn't empty",nnStorage.getRemovedStorageDirs().isEmpty());
  }
  finally {
    assertTrue("Couldn't remove directory " + filePath.getAbsolutePath(),filePath.delete());
  }
  nnStorage.setCheckpointTimeInStorage(1);
  List<StorageDirectory> listRsd=nnStorage.getRemovedStorageDirs();
  assertTrue("Removed directory wasn't what was expected",listRsd.size() > 0 && listRsd.get(listRsd.size() - 1).getRoot().toString().indexOf("storageDirToCheck") != -1);
  System.out.println("Successfully checked IOException is handled correctly " + "by setCheckpointTimeInStorage");
}
