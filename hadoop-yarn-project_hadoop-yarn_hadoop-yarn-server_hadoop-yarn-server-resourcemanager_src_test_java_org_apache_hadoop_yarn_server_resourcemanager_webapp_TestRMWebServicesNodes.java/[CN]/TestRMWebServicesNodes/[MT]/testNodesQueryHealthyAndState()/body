{
  WebResource r=resource();
  MockNM nm1=rm.registerNode("h1:1234",5120);
  MockNM nm2=rm.registerNode("h2:1235",5121);
  rm.sendNodeStarted(nm1);
  rm.NMwaitForState(nm2.getNodeId(),NodeState.NEW);
  rm.NMwaitForState(nm1.getNodeId(),NodeState.RUNNING);
  RMNodeImpl node=(RMNodeImpl)rm.getRMContext().getRMNodes().get(nm1.getNodeId());
  NodeHealthStatus nodeHealth=node.getNodeHealthStatus();
  nodeHealth.setHealthReport("test health report");
  nodeHealth.setIsNodeHealthy(false);
  node.handle(new RMNodeStatusEvent(nm1.getNodeId(),nodeHealth,new ArrayList<ContainerStatus>(),null,null,null));
  rm.NMwaitForState(nm1.getNodeId(),NodeState.UNHEALTHY);
  ClientResponse response=r.path("ws").path("v1").path("cluster").path("nodes").queryParam("healthy","true").queryParam("state",NodeState.RUNNING.toString()).accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  JSONObject json=response.getEntity(JSONObject.class);
  assertEquals("incorrect number of elements",1,json.length());
  assertEquals("nodes is not null",JSONObject.NULL,json.get("nodes"));
}
