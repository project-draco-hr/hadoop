{
  WebResource r=resource();
  RMNode rmnode1=getRunningRMNode("h1",1234,5120);
  NodeId nodeId1=rmnode1.getNodeID();
  RMNodeImpl node=(RMNodeImpl)rm.getRMContext().getRMNodes().get(nodeId1);
  NodeHealthStatus nodeHealth=NodeHealthStatus.newInstance(true,"test health report",System.currentTimeMillis());
  ResourceUtilization nodeResource=ResourceUtilization.newInstance(4096,0,(float)10.5);
  ResourceUtilization containerResource=ResourceUtilization.newInstance(2048,0,(float)5.05);
  NodeStatus nodeStatus=NodeStatus.newInstance(nodeId1,0,new ArrayList<ContainerStatus>(),null,nodeHealth,containerResource,nodeResource,null);
  node.handle(new RMNodeStatusEvent(nodeId1,nodeStatus,null));
  rm.waitForState(nodeId1,NodeState.RUNNING);
  ClientResponse response=r.path("ws").path("v1").path("cluster").path("nodes").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  JSONObject json=response.getEntity(JSONObject.class);
  assertEquals("incorrect number of elements",1,json.length());
  JSONObject nodes=json.getJSONObject("nodes");
  assertEquals("incorrect number of elements",1,nodes.length());
  JSONArray nodeArray=nodes.getJSONArray("node");
  assertEquals("incorrect number of elements",1,nodeArray.length());
  JSONObject info=nodeArray.getJSONObject(0);
  verifyNodeInfo(info,rmnode1);
}
