{
  getNewRMNode("h1",1234,5120);
  getNewRMNode("h2",1235,5121);
  WebResource r=resource();
  try {
    r.path("ws").path("v1").path("cluster").path("nodes").path("node_invalid:99").accept(MediaType.APPLICATION_XML).get(JSONObject.class);
    fail("should have thrown exception on non-existent nodeid");
  }
 catch (  UniformInterfaceException ue) {
    ClientResponse response=ue.getResponse();
    assertEquals(Status.NOT_FOUND,response.getClientResponseStatus());
    assertEquals(MediaType.APPLICATION_XML_TYPE,response.getType());
    String msg=response.getEntity(String.class);
    System.out.println(msg);
    DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
    DocumentBuilder db=dbf.newDocumentBuilder();
    InputSource is=new InputSource();
    is.setCharacterStream(new StringReader(msg));
    Document dom=db.parse(is);
    NodeList nodes=dom.getElementsByTagName("RemoteException");
    Element element=(Element)nodes.item(0);
    String message=WebServicesTestUtils.getXmlString(element,"message");
    String type=WebServicesTestUtils.getXmlString(element,"exception");
    String classname=WebServicesTestUtils.getXmlString(element,"javaClassName");
    verifyNonexistNodeException(message,type,classname);
  }
}
