{
  ByteArrayOutputStream mdOutBase=new ByteArrayOutputStream(1024 * 1024);
  DataOutputStream mdOut=new DataOutputStream(mdOutBase);
  mdOut.writeShort(BlockMetadataHeader.VERSION);
  int bytesPerChecksum=conf.getInt("dfs.bytes-per-checksum",512);
  DataChecksum sum=DataChecksum.newDataChecksum(DataChecksum.CHECKSUM_CRC32,bytesPerChecksum);
  sum.writeHeader(mdOut);
  byte[] buf=new byte[bytesPerChecksum];
  byte[] chk=new byte[sum.getChecksumSize()];
  int bytesSinceFlush=0;
  while (true) {
    int bytesRead=dataStream.read(buf,bytesSinceFlush,bytesPerChecksum - bytesSinceFlush);
    if (bytesRead == -1) {
      if (bytesSinceFlush > 0) {
        boolean reset=true;
        sum.writeValue(chk,0,reset);
        mdOut.write(chk,0,chk.length);
        bytesSinceFlush=0;
      }
      break;
    }
    sum.update(buf,bytesSinceFlush,bytesRead);
    bytesSinceFlush+=bytesRead;
    if (bytesSinceFlush == bytesPerChecksum) {
      boolean reset=true;
      sum.writeValue(chk,0,reset);
      mdOut.write(chk,0,chk.length);
      bytesSinceFlush=0;
    }
  }
  byte[] mdBytes=mdOutBase.toByteArray();
  return new DataInputStream(new ByteArrayInputStream(mdBytes));
}
