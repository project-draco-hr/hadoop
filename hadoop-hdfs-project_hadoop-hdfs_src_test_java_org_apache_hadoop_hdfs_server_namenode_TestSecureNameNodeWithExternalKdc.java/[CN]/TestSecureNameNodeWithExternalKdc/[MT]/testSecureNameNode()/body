{
  MiniDFSCluster cluster=null;
  try {
    String nnPrincipal=System.getProperty("dfs.namenode.kerberos.principal");
    String nnSpnegoPrincipal=System.getProperty("dfs.namenode.kerberos.internal.spnego.principal");
    String nnKeyTab=System.getProperty("dfs.namenode.keytab.file");
    assertNotNull("NameNode principal was not specified",nnPrincipal);
    assertNotNull("NameNode SPNEGO principal was not specified",nnSpnegoPrincipal);
    assertNotNull("NameNode keytab was not specified",nnKeyTab);
    Configuration conf=new HdfsConfiguration();
    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION,"kerberos");
    conf.set(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY,nnPrincipal);
    conf.set(DFSConfigKeys.DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY,nnSpnegoPrincipal);
    conf.set(DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY,nnKeyTab);
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_OF_DATANODES).build();
    final MiniDFSCluster clusterRef=cluster;
    cluster.waitActive();
    FileSystem fsForCurrentUser=cluster.getFileSystem();
    fsForCurrentUser.mkdirs(new Path("/tmp"));
    fsForCurrentUser.setPermission(new Path("/tmp"),new FsPermission((short)511));
    String userPrincipal=System.getProperty("user.principal");
    String userKeyTab=System.getProperty("user.keytab");
    assertNotNull("User principal was not specified",userPrincipal);
    assertNotNull("User keytab was not specified",userKeyTab);
    UserGroupInformation ugi=UserGroupInformation.loginUserFromKeytabAndReturnUGI(userPrincipal,userKeyTab);
    FileSystem fs=ugi.doAs(new PrivilegedExceptionAction<FileSystem>(){
      @Override public FileSystem run() throws Exception {
        return clusterRef.getFileSystem();
      }
    }
);
    try {
      Path p=new Path("/users");
      fs.mkdirs(p);
      fail("User must not be allowed to write in /");
    }
 catch (    IOException expected) {
    }
    Path p=new Path("/tmp/alpha");
    fs.mkdirs(p);
    assertNotNull(fs.listStatus(p));
    assertEquals(AuthenticationMethod.KERBEROS,ugi.getAuthenticationMethod());
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
