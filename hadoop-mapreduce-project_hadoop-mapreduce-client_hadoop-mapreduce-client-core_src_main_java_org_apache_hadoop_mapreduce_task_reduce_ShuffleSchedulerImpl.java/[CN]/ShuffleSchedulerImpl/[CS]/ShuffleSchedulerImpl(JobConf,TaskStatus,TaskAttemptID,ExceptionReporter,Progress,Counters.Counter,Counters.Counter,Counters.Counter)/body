{
  totalMaps=job.getNumMapTasks();
  abortFailureLimit=Math.max(30,totalMaps / 10);
  remainingMaps=totalMaps;
  finishedMaps=new boolean[remainingMaps];
  this.reporter=reporter;
  this.status=status;
  this.reduceId=reduceId;
  this.progress=progress;
  this.shuffledMapsCounter=shuffledMapsCounter;
  this.reduceShuffleBytes=reduceShuffleBytes;
  this.failedShuffleCounter=failedShuffleCounter;
  this.startTime=System.currentTimeMillis();
  lastProgressTime=startTime;
  referee.start();
  this.maxFailedUniqueFetches=Math.min(totalMaps,5);
  this.maxFetchFailuresBeforeReporting=job.getInt(MRJobConfig.SHUFFLE_FETCH_FAILURES,REPORT_FAILURE_LIMIT);
  this.reportReadErrorImmediately=job.getBoolean(MRJobConfig.SHUFFLE_NOTIFY_READERROR,true);
  this.maxDelay=job.getLong(MRJobConfig.MAX_SHUFFLE_FETCH_RETRY_DELAY,MRJobConfig.DEFAULT_MAX_SHUFFLE_FETCH_RETRY_DELAY);
}
