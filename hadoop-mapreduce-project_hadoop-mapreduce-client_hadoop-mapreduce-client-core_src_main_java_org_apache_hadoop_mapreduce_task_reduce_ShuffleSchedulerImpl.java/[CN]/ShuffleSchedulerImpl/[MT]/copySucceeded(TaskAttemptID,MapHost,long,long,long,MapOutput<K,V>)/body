{
  failureCounts.remove(mapId);
  hostFailures.remove(host.getHostName());
  int mapIndex=mapId.getTaskID().getId();
  if (!finishedMaps[mapIndex]) {
    output.commit();
    finishedMaps[mapIndex]=true;
    shuffledMapsCounter.increment(1);
    if (--remainingMaps == 0) {
      notifyAll();
    }
    long copyMillis=(endMillis - startMillis);
    if (copyMillis == 0)     copyMillis=1;
    float bytesPerMillis=(float)bytes / copyMillis;
    float transferRate=bytesPerMillis * BYTES_PER_MILLIS_TO_MBS;
    String individualProgress="copy task(" + mapId + " succeeded"+ " at "+ mbpsFormat.format(transferRate)+ " MB/s)";
    copyTimeTracker.add(startMillis,endMillis);
    totalBytesShuffledTillNow+=bytes;
    updateStatus(individualProgress);
    reduceShuffleBytes.increment(bytes);
    lastProgressTime=Time.monotonicNow();
    LOG.debug("map " + mapId + " done "+ status.getStateString());
  }
}
