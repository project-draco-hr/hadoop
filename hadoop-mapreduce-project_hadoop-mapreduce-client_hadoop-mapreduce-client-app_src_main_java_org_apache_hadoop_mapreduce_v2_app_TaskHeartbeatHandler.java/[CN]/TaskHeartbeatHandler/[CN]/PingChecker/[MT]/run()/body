{
  while (!stopped && !Thread.currentThread().isInterrupted()) {
    Iterator<Map.Entry<TaskAttemptId,ReportTime>> iterator=runningAttempts.entrySet().iterator();
    long currentTime=clock.getTime();
    while (iterator.hasNext()) {
      Map.Entry<TaskAttemptId,ReportTime> entry=iterator.next();
      boolean taskTimedOut=(taskTimeOut > 0) && (currentTime > (entry.getValue().getLastProgress() + taskTimeOut));
      boolean pingTimedOut=(currentTime > (entry.getValue().getLastPing() + PING_TIMEOUT));
      if (taskTimedOut || pingTimedOut) {
        iterator.remove();
        eventHandler.handle(new TaskAttemptDiagnosticsUpdateEvent(entry.getKey(),"AttemptID:" + entry.getKey().toString() + " Timed out after "+ taskTimeOut / 1000 + " secs"));
        eventHandler.handle(new TaskAttemptEvent(entry.getKey(),TaskAttemptEventType.TA_TIMED_OUT));
      }
    }
    try {
      Thread.sleep(taskTimeOutCheckInterval);
    }
 catch (    InterruptedException e) {
      LOG.info("TaskHeartbeatHandler thread interrupted");
      break;
    }
  }
}
