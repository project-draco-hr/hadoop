{
  fSys.mkdirs(new Path("/testWd"));
  Path workDir=new Path("/testWd");
  fSys.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  fSys.setWorkingDirectory(new Path("."));
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  fSys.setWorkingDirectory(new Path(".."));
  Assert.assertEquals(workDir.getParent(),fSys.getWorkingDirectory());
  workDir=new Path("/testWd");
  fSys.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  Path relativeDir=new Path("existingDir1");
  Path absoluteDir=new Path(workDir,"existingDir1");
  fSys.mkdirs(absoluteDir);
  fSys.setWorkingDirectory(relativeDir);
  Assert.assertEquals(absoluteDir,fSys.getWorkingDirectory());
  absoluteDir=new Path("/test/existingDir2");
  fSys.mkdirs(absoluteDir);
  fSys.setWorkingDirectory(absoluteDir);
  Assert.assertEquals(absoluteDir,fSys.getWorkingDirectory());
  Path absoluteFooPath=new Path(absoluteDir,"foo");
  fSys.create(absoluteFooPath).close();
  fSys.open(new Path("foo")).close();
  fSys.mkdirs(new Path("newDir"));
  Assert.assertTrue(fSys.isDirectory(new Path(absoluteDir,"newDir")));
  final String LOCAL_FS_ROOT_URI="file:///tmp/test";
  absoluteDir=new Path(LOCAL_FS_ROOT_URI + "/existingDir");
  fSys.mkdirs(absoluteDir);
  fSys.setWorkingDirectory(absoluteDir);
  Assert.assertEquals(absoluteDir,fSys.getWorkingDirectory());
}
