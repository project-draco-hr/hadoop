{
  final Configuration conf=new Configuration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build();
  cluster.waitActive();
  FileSystem fs=cluster.getFileSystem();
  try {
    DFSTestUtil.createFile(fs,new Path("/tmp/x"),16,(short)1,23);
    LocatedBlocks lb=cluster.getNameNode().getRpcServer().getBlockLocations("/tmp/x",0,16);
    ExtendedBlock blk=new ExtendedBlock(lb.get(0).getBlock());
    Token<BlockTokenIdentifier> token=lb.get(0).getBlockToken();
    final DatanodeInfo dnInfo=lb.get(0).getLocations()[0];
    ClientDatanodeProtocol proxy=DFSUtil.createClientDatanodeProtocolProxy(dnInfo,conf,60000,false);
    try {
      proxy.getBlockLocalPathInfo(blk,token);
      Assert.fail("The call should have failed as this user " + " is not allowed to call getBlockLocalPathInfo");
    }
 catch (    IOException ex) {
      Assert.assertTrue(ex.getMessage().contains("not allowed to call getBlockLocalPathInfo"));
    }
  }
  finally {
    fs.close();
    cluster.shutdown();
  }
}
