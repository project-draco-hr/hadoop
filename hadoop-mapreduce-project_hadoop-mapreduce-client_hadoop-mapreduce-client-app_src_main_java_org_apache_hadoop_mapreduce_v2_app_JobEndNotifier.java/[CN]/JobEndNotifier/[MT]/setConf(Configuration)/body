{
  this.conf=conf;
  numTries=Math.min(conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS,0) + 1,conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS,1));
  waitInterval=Math.min(conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL,5),conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL,5));
  waitInterval=(waitInterval < 0) ? 5 : waitInterval;
  userUrl=conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);
  proxyConf=conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);
  if (proxyConf != null && !proxyConf.equals("") && proxyConf.lastIndexOf(":") != -1) {
    int typeIndex=proxyConf.indexOf("@");
    Proxy.Type proxyType=Proxy.Type.HTTP;
    if (typeIndex != -1 && proxyConf.substring(0,typeIndex).compareToIgnoreCase("socks") == 0) {
      proxyType=Proxy.Type.SOCKS;
    }
    String hostname=proxyConf.substring(typeIndex + 1,proxyConf.lastIndexOf(":"));
    String portConf=proxyConf.substring(proxyConf.lastIndexOf(":") + 1);
    try {
      int port=Integer.parseInt(portConf);
      proxyToUse=new Proxy(proxyType,new InetSocketAddress(hostname,port));
      Log.info("Job end notification using proxy type \"" + proxyType + "\" hostname \""+ hostname+ "\" and port \""+ port+ "\"");
    }
 catch (    NumberFormatException nfe) {
      Log.warn("Job end notification couldn't parse configured proxy's port " + portConf + ". Not going to use a proxy");
    }
  }
}
