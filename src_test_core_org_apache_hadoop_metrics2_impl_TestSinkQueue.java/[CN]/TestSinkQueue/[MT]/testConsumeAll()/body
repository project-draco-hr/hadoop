{
  final int capacity=64;
  final SinkQueue<Integer> q=new SinkQueue<Integer>(capacity);
  for (int i=0; i < capacity; ++i) {
    assertTrue("should enqueue",q.enqueue(i));
  }
  assertTrue("should not enqueue",!q.enqueue(capacity));
  final Runnable trigger=mock(Runnable.class);
  q.consumeAll(new Consumer<Integer>(){
    private int expected=0;
    @Override public void consume(    Integer e){
      assertEquals("element",expected++,(int)e);
      trigger.run();
    }
  }
);
  verify(trigger,times(capacity)).run();
}
