{
  final SinkQueue<Integer> q=new SinkQueue<Integer>(capacity);
  for (  int i : values) {
    q.enqueue(i);
  }
  Thread t=new Thread(){
    @Override public void run(){
      try {
        q.consume(new Consumer<Integer>(){
          @Override public void consume(          Integer e) throws InterruptedException {
            LOG.info("sleeping");
            Thread.sleep(1000 * 86400);
          }
        }
);
      }
 catch (      InterruptedException ex) {
        LOG.warn("Interrupted",ex);
      }
    }
  }
;
  t.setName("Sleeping consumer");
  t.setDaemon(true);
  t.start();
  Thread.yield();
  LOG.debug("Returning new sleeping consumer queue");
  return q;
}
