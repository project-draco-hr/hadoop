{
  Configuration conf=getConf();
  nsId=DFSUtil.getNamenodeNameServiceId(conf);
  if (!HAUtil.isHAEnabled(conf,nsId)) {
    throw new HadoopIllegalArgumentException("HA is not enabled for this namenode.");
  }
  nnId=HAUtil.getNameNodeId(conf,nsId);
  NameNode.initializeGenericKeys(conf,nsId,nnId);
  if (!HAUtil.usesSharedEditsDir(conf)) {
    throw new HadoopIllegalArgumentException("Shared edits storage is not enabled for this namenode.");
  }
  Configuration otherNode=HAUtil.getConfForOtherNode(conf);
  otherNNId=HAUtil.getNameNodeId(otherNode,nsId);
  otherIpcAddr=NameNode.getServiceAddress(otherNode,true);
  Preconditions.checkArgument(otherIpcAddr.getPort() != 0 && !otherIpcAddr.getAddress().isAnyLocalAddress(),"Could not determine valid IPC address for other NameNode (%s)" + ", got: %s",otherNNId,otherIpcAddr);
  otherHttpAddr=DFSUtil.getInfoServer(null,otherNode,false);
  otherHttpAddr=DFSUtil.substituteForWildcardAddress(otherHttpAddr,otherIpcAddr.getHostName());
  dirsToFormat=FSNamesystem.getNamespaceDirs(conf);
  editUrisToFormat=FSNamesystem.getNamespaceEditsDirs(conf,false);
  sharedEditsUris=FSNamesystem.getSharedEditsDirs(conf);
}
