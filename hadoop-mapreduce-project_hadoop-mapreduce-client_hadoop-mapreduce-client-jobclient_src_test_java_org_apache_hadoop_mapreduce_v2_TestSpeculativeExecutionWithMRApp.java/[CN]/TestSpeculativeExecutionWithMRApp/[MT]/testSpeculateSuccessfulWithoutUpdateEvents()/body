{
  Clock actualClock=new SystemClock();
  ControlledClock clock=new ControlledClock(actualClock);
  clock.setTime(System.currentTimeMillis());
  MRApp app=new MRApp(NUM_MAPPERS,NUM_REDUCERS,false,"test",true,clock);
  Job job=app.submit(new Configuration(),true,true);
  app.waitForState(job,JobState.RUNNING);
  Map<TaskId,Task> tasks=job.getTasks();
  Assert.assertEquals("Num tasks is not correct",NUM_MAPPERS + NUM_REDUCERS,tasks.size());
  Iterator<Task> taskIter=tasks.values().iterator();
  while (taskIter.hasNext()) {
    app.waitForState(taskIter.next(),TaskState.RUNNING);
  }
  clock.setTime(System.currentTimeMillis() + 2000);
  EventHandler appEventHandler=app.getContext().getEventHandler();
  for (  Map.Entry<TaskId,Task> mapTask : tasks.entrySet()) {
    for (    Map.Entry<TaskAttemptId,TaskAttempt> taskAttempt : mapTask.getValue().getAttempts().entrySet()) {
      TaskAttemptStatus status=createTaskAttemptStatus(taskAttempt.getKey(),(float)0.8,TaskAttemptState.RUNNING);
      TaskAttemptStatusUpdateEvent event=new TaskAttemptStatusUpdateEvent(taskAttempt.getKey(),status);
      appEventHandler.handle(event);
    }
  }
  Random generator=new Random();
  Object[] taskValues=tasks.values().toArray();
  Task taskToBeSpeculated=(Task)taskValues[generator.nextInt(taskValues.length)];
  for (  Map.Entry<TaskId,Task> mapTask : tasks.entrySet()) {
    for (    Map.Entry<TaskAttemptId,TaskAttempt> taskAttempt : mapTask.getValue().getAttempts().entrySet()) {
      if (mapTask.getKey() != taskToBeSpeculated.getID()) {
        appEventHandler.handle(new TaskAttemptEvent(taskAttempt.getKey(),TaskAttemptEventType.TA_DONE));
        appEventHandler.handle(new TaskAttemptEvent(taskAttempt.getKey(),TaskAttemptEventType.TA_CONTAINER_CLEANED));
        app.waitForState(taskAttempt.getValue(),TaskAttemptState.SUCCEEDED);
      }
    }
  }
  int maxTimeWait=10;
  boolean successfullySpeculated=false;
  TaskAttempt[] ta=null;
  while (maxTimeWait > 0 && !successfullySpeculated) {
    if (taskToBeSpeculated.getAttempts().size() != 2) {
      Thread.sleep(1000);
      clock.setTime(System.currentTimeMillis() + 20000);
    }
 else {
      successfullySpeculated=true;
      ta=makeFirstAttemptWin(appEventHandler,taskToBeSpeculated);
    }
    maxTimeWait--;
  }
  Assert.assertTrue("Couldn't speculate successfully",successfullySpeculated);
  verifySpeculationMessage(app,ta);
}
