{
  int nodeCapacity=16 * 1024;
  createClusterWithQueuesAndOneNode(nodeCapacity,"fair");
  createSchedulingRequest(2 * 1024,"root.parentA.childA1","user1");
  scheduler.update();
  assertEquals(100,(double)scheduler.getQueueManager().getLeafQueue("root.parentA.childA1",false).getFairShare().getMemorySize() / nodeCapacity * 100,0.1);
  assertEquals(0,(double)scheduler.getQueueManager().getLeafQueue("root.parentA.childA2",false).getFairShare().getMemorySize() / nodeCapacity,0.1);
  verifySteadyFairShareMemory(scheduler.getQueueManager().getLeafQueues(),nodeCapacity);
}
