{
  QueueSchedulingContext sourceContext=sourceQueue.getQueueSchedulingContext();
  if (qsc.supportsPriorities() != sourceContext.supportsPriorities()) {
    throw new IOException("Changing of priorities is not yet supported. " + "Attempt has been made to change priority of the queue " + this.getName());
  }
  List<AbstractQueue> destChildren=getChildren();
  if (destChildren != null) {
    Iterator<AbstractQueue> itr1=destChildren.iterator();
    Iterator<AbstractQueue> itr2=sourceQueue.getChildren().iterator();
    while (itr1.hasNext()) {
      itr1.next().validateAndCopyQueueContexts(itr2.next());
    }
  }
  sourceContext.setNumJobsByUser(qsc.getNumJobsByUser());
  sourceContext.setNumOfWaitingJobs(qsc.getNumOfWaitingJobs());
  sourceContext.setMapTSC(qsc.getMapTSC());
  sourceContext.setReduceTSC(qsc.getReduceTSC());
  setQueueSchedulingContext(sourceContext);
  if (LOG.isDebugEnabled()) {
    LOG.debug("New Queue-Context for " + sourceQueue.getName() + ": "+ sourceQueue.getQueueSchedulingContext());
  }
}
