{
  if (!nodeBlacklistingEnabled) {
    return;
  }
  if (blacklistedNodes.contains(hostName)) {
    LOG.info("Host " + hostName + " is already blacklisted.");
    return;
  }
  Integer failures=nodeFailures.remove(hostName);
  failures=failures == null ? 0 : failures;
  failures++;
  LOG.info(failures + " failures on node " + hostName);
  if (failures >= maxTaskFailuresPerNode) {
    blacklistedNodes.add(hostName);
    LOG.info("Blacklisted host " + hostName);
    for (    Map<String,Map<Resource,ResourceRequest>> remoteRequests : remoteRequestsTable.values()) {
      boolean foundAll=true;
      Map<Resource,ResourceRequest> reqMap=remoteRequests.get(hostName);
      if (reqMap != null) {
        for (        ResourceRequest req : reqMap.values()) {
          if (!ask.remove(req)) {
            foundAll=false;
            ResourceRequest zeroedRequest=BuilderUtils.newResourceRequest(req);
            zeroedRequest.setNumContainers(0);
            ask.add(zeroedRequest);
          }
        }
        if (foundAll) {
          remoteRequests.remove(hostName);
        }
      }
    }
  }
 else {
    nodeFailures.put(hostName,failures);
  }
}
