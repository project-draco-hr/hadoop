{
  AllocateRequest allocateRequest=AllocateRequest.newInstance(applicationAttemptId,lastResponseID,super.getApplicationProgress(),new ArrayList<ResourceRequest>(ask),new ArrayList<ContainerId>(release),null);
  AllocateResponse allocateResponse;
  try {
    allocateResponse=scheduler.allocate(allocateRequest);
  }
 catch (  YarnException e) {
    throw new IOException(e);
  }
  lastResponseID=allocateResponse.getResponseId();
  availableResources=allocateResponse.getAvailableResources();
  lastClusterNmCount=clusterNmCount;
  clusterNmCount=allocateResponse.getNumClusterNodes();
  if (ask.size() > 0 || release.size() > 0) {
    LOG.info("getResources() for " + applicationId + ":"+ " ask="+ ask.size()+ " release= "+ release.size()+ " newContainers="+ allocateResponse.getAllocatedContainers().size()+ " finishedContainers="+ allocateResponse.getCompletedContainersStatuses().size()+ " resourcelimit="+ availableResources+ " knownNMs="+ clusterNmCount);
  }
  ask.clear();
  release.clear();
  return allocateResponse;
}
