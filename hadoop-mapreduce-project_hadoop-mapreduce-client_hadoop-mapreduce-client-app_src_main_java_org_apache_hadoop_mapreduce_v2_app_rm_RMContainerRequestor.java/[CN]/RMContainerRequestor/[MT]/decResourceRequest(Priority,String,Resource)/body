{
  Map<String,Map<Resource,ResourceRequest>> remoteRequests=this.remoteRequestsTable.get(priority);
  Map<Resource,ResourceRequest> reqMap=remoteRequests.get(resourceName);
  if (reqMap == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Not decrementing resource as " + resourceName + " is not present in request table");
    }
    return;
  }
  ResourceRequest remoteRequest=reqMap.get(capability);
  if (LOG.isDebugEnabled()) {
    LOG.debug("BEFORE decResourceRequest:" + " applicationId=" + applicationId.getId() + " priority="+ priority.getPriority()+ " resourceName="+ resourceName+ " numContainers="+ remoteRequest.getNumContainers()+ " #asks="+ ask.size());
  }
  remoteRequest.setNumContainers(remoteRequest.getNumContainers() - 1);
  if (remoteRequest.getNumContainers() == 0) {
    reqMap.remove(capability);
    if (reqMap.size() == 0) {
      remoteRequests.remove(resourceName);
    }
    if (remoteRequests.size() == 0) {
      remoteRequestsTable.remove(priority);
    }
    ask.remove(remoteRequest);
  }
 else {
    ask.add(remoteRequest);
  }
  if (LOG.isDebugEnabled()) {
    LOG.info("AFTER decResourceRequest:" + " applicationId=" + applicationId.getId() + " priority="+ priority.getPriority()+ " resourceName="+ resourceName+ " numContainers="+ remoteRequest.getNumContainers()+ " #asks="+ ask.size());
  }
}
