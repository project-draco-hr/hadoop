{
  RandomAlgorithms.Selector selector=new RandomAlgorithms.Selector(n,(double)m / n,new Random());
  Map<List<Integer>,Integer> results=new HashMap<List<Integer>,Integer>(niter);
  for (int i=0; i < niter; ++i, selector.reset()) {
    int[] result=new int[m];
    for (int j=0; j < m; ++j) {
      int v=selector.next();
      if (v < 0)       break;
      result[j]=v;
    }
    Arrays.sort(result);
    List<Integer> resultAsList=convertIntArray(result);
    Integer count=results.get(resultAsList);
    if (count == null) {
      results.put(resultAsList,1);
    }
 else {
      results.put(resultAsList,++count);
    }
  }
  verifyResults(results,m,n);
}
