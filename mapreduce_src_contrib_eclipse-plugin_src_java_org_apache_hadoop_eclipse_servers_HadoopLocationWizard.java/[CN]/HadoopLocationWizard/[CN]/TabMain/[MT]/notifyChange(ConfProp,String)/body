{
switch (prop) {
case PI_JOB_TRACKER_HOST:
{
      textJTHost.setText(propValue);
      break;
    }
case PI_JOB_TRACKER_PORT:
{
    textJTPort.setText(propValue);
    break;
  }
case PI_LOCATION_NAME:
{
  locationName.setText(propValue);
  break;
}
case PI_USER_NAME:
{
userName.setText(propValue);
break;
}
case PI_COLOCATE_MASTERS:
{
if (colocateMasters != null) {
boolean colocate=propValue.equalsIgnoreCase("yes");
colocateMasters.setSelection(colocate);
if (textNNHost != null) {
  textNNHost.setEnabled(!colocate);
}
}
break;
}
case PI_NAME_NODE_HOST:
{
textNNHost.setText(propValue);
break;
}
case PI_NAME_NODE_PORT:
{
textNNPort.setText(propValue);
break;
}
case PI_SOCKS_PROXY_ENABLE:
{
if (useSocksProxy != null) {
boolean useProxy=propValue.equalsIgnoreCase("yes");
useSocksProxy.setSelection(useProxy);
if (socksProxyHost != null) socksProxyHost.setEnabled(useProxy);
if (socksProxyPort != null) socksProxyPort.setEnabled(useProxy);
}
break;
}
case PI_SOCKS_PROXY_HOST:
{
socksProxyHost.setText(propValue);
break;
}
case PI_SOCKS_PROXY_PORT:
{
socksProxyPort.setText(propValue);
break;
}
}
}
