{
  RetryPolicy createPolicy=RetryPolicies.retryUpToMaximumCountWithFixedSleep(5,5000,TimeUnit.MILLISECONDS);
  Map<Class<? extends Exception>,RetryPolicy> remoteExceptionToPolicyMap=new HashMap<Class<? extends Exception>,RetryPolicy>();
  Map<Class<? extends Exception>,RetryPolicy> exceptionToPolicyMap=new HashMap<Class<? extends Exception>,RetryPolicy>();
  exceptionToPolicyMap.put(RemoteException.class,RetryPolicies.retryByRemoteException(RetryPolicies.TRY_ONCE_THEN_FAIL,remoteExceptionToPolicyMap));
  RetryPolicy methodPolicy=RetryPolicies.retryByException(RetryPolicies.TRY_ONCE_THEN_FAIL,exceptionToPolicyMap);
  Map<String,RetryPolicy> methodNameToPolicyMap=new HashMap<String,RetryPolicy>();
  methodNameToPolicyMap.put("create",methodPolicy);
  return (RaidProtocol)RetryProxy.create(RaidProtocol.class,rpcRaidnode,methodNameToPolicyMap);
}
