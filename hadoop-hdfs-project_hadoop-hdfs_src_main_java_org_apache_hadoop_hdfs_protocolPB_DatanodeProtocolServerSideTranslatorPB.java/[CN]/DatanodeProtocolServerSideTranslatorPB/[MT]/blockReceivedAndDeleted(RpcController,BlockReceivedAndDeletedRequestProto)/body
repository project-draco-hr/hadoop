{
  List<StorageReceivedDeletedBlocksProto> sBlocks=request.getBlocksList();
  StorageReceivedDeletedBlocks[] info=new StorageReceivedDeletedBlocks[sBlocks.size()];
  for (int i=0; i < sBlocks.size(); i++) {
    StorageReceivedDeletedBlocksProto sBlock=sBlocks.get(i);
    List<ReceivedDeletedBlockInfoProto> list=sBlock.getBlocksList();
    ReceivedDeletedBlockInfo[] rdBlocks=new ReceivedDeletedBlockInfo[list.size()];
    for (int j=0; j < list.size(); j++) {
      rdBlocks[j]=PBHelper.convert(list.get(j));
    }
    if (sBlock.hasStorage()) {
      info[i]=new StorageReceivedDeletedBlocks(PBHelper.convert(sBlock.getStorage()),rdBlocks);
    }
 else {
      info[i]=new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(),rdBlocks);
    }
  }
  try {
    impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),request.getBlockPoolId(),info);
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;
}
