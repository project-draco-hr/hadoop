{
  DatanodeCommand cmd=null;
  StorageBlockReport[] report=new StorageBlockReport[request.getReportsCount()];
  int index=0;
  for (  StorageBlockReportProto s : request.getReportsList()) {
    final BlockListAsLongs blocks;
    if (s.hasNumberOfBlocks()) {
      int num=(int)s.getNumberOfBlocks();
      Preconditions.checkState(s.getBlocksCount() == 0,"cannot send both blocks list and buffers");
      blocks=BlockListAsLongs.decodeBuffers(num,s.getBlocksBuffersList());
    }
 else {
      blocks=BlockListAsLongs.decodeLongs(s.getBlocksList());
    }
    report[index++]=new StorageBlockReport(PBHelper.convert(s.getStorage()),blocks);
  }
  try {
    cmd=impl.blockReport(PBHelper.convert(request.getRegistration()),request.getBlockPoolId(),report);
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  BlockReportResponseProto.Builder builder=BlockReportResponseProto.newBuilder();
  if (cmd != null) {
    builder.setCmd(PBHelper.convert(cmd));
  }
  return builder.build();
}
