{
  List<?> ifaces=ClassUtils.getAllInterfaces(rpcServerClass);
  Set<Class<?>> serverProtocols=new HashSet<>(ifaces.size());
  for (  Object obj : ifaces) {
    Class<?> iface=(Class<?>)obj;
    if (iface.getSimpleName().endsWith("Protocol")) {
      serverProtocols.add(iface);
    }
  }
  LOG.info("Running test {} for RPC server {}.  Found server protocols {} " + "and policy provider protocols {}.",testName.getMethodName(),rpcServerClass.getName(),serverProtocols,policyProviderProtocols);
  assertFalse("Expected to find at least one protocol in server.",serverProtocols.isEmpty());
  final Set<Class<?>> differenceSet=Sets.difference(serverProtocols,policyProviderProtocols);
  assertTrue(String.format("Following protocols for server %s are not defined in " + "%s: %s",rpcServerClass.getName(),HDFSPolicyProvider.class.getName(),Arrays.toString(differenceSet.toArray())),differenceSet.isEmpty());
}
