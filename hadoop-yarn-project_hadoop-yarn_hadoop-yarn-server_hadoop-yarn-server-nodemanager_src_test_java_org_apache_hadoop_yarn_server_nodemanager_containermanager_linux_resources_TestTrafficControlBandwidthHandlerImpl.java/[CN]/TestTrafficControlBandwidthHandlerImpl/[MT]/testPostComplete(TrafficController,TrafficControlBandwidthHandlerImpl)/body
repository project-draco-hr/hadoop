{
  reset(privilegedOperationExecutorMock);
  List<PrivilegedOperation> ops=handlerImpl.postComplete(containerIdMock);
  verify(cGroupsHandlerMock).deleteCGroup(eq(CGroupsHandler.CGroupController.NET_CLS),eq(TEST_CONTAINER_ID_STR));
  try {
    ArgumentCaptor<PrivilegedOperation> opCaptor=ArgumentCaptor.forClass(PrivilegedOperation.class);
    verify(privilegedOperationExecutorMock).executePrivilegedOperation(opCaptor.capture(),eq(false));
    List<String> args=opCaptor.getValue().getArguments();
    Assert.assertEquals(PrivilegedOperation.OperationType.TC_MODIFY_STATE,opCaptor.getValue().getOperationType());
    Assert.assertEquals(1,args.size());
    Assert.assertTrue(new File(args.get(0)).exists());
    verify(trafficControllerSpy).releaseClassId(TEST_CLASSID);
  }
 catch (  PrivilegedOperationException e) {
    LOG.error("Caught exception: " + e);
    Assert.fail("Unexpected PrivilegedOperationException from mock!");
  }
  Assert.assertNull(ops);
}
