{
  int s=0;
  hdfs.mkdirs(dir);
  SnapshotTestHelper.createSnapshot(hdfs,dir,"s" + ++s);
  Path sub1=new Path(dir,"sub1");
  hdfs.mkdirs(sub1);
  hdfs.setPermission(sub1,new FsPermission((short)0777));
  Path sub11=new Path(sub1,"sub11");
  hdfs.mkdirs(sub11);
  checkImage(s);
  hdfs.createSnapshot(dir,"s" + ++s);
  Path sub1file1=new Path(sub1,"sub1file1");
  Path sub1file2=new Path(sub1,"sub1file2");
  DFSTestUtil.createFile(hdfs,sub1file1,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,sub1file2,BLOCKSIZE,REPLICATION,seed);
  checkImage(s);
  hdfs.createSnapshot(dir,"s" + ++s);
  Path sub2=new Path(dir,"sub2");
  Path sub2file1=new Path(sub2,"sub2file1");
  Path sub2file2=new Path(sub2,"sub2file2");
  DFSTestUtil.createFile(hdfs,sub2file1,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,sub2file2,BLOCKSIZE,REPLICATION,seed);
  checkImage(s);
  hdfs.createSnapshot(dir,"s" + ++s);
  hdfs.setReplication(sub1file1,(short)(REPLICATION - 1));
  hdfs.delete(sub1file2,true);
  hdfs.setOwner(sub2,"dr.who","unknown");
  hdfs.delete(sub2file1,true);
  checkImage(s);
  hdfs.createSnapshot(dir,"s" + ++s);
  Path sub1_sub2file2=new Path(sub1,"sub2file2");
  hdfs.rename(sub2file2,sub1_sub2file2);
  hdfs.rename(sub1file1,sub2file1);
  checkImage(s);
}
