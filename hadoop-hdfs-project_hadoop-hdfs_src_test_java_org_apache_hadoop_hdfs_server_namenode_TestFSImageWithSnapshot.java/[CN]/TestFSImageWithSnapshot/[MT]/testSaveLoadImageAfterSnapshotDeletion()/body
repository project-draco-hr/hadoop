{
  Path dir=new Path("/dir");
  Path subDir=new Path(dir,"subdir");
  Path subsubDir=new Path(subDir,"subsubdir");
  hdfs.mkdirs(subsubDir);
  SnapshotTestHelper.createSnapshot(hdfs,dir,"s1");
  Path newDir=new Path(subsubDir,"newdir");
  Path newFile=new Path(newDir,"newfile");
  hdfs.mkdirs(newDir);
  DFSTestUtil.createFile(hdfs,newFile,BLOCKSIZE,(short)1,seed);
  SnapshotTestHelper.createSnapshot(hdfs,dir,"s2");
  hdfs.delete(subsubDir,true);
  hdfs.deleteSnapshot(dir,"s2");
  cluster.shutdown();
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATANODES).format(false).build();
  cluster.waitActive();
  fsn=cluster.getNamesystem();
  hdfs=cluster.getFileSystem();
  hdfs.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
  hdfs.saveNamespace();
  hdfs.setSafeMode(SafeModeAction.SAFEMODE_LEAVE);
  cluster.shutdown();
  cluster=new MiniDFSCluster.Builder(conf).format(false).numDataNodes(NUM_DATANODES).build();
  cluster.waitActive();
  fsn=cluster.getNamesystem();
  hdfs=cluster.getFileSystem();
}
