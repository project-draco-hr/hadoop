{
  Configuration conf=new Configuration();
  conf.setLong(IdMappingConstant.USERGROUPID_UPDATE_MILLIS_KEY,600000);
  ShellBasedIdMapping refIdMapping=new ShellBasedIdMapping(conf,true);
  ShellBasedIdMapping incrIdMapping=new ShellBasedIdMapping(conf);
  BiMap<Integer,String> uidNameMap=refIdMapping.getUidNameMap();
  BiMap<Integer,String> gidNameMap=refIdMapping.getGidNameMap();
  incrIdMapping.clearNameMaps();
  uidNameMap=refIdMapping.getUidNameMap();
  for (  BiMap.Entry<Integer,String> me : uidNameMap.entrySet()) {
    Integer id=me.getKey();
    String name=me.getValue();
    String tname=incrIdMapping.getUserName(id,null);
    assertEquals(name,tname);
  }
  assertEquals(uidNameMap.size(),incrIdMapping.getUidNameMap().size());
  incrIdMapping.clearNameMaps();
  for (  BiMap.Entry<Integer,String> me : uidNameMap.entrySet()) {
    Integer id=me.getKey();
    String name=me.getValue();
    Integer tid=incrIdMapping.getUid(name);
    assertEquals(id,tid);
  }
  assertEquals(uidNameMap.size(),incrIdMapping.getUidNameMap().size());
  incrIdMapping.clearNameMaps();
  gidNameMap=refIdMapping.getGidNameMap();
  for (  BiMap.Entry<Integer,String> me : gidNameMap.entrySet()) {
    Integer id=me.getKey();
    String name=me.getValue();
    String tname=incrIdMapping.getGroupName(id,null);
    assertEquals(name,tname);
  }
  assertEquals(gidNameMap.size(),incrIdMapping.getGidNameMap().size());
  incrIdMapping.clearNameMaps();
  gidNameMap=refIdMapping.getGidNameMap();
  for (  BiMap.Entry<Integer,String> me : gidNameMap.entrySet()) {
    Integer id=me.getKey();
    String name=me.getValue();
    Integer tid=incrIdMapping.getGid(name);
    assertEquals(id,tid);
  }
  assertEquals(gidNameMap.size(),incrIdMapping.getGidNameMap().size());
}
