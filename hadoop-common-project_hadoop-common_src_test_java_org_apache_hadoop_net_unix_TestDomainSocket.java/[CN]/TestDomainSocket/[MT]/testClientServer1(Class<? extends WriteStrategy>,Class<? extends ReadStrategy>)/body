{
  final String TEST_PATH=new File(sockDir.getDir(),"test_sock_client_server1").getAbsolutePath();
  final byte clientMsg1[]=new byte[]{0x1,0x2,0x3,0x4,0x5,0x6};
  final byte serverMsg1[]=new byte[]{0x9,0x8,0x7,0x6,0x5};
  final byte clientMsg2=0x45;
  final ArrayBlockingQueue<Throwable> threadResults=new ArrayBlockingQueue<Throwable>(2);
  final DomainSocket serv=DomainSocket.bindAndListen(TEST_PATH);
  Thread serverThread=new Thread(){
    public void run(){
      DomainSocket conn=null;
      try {
        conn=serv.accept();
        byte in1[]=new byte[clientMsg1.length];
        ReadStrategy reader=readStrategyClass.newInstance();
        reader.init(conn);
        reader.readFully(in1,0,in1.length);
        Assert.assertTrue(Arrays.equals(clientMsg1,in1));
        WriteStrategy writer=writeStrategyClass.newInstance();
        writer.init(conn);
        writer.write(serverMsg1);
        InputStream connInputStream=conn.getInputStream();
        int in2=connInputStream.read();
        Assert.assertEquals((int)clientMsg2,in2);
        conn.close();
      }
 catch (      Throwable e) {
        threadResults.add(e);
        Assert.fail(e.getMessage());
      }
      threadResults.add(new Success());
    }
  }
;
  serverThread.start();
  Thread clientThread=new Thread(){
    public void run(){
      try {
        DomainSocket client=DomainSocket.connect(TEST_PATH);
        WriteStrategy writer=writeStrategyClass.newInstance();
        writer.init(client);
        writer.write(clientMsg1);
        ReadStrategy reader=readStrategyClass.newInstance();
        reader.init(client);
        byte in1[]=new byte[serverMsg1.length];
        reader.readFully(in1,0,in1.length);
        Assert.assertTrue(Arrays.equals(serverMsg1,in1));
        OutputStream clientOutputStream=client.getOutputStream();
        clientOutputStream.write(clientMsg2);
        client.close();
      }
 catch (      Throwable e) {
        threadResults.add(e);
      }
      threadResults.add(new Success());
    }
  }
;
  clientThread.start();
  for (int i=0; i < 2; i++) {
    Throwable t=threadResults.take();
    if (!(t instanceof Success)) {
      Assert.fail(t.getMessage() + ExceptionUtils.getStackTrace(t));
    }
  }
  serverThread.join(120000);
  clientThread.join(120000);
  serv.close();
}
