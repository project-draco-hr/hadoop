{
  long timeout=TIMEOUT;
  long failtime=(timeout <= 0L) ? Long.MAX_VALUE : System.currentTimeMillis() + timeout;
  final double avgUtilization=((double)totalUsedSpace) / totalCapacity;
  boolean balanced;
  do {
    DatanodeInfo[] datanodeReport=client.getDatanodeReport(DatanodeReportType.ALL);
    assertEquals(datanodeReport.length,cluster.getDataNodes().size());
    balanced=true;
    for (    DatanodeInfo datanode : datanodeReport) {
      double nodeUtilization=((double)datanode.getDfsUsed()) / datanode.getCapacity();
      if (Math.abs(avgUtilization - nodeUtilization) > BALANCE_ALLOWED_VARIANCE) {
        balanced=false;
        if (System.currentTimeMillis() > failtime) {
          throw new TimeoutException("Rebalancing expected avg utilization to become " + avgUtilization + ", but on datanode "+ datanode+ " it remains at "+ nodeUtilization+ " after more than "+ TIMEOUT+ " msec.");
        }
        try {
          Thread.sleep(100);
        }
 catch (        InterruptedException ignored) {
        }
        break;
      }
    }
  }
 while (!balanced);
}
