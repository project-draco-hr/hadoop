{
  String hn=hostName;
  String ctx=record.context();
  String sn=serviceName;
  for (  MetricsTag tag : record.tags()) {
    if (tag.info().name().equals(MsInfo.Hostname.name()) && tag.value() != null) {
      hn=tag.value();
    }
 else     if (tag.info().name().equals(MsInfo.Context.name()) && tag.value() != null) {
      ctx=tag.value();
    }
 else     if (tag.info().name().equals(MsInfo.ProcessName.name()) && tag.value() != null) {
      sn=tag.value();
    }
  }
  StringBuilder buf=new StringBuilder();
  if (!skipHostname && hn != null) {
    int idx=hn.indexOf(".");
    if (idx == -1) {
      buf.append(hn).append(PERIOD);
    }
 else {
      buf.append(hn.substring(0,idx)).append(PERIOD);
    }
  }
  buf.append(sn).append(PERIOD);
  buf.append(ctx).append(PERIOD);
  buf.append(record.name().replaceAll("\\.","-")).append(PERIOD);
  for (  AbstractMetric metric : record.metrics()) {
    String type=null;
    if (metric.type().equals(MetricType.COUNTER)) {
      type="c";
    }
 else     if (metric.type().equals(MetricType.GAUGE)) {
      type="g";
    }
    StringBuilder line=new StringBuilder();
    line.append(buf.toString()).append(metric.name().replace(' ','_')).append(":").append(metric.value()).append("|").append(type);
    writeMetric(line.toString());
  }
}
