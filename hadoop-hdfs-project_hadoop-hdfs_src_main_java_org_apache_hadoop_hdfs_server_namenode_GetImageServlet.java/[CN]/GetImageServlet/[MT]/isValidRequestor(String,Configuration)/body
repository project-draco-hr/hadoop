{
  if (remoteUser == null) {
    LOG.warn("Received null remoteUser while authorizing access to getImage servlet");
    return false;
  }
  Set<String> validRequestors=new HashSet<String>();
  validRequestors.add(SecurityUtil.getServerPrincipal(conf.get(DFSConfigKeys.DFS_NAMENODE_KRB_HTTPS_USER_NAME_KEY),NameNode.getAddress(conf).getHostName()));
  validRequestors.add(SecurityUtil.getServerPrincipal(conf.get(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY),NameNode.getAddress(conf).getHostName()));
  validRequestors.add(SecurityUtil.getServerPrincipal(conf.get(DFSConfigKeys.DFS_SECONDARY_NAMENODE_KRB_HTTPS_USER_NAME_KEY),SecondaryNameNode.getHttpAddress(conf).getHostName()));
  validRequestors.add(SecurityUtil.getServerPrincipal(conf.get(DFSConfigKeys.DFS_SECONDARY_NAMENODE_USER_NAME_KEY),SecondaryNameNode.getHttpAddress(conf).getHostName()));
  if (HAUtil.isHAEnabled(conf,DFSUtil.getNamenodeNameServiceId(conf))) {
    Configuration otherNnConf=HAUtil.getConfForOtherNode(conf);
    validRequestors.add(SecurityUtil.getServerPrincipal(otherNnConf.get(DFSConfigKeys.DFS_NAMENODE_KRB_HTTPS_USER_NAME_KEY),NameNode.getAddress(otherNnConf).getHostName()));
    validRequestors.add(SecurityUtil.getServerPrincipal(otherNnConf.get(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY),NameNode.getAddress(otherNnConf).getHostName()));
  }
  for (  String v : validRequestors) {
    if (v != null && v.equals(remoteUser)) {
      if (LOG.isDebugEnabled())       LOG.debug("isValidRequestor is allowing: " + remoteUser);
      return true;
    }
  }
  if (LOG.isDebugEnabled())   LOG.debug("isValidRequestor is rejecting: " + remoteUser);
  return false;
}
