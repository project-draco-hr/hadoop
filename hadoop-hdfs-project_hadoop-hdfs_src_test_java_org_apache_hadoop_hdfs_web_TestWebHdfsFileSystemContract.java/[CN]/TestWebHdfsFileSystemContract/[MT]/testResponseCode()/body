{
  final WebHdfsFileSystem webhdfs=(WebHdfsFileSystem)fs;
  final Path root=new Path("/");
  final Path dir=new Path("/test/testUrl");
  assertTrue(webhdfs.mkdirs(dir));
{
    final URL url=webhdfs.toUrl(GetOpParam.Op.GETHOMEDIRECTORY,root);
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    final Map<?,?> m=WebHdfsTestUtil.connectAndGetJson(conn,HttpServletResponse.SC_OK);
    assertEquals(WebHdfsFileSystem.getHomeDirectoryString(ugi),m.get(Path.class.getSimpleName()));
    conn.disconnect();
  }
{
    final URL url=webhdfs.toUrl(GetOpParam.Op.GETHOMEDIRECTORY,root,new DoAsParam(ugi.getShortUserName() + "proxy"));
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.connect();
    assertEquals(HttpServletResponse.SC_UNAUTHORIZED,conn.getResponseCode());
    conn.disconnect();
  }
{
    final URL url=webhdfs.toUrl(PutOpParam.Op.SETOWNER,dir);
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.connect();
    assertEquals(HttpServletResponse.SC_BAD_REQUEST,conn.getResponseCode());
    conn.disconnect();
  }
{
    final HttpOpParam.Op op=PutOpParam.Op.SETREPLICATION;
    final URL url=webhdfs.toUrl(op,dir);
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod(op.getType().toString());
    conn.connect();
    assertEquals(HttpServletResponse.SC_OK,conn.getResponseCode());
    assertFalse(webhdfs.setReplication(dir,(short)1));
    conn.disconnect();
  }
{
    final Path p=new Path(dir,"non-exist");
    final URL url=webhdfs.toUrl(GetOpParam.Op.GETFILESTATUS,p);
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.connect();
    assertEquals(HttpServletResponse.SC_NOT_FOUND,conn.getResponseCode());
    conn.disconnect();
  }
{
    final HttpOpParam.Op op=PutOpParam.Op.SETPERMISSION;
    final URL url=webhdfs.toUrl(op,dir);
    final HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod(op.getType().toString());
    conn.connect();
    assertEquals(HttpServletResponse.SC_OK,conn.getResponseCode());
    assertEquals(0,conn.getContentLength());
    assertEquals(MediaType.APPLICATION_OCTET_STREAM,conn.getContentType());
    assertEquals((short)0755,webhdfs.getFileStatus(dir).getPermission().toShort());
    conn.disconnect();
  }
}
