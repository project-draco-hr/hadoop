def main():
    parser = OptionParser(usage='usage: %prog --skipprnorep --output OUTFILE --input INFILE [--input INFILE ...]')
    parser.add_option('-o', '--output', dest='outfile', action='store', type='string', help='file to create', metavar='OUTFILE')
    parser.add_option('-i', '--input', dest='infile', action='append', type='string', help='file to read', metavar='INFILE')
    parser.add_option('--skipprnorep', dest='skipprnorep', action='store_true', help='Skip Private & Not Replaceable')
    (options, args) = parser.parse_args()
    allfuncs = []
    for filename in options.infile:
        with open(filename, 'r') as shellcode:
            funcdef = ShellFunction()
            for line in shellcode:
                if line.startswith('## @description'):
                    funcdef.adddesc(line)
                elif line.startswith('## @audience'):
                    funcdef.setaudience(line)
                elif line.startswith('## @stability'):
                    funcdef.setstability(line)
                elif line.startswith('## @replaceable'):
                    funcdef.setreplace(line)
                elif line.startswith('## @param'):
                    funcdef.addparam(line)
                elif line.startswith('## @return'):
                    funcdef.addreturn(line)
                elif line.startswith('function'):
                    funcdef.setname(line)
                    if options.skipprnorep:
                        if ((funcdef.getaudience() == 'Private') and (funcdef.getreplace() == 'No')):
                            pass
                        else:
                            allfuncs.append(funcdef)
                    funcdef = ShellFunction()
    allfuncs = sorted(allfuncs)
    outfile = open(options.outfile, 'w')
    for line in toc(allfuncs):
        outfile.write(line)
    outfile.write('\n------\n\n')
    header = []
    for funcs in allfuncs:
        if (header != funcs.getinter()):
            header = funcs.getinter()
            line = ('## %s\n' % funcs.headerbuild())
            outfile.write(line)
        outfile.write(funcs.getdocpage())
    outfile.close()
