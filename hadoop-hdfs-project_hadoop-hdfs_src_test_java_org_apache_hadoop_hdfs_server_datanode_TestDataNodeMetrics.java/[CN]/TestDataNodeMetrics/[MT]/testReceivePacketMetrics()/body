{
  Configuration conf=new HdfsConfiguration();
  final int interval=1;
  conf.set(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY,"" + interval);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  try {
    cluster.waitActive();
    DistributedFileSystem fs=cluster.getFileSystem();
    Path testFile=new Path("/testFlushNanosMetric.txt");
    FSDataOutputStream fout=fs.create(testFile);
    fout.write(new byte[1]);
    fout.hsync();
    fout.close();
    List<DataNode> datanodes=cluster.getDataNodes();
    DataNode datanode=datanodes.get(0);
    MetricsRecordBuilder dnMetrics=getMetrics(datanode.getMetrics().name());
    assertCounter("FlushNanosNumOps",2L,dnMetrics);
    assertCounter("FsyncNanosNumOps",2L,dnMetrics);
    Thread.sleep((interval + 1) * 1000);
    String sec=interval + "s";
    assertQuantileGauges("FlushNanos" + sec,dnMetrics);
    assertQuantileGauges("FsyncNanos" + sec,dnMetrics);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
