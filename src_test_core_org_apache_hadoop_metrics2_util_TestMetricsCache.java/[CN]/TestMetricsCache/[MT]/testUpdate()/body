{
  MetricsCache cache=new MetricsCache();
  MetricsRecord mr=makeRecord("r",Arrays.asList(makeTag("t","tv")),Arrays.asList(makeMetric("m",0),makeMetric("m1",1)));
  MetricsCache.Record cr=cache.update(mr);
  verify(mr).name();
  verify(mr).tags();
  verify(mr).metrics();
  assertEquals("same record size",cr.metrics().size(),((Collection<AbstractMetric>)mr.metrics()).size());
  assertEquals("same metric value",0,cr.getMetric("m"));
  MetricsRecord mr2=makeRecord("r",Arrays.asList(makeTag("t","tv")),Arrays.asList(makeMetric("m",2),makeMetric("m2",42)));
  cr=cache.update(mr2);
  assertEquals("contains 3 metric",3,cr.metrics().size());
  assertEquals("updated metric value",2,cr.getMetric("m"));
  assertEquals("old metric value",1,cr.getMetric("m1"));
  assertEquals("new metric value",42,cr.getMetric("m2"));
  MetricsRecord mr3=makeRecord("r",Arrays.asList(makeTag("t","tv3")),Arrays.asList(makeMetric("m3",3)));
  cr=cache.update(mr3);
  assertEquals("contains 1 metric",1,cr.metrics().size());
  assertEquals("updated metric value",3,cr.getMetric("m3"));
  assertEquals("no tags",0,cr.tags().size());
  cr=cache.update(mr3,true);
  assertEquals("Got 1 tag",1,cr.tags().size());
  assertEquals("Tag value","tv3",cr.getTag("t"));
  assertEquals("Metric value",3,cr.getMetric("m3"));
}
