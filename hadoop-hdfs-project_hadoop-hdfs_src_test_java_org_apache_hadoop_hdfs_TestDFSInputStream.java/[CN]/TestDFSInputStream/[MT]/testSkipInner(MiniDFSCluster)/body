{
  DistributedFileSystem fs=cluster.getFileSystem();
  DFSClient client=fs.dfs;
  Path file=new Path("/testfile");
  int fileLength=1 << 22;
  byte[] fileContent=new byte[fileLength];
  for (int i=0; i < fileLength; i++) {
    fileContent[i]=(byte)(i % 133);
  }
  FSDataOutputStream fout=fs.create(file);
  fout.write(fileContent);
  fout.close();
  Random random=new Random();
  for (int i=3; i < 18; i++) {
    DFSInputStream fin=client.open("/testfile");
    for (long pos=0; pos < fileLength; ) {
      long skip=random.nextInt(1 << i) + 1;
      long skipped=fin.skip(skip);
      if (pos + skip >= fileLength) {
        assertEquals(fileLength,pos + skipped);
        break;
      }
 else {
        assertEquals(skip,skipped);
        pos+=skipped;
        int data=fin.read();
        assertEquals(pos % 133,data);
        pos+=1;
      }
    }
    fin.close();
  }
}
