{
  simpleKdc.setWorkDir(workDir);
  simpleKdc.setKdcHost(getHost());
  simpleKdc.setKdcRealm(realm);
  if (transport == null) {
    transport=conf.getProperty(TRANSPORT);
  }
  if (port == 0) {
    port=NetworkUtil.getServerPort();
  }
  if (transport != null) {
    if (transport.trim().equals("TCP")) {
      simpleKdc.setKdcTcpPort(port);
      simpleKdc.setAllowUdp(false);
    }
 else     if (transport.trim().equals("UDP")) {
      simpleKdc.setKdcUdpPort(port);
      simpleKdc.setAllowTcp(false);
    }
 else {
      throw new IllegalArgumentException("Invalid transport: " + transport);
    }
  }
 else {
    throw new IllegalArgumentException("Need to set transport!");
  }
  simpleKdc.getKdcConfig().setString(KdcConfigKey.KDC_SERVICE_NAME,conf.getProperty(INSTANCE));
  if (conf.getProperty(DEBUG) != null) {
    krb5Debug=getAndSet(SUN_SECURITY_KRB5_DEBUG,conf.getProperty(DEBUG));
  }
  if (conf.getProperty(MIN_TICKET_LIFETIME) != null) {
    simpleKdc.getKdcConfig().setLong(KdcConfigKey.MINIMUM_TICKET_LIFETIME,Long.parseLong(conf.getProperty(MIN_TICKET_LIFETIME)));
  }
  if (conf.getProperty(MAX_TICKET_LIFETIME) != null) {
    simpleKdc.getKdcConfig().setLong(KdcConfigKey.MAXIMUM_TICKET_LIFETIME,Long.parseLong(conf.getProperty(MiniKdc.MAX_TICKET_LIFETIME)));
  }
}
