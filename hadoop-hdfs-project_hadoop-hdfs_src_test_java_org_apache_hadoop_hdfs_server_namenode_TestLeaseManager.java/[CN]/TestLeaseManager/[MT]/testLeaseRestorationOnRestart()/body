{
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(new HdfsConfiguration()).numDataNodes(1).build();
    DistributedFileSystem dfs=cluster.getFileSystem();
    String path="/testLeaseRestorationOnRestart";
    FSDataOutputStream out=dfs.create(new Path(path));
    FSDirectory dir=cluster.getNamesystem().getFSDirectory();
    INodeFile file=dir.getINode(path).asFile();
    cluster.getNamesystem().leaseManager.removeLease(file.getFileUnderConstructionFeature().getClientName(),file);
    dfs.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
    cluster.getNameNodeRpc().saveNamespace(0,0);
    dfs.setSafeMode(SafeModeAction.SAFEMODE_LEAVE);
    cluster.restartNameNode(true);
    dir=cluster.getNamesystem().getFSDirectory();
    file=dir.getINode(path).asFile();
    assertTrue("Lease should exist.",cluster.getNamesystem().leaseManager.getLease(file) != null);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
