{
  tables=new int[nTables][];
  final int size=1 << nBits;
  for (int i=0; i < tables.length; i++) {
    tables[i]=new int[size];
  }
  final int[] first=tables[0];
  for (int i=0; i < first.length; i++) {
    int crc=i;
    for (int j=0; j < nBits; j++) {
      if ((crc & 1) == 1) {
        crc>>>=1;
        crc^=polynomial;
      }
 else {
        crc>>>=1;
      }
    }
    first[i]=crc;
  }
  final int mask=first.length - 1;
  for (int j=1; j < tables.length; j++) {
    final int[] previous=tables[j - 1];
    final int[] current=tables[j];
    for (int i=0; i < current.length; i++) {
      current[i]=(previous[i] >>> nBits) ^ first[previous[i] & mask];
    }
  }
}
