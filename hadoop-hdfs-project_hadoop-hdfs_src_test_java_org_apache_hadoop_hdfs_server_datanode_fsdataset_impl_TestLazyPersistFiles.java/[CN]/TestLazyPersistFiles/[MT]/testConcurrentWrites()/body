{
  startUpCluster(true,9);
  final String METHOD_NAME=GenericTestUtils.getMethodName();
  final int SEED=0xFADED;
  final int NUM_WRITERS=4;
  final int NUM_WRITER_PATHS=5;
  Path paths[][]=new Path[NUM_WRITERS][NUM_WRITER_PATHS];
  for (int i=0; i < NUM_WRITERS; i++) {
    paths[i]=new Path[NUM_WRITER_PATHS];
    for (int j=0; j < NUM_WRITER_PATHS; j++) {
      paths[i][j]=new Path("/" + METHOD_NAME + ".Writer"+ i+ ".File."+ j+ ".dat");
    }
  }
  final CountDownLatch latch=new CountDownLatch(NUM_WRITERS);
  final AtomicBoolean testFailed=new AtomicBoolean(false);
  ExecutorService executor=Executors.newFixedThreadPool(THREADPOOL_SIZE);
  for (int i=0; i < NUM_WRITERS; i++) {
    Runnable writer=new WriterRunnable(i,paths[i],SEED,latch,testFailed);
    executor.execute(writer);
  }
  Thread.sleep(3 * LAZY_WRITER_INTERVAL_SEC * 1000);
  triggerBlockReport();
  latch.await();
  assertThat(testFailed.get(),is(false));
}
