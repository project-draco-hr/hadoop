{
  getClusterBuilder().setRamDiskReplicaCapacity(2).build();
  final String METHOD_NAME=GenericTestUtils.getMethodName();
  final Path path1=new Path("/" + METHOD_NAME + ".dat");
  final int SEED=0xFADED;
  final int NUM_TASKS=5;
  makeRandomTestFile(path1,BLOCK_SIZE,true,SEED);
  ensureFileReplicasOnStorageType(path1,RAM_DISK);
  final CountDownLatch latch=new CountDownLatch(NUM_TASKS);
  final AtomicBoolean testFailed=new AtomicBoolean(false);
  Runnable readerRunnable=new Runnable(){
    @Override public void run(){
      try {
        Assert.assertTrue(verifyReadRandomFile(path1,BLOCK_SIZE,SEED));
      }
 catch (      Throwable e) {
        LOG.error("readerRunnable error",e);
        testFailed.set(true);
      }
 finally {
        latch.countDown();
      }
    }
  }
;
  Thread threads[]=new Thread[NUM_TASKS];
  for (int i=0; i < NUM_TASKS; i++) {
    threads[i]=new Thread(readerRunnable);
    threads[i].start();
  }
  Thread.sleep(500);
  for (int i=0; i < NUM_TASKS; i++) {
    Uninterruptibles.joinUninterruptibly(threads[i]);
  }
  Assert.assertFalse(testFailed.get());
}
