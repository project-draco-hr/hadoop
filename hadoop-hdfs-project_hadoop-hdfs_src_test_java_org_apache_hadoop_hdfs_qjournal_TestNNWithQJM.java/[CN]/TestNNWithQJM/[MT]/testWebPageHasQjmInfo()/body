{
  conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,MiniDFSCluster.getBaseDirectory() + "/TestNNWithQJM/image");
  conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,mjc.getQuorumJournalURI("myjournal").toString());
  conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY,1);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).manageNameDfsDirs(false).build();
  try {
    URL url=new URL("http://localhost:" + NameNode.getHttpAddress(cluster.getConfiguration(0)).getPort() + "/dfshealth.jsp");
    cluster.getFileSystem().mkdirs(TEST_PATH);
    String contents=DFSTestUtil.urlGet(url);
    assertTrue(contents.contains("Channel to journal node"));
    assertTrue(contents.contains("Written txid 2"));
    mjc.getJournalNode(0).stopAndJoin(0);
    cluster.getFileSystem().delete(TEST_PATH,true);
    contents=DFSTestUtil.urlGet(url);
    System.out.println(contents);
    assertTrue(Pattern.compile("1 txns/\\d+ms behind").matcher(contents).find());
    cluster.restartNameNode();
    contents=DFSTestUtil.urlGet(url);
    System.out.println(contents);
    assertTrue(Pattern.compile("never written").matcher(contents).find());
  }
  finally {
    cluster.shutdown();
  }
}
