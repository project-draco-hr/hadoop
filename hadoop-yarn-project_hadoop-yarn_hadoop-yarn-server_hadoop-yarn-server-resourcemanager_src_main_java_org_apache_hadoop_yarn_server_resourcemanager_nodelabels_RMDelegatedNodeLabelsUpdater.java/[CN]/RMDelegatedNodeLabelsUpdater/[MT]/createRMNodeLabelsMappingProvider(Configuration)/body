{
  RMNodeLabelsMappingProvider nodeLabelsMappingProvider=null;
  try {
    Class<? extends RMNodeLabelsMappingProvider> labelsProviderClass=conf.getClass(YarnConfiguration.RM_NODE_LABELS_PROVIDER_CONFIG,null,RMNodeLabelsMappingProvider.class);
    if (labelsProviderClass != null) {
      nodeLabelsMappingProvider=labelsProviderClass.newInstance();
    }
  }
 catch (  InstantiationException|IllegalAccessException|RuntimeException e) {
    LOG.error("Failed to create RMNodeLabelsMappingProvider based on" + " Configuration",e);
    throw new IOException("Failed to create RMNodeLabelsMappingProvider : " + e.getMessage(),e);
  }
  if (nodeLabelsMappingProvider == null) {
    String msg="RMNodeLabelsMappingProvider should be configured when " + "delegated-centralized node label configuration is enabled";
    LOG.error(msg);
    throw new IOException(msg);
  }
 else   if (LOG.isDebugEnabled()) {
    LOG.debug("RM Node labels mapping provider class is : " + nodeLabelsMappingProvider.getClass().toString());
  }
  return nodeLabelsMappingProvider;
}
