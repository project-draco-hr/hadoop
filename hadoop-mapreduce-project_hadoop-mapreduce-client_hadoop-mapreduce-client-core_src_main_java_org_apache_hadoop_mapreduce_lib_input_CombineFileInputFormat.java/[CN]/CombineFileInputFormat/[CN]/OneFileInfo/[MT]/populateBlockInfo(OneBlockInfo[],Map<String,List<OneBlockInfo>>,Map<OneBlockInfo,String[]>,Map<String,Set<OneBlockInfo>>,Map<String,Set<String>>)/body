{
  for (  OneBlockInfo oneblock : blocks) {
    blockToNodes.put(oneblock,oneblock.hosts);
    String[] racks=null;
    if (oneblock.hosts.length == 0) {
      racks=new String[]{NetworkTopology.DEFAULT_RACK};
    }
 else {
      racks=oneblock.racks;
    }
    for (int j=0; j < racks.length; j++) {
      String rack=racks[j];
      List<OneBlockInfo> blklist=rackToBlocks.get(rack);
      if (blklist == null) {
        blklist=new ArrayList<OneBlockInfo>();
        rackToBlocks.put(rack,blklist);
      }
      blklist.add(oneblock);
      if (!racks[j].equals(NetworkTopology.DEFAULT_RACK)) {
        addHostToRack(rackToNodes,racks[j],oneblock.hosts[j]);
      }
    }
    for (int j=0; j < oneblock.hosts.length; j++) {
      String node=oneblock.hosts[j];
      Set<OneBlockInfo> blklist=nodeToBlocks.get(node);
      if (blklist == null) {
        blklist=new LinkedHashSet<OneBlockInfo>();
        nodeToBlocks.put(node,blklist);
      }
      blklist.add(oneblock);
    }
  }
}
