{
  NameNodeResourceChecker mockResourceChecker=Mockito.mock(NameNodeResourceChecker.class);
  Mockito.doReturn(true).when(mockResourceChecker).hasAvailableDiskSpace();
  cluster.getNameNode(0).getNamesystem().setNNResourceChecker(mockResourceChecker);
  NNHAServiceTarget haTarget=new NNHAServiceTarget(conf,DFSUtil.getNamenodeNameServiceId(conf),"nn1");
  HAServiceProtocol rpc=haTarget.getHealthMonitorProxy(conf,conf.getInt(HA_HM_RPC_TIMEOUT_KEY,HA_HM_RPC_TIMEOUT_DEFAULT));
  rpc.monitorHealth();
  Mockito.doReturn(false).when(mockResourceChecker).hasAvailableDiskSpace();
  try {
    rpc.monitorHealth();
    fail("Should not have succeeded in calling monitorHealth");
  }
 catch (  HealthCheckFailedException hcfe) {
    GenericTestUtils.assertExceptionContains("The NameNode has no resources available",hcfe);
  }
catch (  RemoteException re) {
    GenericTestUtils.assertExceptionContains("The NameNode has no resources available",re.unwrapRemoteException(HealthCheckFailedException.class));
  }
}
