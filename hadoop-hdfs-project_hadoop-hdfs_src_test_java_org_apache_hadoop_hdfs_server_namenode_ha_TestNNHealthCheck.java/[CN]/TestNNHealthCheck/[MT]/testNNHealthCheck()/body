{
  MiniDFSCluster cluster=null;
  try {
    Configuration conf=new Configuration();
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).nnTopology(MiniDFSNNTopology.simpleHATopology()).build();
    NameNodeResourceChecker mockResourceChecker=Mockito.mock(NameNodeResourceChecker.class);
    Mockito.doReturn(true).when(mockResourceChecker).hasAvailableDiskSpace();
    cluster.getNameNode(0).getNamesystem().setNNResourceChecker(mockResourceChecker);
    NamenodeProtocols rpc=cluster.getNameNodeRpc(0);
    rpc.monitorHealth();
    Mockito.doReturn(false).when(mockResourceChecker).hasAvailableDiskSpace();
    try {
      rpc.monitorHealth();
      fail("Should not have succeeded in calling monitorHealth");
    }
 catch (    HealthCheckFailedException hcfe) {
      GenericTestUtils.assertExceptionContains("The NameNode has no resources available",hcfe);
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
