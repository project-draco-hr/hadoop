{
  try {
    if (result.errors != null) {
      registerInvalidInputError(result.errors);
    }
    if (result.matchedFileStatuses != null) {
      for (      FileStatus matched : result.matchedFileStatuses) {
        runningTasks.incrementAndGet();
        ListenableFuture<ProcessInputDirCallable.Result> future=exec.submit(new ProcessInputDirCallable(result.fs,matched,recursive,inputFilter));
        Futures.addCallback(future,processInputDirCallback);
      }
    }
    decrementRunningAndCheckCompletion();
  }
 catch (  Throwable t) {
    registerError(t);
  }
}
