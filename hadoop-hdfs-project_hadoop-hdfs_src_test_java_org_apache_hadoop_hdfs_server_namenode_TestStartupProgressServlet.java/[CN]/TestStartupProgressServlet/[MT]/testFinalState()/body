{
  setStartupProgressForFinalState(startupProgress);
  String respBody=doGetAndReturnResponseBody();
  assertNotNull(respBody);
  Map<String,Object> expected=ImmutableMap.<String,Object>builder().put("percentComplete",1.0f).put("phases",Arrays.<Object>asList(ImmutableMap.<String,Object>builder().put("name","LoadingFsImage").put("status","COMPLETE").put("percentComplete",1.0f).put("steps",Collections.<Object>singletonList(ImmutableMap.<String,Object>builder().put("name","Inodes").put("count",100L).put("total",100L).put("percentComplete",1.0f).build())).build(),ImmutableMap.<String,Object>builder().put("name","LoadingEdits").put("status","COMPLETE").put("percentComplete",1.0f).put("steps",Collections.<Object>singletonList(ImmutableMap.<String,Object>builder().put("count",200L).put("file","file").put("size",1000L).put("total",200L).put("percentComplete",1.0f).build())).build(),ImmutableMap.<String,Object>builder().put("name","SavingCheckpoint").put("status","COMPLETE").put("percentComplete",1.0f).put("steps",Collections.<Object>singletonList(ImmutableMap.<String,Object>builder().put("name","Inodes").put("count",300L).put("total",300L).put("percentComplete",1.0f).build())).build(),ImmutableMap.<String,Object>builder().put("name","SafeMode").put("status","COMPLETE").put("percentComplete",1.0f).put("steps",Collections.<Object>singletonList(ImmutableMap.<String,Object>builder().put("name","AwaitingReportedBlocks").put("count",400L).put("total",400L).put("percentComplete",1.0f).build())).build())).build();
  assertEquals(JSON.toString(expected),filterJson(respBody));
}
