{
  JobConf conf=new JobConf();
  FileOutputFormat.setOutputPath(conf,outDir);
  conf.set(JobContext.TASK_ATTEMPT_ID,attempt);
  JobContext jContext=new JobContextImpl(conf,taskID.getJobID());
  TaskAttemptContext tContext=new TaskAttemptContextImpl(conf,taskID);
  FileOutputCommitter committer=new FileOutputCommitter();
  committer.setupJob(jContext);
  committer.setupTask(tContext);
  TextOutputFormat theOutputFormat=new TextOutputFormat();
  RecordWriter theRecordWriter=theOutputFormat.getRecordWriter(null,conf,partFile,null);
  writeOutput(theRecordWriter,tContext);
  committer.abortTask(tContext);
  File out=new File(outDir.toUri().getPath());
  Path workPath=committer.getWorkPath(tContext,outDir);
  File wp=new File(workPath.toUri().getPath());
  File expectedFile=new File(wp,partFile);
  assertFalse("task temp dir still exists",expectedFile.exists());
  committer.abortJob(jContext,JobStatus.State.FAILED);
  expectedFile=new File(out,FileOutputCommitter.TEMP_DIR_NAME);
  assertFalse("job temp dir still exists",expectedFile.exists());
  assertEquals("Output directory not empty",0,out.listFiles().length);
  FileUtil.fullyDelete(out);
}
