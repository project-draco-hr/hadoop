{
  File[] files;
  try {
    files=FileUtil.listFiles(dir);
  }
 catch (  IOException ioe) {
    LOG.warn("Exception occured while compiling report: ",ioe);
    return report;
  }
  Arrays.sort(files);
  for (int i=0; i < files.length; i++) {
    if (files[i].isDirectory()) {
      compileReport(vol,bpFinalizedDir,files[i],report);
      continue;
    }
    if (!Block.isBlockFilename(files[i])) {
      if (isBlockMetaFile("blk_",files[i].getName())) {
        long blockId=Block.getBlockId(files[i].getName());
        verifyFileLocation(files[i].getParentFile(),bpFinalizedDir,blockId);
        report.add(new ScanInfo(blockId,null,files[i],vol));
      }
      continue;
    }
    File blockFile=files[i];
    long blockId=Block.filename2id(blockFile.getName());
    File metaFile=null;
    while (i + 1 < files.length && files[i + 1].isFile() && files[i + 1].getName().startsWith(blockFile.getName())) {
      i++;
      if (isBlockMetaFile(blockFile.getName(),files[i].getName())) {
        metaFile=files[i];
        break;
      }
    }
    verifyFileLocation(blockFile.getParentFile(),bpFinalizedDir,blockId);
    report.add(new ScanInfo(blockId,blockFile,metaFile,vol));
  }
  return report;
}
