{
  return new Iterator<LocatedFileStatus>(){
    private Iterator<FileStatus> itor=listStatusIterator(f);
    @Override public boolean hasNext(){
      return itor.hasNext();
    }
    @Override public LocatedFileStatus next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      FileStatus result=itor.next();
      try {
        BlockLocation[] locs=null;
        if (result.isFile()) {
          locs=getFileBlockLocations(result.getPath(),0,result.getLen());
        }
        return new LocatedFileStatus(result,locs);
      }
 catch (      IOException ioe) {
        throw (RuntimeException)new RuntimeException().initCause(ioe);
      }
    }
    @Override public void remove(){
      throw new UnsupportedOperationException("Remove is not supported");
    }
  }
;
}
