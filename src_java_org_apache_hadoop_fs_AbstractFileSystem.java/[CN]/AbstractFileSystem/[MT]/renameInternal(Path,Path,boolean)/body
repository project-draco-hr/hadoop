{
  final FileStatus srcStatus=getFileLinkStatus(src);
  FileStatus dstStatus;
  try {
    dstStatus=getFileLinkStatus(dst);
  }
 catch (  IOException e) {
    dstStatus=null;
  }
  if (dstStatus != null) {
    if (dst.equals(src)) {
      throw new FileAlreadyExistsException("The source " + src + " and destination "+ dst+ " are the same");
    }
    if (srcStatus.isSymlink() && dst.equals(srcStatus.getSymlink())) {
      throw new FileAlreadyExistsException("Cannot rename symlink " + src + " to its target "+ dst);
    }
    if (srcStatus.isDirectory() != dstStatus.isDirectory()) {
      throw new IOException("Source " + src + " and destination "+ dst+ " must both be directories");
    }
    if (!overwrite) {
      throw new FileAlreadyExistsException("Rename destination " + dst + " already exists.");
    }
    if (dstStatus.isDirectory()) {
      Iterator<FileStatus> list=listStatusIterator(dst);
      if (list != null && list.hasNext()) {
        throw new IOException("Rename cannot overwrite non empty destination directory " + dst);
      }
    }
    delete(dst,false);
  }
 else {
    final Path parent=dst.getParent();
    final FileStatus parentStatus=getFileStatus(parent);
    if (parentStatus.isFile()) {
      throw new ParentNotDirectoryException("Rename destination parent " + parent + " is a file.");
    }
  }
  renameInternal(src,dst);
}
