{
  return new DatanodeProtocolService(){
    @java.lang.Override public void registerDatanode(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.RegisterDatanodeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.RegisterDatanodeResponseProto> done){
      impl.registerDatanode(controller,request,done);
    }
    @java.lang.Override public void sendHeartbeat(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.HeartbeatRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.HeartbeatResponseProto> done){
      impl.sendHeartbeat(controller,request,done);
    }
    @java.lang.Override public void blockReport(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.BlockReportRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.BlockReportResponseProto> done){
      impl.blockReport(controller,request,done);
    }
    @java.lang.Override public void blockReceivedAndDeleted(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.BlockReceivedAndDeletedRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.BlockReceivedAndDeletedResponseProto> done){
      impl.blockReceivedAndDeleted(controller,request,done);
    }
    @java.lang.Override public void errorReport(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ErrorReportRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ErrorReportResponseProto> done){
      impl.errorReport(controller,request,done);
    }
    @java.lang.Override public void versionRequest(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.VersionRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.VersionResponseProto> done){
      impl.versionRequest(controller,request,done);
    }
    @java.lang.Override public void processUpgrade(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ProcessUpgradeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ProcessUpgradeResponseProto> done){
      impl.processUpgrade(controller,request,done);
    }
    @java.lang.Override public void reportBadBlocks(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ReportBadBlocksRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.ReportBadBlocksResponseProto> done){
      impl.reportBadBlocks(controller,request,done);
    }
    @java.lang.Override public void commitBlockSynchronization(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.CommitBlockSynchronizationRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.CommitBlockSynchronizationResponseProto> done){
      impl.commitBlockSynchronization(controller,request,done);
    }
  }
;
}
