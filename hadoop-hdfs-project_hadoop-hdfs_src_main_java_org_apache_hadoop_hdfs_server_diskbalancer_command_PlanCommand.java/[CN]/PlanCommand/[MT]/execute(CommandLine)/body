{
  LOG.debug("Processing Plan Command.");
  Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.PLAN));
  verifyCommandOptions(DiskBalancerCLI.PLAN,cmd);
  if (cmd.getOptionValue(DiskBalancerCLI.PLAN) == null) {
    throw new IllegalArgumentException("A node name is required to create a" + " plan.");
  }
  if (cmd.hasOption(DiskBalancerCLI.BANDWIDTH)) {
    this.bandwidth=Integer.parseInt(cmd.getOptionValue(DiskBalancerCLI.BANDWIDTH));
  }
  if (cmd.hasOption(DiskBalancerCLI.MAXERROR)) {
    this.maxError=Integer.parseInt(cmd.getOptionValue(DiskBalancerCLI.MAXERROR));
  }
  readClusterInfo(cmd);
  String output=null;
  if (cmd.hasOption(DiskBalancerCLI.OUTFILE)) {
    output=cmd.getOptionValue(DiskBalancerCLI.OUTFILE);
  }
  setOutputPath(output);
  DiskBalancerDataNode node=getNode(cmd.getOptionValue(DiskBalancerCLI.PLAN));
  if (node == null) {
    throw new IllegalArgumentException("Unable to find the specified node. " + cmd.getOptionValue(DiskBalancerCLI.PLAN));
  }
  this.thresholdPercentage=getThresholdPercentage(cmd);
  LOG.debug("threshold Percentage is {}",this.thresholdPercentage);
  setNodesToProcess(node);
  populatePathNames(node);
  NodePlan plan=null;
  List<NodePlan> plans=getCluster().computePlan(this.thresholdPercentage);
  setPlanParams(plans);
  if (plans.size() > 0) {
    plan=plans.get(0);
  }
  try (FSDataOutputStream beforeStream=create(String.format(DiskBalancerCLI.BEFORE_TEMPLATE,cmd.getOptionValue(DiskBalancerCLI.PLAN)))){
    beforeStream.write(getCluster().toJson().getBytes(StandardCharsets.UTF_8));
  }
   if (plan != null && plan.getVolumeSetPlans().size() > 0) {
    LOG.info("Writing plan to : {}",getOutputPath());
    try (FSDataOutputStream planStream=create(String.format(DiskBalancerCLI.PLAN_TEMPLATE,cmd.getOptionValue(DiskBalancerCLI.PLAN)))){
      planStream.write(plan.toJson().getBytes(StandardCharsets.UTF_8));
    }
   }
 else {
    LOG.info("No plan generated. DiskBalancing not needed for node: {} " + "threshold used: {}",cmd.getOptionValue(DiskBalancerCLI.PLAN),this.thresholdPercentage);
  }
  if (cmd.hasOption(DiskBalancerCLI.VERBOSE) && plans.size() > 0) {
    printToScreen(plans);
  }
}
