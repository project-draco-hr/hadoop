{
  Path fileAbs=new Path(testBaseDir1() + "/file");
  Path fileQual=new Path(testURI().toString(),fileAbs);
  Path link=new Path(testBaseDir1() + "/linkToFile");
  fc.createSymlink(fileAbs,link,false);
  FileUtil.fullyDelete(new File(link.toUri().getPath()));
  fc.createSymlink(fileAbs,link,false);
  try {
    fc.getFileStatus(link);
    fail("Got FileStatus for dangling link");
  }
 catch (  FileNotFoundException f) {
  }
  FileStatus fsd=fc.getFileLinkStatus(link);
  assertEquals(fileQual,fsd.getSymlink());
  assertTrue(fsd.isSymlink());
  assertFalse(fsd.isDir());
  assertEquals("",fsd.getOwner());
  assertEquals("",fsd.getGroup());
  assertEquals(link,fsd.getPath());
  assertEquals(0,fsd.getLen());
  assertEquals(0,fsd.getBlockSize());
  assertEquals(0,fsd.getReplication());
  assertEquals(0,fsd.getAccessTime());
  assertEquals(FsPermission.getDefault(),fsd.getPermission());
  try {
    readFile(link);
    fail("Got FileStatus for dangling link");
  }
 catch (  FileNotFoundException f) {
  }
  createAndWriteFile(fileAbs);
  fc.getFileStatus(link);
}
