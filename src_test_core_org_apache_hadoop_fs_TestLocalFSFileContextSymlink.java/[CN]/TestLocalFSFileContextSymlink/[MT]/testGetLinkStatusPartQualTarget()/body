{
  Path fileAbs=new Path(testBaseDir1() + "/file");
  Path fileQual=new Path(testURI().toString(),fileAbs);
  Path dir=new Path(testBaseDir1());
  Path link=new Path(testBaseDir1() + "/linkToFile");
  Path dirNew=new Path(testBaseDir2());
  Path linkNew=new Path(testBaseDir2() + "/linkToFile");
  fc.delete(dirNew,true);
  createAndWriteFile(fileQual);
  fc.setWorkingDirectory(dir);
  fc.createSymlink(fileQual,link,false);
  assertEquals(fileQual,fc.getFileLinkStatus(link).getSymlink());
  fc.rename(dir,dirNew);
  assertEquals(fileQual,fc.getFileLinkStatus(linkNew).getSymlink());
  try {
    readFile(linkNew);
    fail("The link should be dangling now.");
  }
 catch (  FileNotFoundException x) {
  }
  Path anotherFs=new Path("hdfs://host:1000/dir/file");
  FileUtil.fullyDelete(new File("/tmp/test2/linkToFile"));
  try {
    fc.createSymlink(anotherFs,linkNew,false);
    fail("Created a local fs link to a non-local fs");
  }
 catch (  IOException x) {
  }
}
