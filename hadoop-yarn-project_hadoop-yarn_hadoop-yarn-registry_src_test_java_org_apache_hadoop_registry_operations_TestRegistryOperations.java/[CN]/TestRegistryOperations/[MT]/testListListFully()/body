{
  ServiceRecord r1=new ServiceRecord();
  ServiceRecord r2=createRecord("i",PersistencePolicies.PERMANENT,"r2");
  String path=USERPATH + SC_HADOOP + "/listing";
  operations.mknode(path,true);
  String r1path=path + "/r1";
  operations.bind(r1path,r1,0);
  String r2path=path + "/r2";
  operations.bind(r2path,r2,0);
  RegistryPathStatus r1stat=operations.stat(r1path);
  assertEquals("r1",r1stat.path);
  RegistryPathStatus r2stat=operations.stat(r2path);
  assertEquals("r2",r2stat.path);
  assertNotEquals(r1stat,r2stat);
  List<String> list=operations.list(path);
  assertEquals("Wrong no. of children",2,list.size());
  Map<String,String> names=new HashMap<String,String>();
  String entries="";
  for (  String child : list) {
    names.put(child,child);
    entries+=child + " ";
  }
  assertTrue("No 'r1' in " + entries,names.containsKey("r1"));
  assertTrue("No 'r2' in " + entries,names.containsKey("r2"));
  Map<String,RegistryPathStatus> stats=RegistryUtils.statChildren(operations,path);
  assertEquals("Wrong no. of children",2,stats.size());
  assertEquals(r1stat,stats.get("r1"));
  assertEquals(r2stat,stats.get("r2"));
}
