{
  MiniDFSCluster cluster=null;
  try {
    Configuration conf=new HdfsConfiguration();
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(3).build();
    cluster.waitActive();
    BlockManager bm=cluster.getNamesystem().getBlockManager();
    FileSystem fs=cluster.getFileSystem();
    final Path FILE_PATH=new Path("/tmp.txt");
    final long FILE_LEN=1L;
    DFSTestUtil.createFile(fs,FILE_PATH,FILE_LEN,(short)3,1L);
    final String bpid=cluster.getNamesystem().getBlockPoolId();
    File storageDir=cluster.getInstanceStorageDir(0,0);
    File dataDir=MiniDFSCluster.getFinalizedDir(storageDir,bpid);
    assertTrue("Data directory does not exist",dataDir.exists());
    ExtendedBlock blk=getFirstBlock(cluster.getDataNodes().get(0),bpid);
    if (blk == null) {
      blk=getFirstBlock(cluster.getDataNodes().get(0),bpid);
    }
    assertFalse("Data directory does not contain any blocks or there was an" + " " + "IO error",blk == null);
    ArrayList<DataNode> datanodes=cluster.getDataNodes();
    assertEquals(datanodes.size(),3);
    FSNamesystem ns=cluster.getNamesystem();
    try {
      ns.writeLock();
      updateAllStorages(bm);
    }
  finally {
      ns.writeUnlock();
    }
    ns.writeLock();
    try {
      markAllBlocksAsCorrupt(bm,blk);
    }
  finally {
      ns.writeUnlock();
    }
    fs.open(FILE_PATH);
    fs.delete(FILE_PATH,false);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
