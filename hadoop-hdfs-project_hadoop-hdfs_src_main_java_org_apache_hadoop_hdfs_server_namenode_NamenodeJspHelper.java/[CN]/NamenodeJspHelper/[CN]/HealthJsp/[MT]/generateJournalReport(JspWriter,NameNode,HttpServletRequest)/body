{
  if (nn.getNamesystem() == null) {
    return;
  }
  FSEditLog log=nn.getFSImage().getEditLog();
  Preconditions.checkArgument(log != null,"no edit log set in %s",nn);
  out.println("<h3> " + nn.getRole() + " Journal Status: </h3>");
  out.println("<b>Current transaction ID:</b> " + nn.getFSImage().getLastAppliedOrWrittenTxId() + "<br/>");
  boolean openForWrite=log.isOpenForWrite();
  out.println("<div class=\"dfstable\">");
  out.println("<table class=\"storage\" title=\"NameNode Journals\">\n" + "<thead><tr><td><b>Journal Manager</b></td><td><b>State</b></td></tr></thead>");
  for (  JournalAndStream jas : log.getJournals()) {
    out.print("<tr>");
    out.print("<td>");
    JournalManager manager=jas.getManager();
    if (null != manager) {
      String[] managers=manager.toString().split(",");
      for (int i=0; i < managers.length; ++i) {
        out.print(managers[i]);
        if (i < managers.length - 1) {
          out.print(",");
        }
        if ((i + 1) % 3 == 0) {
          out.print("<br/>");
        }
      }
      if (jas.isRequired()) {
        out.print(" [required]");
      }
    }
    out.print("</td><td>");
    if (jas.isDisabled()) {
      out.print("<span class=\"failed\">Failed</span>");
    }
 else     if (openForWrite) {
      EditLogOutputStream elos=jas.getCurrentStream();
      if (elos != null) {
        out.println(elos.generateHtmlReport());
      }
 else {
        out.println("not currently writing");
      }
    }
 else {
      out.println("open for read");
    }
    out.println("</td></tr>");
  }
  out.println("</table></div>");
}
