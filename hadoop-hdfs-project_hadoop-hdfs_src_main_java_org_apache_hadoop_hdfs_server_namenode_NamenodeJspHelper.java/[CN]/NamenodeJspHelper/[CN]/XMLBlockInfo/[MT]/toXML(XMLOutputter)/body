{
  doc.startTag("block_info");
  if (block == null) {
    doc.startTag("error");
    doc.pcdata("blockId must be a Long");
    doc.endTag();
  }
 else {
    doc.startTag("block_id");
    doc.pcdata("" + block.getBlockId());
    doc.endTag();
    doc.startTag("block_name");
    doc.pcdata(block.getBlockName());
    doc.endTag();
    if (inode != null) {
      doc.startTag("file");
      doc.startTag("local_name");
      doc.pcdata(inode.getLocalName());
      doc.endTag();
      doc.startTag("local_directory");
      doc.pcdata(getLocalParentDir(inode));
      doc.endTag();
      doc.startTag("user_name");
      doc.pcdata(inode.getUserName());
      doc.endTag();
      doc.startTag("group_name");
      doc.pcdata(inode.getGroupName());
      doc.endTag();
      doc.startTag("is_directory");
      doc.pcdata("" + inode.isDirectory());
      doc.endTag();
      doc.startTag("access_time");
      doc.pcdata("" + inode.getAccessTime());
      doc.endTag();
      doc.startTag("is_under_construction");
      doc.pcdata("" + inode.isUnderConstruction());
      doc.endTag();
      doc.startTag("ds_quota");
      doc.pcdata("" + inode.getQuotaCounts().get(Quota.DISKSPACE));
      doc.endTag();
      doc.startTag("permission_status");
      doc.pcdata(inode.getPermissionStatus().toString());
      doc.endTag();
      doc.startTag("replication");
      doc.pcdata("" + inode.getFileReplication());
      doc.endTag();
      doc.startTag("disk_space_consumed");
      doc.pcdata("" + inode.diskspaceConsumed());
      doc.endTag();
      doc.startTag("preferred_block_size");
      doc.pcdata("" + inode.getPreferredBlockSize());
      doc.endTag();
      doc.endTag();
    }
    doc.startTag("replicas");
    for (final Iterator<DatanodeDescriptor> it=blockManager != null ? blockManager.datanodeIterator(block) : Collections.<DatanodeDescriptor>emptyList().iterator(); it.hasNext(); ) {
      doc.startTag("replica");
      DatanodeDescriptor dd=it.next();
      doc.startTag("host_name");
      doc.pcdata(dd.getHostName());
      doc.endTag();
      boolean isCorrupt=blockManager.getCorruptReplicaBlockIds(0,block.getBlockId()) != null;
      doc.startTag("is_corrupt");
      doc.pcdata("" + isCorrupt);
      doc.endTag();
      doc.endTag();
    }
    doc.endTag();
  }
  doc.endTag();
}
