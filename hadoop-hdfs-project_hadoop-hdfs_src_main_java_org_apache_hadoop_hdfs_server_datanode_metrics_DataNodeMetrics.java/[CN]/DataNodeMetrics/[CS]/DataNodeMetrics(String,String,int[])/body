{
  this.name=name;
  registry.tag(SessionId,sessionId);
  final int len=intervals.length;
  packetAckRoundTripTimeNanosQuantiles=new MutableQuantiles[len];
  flushNanosQuantiles=new MutableQuantiles[len];
  fsyncNanosQuantiles=new MutableQuantiles[len];
  sendDataPacketBlockedOnNetworkNanosQuantiles=new MutableQuantiles[len];
  sendDataPacketTransferNanosQuantiles=new MutableQuantiles[len];
  for (int i=0; i < len; i++) {
    int interval=intervals[i];
    packetAckRoundTripTimeNanosQuantiles[i]=registry.newQuantiles("packetAckRoundTripTimeNanos" + interval + "s","Packet Ack RTT in ns","ops","latency",interval);
    flushNanosQuantiles[i]=registry.newQuantiles("flushNanos" + interval + "s","Disk flush latency in ns","ops","latency",interval);
    fsyncNanosQuantiles[i]=registry.newQuantiles("fsyncNanos" + interval + "s","Disk fsync latency in ns","ops","latency",interval);
    sendDataPacketBlockedOnNetworkNanosQuantiles[i]=registry.newQuantiles("sendDataPacketBlockedOnNetworkNanos" + interval + "s","Time blocked on network while sending a packet in ns","ops","latency",interval);
    sendDataPacketTransferNanosQuantiles[i]=registry.newQuantiles("sendDataPacketTransferNanos" + interval + "s","Time reading from disk and writing to network while sending " + "a packet in ns","ops","latency",interval);
  }
}
