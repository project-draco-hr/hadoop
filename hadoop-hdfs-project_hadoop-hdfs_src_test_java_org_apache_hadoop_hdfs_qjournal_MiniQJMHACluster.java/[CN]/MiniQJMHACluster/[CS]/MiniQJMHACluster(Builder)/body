{
  this.conf=builder.conf;
  int retryCount=0;
  int basePort=10000;
  while (true) {
    try {
      basePort=10000 + RANDOM.nextInt(1000) * 4;
      LOG.info("Set MiniQJMHACluster basePort to " + basePort);
      journalCluster=new MiniJournalCluster.Builder(conf).format(true).build();
      journalCluster.waitActive();
      URI journalURI=journalCluster.getQuorumJournalURI(NAMESERVICE);
      MiniDFSNNTopology topology=createDefaultTopology(builder.numNNs,basePort);
      initHAConf(journalURI,builder.conf,builder.numNNs,basePort);
      cluster=builder.dfsBuilder.nnTopology(topology).manageNameDfsSharedDirs(false).build();
      cluster.waitActive();
      cluster.shutdownNameNodes();
      Configuration confNN0=cluster.getConfiguration(0);
      NameNode.initializeSharedEdits(confNN0,true);
      for (      MiniDFSCluster.NameNodeInfo nn : cluster.getNameNodeInfos()) {
        nn.setStartOpt(builder.startOpt);
      }
      cluster.restartNameNodes();
      break;
    }
 catch (    BindException e) {
      if (cluster != null) {
        cluster.shutdown(true);
        cluster=null;
      }
      ++retryCount;
      LOG.info("MiniQJMHACluster port conflicts, retried " + retryCount + " times");
    }
  }
}
