{
  LOG.debug("Told to move job output from " + jobOutput + " to "+ finalOutputDir+ " and orig job output path is "+ origJobOutputPath);
  if (fs.isFile(jobOutput)) {
    Path finalOutputPath=getFinalPath(fs,finalOutputDir,jobOutput,origJobOutputPath);
    if (!fs.rename(jobOutput,finalOutputPath)) {
      if (!fs.delete(finalOutputPath,true)) {
        throw new IOException("Failed to delete earlier output of job");
      }
      if (!fs.rename(jobOutput,finalOutputPath)) {
        throw new IOException("Failed to save output of job");
      }
    }
    LOG.debug("Moved job output file from " + jobOutput + " to "+ finalOutputPath);
  }
 else   if (fs.getFileStatus(jobOutput).isDirectory()) {
    LOG.debug("Job output file " + jobOutput + " is a dir");
    FileStatus[] paths=fs.listStatus(jobOutput);
    Path finalOutputPath=getFinalPath(fs,finalOutputDir,jobOutput,origJobOutputPath);
    fs.mkdirs(finalOutputPath);
    LOG.debug("Creating dirs along job output path " + finalOutputPath);
    if (paths != null) {
      for (      FileStatus path : paths) {
        moveJobOutputs(fs,origJobOutputPath,finalOutputDir,path.getPath());
      }
    }
  }
}
