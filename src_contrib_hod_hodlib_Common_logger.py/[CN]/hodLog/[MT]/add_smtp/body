def add_smtp(self, mailHost, fromAddress, toAddresses, level=defaultSmtpLevel, addToLoggerNames=None):
    'Adds an SMTP handler to all defined loggers or a specified set of\n           loggers.\n\n           mailHost         - SMTP server to used when sending mail\n           fromAddress      - email address to use as the from address when\n                              sending mail\n           toAdresses       - comma seperated list of email address to which\n                              mail will be sent\n           level            - cluster management log level\n           addToLoggerNames - tupple of logger names to which smtp handling\n                              will be added'

    def add_email_handler(loggerName):
        if (not self.__logObjs['smtp'].has_key(loggerName)):
            loggingLevel = self.__get_logging_level(level, defaultSmtpLevel)
            subject = loggerName
            if (loggingLevel == 50):
                subject = ('%s - a critical error has occured.' % subject)
            elif (loggingLevel == 40):
                subject = ('%s - an error has occured.' % subject)
            elif (loggingLevel == 30):
                subject = ('%s - warning message.' % subject)
            elif (loggingLevel == 20):
                subject = ('%s - information message.' % subject)
            elif (loggingLevel == 10):
                subject = ('%s - debugging message.' % subject)
            mailHostTuple = get_address_tuple(mailHost)
            emailHandler = logging.handlers.SMTPHandler(mailHostTuple, fromAddress, toAddresses, subject)
            emailHandler.setFormatter(smtpFormater)
            emailHandler.setLevel(loggingLevel)
            loggingLoggerName = self.__get_logging_logger_name(loggerName)
            aLogger = logging.getLogger(loggingLoggerName)
            aLogger.addHandler(emailHandler)
            emailData = ('%s from %s' % (mailHost, fromAddress))
            self.__add_to_handlers('smtp', loggerName, emailHandler, emailData, loggingLevel)
    if addToLoggerNames:
        for loggerName in addToLoggerNames:
            add_email_handler(loggerName)
    else:
        for loggerName in self.__loggerNames:
            add_email_handler(loggerName)
