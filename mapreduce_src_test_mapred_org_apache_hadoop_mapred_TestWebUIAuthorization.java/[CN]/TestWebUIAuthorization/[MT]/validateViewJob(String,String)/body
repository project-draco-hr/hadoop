{
  assertEquals("Incorrect return code for job submitter " + jobSubmitter,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,jobSubmitter,method));
  assertEquals("Incorrect return code for supergroup-member " + superGroupMember,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,superGroupMember,method));
  assertEquals("Incorrect return code for admin user " + mrAdminUser,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,mrAdminUser,method));
  assertEquals("Incorrect return code for admingroup-member " + mrAdminGroupMember,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,mrAdminGroupMember,method));
  assertEquals("Incorrect return code for MR-owner " + mrOwner,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,mrOwner,method));
  assertEquals("Incorrect return code for queue admin " + qAdmin,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,qAdmin,method));
  assertEquals("Incorrect return code for user in job-view-acl " + viewColleague,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,viewColleague,method));
  assertEquals("Incorrect return code for user in job-view-acl and " + "job-modify-acl " + viewAndModifyColleague,HttpURLConnection.HTTP_OK,getHttpStatusCode(url,viewAndModifyColleague,method));
  assertEquals("Incorrect return code for user in job-modify-acl " + modifyColleague,HttpURLConnection.HTTP_UNAUTHORIZED,getHttpStatusCode(url,modifyColleague,method));
  assertEquals("Incorrect return code for unauthorizedUser " + unauthorizedUser,HttpURLConnection.HTTP_UNAUTHORIZED,getHttpStatusCode(url,unauthorizedUser,method));
}
