{
  final Random r=new Random();
  final long seed=r.nextLong();
  r.setSeed(seed);
  LOG.info("length: " + seed);
  final DataInputBuffer in=new DataInputBuffer();
  final DataOutputBuffer out1=new DataOutputBuffer();
  final DataOutputBuffer out2=new DataOutputBuffer();
  for (int i=min; i < max; ++i) {
    setSerialize(x,r.nextLong(),i,out1);
    assertEquals(i,out1.getLength());
    x.write(out2);
    in.reset(out1.getData(),0,out1.getLength());
    y.readFields(in);
    assertEquals(i,x.getSize());
    assertEquals(i,y.getSize());
  }
  in.reset(out2.getData(),0,out2.getLength());
  for (int i=min; i < max; ++i) {
    y.readFields(in);
    assertEquals(i,y.getSize());
  }
}
