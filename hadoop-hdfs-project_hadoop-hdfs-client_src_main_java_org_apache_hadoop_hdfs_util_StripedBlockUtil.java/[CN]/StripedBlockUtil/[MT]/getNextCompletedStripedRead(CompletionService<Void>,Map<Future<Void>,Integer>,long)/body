{
  Preconditions.checkArgument(!futures.isEmpty());
  Future<Void> future=null;
  try {
    if (timeoutMillis > 0) {
      future=readService.poll(timeoutMillis,TimeUnit.MILLISECONDS);
    }
 else {
      future=readService.take();
    }
    if (future != null) {
      future.get();
      return new StripingChunkReadResult(futures.remove(future),StripingChunkReadResult.SUCCESSFUL);
    }
 else {
      return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);
    }
  }
 catch (  ExecutionException e) {
    LOG.debug("Exception during striped read task",e);
    return new StripingChunkReadResult(futures.remove(future),StripingChunkReadResult.FAILED);
  }
catch (  CancellationException e) {
    LOG.debug("Exception during striped read task",e);
    return new StripingChunkReadResult(futures.remove(future),StripingChunkReadResult.CANCELLED);
  }
}
