{
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,1);
  MockRM rm1=new MockRM(conf);
  rm1.start();
  RMApp app1=rm1.submitApp(200);
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm1.getResourceTrackerService());
  nm1.registerNode();
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  MockRM.finishAMAndVerifyAppState(app1,rm1,nm1,am1);
  RMApp app2=rm1.submitApp(200);
  MockAM am2=MockRM.launchAndRegisterAM(app2,rm1,nm1);
  nm1.nodeHeartbeat(am2.getApplicationAttemptId(),1,ContainerState.COMPLETE);
  am2.waitForState(RMAppAttemptState.FAILED);
  rm1.waitForState(app2.getApplicationId(),RMAppState.FAILED);
  RMApp app3=rm1.submitApp(200);
  MockAM am3=MockRM.launchAndRegisterAM(app3,rm1,nm1);
  rm1.killApp(app3.getApplicationId());
  rm1.waitForState(app3.getApplicationId(),RMAppState.KILLED);
  rm1.waitForState(am3.getApplicationAttemptId(),RMAppAttemptState.KILLED);
  GetApplicationsRequest request1=GetApplicationsRequest.newInstance(EnumSet.of(YarnApplicationState.FINISHED,YarnApplicationState.KILLED,YarnApplicationState.FAILED));
  GetApplicationsResponse response1=rm1.getClientRMService().getApplications(request1);
  List<ApplicationReport> appList1=response1.getApplicationList();
  Assert.assertEquals(3,appList1.size());
  for (  ApplicationReport report : appList1) {
    if (report.getApplicationId().equals(app2.getApplicationId()) || report.getApplicationId().equals(app3.getApplicationId())) {
      Assert.assertEquals("N/A",report.getHost());
      Assert.assertEquals(-1,report.getRpcPort());
    }
    if (report.getApplicationId().equals(app1.getApplicationId())) {
      Assert.assertFalse(report.getHost().equals("N/A"));
      Assert.assertTrue(report.getRpcPort() != -1);
    }
  }
}
