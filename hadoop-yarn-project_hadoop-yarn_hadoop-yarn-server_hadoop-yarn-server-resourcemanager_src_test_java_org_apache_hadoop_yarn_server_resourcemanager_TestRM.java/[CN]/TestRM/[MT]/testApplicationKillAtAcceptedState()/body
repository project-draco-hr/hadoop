{
  final Dispatcher dispatcher=new AsyncDispatcher(){
    @Override public EventHandler getEventHandler(){
class EventArgMatcher extends ArgumentMatcher<AbstractEvent> {
        @Override public boolean matches(        Object argument){
          if (argument instanceof RMAppAttemptEvent) {
            if (((RMAppAttemptEvent)argument).getType().equals(RMAppAttemptEventType.KILL)) {
              return true;
            }
          }
          return false;
        }
      }
      EventHandler handler=spy(super.getEventHandler());
      doNothing().when(handler).handle(argThat(new EventArgMatcher()));
      return handler;
    }
  }
;
  MockRM rm=new MockRM(conf){
    @Override protected Dispatcher createDispatcher(){
      return dispatcher;
    }
  }
;
  QueueMetrics metrics=rm.getResourceScheduler().getRootQueueMetrics();
  int appsKilled=metrics.getAppsKilled();
  int appsSubmitted=metrics.getAppsSubmitted();
  rm.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",15120,rm.getResourceTrackerService());
  nm1.registerNode();
  RMApp application=rm.submitApp(200);
  MockAM am=MockRM.launchAM(application,rm,nm1);
  rm.waitForState(am.getApplicationAttemptId(),RMAppAttemptState.LAUNCHED);
  nm1.nodeHeartbeat(am.getApplicationAttemptId(),1,ContainerState.RUNNING);
  rm.waitForState(application.getApplicationId(),RMAppState.ACCEPTED);
  KillApplicationRequest request=KillApplicationRequest.newInstance(application.getApplicationId());
  rm.getClientRMService().forceKillApplication(request);
  am.registerAppAttempt(false);
  rm.waitForState(application.getApplicationId(),RMAppState.KILLING);
  rm.waitForState(am.getApplicationAttemptId(),RMAppAttemptState.RUNNING);
  rm.getRMContext().getDispatcher().getEventHandler().handle(new RMAppEvent(application.getApplicationId(),RMAppEventType.ATTEMPT_KILLED));
  rm.waitForState(application.getApplicationId(),RMAppState.KILLED);
  metrics=rm.getResourceScheduler().getRootQueueMetrics();
  Assert.assertEquals(appsKilled + 1,metrics.getAppsKilled());
  Assert.assertEquals(appsSubmitted + 1,metrics.getAppsSubmitted());
}
