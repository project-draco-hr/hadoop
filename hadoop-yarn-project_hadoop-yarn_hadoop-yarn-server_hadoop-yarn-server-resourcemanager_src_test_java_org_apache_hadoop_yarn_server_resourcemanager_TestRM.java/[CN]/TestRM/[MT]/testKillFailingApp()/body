{
  final Dispatcher dispatcher=new AsyncDispatcher(){
    @Override public EventHandler getEventHandler(){
class EventArgMatcher extends ArgumentMatcher<AbstractEvent> {
        @Override public boolean matches(        Object argument){
          if (argument instanceof RMAppAttemptEvent) {
            if (((RMAppAttemptEvent)argument).getType().equals(RMAppAttemptEventType.KILL)) {
              return true;
            }
          }
          return false;
        }
      }
      EventHandler handler=spy(super.getEventHandler());
      doNothing().when(handler).handle(argThat(new EventArgMatcher()));
      return handler;
    }
  }
;
  MockRM rm1=new MockRM(conf){
    @Override protected Dispatcher createDispatcher(){
      return dispatcher;
    }
  }
;
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",8192,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app1=rm1.submitApp(200);
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  rm1.killApp(app1.getApplicationId());
  nm1.nodeHeartbeat(am1.getApplicationAttemptId(),1,ContainerState.COMPLETE);
  rm1.waitForState(am1.getApplicationAttemptId(),RMAppAttemptState.FAILED);
  rm1.waitForState(app1.getApplicationId(),RMAppState.KILLED);
}
