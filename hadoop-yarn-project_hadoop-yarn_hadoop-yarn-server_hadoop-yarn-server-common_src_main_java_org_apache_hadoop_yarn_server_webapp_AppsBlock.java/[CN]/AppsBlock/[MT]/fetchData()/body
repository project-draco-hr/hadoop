{
  reqAppStates=EnumSet.noneOf(YarnApplicationState.class);
  String reqStateString=$(APP_STATE);
  if (reqStateString != null && !reqStateString.isEmpty()) {
    String[] appStateStrings=reqStateString.split(",");
    for (    String stateString : appStateStrings) {
      reqAppStates.add(YarnApplicationState.valueOf(stateString.trim()));
    }
  }
  callerUGI=getCallerUGI();
  final GetApplicationsRequest request=GetApplicationsRequest.newInstance(reqAppStates);
  String appsNumStr=$(APPS_NUM);
  if (appsNumStr != null && !appsNumStr.isEmpty()) {
    long appsNum=Long.parseLong(appsNumStr);
    request.setLimit(appsNum);
  }
  String appStartedTimeBegainStr=$(APP_START_TIME_BEGIN);
  long appStartedTimeBegain=0;
  if (appStartedTimeBegainStr != null && !appStartedTimeBegainStr.isEmpty()) {
    appStartedTimeBegain=Long.parseLong(appStartedTimeBegainStr);
    if (appStartedTimeBegain < 0) {
      throw new BadRequestException("app.started-time.begin must be greater than 0");
    }
  }
  String appStartedTimeEndStr=$(APP_START_TIME_END);
  long appStartedTimeEnd=Long.MAX_VALUE;
  if (appStartedTimeEndStr != null && !appStartedTimeEndStr.isEmpty()) {
    appStartedTimeEnd=Long.parseLong(appStartedTimeEndStr);
    if (appStartedTimeEnd < 0) {
      throw new BadRequestException("app.started-time.end must be greater than 0");
    }
  }
  if (appStartedTimeBegain > appStartedTimeEnd) {
    throw new BadRequestException("app.started-time.end must be greater than app.started-time.begin");
  }
  request.setStartRange(new LongRange(appStartedTimeBegain,appStartedTimeEnd));
  if (callerUGI == null) {
    appReports=appBaseProt.getApplications(request).getApplicationList();
  }
 else {
    appReports=callerUGI.doAs(new PrivilegedExceptionAction<Collection<ApplicationReport>>(){
      @Override public Collection<ApplicationReport> run() throws Exception {
        return appBaseProt.getApplications(request).getApplicationList();
      }
    }
);
  }
}
