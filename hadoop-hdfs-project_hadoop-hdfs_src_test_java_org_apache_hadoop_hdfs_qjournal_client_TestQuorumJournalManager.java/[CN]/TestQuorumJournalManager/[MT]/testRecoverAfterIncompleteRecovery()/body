{
  setupLoggers345();
  cluster.getJournalNode(2).stopAndJoin(0);
  qjm=createSpyingQJM();
  spies=qjm.getLoggerSetForTests().getLoggersForTests();
  for (  AsyncLogger spy : spies) {
    TestQuorumJournalManagerUnit.futureThrows(new IOException("injected")).when(spy).finalizeLogSegment(Mockito.eq(1L),Mockito.eq(4L));
  }
  try {
    qjm.recoverUnfinalizedSegments();
    fail("Should have failed recovery since no finalization occurred");
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("injected",ioe);
  }
  cluster.getJournalNode(0).stopAndJoin(0);
  cluster.restartJournalNode(2);
  qjm=createSpyingQJM();
  spies=qjm.getLoggerSetForTests().getLoggersForTests();
  qjm.recoverUnfinalizedSegments();
  checkRecovery(cluster,1,4);
}
