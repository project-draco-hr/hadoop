{
  QuorumJournalManager readerQjm=createSpyingQJM();
  List<EditLogInputStream> streams=Lists.newArrayList();
  readerQjm.selectInputStreams(streams,0,false);
  assertEquals(0,streams.size());
  writeSegment(qjm,1,3,true);
  readerQjm.selectInputStreams(streams,0,false);
  try {
    assertEquals(1,streams.size());
    EditLogInputStream stream=streams.get(0);
    assertEquals(1,stream.getFirstTxId());
    assertEquals(3,stream.getLastTxId());
    verifyEdits(streams,1,3);
    assertNull(stream.readOp());
  }
  finally {
    IOUtils.cleanup(LOG,streams.toArray(new Closeable[0]));
    streams.clear();
  }
  writeSegment(qjm,4,3,false);
  readerQjm.selectInputStreams(streams,0,false);
  try {
    assertEquals(1,streams.size());
    EditLogInputStream stream=streams.get(0);
    assertEquals(1,stream.getFirstTxId());
    assertEquals(3,stream.getLastTxId());
    verifyEdits(streams,1,3);
  }
  finally {
    IOUtils.cleanup(LOG,streams.toArray(new Closeable[0]));
    streams.clear();
  }
  qjm.finalizeLogSegment(4,6);
  readerQjm.selectInputStreams(streams,0,false);
  try {
    assertEquals(2,streams.size());
    assertEquals(4,streams.get(1).getFirstTxId());
    assertEquals(6,streams.get(1).getLastTxId());
    verifyEdits(streams,1,6);
  }
  finally {
    IOUtils.cleanup(LOG,streams.toArray(new Closeable[0]));
    streams.clear();
  }
}
