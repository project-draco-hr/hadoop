{
  if (!operation.equals(OP_CREATE_WRITE) && !operation.equals(OP_OPEN_READ) && !operation.equals(OP_RENAME)&& !operation.equals(OP_DELETE)) {
    System.err.println("Error: Unknown operation: " + operation);
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Unknown operation: " + operation);
  }
  if (numberOfMaps < 0) {
    System.err.println("Error: Number of maps must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Number of maps must be a positive number");
  }
  if (numberOfReduces <= 0) {
    System.err.println("Error: Number of reduces must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Number of reduces must be a positive number");
  }
  if (blockSize <= 0) {
    System.err.println("Error: Block size must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Block size must be a positive number");
  }
  if (bytesToWrite < 0) {
    System.err.println("Error: Bytes to write must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Bytes to write must be a positive number");
  }
  if (bytesPerChecksum < 0) {
    System.err.println("Error: Bytes per checksum must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Bytes per checksum must be a positive number");
  }
  if (numberOfFiles < 0) {
    System.err.println("Error: Number of files must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Number of files must be a positive number");
  }
  if (replicationFactorPerFile < 0) {
    System.err.println("Error: Replication factor must be a positive number");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Replication factor must be a positive number");
  }
  if (blockSize % bytesPerChecksum != 0) {
    System.err.println("Error: Block Size in bytes must be a multiple of " + "bytes per checksum: ");
    displayUsage();
    throw new HadoopIllegalArgumentException("Error: Block Size in bytes must be a multiple of " + "bytes per checksum:");
  }
}
