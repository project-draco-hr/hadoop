{
  long now=System.currentTimeMillis();
  RMContext rmContext=mockRMContext(0,now - 10);
  ResourceScheduler scheduler=new CapacityScheduler();
  Configuration conf=new Configuration();
  ApplicationMasterService masterService=new ApplicationMasterService(rmContext,scheduler);
  TestRMAppManager appMonitor=new TestRMAppManager(rmContext,new ClientToAMSecretManager(),scheduler,masterService,new ApplicationACLsManager(conf),conf);
  ApplicationId appID=MockApps.newAppID(1);
  RecordFactory recordFactory=RecordFactoryProvider.getRecordFactory(null);
  ApplicationSubmissionContext context=recordFactory.newRecordInstance(ApplicationSubmissionContext.class);
  context.setApplicationId(appID);
  ContainerLaunchContext amContainer=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  amContainer.setApplicationACLs(new HashMap<ApplicationAccessType,String>());
  context.setAMContainerSpec(amContainer);
  setupDispatcher(rmContext,conf);
  appMonitor.submitApplication(context);
  RMApp app=rmContext.getRMApps().get(appID);
  Assert.assertNotNull("app is null",app);
  Assert.assertEquals("app id doesn't match",appID,app.getApplicationId());
  Assert.assertEquals("app name doesn't match",YarnConfiguration.DEFAULT_APPLICATION_NAME,app.getName());
  Assert.assertEquals("app queue doesn't match",YarnConfiguration.DEFAULT_QUEUE_NAME,app.getQueue());
  Assert.assertEquals("app state doesn't match",RMAppState.NEW,app.getState());
  Assert.assertNotNull("app store is null",app.getApplicationStore());
  int timeoutSecs=0;
  while ((getAppEventType() == RMAppEventType.KILL) && timeoutSecs++ < 20) {
    Thread.sleep(1000);
  }
  Assert.assertEquals("app event type sent is wrong",RMAppEventType.START,getAppEventType());
  setAppEventType(RMAppEventType.KILL);
  ((Service)rmContext.getDispatcher()).stop();
}
