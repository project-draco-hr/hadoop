{
  long numTxns=0L;
  for (  EditLogFile elf : getLogFiles(fromTxId)) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Counting " + elf);
    }
    if (elf.getFirstTxId() > fromTxId) {
      LOG.warn("Gap in transactions in " + sd.getRoot() + ". Gap is "+ fromTxId+ " - "+ (elf.getFirstTxId() - 1));
      break;
    }
 else     if (fromTxId == elf.getFirstTxId()) {
      if (elf.isInProgress()) {
        elf.validateLog();
      }
      if (elf.isCorrupt()) {
        break;
      }
      fromTxId=elf.getLastTxId() + 1;
      numTxns+=fromTxId - elf.getFirstTxId();
      if (elf.isInProgress()) {
        break;
      }
    }
 else     if (elf.getFirstTxId() < fromTxId && elf.getLastTxId() >= fromTxId) {
      IOException ioe=new IOException("txid " + fromTxId + " falls in the middle of file "+ elf);
      LOG.error("Broken invariant in edit log file management",ioe);
      throw ioe;
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Journal " + this + " has "+ numTxns+ " txns from "+ fromTxId);
  }
  long max=findMaxTransaction();
  if (numTxns == 0 && fromTxId <= max) {
    String error=String.format("Gap in transactions, max txnid is %d" + ", 0 txns from %d",max,fromTxId);
    LOG.error(error);
    throw new CorruptionException(error);
  }
  return numTxns;
}
