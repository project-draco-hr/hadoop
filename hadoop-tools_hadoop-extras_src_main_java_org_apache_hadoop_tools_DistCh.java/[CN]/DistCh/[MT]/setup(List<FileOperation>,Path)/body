{
  final String randomId=getRandomId();
  JobClient jClient=new JobClient(jobconf);
  Path stagingArea;
  try {
    stagingArea=JobSubmissionFiles.getStagingDir(jClient.getClusterHandle(),jobconf);
  }
 catch (  InterruptedException ie) {
    throw new IOException(ie);
  }
  Path jobdir=new Path(stagingArea + NAME + "_"+ randomId);
  FsPermission mapredSysPerms=new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);
  FileSystem.mkdirs(jClient.getFs(),jobdir,mapredSysPerms);
  LOG.info(JOB_DIR_LABEL + "=" + jobdir);
  if (log == null) {
    log=new Path(jobdir,"_logs");
  }
  FileOutputFormat.setOutputPath(jobconf,log);
  LOG.info("log=" + log);
  FileSystem fs=jobdir.getFileSystem(jobconf);
  Path opList=new Path(jobdir,"_" + OP_LIST_LABEL);
  jobconf.set(OP_LIST_LABEL,opList.toString());
  int opCount=0, synCount=0;
  try (SequenceFile.Writer opWriter=SequenceFile.createWriter(fs,jobconf,opList,Text.class,FileOperation.class,SequenceFile.CompressionType.NONE)){
    for (    FileOperation op : ops) {
      FileStatus srcstat=fs.getFileStatus(op.src);
      if (srcstat.isDirectory() && op.isDifferent(srcstat)) {
        ++opCount;
        opWriter.append(new Text(op.src.toString()),op);
      }
      Stack<Path> pathstack=new Stack<Path>();
      for (pathstack.push(op.src); !pathstack.empty(); ) {
        for (        FileStatus stat : fs.listStatus(pathstack.pop())) {
          if (stat.isDirectory()) {
            pathstack.push(stat.getPath());
          }
          if (op.isDifferent(stat)) {
            ++opCount;
            if (++synCount > SYNC_FILE_MAX) {
              opWriter.sync();
              synCount=0;
            }
            Path f=stat.getPath();
            opWriter.append(new Text(f.toString()),new FileOperation(f,op));
          }
        }
      }
    }
  }
   checkDuplication(fs,opList,new Path(jobdir,"_sorted"),jobconf);
  jobconf.setInt(OP_COUNT_LABEL,opCount);
  LOG.info(OP_COUNT_LABEL + "=" + opCount);
  jobconf.setNumMapTasks(getMapCount(opCount,new JobClient(jobconf).getClusterStatus().getTaskTrackers()));
  return opCount != 0;
}
