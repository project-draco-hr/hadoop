{
  final MultipleBlockingQueue<LocatedBlock> newBlocks=coordinator.getNewBlocks();
  return new ConcurrentPoll<LocatedBlock>(newBlocks){
    @Override void populate() throws IOException {
      final ExtendedBlock bg=coordinator.getBlockGroup();
      final LocatedBlock updated=callUpdateBlockForPipeline(bg);
      final long newGS=updated.getBlock().getGenerationStamp();
      for (int i=0; i < NUM_DATA_BLOCKS + NUM_PARITY_BLOCKS; i++) {
        final ExtendedBlock bi=coordinator.getStripedDataStreamer(i).getBlock();
        if (bi != null) {
          final LocatedBlock lb=new LocatedBlock(newBlock(bi,newGS),null,null,null,-1,updated.isCorrupt(),null);
          lb.setBlockToken(updated.getBlockToken());
          newBlocks.offer(i,lb);
        }
 else {
          final LocatedBlock lb=coordinator.getFollowingBlocks().peek(i);
          lb.getBlock().setGenerationStamp(newGS);
        }
      }
    }
  }
.poll(index);
}
