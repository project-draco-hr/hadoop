{
  HdfsConfiguration configuration=new HdfsConfiguration();
  final String contextName="testReadFromOneDNContext";
  configuration.set(HdfsClientConfigKeys.DFS_CLIENT_CONTEXT,contextName);
  configuration.setLong(HdfsClientConfigKeys.DFS_CLIENT_SOCKET_TIMEOUT_KEY,100000000L);
  BlockReaderTestUtil util=new BlockReaderTestUtil(1,configuration);
  final Path testFile=new Path("/testConnCache.dat");
  byte authenticData[]=util.writeFile(testFile,FILE_SIZE / 1024);
  DFSClient client=new DFSClient(new InetSocketAddress("localhost",util.getCluster().getNameNodePort()),util.getConf());
  ClientContext cacheContext=ClientContext.get(contextName,client.getConf());
  DFSInputStream in=client.open(testFile.toString());
  LOG.info("opened " + testFile.toString());
  byte[] dataBuf=new byte[BLOCK_SIZE];
  pread(in,0,dataBuf,0,dataBuf.length,authenticData);
  pread(in,FILE_SIZE - dataBuf.length,dataBuf,0,dataBuf.length,authenticData);
  pread(in,1024,dataBuf,0,dataBuf.length,authenticData);
  pread(in,-1,dataBuf,0,dataBuf.length,authenticData);
  pread(in,64,dataBuf,0,dataBuf.length / 2,authenticData);
  in.close();
  client.close();
  Assert.assertEquals(1,ClientContext.getFromConf(configuration).getPeerCache().size());
}
