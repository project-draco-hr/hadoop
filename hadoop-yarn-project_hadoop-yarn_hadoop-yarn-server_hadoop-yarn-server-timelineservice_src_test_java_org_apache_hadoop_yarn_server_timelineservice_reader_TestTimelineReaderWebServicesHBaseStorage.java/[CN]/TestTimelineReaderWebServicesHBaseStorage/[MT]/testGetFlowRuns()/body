{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs");
    ClientResponse resp=getResponse(client,uri);
    Set<FlowRunEntity> entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",((entity.getId().equals("user1@flow_name/1002345678919")) && (entity.getRunId() == 1002345678919L) && (entity.getStartTime() == 1425016501000L)) || ((entity.getId().equals("user1@flow_name/1002345678920")) && (entity.getRunId() == 1002345678920L) && (entity.getStartTime() == 1425016501034L)));
      assertEquals(0,entity.getMetrics().size());
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/users/user1/flows/flow_name/runs?limit=1");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",entity.getId().equals("user1@flow_name/1002345678920") && entity.getRunId() == 1002345678920L && entity.getStartTime() == 1425016501034L);
      assertEquals(0,entity.getMetrics().size());
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs?"+ "createdtimestart=1425016501030");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",entity.getId().equals("user1@flow_name/1002345678920") && entity.getRunId() == 1002345678920L && entity.getStartTime() == 1425016501034L);
      assertEquals(0,entity.getMetrics().size());
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs?"+ "createdtimestart=1425016500999&createdtimeend=1425016501035");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",((entity.getId().equals("user1@flow_name/1002345678919")) && (entity.getRunId() == 1002345678919L) && (entity.getStartTime() == 1425016501000L)) || ((entity.getId().equals("user1@flow_name/1002345678920")) && (entity.getRunId() == 1002345678920L) && (entity.getStartTime() == 1425016501034L)));
      assertEquals(0,entity.getMetrics().size());
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs?"+ "createdtimeend=1425016501030");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",entity.getId().equals("user1@flow_name/1002345678919") && entity.getRunId() == 1002345678919L && entity.getStartTime() == 1425016501000L);
      assertEquals(0,entity.getMetrics().size());
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/users/user1/flows/flow_name/runs?"+ "fields=metrics");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<FlowRunEntity>>(){
    }
);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,resp.getType());
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    FlowRunEntity entity : entities) {
      assertTrue("Id, run id or start time does not match.",((entity.getId().equals("user1@flow_name/1002345678919")) && (entity.getRunId() == 1002345678919L) && (entity.getStartTime() == 1425016501000L)&& (entity.getMetrics().size() == 2)) || ((entity.getId().equals("user1@flow_name/1002345678920")) && (entity.getRunId() == 1002345678920L) && (entity.getStartTime() == 1425016501034L)&& (entity.getMetrics().size() == 0)));
    }
  }
  finally {
    client.destroy();
  }
}
