{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=info1%20eq%20cluster1%20OR%20info1%20eq"+ "%20cluster2");
    ClientResponse resp=getResponse(client,uri);
    Set<TimelineEntity> entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=info1%20eq%20cluster1%20AND%20info4%20"+ "eq%2035000");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(0,entities.size());
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=info4%20eq%2035000%20OR%20info4%20eq"+ "%2036000");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=(info1%20eq%20cluster1%20AND%20info4%20"+ "eq%2035000)%20OR%20(info1%20eq%20cluster2%20AND%20info2%20eq%202.0)");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
    int infoCnt=0;
    for (    TimelineEntity entity : entities) {
      infoCnt+=entity.getInfo().size();
      assertTrue(entity.getId().equals("entity2"));
    }
    assertEquals(1,infoCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=(info1%20eq%20cluster1%20AND%20info4%20"+ "eq%2035000)%20OR%20(info1%20eq%20cluster2%20AND%20info2%20eq%20"+ "2.0)&fields=INFO");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
    infoCnt=0;
    for (    TimelineEntity entity : entities) {
      infoCnt+=entity.getInfo().size();
      assertTrue(entity.getId().equals("entity2"));
    }
    assertEquals(4,infoCnt);
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=info3%20ne%2039000");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?infofilters=info3%20ene%2039000");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1"));
    }
  }
  finally {
    client.destroy();
  }
}
