{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/flowrunapps/cluster1/flow_name/1002345678919?"+ "userid=user1&fields=ALL");
    ClientResponse resp=getResponse(client,uri);
    Set<TimelineEntity> entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue("Unexpected app in result",(entity.getId().equals("application_1111111111_1111") && entity.getMetrics().size() == 2) || (entity.getId().equals("application_1111111111_2222") && entity.getMetrics().size() == 1));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/flowrunapps/flow_name/1002345678919?userid=user1");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/flowrunapps/flow_name/1002345678919?userid=user1&limit=1");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
  }
  finally {
    client.destroy();
  }
}
