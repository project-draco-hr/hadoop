{
  Client client=createClient();
  try {
    URI uri=URI.create("http://localhost:" + serverPort + "/ws/v2/"+ "timeline/clusters/cluster1/apps/application_1111111111_1111/"+ "entities/type1?isrelatedto=type3:entity31,type2:entity21:entity22");
    ClientResponse resp=getResponse(client,uri);
    Set<TimelineEntity> entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/apps/application_1111111111_1111/entities/type1"+ "?isrelatedto=!(type3:entity31,type2:entity21:entity22)");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(0,entities.size());
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/apps/application_1111111111_1111/entities/type1"+ "?isrelatedto=!(type3:entity31,type2:entity21:entity22)%20OR%20"+ "type5:entity51,type6:entity61:entity66");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/apps/application_1111111111_1111/entities/type1"+ "?isrelatedto=(!(type3:entity31,type2:entity21:entity22)%20OR%20"+ "type5:entity51,type6:entity61:entity66)%20OR%20(type1:entity14,"+ "type2:entity21:entity22%20AND%20(type3:entity32:entity35,"+ "type4:entity42))");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/apps/application_1111111111_1111/entities/type1"+ "?relatesto=!%20(type3:entity31,type2:entity21:entity22%20)%20OR%20"+ "type5:entity51,type6:entity61:entity66");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(1,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity2"));
    }
    uri=URI.create("http://localhost:" + serverPort + "/ws/v2/timeline/"+ "clusters/cluster1/apps/application_1111111111_1111/entities/type1"+ "?relatesto=(!(%20type3:entity31,type2:entity21:entity22)%20OR%20"+ "type5:entity51,type6:entity61:entity66%20)%20OR%20(type1:entity14,"+ "type2:entity21:entity22%20AND%20(type3:entity32:entity35%20,%20"+ "type4:entity42))");
    resp=getResponse(client,uri);
    entities=resp.getEntity(new GenericType<Set<TimelineEntity>>(){
    }
);
    assertNotNull(entities);
    assertEquals(2,entities.size());
    for (    TimelineEntity entity : entities) {
      assertTrue(entity.getId().equals("entity1") || entity.getId().equals("entity2"));
    }
  }
  finally {
    client.destroy();
  }
}
