{
  boolean skipped=(result.getAllocationState() == AllocationState.APP_SKIPPED);
  CSAssignment assignment=new CSAssignment(skipped);
  assignment.setApplication(application);
  assignment.setExcessReservation(result.getContainerToBeUnreserved());
  if (Resources.greaterThan(rc,clusterResource,result.getResourceToBeAllocated(),Resources.none())) {
    Resource allocatedResource=result.getResourceToBeAllocated();
    Container updatedContainer=result.getUpdatedContainer();
    assignment.setResource(allocatedResource);
    assignment.setType(result.getContainerNodeType());
    if (result.getAllocationState() == AllocationState.RESERVED) {
      LOG.info("Reserved container " + " application=" + application.getApplicationId() + " resource="+ allocatedResource+ " queue="+ this.toString()+ " cluster="+ clusterResource);
      assignment.getAssignmentInformation().addReservationDetails(updatedContainer.getId(),application.getCSLeafQueue().getQueuePath());
      assignment.getAssignmentInformation().incrReservations();
      Resources.addTo(assignment.getAssignmentInformation().getReserved(),allocatedResource);
    }
 else     if (result.getAllocationState() == AllocationState.ALLOCATED) {
      LOG.info("assignedContainer" + " application attempt=" + application.getApplicationAttemptId() + " container="+ updatedContainer.getId()+ " queue="+ this+ " clusterResource="+ clusterResource+ " type="+ assignment.getType());
      application.getCSLeafQueue().getOrderingPolicy().containerAllocated(application,application.getRMContainer(updatedContainer.getId()));
      assignment.getAssignmentInformation().addAllocationDetails(updatedContainer.getId(),application.getCSLeafQueue().getQueuePath());
      assignment.getAssignmentInformation().incrAllocations();
      Resources.addTo(assignment.getAssignmentInformation().getAllocated(),allocatedResource);
      if (rmContainer != null) {
        assignment.setFulfilledReservation(true);
      }
    }
  }
  return assignment;
}
