{
  ContainerId containerId=event.getContainerID();
  ContainerEntity entity=createContainerEntity(containerId);
  Container container=context.getContainers().get(containerId);
  Resource resource=container.getResource();
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,resource.getMemory());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,resource.getVirtualCores());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,nodeId.getHost());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,nodeId.getPort());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,container.getPriority().toString());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,httpAddress);
  entity.setInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setId(ContainerMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(event.getTimestamp());
  entity.addEvent(tEvent);
  entity.setCreatedTime(event.getTimestamp());
  dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,containerId.getApplicationAttemptId().getApplicationId()));
}
