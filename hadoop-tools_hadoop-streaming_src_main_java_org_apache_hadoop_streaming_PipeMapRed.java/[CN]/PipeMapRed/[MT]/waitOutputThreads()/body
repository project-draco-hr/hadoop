{
  try {
    if (outThread_ == null) {
      OutputCollector collector=new OutputCollector(){
        public void collect(        Object key,        Object value) throws IOException {
        }
      }
;
      Reporter reporter=Reporter.NULL;
      startOutputThreads(collector,reporter);
    }
    int exitVal=sim.waitFor();
    if (exitVal != 0) {
      if (nonZeroExitIsFailure_) {
        throw new RuntimeException("PipeMapRed.waitOutputThreads(): subprocess failed with code " + exitVal);
      }
 else {
        LOG.info("PipeMapRed.waitOutputThreads(): subprocess exited with " + "code " + exitVal + " in "+ PipeMapRed.class.getName());
      }
    }
    if (outThread_ != null) {
      outThread_.join(joinDelay_);
    }
    if (errThread_ != null) {
      errThread_.join(joinDelay_);
    }
    if (outerrThreadsThrowable != null) {
      throw new RuntimeException(outerrThreadsThrowable);
    }
  }
 catch (  InterruptedException e) {
  }
}
