{
  assumeTrue(!System.getProperty("os.name").startsWith("Windows"));
  final int dnIndex=0;
  File[] dirs={new File(cluster.getInstanceStorageDir(dnIndex,0),"current"),new File(cluster.getInstanceStorageDir(dnIndex,1),"current")};
  try {
    for (int i=0; i < volumesFailed; i++) {
      prepareDirToFail(dirs[i]);
    }
    restartDatanodes(volumesTolerated,manageDfsDirs);
  }
 catch (  DiskErrorException e) {
    GenericTestUtils.assertExceptionContains("Invalid value configured for " + "dfs.datanode.failed.volumes.tolerated",e);
  }
 finally {
    boolean bpServiceState;
    if (cluster.getDataNodes().size() == 0) {
      bpServiceState=false;
    }
 else {
      bpServiceState=cluster.getDataNodes().get(0).isBPServiceAlive(cluster.getNamesystem().getBlockPoolId());
    }
    assertEquals(expectedBPServiceState,bpServiceState);
    for (    File dir : dirs) {
      FileUtil.chmod(dir.toString(),"755");
    }
  }
}
