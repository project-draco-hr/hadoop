{
  assumeTrue(!System.getProperty("os.name").startsWith("Windows"));
  conf.setInt(DFSConfigKeys.DFS_DATANODE_FAILED_VOLUMES_TOLERATED_KEY,0);
  cluster.startDataNodes(conf,2,true,null,null);
  cluster.waitActive();
  final DatanodeManager dm=cluster.getNamesystem().getBlockManager().getDatanodeManager();
  long origCapacity=DFSTestUtil.getLiveDatanodeCapacity(dm);
  long dnCapacity=DFSTestUtil.getDatanodeCapacity(dm,0);
  File dn2Vol1=new File(dataDir,"data" + (2 * 1 + 1));
  DataNodeTestUtils.injectDataDirFailure(dn2Vol1);
  Path file1=new Path("/test1");
  DFSTestUtil.createFile(fs,file1,1024,(short)3,1L);
  DFSTestUtil.waitReplication(fs,file1,(short)2);
  DFSTestUtil.waitForDatanodeStatus(dm,2,1,0,origCapacity - (1 * dnCapacity),WAIT_FOR_HEARTBEATS);
  DataNodeTestUtils.restoreDataDirFromFailure(dn2Vol1);
  Path file2=new Path("/test2");
  DFSTestUtil.createFile(fs,file2,1024,(short)3,1L);
  DFSTestUtil.waitReplication(fs,file2,(short)2);
}
