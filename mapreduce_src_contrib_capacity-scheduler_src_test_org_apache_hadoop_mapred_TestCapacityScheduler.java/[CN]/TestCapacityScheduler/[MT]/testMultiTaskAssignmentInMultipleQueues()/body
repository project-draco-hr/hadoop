{
  setUp(1,6,2);
  String[] qs={"default","q1"};
  taskTrackerManager.addQueues(qs);
  ArrayList<FakeQueueInfo> queues=new ArrayList<FakeQueueInfo>();
  queues.add(new FakeQueueInfo("default",50.0f,true,25));
  queues.add(new FakeQueueInfo("q1",50.0f,true,25));
  taskTrackerManager.setFakeQueues(queues);
  scheduler.start();
  taskTrackerManager.submitJobAndInit(JobStatus.PREP,6,1,"default","u1");
  FakeJobInProgress j2=taskTrackerManager.submitJobAndInit(JobStatus.PREP,2,1,"q1","u2");
  Map<String,String> str=new HashMap<String,String>();
  str.put(MAP,"attempt_test_0001_m_000001_0 on tt1");
  str.put(REDUCE,"attempt_test_0001_r_000001_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",str);
  str.clear();
  str.put(MAP,"attempt_test_0002_m_000001_0 on tt1");
  str.put(REDUCE,"attempt_test_0002_r_000001_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",str);
  str.clear();
  str.put(MAP,"attempt_test_0002_m_000002_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",str);
  str.clear();
  str.put(MAP,"attempt_test_0001_m_000002_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",str);
}
