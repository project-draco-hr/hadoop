def __build_dict(self):
    if self.__withConfig:
        self._dict['config'] = str(getattr(self.__parsedOptions, 'config'))
    for compoundOption in dir(self.__parsedOptions):
        if (compoundOption in self.__compoundOpts):
            (section, option) = self.__split_compound(compoundOption)
            if (not self._dict.has_key(section)):
                self._dict[section] = {}
            if getattr(self.__parsedOptions, compoundOption):
                _attr = getattr(self.__parsedOptions, compoundOption)
                if (type(_attr) == type([])):
                    import string
                    _attr = string.join(_attr, ',')
                self._dict[section][option] = _attr
    for section in self._configDef:
        for option in self._configDef[section]:
            if (self._configDef[section][option]['type'] == 'bool'):
                compoundOption = self.__splice_compound(section, option)
                if (not self._dict.has_key(section)):
                    self._dict[section] = {}
                if (option not in self._dict[section]):
                    self._dict[section][option] = False
