def __init__(self, name, cmdString, env=os.environ, mode=4, buffer=True, wait=True, chdir=None):
    "Class initialization.\n\n           name        - thread name to use when running the command\n           cmdString   - command string to execute\n           inputString - string to print to command's stdin\n           env         - shell environment dictionary\n           mode        - 3 for popen3 and 4 for popen4\n           buffer      - out put to be retrieved with output() method\n           wait        - return immediately after start() is called and output \n                         command results as they come to stdout"
    baseThread.__init__(self, name=name)
    self.cmdString = cmdString
    self.__mode = mode
    self.__buffer = buffer
    self.__wait = wait
    self.__chdir = chdir
    self.__outputBuffer = []
    self.__status = None
    self.__pid = None
    self.__isFinished = threading.Event()
    self.__isFinished.clear()
    self.stdin = None
    self.stdout = None
    self.stderr = None
    self.__env = env
