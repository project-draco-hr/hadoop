{
  Path fileName=new Path("/testUncacheQuiesces");
  int fileLen=4096;
  DFSTestUtil.createFile(fs,fileName,fileLen,(short)1,0xFDFD);
  DistributedFileSystem dfs=cluster.getFileSystem();
  dfs.addCachePool(new CachePoolInfo("pool"));
  dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPool("pool").setPath(fileName).setReplication((short)3).build());
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      MetricsRecordBuilder dnMetrics=getMetrics(dn.getMetrics().name());
      long blocksCached=MetricsAsserts.getLongCounter("BlocksCached",dnMetrics);
      return blocksCached > 0;
    }
  }
,1000,30000);
  dfs.removeCacheDirective(1);
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
      MetricsRecordBuilder dnMetrics=getMetrics(dn.getMetrics().name());
      long blocksUncached=MetricsAsserts.getLongCounter("BlocksUncached",dnMetrics);
      return blocksUncached > 0;
    }
  }
,1000,30000);
  Thread.sleep(10000);
  MetricsRecordBuilder dnMetrics=getMetrics(dn.getMetrics().name());
  MetricsAsserts.assertCounter("BlocksCached",1l,dnMetrics);
  MetricsAsserts.assertCounter("BlocksUncached",1l,dnMetrics);
}
