{
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    private int tries=0;
    @Override public Boolean get(){
      long curDnCacheUsed=fsd.getCacheUsed();
      if (curDnCacheUsed != expected) {
        if (tries++ > 10) {
          LOG.info("verifyExpectedCacheUsage: expected " + expected + ", got "+ curDnCacheUsed+ "; "+ "memlock limit = "+ NativeIO.POSIX.getCacheManipulator().getMemlockLimit()+ ".  Waiting...");
        }
        return false;
      }
      return true;
    }
  }
,100,60000);
  return expected;
}
