{
  FSDataInputStream dataStream=fs.open(path);
  JsonObjectMapperParser<HistogramRawTestData> parser=new JsonObjectMapperParser<HistogramRawTestData>(dataStream,HistogramRawTestData.class);
  HistogramRawTestData data;
  try {
    data=parser.getNext();
  }
  finally {
    parser.close();
  }
  Histogram hist=new Histogram();
  List<Long> measurements=data.getData();
  List<Long> typeProbeData=new HistogramRawTestData().getData();
  assertTrue("The data attribute of a jackson-reconstructed HistogramRawTestData " + " should be a " + typeProbeData.getClass().getName() + ", like a virgin HistogramRawTestData, but it's a "+ measurements.getClass().getName(),measurements.getClass() == typeProbeData.getClass());
  for (int j=0; j < measurements.size(); ++j) {
    hist.enter(measurements.get(j));
  }
  LoggedDiscreteCDF result=new LoggedDiscreteCDF();
  int[] percentiles=new int[data.getPercentiles().size()];
  for (int j=0; j < data.getPercentiles().size(); ++j) {
    percentiles[j]=data.getPercentiles().get(j);
  }
  result.setCDF(hist,percentiles,data.getScale());
  return result;
}
