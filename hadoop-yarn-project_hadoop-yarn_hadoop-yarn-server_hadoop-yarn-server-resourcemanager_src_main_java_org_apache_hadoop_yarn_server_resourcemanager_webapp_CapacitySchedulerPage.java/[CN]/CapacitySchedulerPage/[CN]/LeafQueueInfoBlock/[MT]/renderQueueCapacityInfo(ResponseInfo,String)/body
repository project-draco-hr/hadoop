{
  PartitionQueueCapacitiesInfo capacities=lqinfo.getCapacities().getPartitionQueueCapacitiesInfo(label);
  PartitionResourcesInfo resourceUsages=lqinfo.getResources().getPartitionResourceUsageInfo(label);
  ResourceInfo userAMResourceLimit=null;
  ArrayList<UserInfo> usersList=lqinfo.getUsers().getUsersList();
  if (usersList.isEmpty()) {
    userAMResourceLimit=resourceUsages.getAMLimit();
  }
 else {
    userAMResourceLimit=usersList.get(0).getResourceUsageInfo().getPartitionResourceUsageInfo(label).getAMLimit();
  }
  ResourceInfo amUsed=(resourceUsages.getAmUsed() == null) ? new ResourceInfo(Resources.none()) : resourceUsages.getAmUsed();
  ri._("Used Capacity:",percent(capacities.getUsedCapacity() / 100))._("Configured Capacity:",percent(capacities.getCapacity() / 100))._("Configured Max Capacity:",percent(capacities.getMaxCapacity() / 100))._("Absolute Used Capacity:",percent(capacities.getAbsoluteUsedCapacity() / 100))._("Absolute Configured Capacity:",percent(capacities.getAbsoluteCapacity() / 100))._("Absolute Configured Max Capacity:",percent(capacities.getAbsoluteMaxCapacity() / 100))._("Used Resources:",resourceUsages.getUsed().toString())._("Configured Max Application Master Limit:",StringUtils.format("%.1f",capacities.getMaxAMLimitPercentage()))._("Max Application Master Resources:",resourceUsages.getAMLimit().toString())._("Used Application Master Resources:",amUsed.toString())._("Max Application Master Resources Per User:",userAMResourceLimit.toString());
}
