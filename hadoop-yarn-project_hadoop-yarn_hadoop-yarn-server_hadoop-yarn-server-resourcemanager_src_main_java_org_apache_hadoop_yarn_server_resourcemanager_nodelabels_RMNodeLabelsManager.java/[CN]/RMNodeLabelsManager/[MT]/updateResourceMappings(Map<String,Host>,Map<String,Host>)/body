{
  Set<NodeId> allNMs=new HashSet<NodeId>();
  for (  Entry<String,Host> entry : before.entrySet()) {
    allNMs.addAll(entry.getValue().nms.keySet());
  }
  for (  Entry<String,Host> entry : after.entrySet()) {
    allNMs.addAll(entry.getValue().nms.keySet());
  }
  for (  NodeId nodeId : allNMs) {
    Node oldNM;
    if ((oldNM=getNMInNodeSet(nodeId,before,true)) != null) {
      Set<String> oldLabels=getLabelsByNode(nodeId,before);
      if (oldLabels.isEmpty()) {
        Label label=labelCollections.get(NO_LABEL);
        Resources.subtractFrom(label.getResource(),oldNM.resource);
        for (        Queue q : queueCollections.values()) {
          Resources.subtractFrom(q.resource,oldNM.resource);
        }
      }
 else {
        for (        String labelName : oldLabels) {
          Label label=labelCollections.get(labelName);
          if (null == label) {
            continue;
          }
          Resources.subtractFrom(label.getResource(),oldNM.resource);
        }
        for (        Queue q : queueCollections.values()) {
          if (isNodeUsableByQueue(oldLabels,q)) {
            Resources.subtractFrom(q.resource,oldNM.resource);
          }
        }
      }
    }
    Node newNM;
    if ((newNM=getNMInNodeSet(nodeId,after,true)) != null) {
      Set<String> newLabels=getLabelsByNode(nodeId,after);
      if (newLabels.isEmpty()) {
        Label label=labelCollections.get(NO_LABEL);
        Resources.addTo(label.getResource(),newNM.resource);
        for (        Queue q : queueCollections.values()) {
          Resources.addTo(q.resource,newNM.resource);
        }
      }
 else {
        for (        String labelName : newLabels) {
          Label label=labelCollections.get(labelName);
          Resources.addTo(label.getResource(),newNM.resource);
        }
        for (        Queue q : queueCollections.values()) {
          if (isNodeUsableByQueue(newLabels,q)) {
            Resources.addTo(q.resource,newNM.resource);
          }
        }
      }
    }
  }
}
