{
  final Configuration conf=new HdfsConfiguration();
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_HANDLER_COUNT_KEY,4);
  conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY,Integer.MAX_VALUE);
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
  cluster.waitActive();
  cluster.getHttpUri(0);
  FSNamesystem fsn=cluster.getNamesystem();
  String bpId=fsn.getBlockPoolId();
  DataNode dn=cluster.getDataNodes().get(0);
  DatanodeDescriptor dnd=NameNodeAdapter.getDatanode(fsn,dn.getDatanodeId());
  DataNodeTestUtils.setHeartbeatsDisabledForTests(dn,true);
  DatanodeStorageInfo storage=dnd.getStorageInfos()[0];
  assertTrue(dnd.isRegistered());
  DatanodeRegistration lastReg=dn.getDNRegistrationForBP(bpId);
  waitForHeartbeat(dn,dnd);
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  dnd.setForceRegistration(true);
  assertFalse(dnd.isRegistered());
  waitForHeartbeat(dn,dnd);
  assertTrue(dnd.isRegistered());
  DatanodeRegistration newReg=dn.getDNRegistrationForBP(bpId);
  assertNotSame(lastReg,newReg);
  lastReg=newReg;
  waitForHeartbeat(dn,dnd);
  assertTrue(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  assertTrue(waitForBlockReport(dn,dnd));
  assertTrue(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  dnd.setForceRegistration(true);
  assertFalse(waitForBlockReport(dn,dnd));
  assertFalse(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  waitForHeartbeat(dn,dnd);
  assertTrue(dnd.isRegistered());
  newReg=dn.getDNRegistrationForBP(bpId);
  assertNotSame(lastReg,newReg);
  lastReg=newReg;
  assertTrue(waitForBlockReport(dn,dnd));
  assertTrue(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  ExtendedBlock eb=new ExtendedBlock(bpId,1234);
  dn.notifyNamenodeDeletedBlock(eb,storage.getStorageID());
  DataNodeTestUtils.triggerDeletionReport(dn);
  assertTrue(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  boolean failed=false;
  try {
    fsn.processIncrementalBlockReport(lastReg,null);
  }
 catch (  NullPointerException npe) {
    failed=true;
  }
  assertTrue("didn't fail",failed);
  assertFalse(dnd.isRegistered());
  dn.notifyNamenodeDeletedBlock(eb,storage.getStorageID());
  DataNodeTestUtils.triggerDeletionReport(dn);
  assertFalse(dnd.isRegistered());
  assertSame(lastReg,dn.getDNRegistrationForBP(bpId));
  waitForHeartbeat(dn,dnd);
  assertTrue(dnd.isRegistered());
  assertNotSame(lastReg,dn.getDNRegistrationForBP(bpId));
}
