{
  MiniDFSCluster cluster=null;
  Configuration conf=new HdfsConfiguration();
  if (compress) {
    conf.setBoolean(DFSConfigKeys.DFS_IMAGE_COMPRESSION_CODEC_KEY,true);
  }
  try {
    LOG.info("\n===========================================\n" + "Starting empty cluster");
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build();
    cluster.waitActive();
    FileSystem fs=cluster.getFileSystem();
    fs.mkdirs(new Path("/test"));
    File nameDir=new File(cluster.getNameDirs(0).iterator().next().getPath());
    File dfsDir=nameDir.getParentFile();
    assertEquals(dfsDir.getName(),"dfs");
    LOG.info("Shutting down cluster #1");
    cluster.shutdown();
    cluster=null;
    File imageFile=new File(nameDir,"current/" + NNStorage.getImageFileName(0));
    MD5FileUtils.saveMD5File(imageFile,new MD5Hash(new byte[16]));
    LOG.info("\n===========================================\n" + "Starting same cluster after simulated crash");
    try {
      cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).build();
      fail("Should not have successfully started with corrupt image");
    }
 catch (    IOException ioe) {
      if (!ioe.getCause().getMessage().contains("is corrupt with MD5")) {
        throw ioe;
      }
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
