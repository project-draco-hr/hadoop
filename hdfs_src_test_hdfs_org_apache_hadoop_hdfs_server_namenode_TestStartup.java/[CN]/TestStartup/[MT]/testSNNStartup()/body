{
  LOG.info("--starting SecondNN startup test");
  config.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY,fileAsURI(new File(hdfsDir,"name")).toString());
  config.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,fileAsURI(new File(hdfsDir,"name")).toString());
  config.set(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY,fileAsURI(new File(hdfsDir,"chkpt_edits")).toString());
  config.set(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY,fileAsURI(new File(hdfsDir,"chkpt")).toString());
  LOG.info("--starting NN ");
  MiniDFSCluster cluster=null;
  SecondaryNameNode sn=null;
  NameNode nn=null;
  try {
    cluster=new MiniDFSCluster.Builder(config).manageDataDfsDirs(false).manageNameDfsDirs(false).build();
    cluster.waitActive();
    nn=cluster.getNameNode();
    assertNotNull(nn);
    LOG.info("--starting SecondNN");
    sn=new SecondaryNameNode(config);
    assertNotNull(sn);
    LOG.info("--doing checkpoint");
    sn.doCheckpoint();
    LOG.info("--done checkpoint");
    FSImage image=nn.getFSImage();
    StorageDirectory sd=image.getStorage().getStorageDir(0);
    assertEquals(sd.getStorageDirType(),NameNodeDirType.IMAGE_AND_EDITS);
    File imf=image.getStorage().getStorageFile(sd,NameNodeFile.IMAGE,0);
    File edf=image.getStorage().getStorageFile(sd,NameNodeFile.EDITS,0);
    LOG.info("--image file " + imf.getAbsolutePath() + "; len = "+ imf.length());
    LOG.info("--edits file " + edf.getAbsolutePath() + "; len = "+ edf.length());
    FSImage chkpImage=sn.getFSImage();
    verifyDifferentDirs(chkpImage,imf.length(),edf.length());
  }
 catch (  IOException e) {
    fail(StringUtils.stringifyException(e));
    System.err.println("checkpoint failed");
    throw e;
  }
 finally {
    if (sn != null)     sn.shutdown();
    if (cluster != null)     cluster.shutdown();
  }
}
