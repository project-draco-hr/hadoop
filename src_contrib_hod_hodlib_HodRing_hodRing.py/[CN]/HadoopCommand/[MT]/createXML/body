def createXML(self, doc, attr, topElement, final):
    for (k, v) in attr.iteritems():
        self.log.debug(((('_createHadoopSiteXml: ' + str(k)) + ' ') + str(v)))
        (lowport, highport) = self.__hadoopPortRange
        if (v == 'fillinport'):
            v = ('%d' % ServiceUtil.getUniqRandomPort(low=lowport, high=highport, log=self.log))
        keyvalpair = ''
        if isinstance(v, (tuple, list)):
            for item in v:
                keyvalpair = ('%s%s=%s,' % (keyvalpair, k, item))
            keyvalpair = keyvalpair[:(-1)]
        else:
            keyvalpair = ((k + '=') + v)
        self.filledInKeyVals.append(keyvalpair)
        if (k == 'mapred.job.tracker'):
            keyvalpair = ((k + '=') + v)
            self.filledInKeyVals.append(keyvalpair)
        if (v == 'fillinhostport'):
            port = ('%d' % ServiceUtil.getUniqRandomPort(low=lowport, high=highport, log=self.log))
            self.log.debug(('Setting hostname to: %s' % local_fqdn()))
            v = ((local_fqdn() + ':') + port)
        keyvalpair = ''
        if isinstance(v, (tuple, list)):
            for item in v:
                keyvalpair = ('%s%s=%s,' % (keyvalpair, k, item))
            keyvalpair = keyvalpair[:(-1)]
        else:
            keyvalpair = ((k + '=') + v)
        self.filledInKeyVals.append(keyvalpair)
        if (v == 'fillindir'):
            v = self.__mrSysDir
            pass
        prop = None
        if isinstance(v, (tuple, list)):
            for item in v:
                prop = self._createXmlElement(doc, k, item, 'No description', final)
                topElement.appendChild(prop)
        else:
            if (k == 'fs.default.name'):
                prop = self._createXmlElement(doc, k, ('hdfs://' + v), 'No description', final)
            else:
                prop = self._createXmlElement(doc, k, v, 'No description', final)
            topElement.appendChild(prop)
