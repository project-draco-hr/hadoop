{
  ApplicationSubmissionContextInfo app=new ApplicationSubmissionContextInfo();
  String appid="application_123_0";
  app.setApplicationId(appid);
  String requestBody=TestRMWebServicesDelegationTokenAuthentication.getMarshalledAppInfo(app);
  URL url=new URL("http://localhost:8088/ws/v1/cluster/apps");
  HttpURLConnection conn=(HttpURLConnection)url.openConnection();
  TestRMWebServicesDelegationTokenAuthentication.setupConn(conn,"POST","application/xml",requestBody);
  conn.getInputStream();
  assertEquals(Status.ACCEPTED.getStatusCode(),conn.getResponseCode());
  boolean appExists=rm.getRMContext().getRMApps().containsKey(ApplicationId.fromString(appid));
  assertTrue(appExists);
  RMApp actualApp=rm.getRMContext().getRMApps().get(ApplicationId.fromString(appid));
  String owner=actualApp.getUser();
  assertEquals(rm.getConfig().get(CommonConfigurationKeys.HADOOP_HTTP_STATIC_USER,CommonConfigurationKeys.DEFAULT_HADOOP_HTTP_STATIC_USER),owner);
  appid="application_123_1";
  app.setApplicationId(appid);
  requestBody=TestRMWebServicesDelegationTokenAuthentication.getMarshalledAppInfo(app);
  url=new URL("http://localhost:8088/ws/v1/cluster/apps?user.name=client");
  conn=(HttpURLConnection)url.openConnection();
  TestRMWebServicesDelegationTokenAuthentication.setupConn(conn,"POST",MediaType.APPLICATION_XML,requestBody);
  conn.getInputStream();
  appExists=rm.getRMContext().getRMApps().containsKey(ApplicationId.fromString(appid));
  assertTrue(appExists);
  actualApp=rm.getRMContext().getRMApps().get(ApplicationId.fromString(appid));
  owner=actualApp.getUser();
  assertEquals("client",owner);
}
