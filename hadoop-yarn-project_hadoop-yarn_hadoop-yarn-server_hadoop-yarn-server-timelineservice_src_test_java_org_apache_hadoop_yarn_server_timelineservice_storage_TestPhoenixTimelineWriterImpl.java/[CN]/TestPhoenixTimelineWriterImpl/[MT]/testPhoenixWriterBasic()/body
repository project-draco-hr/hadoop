{
  int numEntity=12;
  TimelineEntities te=TestTimelineWriterImpl.getStandardTestTimelineEntities(numEntity);
  writer.write("cluster_1","user1","testFlow","version1",1l,"app_test_1",te);
  String sql="SELECT COUNT(entity_id) FROM " + PhoenixTimelineWriterImpl.ENTITY_TABLE_NAME;
  verifySQLWithCount(sql,numEntity,"Number of entities should be ");
  sql="SELECT COUNT(c.config) FROM " + PhoenixTimelineWriterImpl.ENTITY_TABLE_NAME + "(c.config VARCHAR) ";
  verifySQLWithCount(sql,(numEntity / 2),"Number of entities with config should be ");
  sql="SELECT COUNT(i.info1) FROM " + PhoenixTimelineWriterImpl.ENTITY_TABLE_NAME + "(i.info1 VARBINARY) ";
  verifySQLWithCount(sql,(numEntity / 2),"Number of entities with info should be ");
  sql="SELECT COUNT(entity_id) FROM " + PhoenixTimelineWriterImpl.ENTITY_TABLE_NAME + "(c.config VARCHAR, i.info1 VARBINARY) "+ "WHERE c.config IS NOT NULL AND i.info1 IS NOT NULL";
  verifySQLWithCount(sql,(numEntity / 4),"Number of entities with both config and info should be ");
  sql="SELECT COUNT(entity_id) FROM " + PhoenixTimelineWriterImpl.ENTITY_TABLE_NAME + "(rt.testType VARCHAR, ir.testType VARCHAR) "+ "WHERE rt.testType IS NOT NULL AND ir.testType IS NOT NULL";
  verifySQLWithCount(sql,numEntity - 2,"Number of entities with both relatesTo and isRelatedTo should be ");
  sql="SELECT COUNT(entity_id) FROM " + PhoenixTimelineWriterImpl.EVENT_TABLE_NAME;
  verifySQLWithCount(sql,(numEntity / 4),"Number of events should be ");
  sql="SELECT COUNT(entity_id) FROM " + PhoenixTimelineWriterImpl.METRIC_TABLE_NAME;
  verifySQLWithCount(sql,(numEntity / 4),"Number of events should be ");
}
