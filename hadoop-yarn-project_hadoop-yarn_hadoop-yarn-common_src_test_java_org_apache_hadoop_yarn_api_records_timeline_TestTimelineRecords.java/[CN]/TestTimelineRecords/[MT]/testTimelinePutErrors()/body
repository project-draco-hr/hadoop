{
  TimelinePutResponse TimelinePutErrors=new TimelinePutResponse();
  TimelinePutError error1=new TimelinePutError();
  error1.setEntityId("entity id 1");
  error1.setEntityId("entity type 1");
  error1.setErrorCode(TimelinePutError.NO_START_TIME);
  TimelinePutErrors.addError(error1);
  List<TimelinePutError> response=new ArrayList<TimelinePutError>();
  response.add(error1);
  TimelinePutError error2=new TimelinePutError();
  error2.setEntityId("entity id 2");
  error2.setEntityId("entity type 2");
  error2.setErrorCode(TimelinePutError.IO_EXCEPTION);
  response.add(error2);
  TimelinePutErrors.addErrors(response);
  LOG.info("Errors in JSON:");
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(TimelinePutErrors,true));
  Assert.assertEquals(3,TimelinePutErrors.getErrors().size());
  TimelinePutError e=TimelinePutErrors.getErrors().get(0);
  Assert.assertEquals(error1.getEntityId(),e.getEntityId());
  Assert.assertEquals(error1.getEntityType(),e.getEntityType());
  Assert.assertEquals(error1.getErrorCode(),e.getErrorCode());
  e=TimelinePutErrors.getErrors().get(1);
  Assert.assertEquals(error1.getEntityId(),e.getEntityId());
  Assert.assertEquals(error1.getEntityType(),e.getEntityType());
  Assert.assertEquals(error1.getErrorCode(),e.getErrorCode());
  e=TimelinePutErrors.getErrors().get(2);
  Assert.assertEquals(error2.getEntityId(),e.getEntityId());
  Assert.assertEquals(error2.getEntityType(),e.getEntityType());
  Assert.assertEquals(error2.getErrorCode(),e.getErrorCode());
}
