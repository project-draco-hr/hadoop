{
  TestParams t=new TestParams();
  Configuration conf=new Configuration();
  JHEvenHandlerForTest realJheh=new JHEvenHandlerForTest(t.mockAppContext,0);
  JHEvenHandlerForTest jheh=spy(realJheh);
  jheh.init(conf);
  EventWriter mockWriter=null;
  try {
    jheh.start();
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new AMStartedEvent(t.appAttemptId,200,t.containerId,"nmhost",3000,4000,100)));
    JobHistoryEventHandler.MetaInfo mi=JobHistoryEventHandler.fileMap.get(t.jobId);
    Assert.assertEquals(mi.getJobIndexInfo().getSubmitTime(),100);
    Assert.assertEquals(mi.getJobIndexInfo().getJobStartTime(),200);
    Assert.assertEquals(mi.getJobSummary().getJobSubmitTime(),100);
    Assert.assertEquals(mi.getJobSummary().getJobLaunchTime(),200);
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new JobUnsuccessfulCompletionEvent(TypeConverter.fromYarn(t.jobId),0,0,0,JobStateInternal.FAILED.toString())));
    Assert.assertEquals(mi.getJobIndexInfo().getSubmitTime(),100);
    Assert.assertEquals(mi.getJobIndexInfo().getJobStartTime(),200);
    Assert.assertEquals(mi.getJobSummary().getJobSubmitTime(),100);
    Assert.assertEquals(mi.getJobSummary().getJobLaunchTime(),200);
    verify(jheh,times(1)).processDoneFiles(t.jobId);
    mockWriter=jheh.getEventWriter();
    verify(mockWriter,times(2)).write(any(HistoryEvent.class));
  }
  finally {
    jheh.stop();
  }
}
