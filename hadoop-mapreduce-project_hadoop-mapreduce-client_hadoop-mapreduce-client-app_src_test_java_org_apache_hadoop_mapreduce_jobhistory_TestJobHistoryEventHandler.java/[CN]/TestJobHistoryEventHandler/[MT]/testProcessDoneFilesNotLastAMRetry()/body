{
  TestParams t=new TestParams(false);
  Configuration conf=new Configuration();
  JHEvenHandlerForTest realJheh=new JHEvenHandlerForTest(t.mockAppContext,0);
  JHEvenHandlerForTest jheh=spy(realJheh);
  jheh.init(conf);
  EventWriter mockWriter=null;
  try {
    jheh.start();
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new AMStartedEvent(t.appAttemptId,200,t.containerId,"nmhost",3000,4000)));
    verify(jheh,times(0)).processDoneFiles(t.jobId);
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new JobUnsuccessfulCompletionEvent(TypeConverter.fromYarn(t.jobId),0,0,0,JobStateInternal.ERROR.toString())));
    verify(jheh,times(0)).processDoneFiles(t.jobId);
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new JobFinishedEvent(TypeConverter.fromYarn(t.jobId),0,0,0,0,0,new Counters(),new Counters(),new Counters())));
    verify(jheh,times(1)).processDoneFiles(t.jobId);
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new JobUnsuccessfulCompletionEvent(TypeConverter.fromYarn(t.jobId),0,0,0,JobStateInternal.FAILED.toString())));
    verify(jheh,times(2)).processDoneFiles(t.jobId);
    handleEvent(jheh,new JobHistoryEvent(t.jobId,new JobUnsuccessfulCompletionEvent(TypeConverter.fromYarn(t.jobId),0,0,0,JobStateInternal.KILLED.toString())));
    verify(jheh,times(3)).processDoneFiles(t.jobId);
    mockWriter=jheh.getEventWriter();
    verify(mockWriter,times(5)).write(any(HistoryEvent.class));
  }
  finally {
    jheh.stop();
    verify(mockWriter).close();
  }
}
