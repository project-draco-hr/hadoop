{
  AdminACLsManager oldAdminACLsManager=timelineACLsManager.setAdminACLsManager(adminACLsManager);
  remoteUser="tester";
  try {
    TimelineEntities entities=new TimelineEntities();
    TimelineEntity entity=new TimelineEntity();
    entity.setEntityId("test id 2");
    entity.setEntityType("test type 2");
    entity.setStartTime(System.currentTimeMillis());
    entities.addEntity(entity);
    WebResource r=resource();
    ClientResponse response=r.path("ws").path("v1").path("timeline").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).post(ClientResponse.class,entities);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    TimelinePutResponse putResponse=response.getEntity(TimelinePutResponse.class);
    Assert.assertNotNull(putResponse);
    Assert.assertEquals(0,putResponse.getErrors().size());
    remoteUser="other";
    response=r.path("ws").path("v1").path("timeline").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).post(ClientResponse.class,entities);
    assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    putResponse=response.getEntity(TimelinePutResponse.class);
    Assert.assertNotNull(putResponse);
    Assert.assertEquals(1,putResponse.getErrors().size());
    Assert.assertEquals(TimelinePutResponse.TimelinePutError.ACCESS_DENIED,putResponse.getErrors().get(0).getErrorCode());
  }
  finally {
    timelineACLsManager.setAdminACLsManager(oldAdminACLsManager);
    remoteUser=null;
  }
}
