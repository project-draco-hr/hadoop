{
  initCacheManipulator();
  Configuration conf=new Configuration();
  conf.setLong(DFS_BLOCK_SIZE_KEY,BLOCK_SIZE);
  if (disableScrubber) {
    conf.setInt(DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC,0);
  }
 else {
    conf.setInt(DFS_NAMENODE_LAZY_PERSIST_FILE_SCRUB_INTERVAL_SEC,LAZY_WRITE_FILE_SCRUBBER_INTERVAL_SEC);
  }
  conf.setLong(DFS_HEARTBEAT_INTERVAL_KEY,HEARTBEAT_INTERVAL_SEC);
  conf.setInt(DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY,HEARTBEAT_RECHECK_INTERVAL_MSEC);
  conf.setInt(DFS_DATANODE_LAZY_WRITER_INTERVAL_SEC,LAZY_WRITER_INTERVAL_SEC);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_SAFEMODE_MIN_DATANODES_KEY,1);
  conf.setLong(DFS_DATANODE_MAX_LOCKED_MEMORY_KEY,maxLockedMemory);
  if (useSCR) {
    conf.setBoolean(HdfsClientConfigKeys.Read.ShortCircuit.KEY,true);
    conf.set(DFS_CLIENT_CONTEXT,UUID.randomUUID().toString());
    conf.set(DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY,UserGroupInformation.getCurrentUser().getShortUserName());
    if (useLegacyBlockReaderLocal) {
      conf.setBoolean(DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL,true);
    }
 else {
      sockDir=new TemporarySocketDirectory();
      conf.set(DFS_DOMAIN_SOCKET_PATH_KEY,new File(sockDir.getDir(),this.getClass().getSimpleName() + "._PORT.sock").getAbsolutePath());
    }
  }
  Preconditions.checkState(ramDiskReplicaCapacity < 0 || ramDiskStorageLimit < 0,"Cannot specify non-default values for both ramDiskReplicaCapacity " + "and ramDiskStorageLimit");
  long[] capacities;
  if (hasTransientStorage && ramDiskReplicaCapacity >= 0) {
    ramDiskStorageLimit=((long)ramDiskReplicaCapacity * BLOCK_SIZE) + (BLOCK_SIZE - 1);
  }
  capacities=new long[]{ramDiskStorageLimit,-1};
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDatanodes).storageCapacities(capacities).storageTypes(storageTypes != null ? storageTypes : (hasTransientStorage ? new StorageType[]{RAM_DISK,DEFAULT} : null)).build();
  cluster.waitActive();
  fs=cluster.getFileSystem();
  client=fs.getClient();
  try {
    jmx=initJMX();
  }
 catch (  Exception e) {
    fail("Failed initialize JMX for testing: " + e);
  }
  LOG.info("Cluster startup complete");
}
