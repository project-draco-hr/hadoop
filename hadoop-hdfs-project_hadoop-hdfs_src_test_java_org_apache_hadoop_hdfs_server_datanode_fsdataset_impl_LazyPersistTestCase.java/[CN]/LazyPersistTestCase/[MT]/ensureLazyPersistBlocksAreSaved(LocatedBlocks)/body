{
  final String bpid=cluster.getNamesystem().getBlockPoolId();
  final Set<Long> persistedBlockIds=new HashSet<Long>();
  try (FsDatasetSpi.FsVolumeReferences volumes=cluster.getDataNodes().get(0).getFSDataset().getFsVolumeReferences()){
    while (persistedBlockIds.size() < locatedBlocks.getLocatedBlocks().size()) {
      Thread.sleep(1000);
      for (      LocatedBlock lb : locatedBlocks.getLocatedBlocks()) {
        for (        FsVolumeSpi v : volumes) {
          if (v.isTransientStorage()) {
            continue;
          }
          FsVolumeImpl volume=(FsVolumeImpl)v;
          File lazyPersistDir=volume.getBlockPoolSlice(bpid).getLazypersistDir();
          long blockId=lb.getBlock().getBlockId();
          File targetDir=DatanodeUtil.idToBlockDir(lazyPersistDir,blockId);
          File blockFile=new File(targetDir,lb.getBlock().getBlockName());
          if (blockFile.exists()) {
            persistedBlockIds.add(blockId);
          }
        }
      }
    }
  }
   assertThat(persistedBlockIds.size(),is(locatedBlocks.getLocatedBlocks().size()));
}
