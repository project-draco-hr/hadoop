{
  LOG.debug("Monitor waking up to refresh encryption zone key versions");
  HashMap<Long,String> toFetch=Maps.newHashMap();
  HashMap<Long,KeyVersion> toUpdate=Maps.newHashMap();
  readLock();
  try {
    for (    EncryptionZoneInt ezi : encryptionZones.values()) {
      toFetch.put(ezi.getINodeId(),ezi.getKeyId());
    }
  }
  finally {
    readUnlock();
  }
  LOG.trace("Found {} keys to check",toFetch.size());
  for (  Map.Entry<Long,String> entry : toFetch.entrySet()) {
    try {
      KeyVersion version=provider.getCurrentKey(entry.getValue());
      toUpdate.put(entry.getKey(),version);
    }
 catch (    IOException e) {
      LOG.warn("Error while getting the current key for {} {}",entry.getValue(),e);
    }
  }
  LOG.trace("Fetched {} key versions from KeyProvider",toUpdate.size());
  writeLock();
  try {
    for (    Map.Entry<Long,KeyVersion> entry : toUpdate.entrySet()) {
      EncryptionZoneInt ezi=encryptionZones.get(entry.getKey());
      if (ezi == null) {
        continue;
      }
      ezi.addKeyVersion(entry.getValue());
    }
  }
  finally {
    writeUnlock();
  }
}
