{
  ConcurrentMap<LocalResourceRequest,LocalizedResource> trackerResources=new ConcurrentHashMap<LocalResourceRequest,LocalizedResource>();
  LocalResourcesTracker ret=spy(new LocalResourcesTrackerImpl(user,null,trackerResources));
  for (int i=0; i < nRsrcs; ++i) {
    final LocalResourceRequest req=new LocalResourceRequest(new Path("file:///" + user + "/rsrc"+ i),timestamp + i * tsstep,LocalResourceType.FILE,LocalResourceVisibility.PUBLIC);
    final long ts=timestamp + i * tsstep;
    final Path p=new Path("file:///local/" + user + "/rsrc"+ i);
    LocalizedResource rsrc=new LocalizedResource(req,null){
      @Override public int getRefCount(){
        return 0;
      }
      @Override public long getSize(){
        return rsrcSize;
      }
      @Override public Path getLocalPath(){
        return p;
      }
      @Override public long getTimestamp(){
        return ts;
      }
      @Override public ResourceState getState(){
        return ResourceState.LOCALIZED;
      }
    }
;
    trackerResources.put(req,rsrc);
  }
  return ret;
}
