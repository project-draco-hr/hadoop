{
  Job job=Job.getInstance();
  FileOutputFormat.setOutputPath(job,outDir);
  Configuration conf=job.getConfiguration();
  conf.set(MRJobConfig.TASK_ATTEMPT_ID,attempt);
  JobContext jContext=new JobContextImpl(conf,taskID.getJobID());
  TaskAttemptContext tContext=new TaskAttemptContextImpl(conf,taskID);
  FileOutputCommitter committer=new FileOutputCommitter(outDir,tContext);
  committer.setupJob(jContext);
  committer.setupTask(tContext);
  TextOutputFormat theOutputFormat=new TextOutputFormat();
  RecordWriter theRecordWriter=theOutputFormat.getRecordWriter(tContext);
  writeOutput(theRecordWriter,tContext);
  committer.abortTask(tContext);
  File expectedFile=new File(new Path(committer.getWorkPath(),partFile).toString());
  assertFalse("task temp dir still exists",expectedFile.exists());
  committer.abortJob(jContext,JobStatus.State.FAILED);
  expectedFile=new File(new Path(outDir,FileOutputCommitter.TEMP_DIR_NAME).toString());
  assertFalse("job temp dir still exists",expectedFile.exists());
  assertEquals("Output directory not empty",0,new File(outDir.toString()).listFiles().length);
  FileUtil.fullyDelete(new File(outDir.toString()));
}
