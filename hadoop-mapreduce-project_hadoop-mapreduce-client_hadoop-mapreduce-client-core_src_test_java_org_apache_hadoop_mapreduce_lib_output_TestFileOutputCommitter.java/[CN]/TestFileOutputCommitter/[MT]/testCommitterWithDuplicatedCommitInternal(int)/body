{
  Job job=Job.getInstance();
  FileOutputFormat.setOutputPath(job,outDir);
  Configuration conf=job.getConfiguration();
  conf.set(MRJobConfig.TASK_ATTEMPT_ID,attempt);
  conf.setInt(FileOutputCommitter.FILEOUTPUTCOMMITTER_ALGORITHM_VERSION,version);
  JobContext jContext=new JobContextImpl(conf,taskID.getJobID());
  TaskAttemptContext tContext=new TaskAttemptContextImpl(conf,taskID);
  FileOutputCommitter committer=new FileOutputCommitter(outDir,tContext);
  committer.setupJob(jContext);
  committer.setupTask(tContext);
  TextOutputFormat theOutputFormat=new TextOutputFormat();
  RecordWriter theRecordWriter=theOutputFormat.getRecordWriter(tContext);
  writeOutput(theRecordWriter,tContext);
  committer.commitTask(tContext);
  committer.commitJob(jContext);
  validateContent(outDir);
  try {
    committer.commitJob(jContext);
    if (version == 1) {
      Assert.fail("Duplicate commit success: wrong behavior for version 1.");
    }
  }
 catch (  IOException e) {
    if (version == 2) {
      Assert.fail("Duplicate commit failed: wrong behavior for version 2.");
    }
  }
  FileUtil.fullyDelete(new File(outDir.toString()));
}
