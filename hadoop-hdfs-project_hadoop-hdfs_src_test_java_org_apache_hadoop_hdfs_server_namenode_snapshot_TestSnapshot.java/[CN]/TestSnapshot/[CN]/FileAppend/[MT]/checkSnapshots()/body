{
  byte[] buffer=new byte[32];
  for (  Path snapshotFile : snapshotFileLengthMap.keySet()) {
    long currentSnapshotFileLen=fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile).getLen() : -1L;
    long originalSnapshotFileLen=snapshotFileLengthMap.get(snapshotFile);
    String s=null;
    if (currentSnapshotFileLen != originalSnapshotFileLen) {
      s="FAILED: " + getClass().getSimpleName() + ": file="+ file+ ", snapshotFile"+ snapshotFile+ "\n\n currentSnapshotFileLen = "+ currentSnapshotFileLen+ "\noriginalSnapshotFileLen = "+ originalSnapshotFileLen+ "\n\nfile        : "+ fsdir.getINode(file.toString()).toDetailString()+ "\n\nsnapshotFile: "+ fsdir.getINode(snapshotFile.toString()).toDetailString();
      SnapshotTestHelper.dumpTree(s,cluster);
    }
    assertEquals(s,originalSnapshotFileLen,currentSnapshotFileLen);
    if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) {
      FSDataInputStream input=fs.open(snapshotFile);
      int readLen=input.read(currentSnapshotFileLen,buffer,0,1);
      if (readLen != -1) {
        s="FAILED: " + getClass().getSimpleName() + ": file="+ file+ ", snapshotFile"+ snapshotFile+ "\n\n currentSnapshotFileLen = "+ currentSnapshotFileLen+ "\n                readLen = "+ readLen+ "\n\nfile        : "+ fsdir.getINode(file.toString()).toDetailString()+ "\n\nsnapshotFile: "+ fsdir.getINode(snapshotFile.toString()).toDetailString();
        SnapshotTestHelper.dumpTree(s,cluster);
      }
      assertEquals(s,-1,readLen);
      input.close();
    }
  }
}
