{
  final Path dir=new Path("/dir");
  final Path file0=new Path(dir,"file0");
  final Path file1=new Path(dir,"file1");
  DFSTestUtil.createFile(hdfs,file0,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,seed);
  INodeDirectory dirNode=fsdir.getINode4Write(dir.toString()).asDirectory();
  assertFalse(dirNode.isSnapshottable());
  hdfs.allowSnapshot(dir);
  dirNode=fsdir.getINode4Write(dir.toString()).asDirectory();
  assertTrue(dirNode.isSnapshottable());
  hdfs.allowSnapshot(dir);
  dirNode=fsdir.getINode4Write(dir.toString()).asDirectory();
  assertTrue(dirNode.isSnapshottable());
  hdfs.disallowSnapshot(dir);
  dirNode=fsdir.getINode4Write(dir.toString()).asDirectory();
  assertFalse(dirNode.isSnapshottable());
  hdfs.disallowSnapshot(dir);
  dirNode=fsdir.getINode4Write(dir.toString()).asDirectory();
  assertFalse(dirNode.isSnapshottable());
  final Path root=new Path("/");
  INodeDirectory rootNode=fsdir.getINode4Write(root.toString()).asDirectory();
  assertTrue(rootNode.isSnapshottable());
  assertEquals(0,rootNode.getDirectorySnapshottableFeature().getSnapshotQuota());
  hdfs.allowSnapshot(root);
  rootNode=fsdir.getINode4Write(root.toString()).asDirectory();
  assertTrue(rootNode.isSnapshottable());
  assertEquals(DirectorySnapshottableFeature.SNAPSHOT_LIMIT,rootNode.getDirectorySnapshottableFeature().getSnapshotQuota());
  hdfs.allowSnapshot(root);
  rootNode=fsdir.getINode4Write(root.toString()).asDirectory();
  assertTrue(rootNode.isSnapshottable());
  assertEquals(DirectorySnapshottableFeature.SNAPSHOT_LIMIT,rootNode.getDirectorySnapshottableFeature().getSnapshotQuota());
  hdfs.disallowSnapshot(root);
  rootNode=fsdir.getINode4Write(root.toString()).asDirectory();
  assertTrue(rootNode.isSnapshottable());
  assertEquals(0,rootNode.getDirectorySnapshottableFeature().getSnapshotQuota());
  hdfs.disallowSnapshot(root);
  rootNode=fsdir.getINode4Write(root.toString()).asDirectory();
  assertTrue(rootNode.isSnapshottable());
  assertEquals(0,rootNode.getDirectorySnapshottableFeature().getSnapshotQuota());
}
