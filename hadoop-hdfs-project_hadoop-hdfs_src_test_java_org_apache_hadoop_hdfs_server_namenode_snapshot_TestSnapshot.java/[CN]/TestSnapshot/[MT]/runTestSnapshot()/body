{
  for (int i=0; i < SNAPSHOT_ITERATION_NUMBER; i++) {
    cluster.getNamesystem().getSnapshotManager().setAllowNestedSnapshots(true);
    TestDirectoryTree.Node[] ssNodes=createSnapshots();
    ArrayList<TestDirectoryTree.Node> excludedList=new ArrayList<TestDirectoryTree.Node>();
    TestDirectoryTree.Node[] modNodes=new TestDirectoryTree.Node[ssNodes.length + 1];
    for (int n=0; n < ssNodes.length; n++) {
      modNodes[n]=ssNodes[n];
      excludedList.add(ssNodes[n]);
    }
    modNodes[modNodes.length - 1]=dirTree.getRandomDirNode(random,excludedList);
    Modification[] mods=prepareModifications(modNodes);
    modifyCurrentDirAndCheckSnapshots(mods);
    TestDirectoryTree.Node chmodDir=dirTree.getRandomDirNode(random,null);
    Modification chmod=new FileChangePermission(chmodDir.nodePath,hdfs,genRandomPermission());
    String[] userGroup=genRandomOwner();
    TestDirectoryTree.Node chownDir=dirTree.getRandomDirNode(random,Arrays.asList(chmodDir));
    Modification chown=new FileChown(chownDir.nodePath,hdfs,userGroup[0],userGroup[1]);
    modifyCurrentDirAndCheckSnapshots(new Modification[]{chmod,chown});
    checkFSImage();
  }
}
