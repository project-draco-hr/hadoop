{
  Process pp=Runtime.getRuntime().exec("whoami");
  BufferedReader br=new BufferedReader(new InputStreamReader(pp.getInputStream()));
  String userName=br.readLine().trim();
  pp=Runtime.getRuntime().exec("id -Gn");
  br=new BufferedReader(new InputStreamReader(pp.getInputStream()));
  String line=br.readLine();
  System.out.println(userName + ":" + line);
  Set<String> groups=new LinkedHashSet<String>();
  for (  String s : line.split("[\\s]")) {
    groups.add(s);
  }
  final UserGroupInformation login=UserGroupInformation.getCurrentUser();
  assertEquals(userName,login.getShortUserName());
  String[] gi=login.getGroupNames();
  assertEquals(groups.size(),gi.length);
  for (int i=0; i < gi.length; i++) {
    assertTrue(groups.contains(gi[i]));
  }
  final UserGroupInformation fakeUser=UserGroupInformation.createRemoteUser("foo.bar");
  fakeUser.doAs(new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws IOException {
      UserGroupInformation current=UserGroupInformation.getCurrentUser();
      assertFalse(current.equals(login));
      assertEquals(current,fakeUser);
      assertEquals(0,current.getGroupNames().length);
      return null;
    }
  }
);
}
