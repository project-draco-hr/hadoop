{
  File tmpIndexFile=getTmpIndexFile(currentTaskid,isCleanup);
  BufferedOutputStream bos=null;
  DataOutputStream dos=null;
  try {
    bos=new BufferedOutputStream(SecureIOUtils.createForWrite(tmpIndexFile,0644));
    dos=new DataOutputStream(bos);
    dos.writeBytes(LogFileDetail.LOCATION + logLocation + "\n"+ LogName.STDOUT.toString()+ ":");
    dos.writeBytes(Long.toString(prevOutLength) + " ");
    dos.writeBytes(Long.toString(new File(logLocation,LogName.STDOUT.toString()).length() - prevOutLength) + "\n" + LogName.STDERR+ ":");
    dos.writeBytes(Long.toString(prevErrLength) + " ");
    dos.writeBytes(Long.toString(new File(logLocation,LogName.STDERR.toString()).length() - prevErrLength) + "\n" + LogName.SYSLOG.toString()+ ":");
    dos.writeBytes(Long.toString(prevLogLength) + " ");
    dos.writeBytes(Long.toString(new File(logLocation,LogName.SYSLOG.toString()).length() - prevLogLength) + "\n");
    dos.close();
    dos=null;
    bos.close();
    bos=null;
  }
  finally {
    IOUtils.cleanup(LOG,dos,bos);
  }
  File indexFile=getIndexFile(currentTaskid,isCleanup);
  Path indexFilePath=new Path(indexFile.getAbsolutePath());
  Path tmpIndexFilePath=new Path(tmpIndexFile.getAbsolutePath());
  if (localFS == null) {
    localFS=FileSystem.getLocal(new Configuration());
  }
  localFS.rename(tmpIndexFilePath,indexFilePath);
}
