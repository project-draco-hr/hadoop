{
  MiniDFSCluster dfsCluster=null;
  MiniMRClientCluster mrCluster=null;
  FileSystem fileSystem=null;
  try {
    Configuration conf=new Configuration();
    conf.setBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,true);
    conf.setBoolean(YarnConfiguration.DIST_SCHEDULING_ENABLED,true);
    conf.setBoolean(YarnConfiguration.NM_CONTAINER_QUEUING_ENABLED,true);
    dfsCluster=new MiniDFSCluster.Builder(conf).numDataNodes(numNodes).build();
    fileSystem=dfsCluster.getFileSystem();
    mrCluster=MiniMRClientClusterFactory.create(this.getClass(),numNodes,conf);
    createInput(fileSystem,numMappers,numLines);
    Configuration jobConf=mrCluster.getConfig();
    jobConf.set(YarnConfiguration.RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_AMRM_PROXY_ADDRESS);
    runMergeTest(new JobConf(jobConf),fileSystem,numMappers,numReducers,numLines,percent);
  }
  finally {
    if (dfsCluster != null) {
      dfsCluster.shutdown();
    }
    if (mrCluster != null) {
      mrCluster.stop();
    }
  }
}
