def isJobFeasible(self):
    comment = None
    msg = None
    if self.__jobInfo.has_key('comment'):
        comment = self.__jobInfo['comment']
    try:
        if comment:
            commentField = re.compile(self._cfg['hod']['job-feasibility-attr'])
            match = commentField.search(comment)
            if match:
                reqUsage = int(match.group(1))
                currentUsage = int(match.group(2))
                maxUsage = int(match.group(3))
                msg = ('Current Usage:%s, Requested:%s, Maximum Limit:%s ' % (currentUsage, reqUsage, maxUsage))
                if (reqUsage > maxUsage):
                    return ('Never', msg)
                if ((reqUsage + currentUsage) > maxUsage):
                    return (False, msg)
    except Exception as e:
        self._log.error(('Error in isJobFeasible : %s' % e))
        raise Exception(e)
    return (True, msg)
