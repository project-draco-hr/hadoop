{
  if (socket == null || endpoint == null || timeout < 0) {
    throw new IllegalArgumentException("Illegal argument for connect()");
  }
  SocketChannel ch=socket.getChannel();
  if (localAddr != null) {
    Class localClass=localAddr.getClass();
    Class remoteClass=endpoint.getClass();
    Preconditions.checkArgument(localClass.equals(remoteClass),"Local address %s must be of same family as remote address %s.",localAddr,endpoint);
    socket.bind(localAddr);
  }
  try {
    if (ch == null) {
      socket.connect(endpoint,timeout);
    }
 else {
      SocketIOWithTimeout.connect(ch,endpoint,timeout);
    }
  }
 catch (  SocketTimeoutException ste) {
    throw new ConnectTimeoutException(ste.getMessage());
  }
  if (socket.getLocalPort() == socket.getPort() && socket.getLocalAddress().equals(socket.getInetAddress())) {
    LOG.info("Detected a loopback TCP socket, disconnecting it");
    socket.close();
    throw new ConnectException("Localhost targeted connection resulted in a loopback. " + "No daemon is listening on the target port.");
  }
}
