{
  if (exception instanceof BindException) {
    return wrapWithMessage(exception,"Problem binding to [" + localHost + ":"+ localPort+ "] "+ exception+ ";"+ see("BindException"));
  }
 else   if (exception instanceof ConnectException) {
    return wrapWithMessage(exception,"Call From " + localHost + " to "+ destHost+ ":"+ destPort+ " failed on connection exception: "+ exception+ ";"+ see("ConnectionRefused"));
  }
 else   if (exception instanceof UnknownHostException) {
    return wrapWithMessage(exception,"Invalid host name: " + getHostDetailsAsString(destHost,destPort,localHost) + exception+ ";"+ see("UnknownHost"));
  }
 else   if (exception instanceof SocketTimeoutException) {
    return wrapWithMessage(exception,"Call From " + localHost + " to "+ destHost+ ":"+ destPort+ " failed on socket timeout exception: "+ exception+ ";"+ see("SocketTimeout"));
  }
 else   if (exception instanceof NoRouteToHostException) {
    return wrapWithMessage(exception,"No Route to Host from  " + localHost + " to "+ destHost+ ":"+ destPort+ " failed on socket timeout exception: "+ exception+ ";"+ see("NoRouteToHost"));
  }
 else   if (exception instanceof EOFException) {
    return wrapWithMessage(exception,"End of File Exception between " + getHostDetailsAsString(destHost,destPort,localHost) + ": "+ exception+ ";"+ see("EOFException"));
  }
 else {
    return (IOException)new IOException("Failed on local exception: " + exception + "; Host Details : "+ getHostDetailsAsString(destHost,destPort,localHost)).initCause(exception);
  }
}
