{
  JobConf source=new JobConf();
  JobConf target=new JobConf();
  source.setBoolean(FileOutputFormat.COMPRESS,false);
  source.set(FileOutputFormat.COMPRESS_CODEC,"MyDefaultCodec");
  source.set(FileOutputFormat.COMPRESS_TYPE,"MyDefaultType");
  source.setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,false);
  source.set(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC,"MyDefaultCodec2");
  CompressionEmulationUtil.configureCompressionEmulation(source,target);
  assertFalse(target.getBoolean(FileOutputFormat.COMPRESS,true));
  assertEquals("MyDefaultCodec",target.get(FileOutputFormat.COMPRESS_CODEC));
  assertEquals("MyDefaultType",target.get(FileOutputFormat.COMPRESS_TYPE));
  assertFalse(target.getBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,true));
  assertEquals("MyDefaultCodec2",target.get(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC));
  assertFalse(CompressionEmulationUtil.isInputCompressionEmulationEnabled(target));
  source.setBoolean(FileOutputFormat.COMPRESS,true);
  source.set(FileOutputFormat.COMPRESS_CODEC,"MyCodec");
  source.set(FileOutputFormat.COMPRESS_TYPE,"MyType");
  source.setBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,true);
  source.set(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC,"MyCodec2");
  org.apache.hadoop.mapred.FileInputFormat.setInputPaths(source,"file.gz");
  target=new JobConf();
  CompressionEmulationUtil.configureCompressionEmulation(source,target);
  assertTrue(target.getBoolean(FileOutputFormat.COMPRESS,false));
  assertEquals("MyCodec",target.get(FileOutputFormat.COMPRESS_CODEC));
  assertEquals("MyType",target.get(FileOutputFormat.COMPRESS_TYPE));
  assertTrue(target.getBoolean(MRJobConfig.MAP_OUTPUT_COMPRESS,false));
  assertEquals("MyCodec2",target.get(MRJobConfig.MAP_OUTPUT_COMPRESS_CODEC));
  assertTrue(CompressionEmulationUtil.isInputCompressionEmulationEnabled(target));
}
