{
  conf.setInt(HdfsClientConfigKeys.Retry.WINDOW_BASE_KEY,10);
  writeUnencryptedAndThenRestartEncryptedCluster();
  DFSClient client=DFSClientAdapter.getDFSClient((DistributedFileSystem)fs);
  DFSClient spyClient=Mockito.spy(client);
  Mockito.doReturn(false).when(spyClient).shouldEncryptData();
  DFSClientAdapter.setDFSClient((DistributedFileSystem)fs,spyClient);
  LogCapturer logs=GenericTestUtils.LogCapturer.captureLogs(LogFactory.getLog(DataNode.class));
  try {
    assertEquals(PLAIN_TEXT,DFSTestUtil.readFile(fs,TEST_PATH));
    if (resolverClazz != null && !resolverClazz.endsWith("TestTrustedChannelResolver")) {
      fail("Should not have been able to read without encryption enabled.");
    }
  }
 catch (  IOException ioe) {
    GenericTestUtils.assertExceptionContains("Could not obtain block:",ioe);
  }
 finally {
    logs.stopCapturing();
  }
  if (resolverClazz == null) {
    GenericTestUtils.assertMatches(logs.getOutput(),"Failed to read expected encryption handshake from client at");
  }
}
