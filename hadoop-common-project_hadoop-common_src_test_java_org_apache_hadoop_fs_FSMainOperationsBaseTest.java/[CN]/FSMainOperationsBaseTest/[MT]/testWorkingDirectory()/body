{
  Path workDir=new Path(getAbsoluteTestRootPath(fSys),new Path("test"));
  fSys.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  fSys.setWorkingDirectory(new Path("."));
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  fSys.setWorkingDirectory(new Path(".."));
  Assert.assertEquals(workDir.getParent(),fSys.getWorkingDirectory());
  workDir=new Path(getAbsoluteTestRootPath(fSys),new Path("test"));
  fSys.setWorkingDirectory(workDir);
  Assert.assertEquals(workDir,fSys.getWorkingDirectory());
  Path relativeDir=new Path("existingDir1");
  Path absoluteDir=new Path(workDir,"existingDir1");
  fSys.mkdirs(absoluteDir);
  fSys.setWorkingDirectory(relativeDir);
  Assert.assertEquals(absoluteDir,fSys.getWorkingDirectory());
  absoluteDir=getTestRootPath(fSys,"test/existingDir2");
  fSys.mkdirs(absoluteDir);
  fSys.setWorkingDirectory(absoluteDir);
  Assert.assertEquals(absoluteDir,fSys.getWorkingDirectory());
  Path absolutePath=new Path(absoluteDir,"foo");
  createFile(fSys,absolutePath);
  fSys.open(new Path("foo")).close();
  fSys.mkdirs(new Path("newDir"));
  Assert.assertTrue(isDir(fSys,new Path(absoluteDir,"newDir")));
}
