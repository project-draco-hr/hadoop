{
  boolean pmemEnabled=conf.getBoolean(YarnConfiguration.NM_PMEM_CHECK_ENABLED,YarnConfiguration.DEFAULT_NM_PMEM_CHECK_ENABLED);
  boolean vmemEnabled=conf.getBoolean(YarnConfiguration.NM_VMEM_CHECK_ENABLED,YarnConfiguration.DEFAULT_NM_VMEM_CHECK_ENABLED);
  if (pmemEnabled || vmemEnabled) {
    String msg="The default YARN physical and/or virtual memory health" + " checkers as well as the CGroups memory controller are enabled. " + "If you wish to use the Cgroups memory controller, please turn off"+ " the default physical/virtual memory checkers by setting " + YarnConfiguration.NM_PMEM_CHECK_ENABLED + " and "+ YarnConfiguration.NM_VMEM_CHECK_ENABLED+ " to false.";
    throw new ResourceHandlerException(msg);
  }
  this.cGroupsHandler.mountCGroupController(MEMORY);
  swappiness=conf.getInt(YarnConfiguration.NM_MEMORY_RESOURCE_CGROUPS_SWAPPINESS,YarnConfiguration.DEFAULT_NM_MEMORY_RESOURCE_CGROUPS_SWAPPINESS);
  if (swappiness < 0 || swappiness > 100) {
    throw new ResourceHandlerException("Illegal value '" + swappiness + "' for "+ YarnConfiguration.NM_MEMORY_RESOURCE_CGROUPS_SWAPPINESS+ ". Value must be between 0 and 100.");
  }
  float softLimitPerc=conf.getFloat(YarnConfiguration.NM_MEMORY_RESOURCE_CGROUPS_SOFT_LIMIT_PERCENTAGE,YarnConfiguration.DEFAULT_NM_MEMORY_RESOURCE_CGROUPS_SOFT_LIMIT_PERCENTAGE);
  softLimit=softLimitPerc / 100.0f;
  if (softLimitPerc < 0.0f || softLimitPerc > 100.0f) {
    throw new ResourceHandlerException("Illegal value '" + softLimitPerc + "' "+ YarnConfiguration.NM_MEMORY_RESOURCE_CGROUPS_SOFT_LIMIT_PERCENTAGE+ ". Value must be between 0 and 100.");
  }
  return null;
}
