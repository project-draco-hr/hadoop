{
  String cgroupId=container.getContainerId().toString();
  long containerSoftLimit=(long)(container.getResource().getMemorySize() * this.softLimit);
  long containerHardLimit=container.getResource().getMemorySize();
  cGroupsHandler.createCGroup(MEMORY,cgroupId);
  try {
    cGroupsHandler.updateCGroupParam(MEMORY,cgroupId,CGroupsHandler.CGROUP_PARAM_MEMORY_HARD_LIMIT_BYTES,String.valueOf(containerHardLimit) + "M");
    cGroupsHandler.updateCGroupParam(MEMORY,cgroupId,CGroupsHandler.CGROUP_PARAM_MEMORY_SOFT_LIMIT_BYTES,String.valueOf(containerSoftLimit) + "M");
    cGroupsHandler.updateCGroupParam(MEMORY,cgroupId,CGroupsHandler.CGROUP_PARAM_MEMORY_SWAPPINESS,String.valueOf(swappiness));
  }
 catch (  ResourceHandlerException re) {
    cGroupsHandler.deleteCGroup(MEMORY,cgroupId);
    LOG.warn("Could not update cgroup for container",re);
    throw re;
  }
  List<PrivilegedOperation> ret=new ArrayList<>();
  ret.add(new PrivilegedOperation(PrivilegedOperation.OperationType.ADD_PID_TO_CGROUP,PrivilegedOperation.CGROUP_ARG_PREFIX + cGroupsHandler.getPathForCGroupTasks(MEMORY,cgroupId)));
  return ret;
}
