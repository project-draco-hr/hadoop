{
  HdfsConfiguration conf=new HdfsConfiguration();
  final String NS2_NN_ADDR="ns2-nn.example.com:9820";
  final String NN1_ADDR="nn.example.com:9820";
  final String NN1_SRVC_ADDR="nn.example.com:9821";
  final String NN2_ADDR="nn2.example.com:9820";
  conf.set(DFS_NAMESERVICES,"ns1");
  conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"ns1"),NS1_NN1_ADDR);
  conf.set(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"hdfs://" + NN2_ADDR);
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"hdfs://" + NN1_ADDR);
  Collection<URI> uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",2,uris.size());
  assertTrue("Missing URI for name service ns1",uris.contains(new URI("hdfs://" + NS1_NN1_ADDR)));
  assertTrue("Missing URI for service address",uris.contains(new URI("hdfs://" + NN2_ADDR)));
  conf=new HdfsConfiguration();
  conf.set(DFS_NAMESERVICES,"ns1,ns2");
  conf.set(DFSUtil.addKeySuffixes(DFS_HA_NAMENODES_KEY_PREFIX,"ns1"),"nn1,nn2");
  conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,"ns1","nn1"),NS1_NN1_ADDR);
  conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,"ns1","nn2"),NS1_NN2_ADDR);
  conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"ns1"),NS1_NN_ADDR);
  conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,"ns2"),NS2_NN_ADDR);
  conf.set(DFS_NAMENODE_RPC_ADDRESS_KEY,"hdfs://" + NN1_ADDR);
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"hdfs://" + NN2_ADDR);
  String proxyProviderKey=HdfsClientConfigKeys.Failover.PROXY_PROVIDER_KEY_PREFIX + ".ns1";
  conf.set(proxyProviderKey,"org.apache.hadoop.hdfs.server.namenode.ha." + "IPFailoverProxyProvider");
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",3,uris.size());
  assertTrue("Missing URI for RPC address",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  assertTrue("Missing URI for name service ns2",uris.contains(new URI(HdfsConstants.HDFS_URI_SCHEME + "://" + NS1_NN_ADDR)));
  assertTrue("Missing URI for name service ns2",uris.contains(new URI(HdfsConstants.HDFS_URI_SCHEME + "://" + NS2_NN_ADDR)));
  conf.set(proxyProviderKey,"org.apache.hadoop.hdfs.server.namenode.ha." + "ConfiguredFailoverProxyProvider");
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",3,uris.size());
  assertTrue("Missing URI for name service ns1",uris.contains(new URI("hdfs://ns1")));
  assertTrue("Missing URI for name service ns2",uris.contains(new URI("hdfs://" + NS2_NN_ADDR)));
  assertTrue("Missing URI for RPC address",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"viewfs://vfs-name.example.com");
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",3,uris.size());
  assertTrue("Missing URI for name service ns1",uris.contains(new URI("hdfs://ns1")));
  assertTrue("Missing URI for name service ns2",uris.contains(new URI("hdfs://" + NS2_NN_ADDR)));
  assertTrue("Missing URI for RPC address",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"hdfs://ns1");
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",3,uris.size());
  assertTrue("Missing URI for name service ns1",uris.contains(new URI("hdfs://ns1")));
  assertTrue("Missing URI for name service ns2",uris.contains(new URI("hdfs://" + NS2_NN_ADDR)));
  assertTrue("Missing URI for RPC address",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  conf=new HdfsConfiguration();
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"hdfs://" + NN1_ADDR);
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",1,uris.size());
  assertTrue("Missing URI for RPC address (defaultFS)",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  conf.set(DFS_NAMENODE_RPC_ADDRESS_KEY,NN2_ADDR);
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",1,uris.size());
  assertTrue("Missing URI for RPC address",uris.contains(new URI("hdfs://" + NN2_ADDR)));
  conf.set(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,NN1_ADDR);
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",1,uris.size());
  assertTrue("Missing URI for service ns1",uris.contains(new URI("hdfs://" + NN1_ADDR)));
  conf=new HdfsConfiguration();
  conf.set(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY,"hdfs://" + NN1_ADDR);
  conf.set(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,NN1_SRVC_ADDR);
  uris=DFSUtil.getInternalNsRpcUris(conf);
  assertEquals("Incorrect number of URIs returned",1,uris.size());
  assertTrue("Missing URI for service address",uris.contains(new URI("hdfs://" + NN1_SRVC_ADDR)));
}
