{
  FSSTAT3Response response=new FSSTAT3Response(Nfs3Status.NFS3_OK);
  String uname=authSysCheck(authSys);
  DFSClient dfsClient=clientCache.get(uname);
  if (dfsClient == null) {
    response.setStatus(Nfs3Status.NFS3ERR_SERVERFAULT);
    return response;
  }
  FSSTAT3Request request=null;
  try {
    request=new FSSTAT3Request(xdr);
  }
 catch (  IOException e) {
    LOG.error("Invalid FSSTAT request");
    return new FSSTAT3Response(Nfs3Status.NFS3ERR_INVAL);
  }
  FileHandle handle=request.getHandle();
  if (LOG.isDebugEnabled()) {
    LOG.debug("NFS FSSTAT fileId: " + handle.getFileId());
  }
  try {
    FsStatus fsStatus=superUserClient.getDiskStatus();
    long totalBytes=fsStatus.getCapacity();
    long freeBytes=fsStatus.getRemaining();
    Nfs3FileAttributes attrs=writeManager.getFileAttr(dfsClient,handle,iug);
    if (attrs == null) {
      LOG.info("Can't get path for fileId:" + handle.getFileId());
      return new FSSTAT3Response(Nfs3Status.NFS3ERR_STALE);
    }
    long maxFsObjects=config.getLong("dfs.max.objects",0);
    if (maxFsObjects == 0) {
      maxFsObjects=Integer.MAX_VALUE;
    }
    return new FSSTAT3Response(Nfs3Status.NFS3_OK,attrs,totalBytes,freeBytes,freeBytes,maxFsObjects,maxFsObjects,maxFsObjects,0);
  }
 catch (  IOException e) {
    LOG.warn("Exception ",e);
    return new FSSTAT3Response(Nfs3Status.NFS3ERR_IO);
  }
}
