{
  RENAME3Response response=new RENAME3Response(Nfs3Status.NFS3_OK);
  String uname=authSysCheck(authSys);
  DFSClient dfsClient=clientCache.get(uname);
  if (dfsClient == null) {
    response.setStatus(Nfs3Status.NFS3ERR_SERVERFAULT);
    return response;
  }
  RENAME3Request request=null;
  try {
    request=new RENAME3Request(xdr);
  }
 catch (  IOException e) {
    LOG.error("Invalid RENAME request");
    return new RENAME3Response(Nfs3Status.NFS3ERR_INVAL);
  }
  FileHandle fromHandle=request.getFromDirHandle();
  String fromName=request.getFromName();
  FileHandle toHandle=request.getToDirHandle();
  String toName=request.getToName();
  if (LOG.isDebugEnabled()) {
    LOG.debug("NFS RENAME from: " + fromHandle.getFileId() + "/"+ fromName+ " to: "+ toHandle.getFileId()+ "/"+ toName);
  }
  String fromDirFileIdPath=Nfs3Utils.getFileIdPath(fromHandle);
  String toDirFileIdPath=Nfs3Utils.getFileIdPath(toHandle);
  WccAttr fromPreOpAttr=null;
  WccAttr toPreOpAttr=null;
  WccData fromDirWcc=null;
  WccData toDirWcc=null;
  try {
    fromPreOpAttr=Nfs3Utils.getWccAttr(dfsClient,fromDirFileIdPath);
    if (fromPreOpAttr == null) {
      LOG.info("Can't get path for fromHandle fileId:" + fromHandle.getFileId());
      return new RENAME3Response(Nfs3Status.NFS3ERR_STALE);
    }
    toPreOpAttr=Nfs3Utils.getWccAttr(dfsClient,toDirFileIdPath);
    if (toPreOpAttr == null) {
      LOG.info("Can't get path for toHandle fileId:" + toHandle.getFileId());
      return new RENAME3Response(Nfs3Status.NFS3ERR_STALE);
    }
    String src=fromDirFileIdPath + "/" + fromName;
    String dst=toDirFileIdPath + "/" + toName;
    dfsClient.rename(src,dst,Options.Rename.NONE);
    fromDirWcc=Nfs3Utils.createWccData(fromPreOpAttr,dfsClient,fromDirFileIdPath,iug);
    toDirWcc=Nfs3Utils.createWccData(toPreOpAttr,dfsClient,toDirFileIdPath,iug);
    return new RENAME3Response(Nfs3Status.NFS3_OK,fromDirWcc,toDirWcc);
  }
 catch (  IOException e) {
    LOG.warn("Exception ",e);
    try {
      fromDirWcc=Nfs3Utils.createWccData(fromPreOpAttr,dfsClient,fromDirFileIdPath,iug);
      toDirWcc=Nfs3Utils.createWccData(toPreOpAttr,dfsClient,toDirFileIdPath,iug);
    }
 catch (    IOException e1) {
      LOG.info("Can't get postOpDirAttr for " + fromDirFileIdPath + " or"+ toDirFileIdPath);
    }
    if (e instanceof AccessControlException) {
      return new RENAME3Response(Nfs3Status.NFS3ERR_PERM,fromDirWcc,toDirWcc);
    }
 else {
      return new RENAME3Response(Nfs3Status.NFS3ERR_IO,fromDirWcc,toDirWcc);
    }
  }
}
