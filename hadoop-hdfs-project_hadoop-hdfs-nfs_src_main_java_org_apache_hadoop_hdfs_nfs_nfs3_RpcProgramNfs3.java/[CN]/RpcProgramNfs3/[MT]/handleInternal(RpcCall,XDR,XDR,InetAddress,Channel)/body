{
  final NFSPROC3 nfsproc3=NFSPROC3.fromValue(rpcCall.getProcedure());
  int xid=rpcCall.getXid();
  RpcAuthSys authSys=null;
  if (nfsproc3 != NFSPROC3.NULL) {
    if (rpcCall.getCredential().getFlavor() != AuthFlavor.AUTH_SYS) {
      LOG.info("Wrong RPC AUTH flavor, " + rpcCall.getCredential().getFlavor() + " is not AUTH_SYS.");
      XDR reply=new XDR();
      reply=RpcDeniedReply.voidReply(reply,xid,RpcReply.ReplyState.MSG_ACCEPTED,RpcDeniedReply.RejectState.AUTH_ERROR);
      return reply;
    }
    authSys=RpcAuthSys.from(rpcCall.getCredential().getBody());
  }
  NFS3Response response=null;
  if (nfsproc3 == NFSPROC3.NULL) {
    response=nullProcedure();
  }
 else   if (nfsproc3 == NFSPROC3.GETATTR) {
    response=getattr(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.SETATTR) {
    response=setattr(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.LOOKUP) {
    response=lookup(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.ACCESS) {
    response=access(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.READLINK) {
    response=readlink(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.READ) {
    response=read(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.WRITE) {
    response=write(xdr,channel,xid,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.CREATE) {
    response=create(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.MKDIR) {
    response=mkdir(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.SYMLINK) {
    response=symlink(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.MKNOD) {
    response=mknod(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.REMOVE) {
    response=remove(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.RMDIR) {
    response=rmdir(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.RENAME) {
    response=rename(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.LINK) {
    response=link(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.READDIR) {
    response=readdir(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.READDIRPLUS) {
    response=readdirplus(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.FSSTAT) {
    response=fsstat(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.FSINFO) {
    response=fsinfo(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.PATHCONF) {
    response=pathconf(xdr,authSys);
  }
 else   if (nfsproc3 == NFSPROC3.COMMIT) {
    response=commit(xdr,authSys);
  }
 else {
    RpcAcceptedReply.voidReply(out,xid,RpcAcceptedReply.AcceptState.PROC_UNAVAIL);
  }
  if (response != null) {
    out=response.send(out,xid);
  }
  return out;
}
