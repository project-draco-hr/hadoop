{
  Map<K,Object> results=new HashMap<K,Object>();
  if (result != null) {
    Map<byte[],byte[]> columns=result.getFamilyMap(columnFamilyBytes);
    for (    Entry<byte[],byte[]> entry : columns.entrySet()) {
      byte[] columnKey=entry.getKey();
      if (columnKey != null && columnKey.length > 0) {
        K converterColumnKey=null;
        if (columnPrefixBytes == null) {
          try {
            converterColumnKey=keyConverter.decode(columnKey);
          }
 catch (          IllegalArgumentException iae) {
            LOG.error("Illegal column found, skipping this column.",iae);
            continue;
          }
        }
 else {
          byte[][] columnNameParts=Separator.QUALIFIERS.split(columnKey,2);
          if (columnNameParts.length > 0) {
            byte[] actualColumnPrefixBytes=columnNameParts[0];
            if (Bytes.equals(columnPrefixBytes,actualColumnPrefixBytes) && columnNameParts.length == 2) {
              try {
                converterColumnKey=keyConverter.decode(columnNameParts[1]);
              }
 catch (              IllegalArgumentException iae) {
                LOG.error("Illegal column found, skipping this column.",iae);
                continue;
              }
            }
          }
        }
        if (converterColumnKey != null) {
          Object value=converter.decodeValue(entry.getValue());
          results.put(converterColumnKey,value);
        }
      }
    }
  }
  return results;
}
