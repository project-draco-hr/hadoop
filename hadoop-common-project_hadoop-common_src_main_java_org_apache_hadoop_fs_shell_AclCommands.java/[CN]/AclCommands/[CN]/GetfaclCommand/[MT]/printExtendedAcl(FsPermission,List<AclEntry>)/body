{
  out.println(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(AclEntryType.USER).setPermission(perm.getUserAction()).build());
  boolean hasAccessAcl=false;
  Iterator<AclEntry> entryIter=entries.iterator();
  AclEntry curEntry=null;
  while (entryIter.hasNext()) {
    curEntry=entryIter.next();
    if (curEntry.getScope() == AclEntryScope.DEFAULT) {
      break;
    }
    hasAccessAcl=true;
    printExtendedAclEntry(curEntry,perm.getGroupAction());
  }
  out.println(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(hasAccessAcl ? AclEntryType.MASK : AclEntryType.GROUP).setPermission(perm.getGroupAction()).build());
  out.println(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(AclEntryType.OTHER).setPermission(perm.getOtherAction()).build());
  if (curEntry != null && curEntry.getScope() == AclEntryScope.DEFAULT) {
    out.println(curEntry);
    FsAction maskPerm=entries.get(entries.size() - 2).getPermission();
    while (entryIter.hasNext()) {
      printExtendedAclEntry(entryIter.next(),maskPerm);
    }
  }
}
