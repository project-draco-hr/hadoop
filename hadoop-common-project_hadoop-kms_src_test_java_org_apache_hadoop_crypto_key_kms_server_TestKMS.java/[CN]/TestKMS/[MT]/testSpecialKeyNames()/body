{
  final String specialKey="key %^[\n{]}|\"<>\\";
  Configuration conf=new Configuration();
  conf.set("hadoop.security.authentication","kerberos");
  UserGroupInformation.setConfiguration(conf);
  File confDir=getTestDir();
  conf=createBaseKMSConf(confDir);
  conf.set(KeyAuthorizationKeyProvider.KEY_ACL + specialKey + ".ALL","*");
  writeConf(confDir,conf);
  runServer(null,null,confDir,new KMSCallable<Void>(){
    @Override public Void call() throws Exception {
      Configuration conf=new Configuration();
      URI uri=createKMSUri(getKMSUrl());
      KeyProvider kp=createProvider(uri,conf);
      Assert.assertTrue(kp.getKeys().isEmpty());
      Assert.assertEquals(0,kp.getKeysMetadata().length);
      KeyProvider.Options options=new KeyProvider.Options(conf);
      options.setCipher("AES/CTR/NoPadding");
      options.setBitLength(128);
      options.setDescription("l1");
      LOG.info("Creating key with name '{}'",specialKey);
      KeyProvider.KeyVersion kv0=kp.createKey(specialKey,options);
      Assert.assertNotNull(kv0);
      Assert.assertEquals(specialKey,kv0.getName());
      Assert.assertNotNull(kv0.getVersionName());
      Assert.assertNotNull(kv0.getMaterial());
      return null;
    }
  }
);
}
