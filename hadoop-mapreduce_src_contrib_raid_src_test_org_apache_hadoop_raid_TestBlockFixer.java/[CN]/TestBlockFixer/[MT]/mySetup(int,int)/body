{
  new File(TEST_DIR).mkdirs();
  conf=new Configuration();
  conf.set("raid.config.file",CONFIG_FILE);
  conf.setBoolean("raid.config.reload",true);
  conf.setLong("raid.config.reload.interval",RELOAD_INTERVAL);
  conf.setLong("raid.policy.rescan.interval",5000);
  conf.set("fs.shell.delete.classname","org.apache.hadoop.hdfs.DFSClient");
  conf.set("raid.classname","org.apache.hadoop.raid.LocalRaidNode");
  conf.set("raid.server.address","localhost:0");
  conf.setInt("hdfs.raid.stripeLength",stripeLength);
  conf.set("hdfs.raid.locations","/destraid");
  conf.setBoolean("dfs.permissions",false);
  dfs=new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATANODES).build();
  dfs.waitActive();
  fileSys=dfs.getFileSystem();
  namenode=fileSys.getUri().toString();
  FileSystem.setDefaultUri(conf,namenode);
  mr=new MiniMRCluster(4,namenode,3);
  jobTrackerName="localhost:" + mr.getJobTrackerPort();
  hftp="hftp://localhost.localdomain:" + dfs.getNameNodePort();
  FileSystem.setDefaultUri(conf,namenode);
  conf.set("mapred.job.tracker",jobTrackerName);
  FileWriter fileWriter=new FileWriter(CONFIG_FILE);
  fileWriter.write("<?xml version=\"1.0\"?>\n");
  String str="<configuration> " + "<srcPath prefix=\"/user/dhruba/raidtest\"> " + "<policy name = \"RaidTest1\"> "+ "<erasureCode>xor</erasureCode> "+ "<destPath> /destraid</destPath> "+ "<property> "+ "<name>targetReplication</name> "+ "<value>1</value> "+ "<description>after RAIDing, decrease the replication factor of a file to this value."+ "</description> "+ "</property> "+ "<property> "+ "<name>metaReplication</name> "+ "<value>1</value> "+ "<description> replication factor of parity file"+ "</description> "+ "</property> "+ "<property> "+ "<name>modTimePeriod</name> "+ "<value>2000</value> "+ "<description> time (milliseconds) after a file is modified to make it "+ "a candidate for RAIDing "+ "</description> "+ "</property> ";
  if (timeBeforeHar >= 0) {
    str+="<property> " + "<name>time_before_har</name> " + "<value>" + timeBeforeHar + "</value> "+ "<description> amount of time waited before har'ing parity files"+ "</description> "+ "</property> ";
  }
  str+="</policy>" + "</srcPath>" + "</configuration>";
  fileWriter.write(str);
  fileWriter.close();
}
