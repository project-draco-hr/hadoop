{
  INodeSection s=INodeSection.parseDelimitedFrom(in);
  for (int i=0; i < s.getNumInodes(); ++i) {
    INodeSection.INode p=INodeSection.INode.parseDelimitedFrom(in);
    if (p.getType() == INodeSection.INode.Type.FILE) {
      ++totalFiles;
      INodeSection.INodeFile f=p.getFile();
      totalBlocks+=f.getBlocksCount();
      long fileSize=0;
      for (      BlockProto b : f.getBlocksList()) {
        fileSize+=b.getNumBytes();
      }
      maxFileSize=Math.max(fileSize,maxFileSize);
      totalSpace+=fileSize * f.getReplication();
      int bucket=fileSize > maxSize ? distribution.length - 1 : (int)Math.ceil((double)fileSize / steps);
      ++distribution[bucket];
    }
 else     if (p.getType() == INodeSection.INode.Type.DIRECTORY) {
      ++totalDirectories;
    }
    if (i % (1 << 20) == 0) {
      out.println("Processed " + i + " inodes.");
    }
  }
}
