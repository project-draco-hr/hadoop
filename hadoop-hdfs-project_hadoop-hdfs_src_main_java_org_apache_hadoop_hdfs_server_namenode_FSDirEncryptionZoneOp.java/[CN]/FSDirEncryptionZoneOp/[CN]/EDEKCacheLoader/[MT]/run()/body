{
  NameNode.LOG.info("Warming up {} EDEKs... (initialDelay={}, " + "retryInterval={})",keyNames.length,initialDelay,retryInterval);
  try {
    Thread.sleep(initialDelay);
  }
 catch (  InterruptedException ie) {
    NameNode.LOG.info("EDEKCacheLoader interrupted before warming up.");
    return;
  }
  final int logCoolDown=10000;
  int sinceLastLog=logCoolDown;
  boolean success=false;
  IOException lastSeenIOE=null;
  long warmUpEDEKStartTime=monotonicNow();
  while (true) {
    try {
      kp.warmUpEncryptedKeys(keyNames);
      NameNode.LOG.info("Successfully warmed up {} EDEKs.",keyNames.length);
      success=true;
      break;
    }
 catch (    IOException ioe) {
      lastSeenIOE=ioe;
      if (sinceLastLog >= logCoolDown) {
        NameNode.LOG.info("Failed to warm up EDEKs.",ioe);
        sinceLastLog=0;
      }
 else {
        NameNode.LOG.debug("Failed to warm up EDEKs.",ioe);
      }
    }
catch (    Exception e) {
      NameNode.LOG.error("Cannot warm up EDEKs.",e);
      throw e;
    }
    try {
      Thread.sleep(retryInterval);
    }
 catch (    InterruptedException ie) {
      NameNode.LOG.info("EDEKCacheLoader interrupted during retry.");
      break;
    }
    sinceLastLog+=retryInterval;
  }
  long warmUpEDEKTime=monotonicNow() - warmUpEDEKStartTime;
  NameNode.getNameNodeMetrics().addWarmUpEDEKTime(warmUpEDEKTime);
  if (!success) {
    NameNode.LOG.warn("Unable to warm up EDEKs.");
    if (lastSeenIOE != null) {
      NameNode.LOG.warn("Last seen exception:",lastSeenIOE);
    }
  }
}
