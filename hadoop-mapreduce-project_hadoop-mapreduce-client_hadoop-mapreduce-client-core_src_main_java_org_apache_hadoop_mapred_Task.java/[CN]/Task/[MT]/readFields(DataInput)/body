{
  jobFile=StringInterner.weakIntern(Text.readString(in));
  taskId=TaskAttemptID.read(in);
  partition=in.readInt();
  numSlotsRequired=in.readInt();
  taskStatus.readFields(in);
  skipRanges.readFields(in);
  currentRecIndexIterator=skipRanges.skipRangeIterator();
  currentRecStartIndex=currentRecIndexIterator.next();
  skipping=in.readBoolean();
  jobCleanup=in.readBoolean();
  if (jobCleanup) {
    jobRunStateForCleanup=WritableUtils.readEnum(in,JobStatus.State.class);
  }
  jobSetup=in.readBoolean();
  writeSkipRecs=in.readBoolean();
  taskCleanup=in.readBoolean();
  if (taskCleanup) {
    setPhase(TaskStatus.Phase.CLEANUP);
  }
  user=StringInterner.weakIntern(Text.readString(in));
  int len=in.readInt();
  encryptedSpillKey=new byte[len];
  extraData.readFields(in);
  in.readFully(encryptedSpillKey);
}
