{
  final int MAX_RETRIES=3;
  int remainingRetries=MAX_RETRIES;
  boolean sendProgress=resetProgressFlag();
  while (!taskDone.get()) {
synchronized (lock) {
      done=false;
    }
    try {
      boolean taskFound=true;
synchronized (lock) {
        if (taskDone.get()) {
          break;
        }
        lock.wait(PROGRESS_INTERVAL);
      }
      if (taskDone.get()) {
        break;
      }
      if (sendProgress) {
        updateCounters();
        taskStatus.statusUpdate(taskProgress.get(),taskProgress.toString(),counters);
        taskFound=umbilical.statusUpdate(taskId,taskStatus);
        taskStatus.clearStatus();
      }
 else {
        taskFound=umbilical.ping(taskId);
      }
      if (!taskFound) {
        LOG.warn("Parent died.  Exiting " + taskId);
        resetDoneFlag();
        System.exit(66);
      }
      sendProgress=resetProgressFlag();
      remainingRetries=MAX_RETRIES;
    }
 catch (    Throwable t) {
      LOG.info("Communication exception: " + StringUtils.stringifyException(t));
      remainingRetries-=1;
      if (remainingRetries == 0) {
        ReflectionUtils.logThreadInfo(LOG,"Communication exception",0);
        LOG.warn("Last retry, killing " + taskId);
        resetDoneFlag();
        System.exit(65);
      }
    }
  }
  resetDoneFlag();
}
