{
  final int DATANODE_NUM=2;
  final int fileLen=6;
  Configuration conf=new HdfsConfiguration();
  final int timeout=2000;
  conf.setInt(DFSConfigKeys.DFS_CLIENT_SOCKET_TIMEOUT_KEY,timeout);
  final Path p=new Path("/pipelineHeartbeat/foo");
  System.out.println("p=" + p);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(DATANODE_NUM).build();
  try {
    DistributedFileSystem fs=(DistributedFileSystem)cluster.getFileSystem();
    byte[] fileContents=AppendTestUtil.initBuffer(fileLen);
    FSDataOutputStream stm=AppendTestUtil.createFile(fs,p,DATANODE_NUM);
    stm.write(fileContents,0,1);
    Thread.sleep(timeout);
    stm.hflush();
    System.out.println("Wrote 1 byte and hflush " + p);
    Thread.sleep(timeout);
    stm.write(fileContents,1,1);
    stm.hflush();
    stm.write(fileContents,2,1);
    Thread.sleep(timeout);
    stm.hflush();
    stm.write(fileContents,3,1);
    Thread.sleep(timeout);
    stm.write(fileContents,4,1);
    stm.hflush();
    stm.write(fileContents,5,1);
    Thread.sleep(timeout);
    stm.close();
    AppendTestUtil.checkFullFile(fs,p,fileLen,fileContents,"Failed to slowly write to a file");
  }
  finally {
    cluster.shutdown();
  }
}
