{
  manageOsCache=conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,DEFAULT_SHUFFLE_MANAGE_OS_CACHE);
  readaheadLength=conf.getInt(SHUFFLE_READAHEAD_BYTES,DEFAULT_SHUFFLE_READAHEAD_BYTES);
  maxShuffleConnections=conf.getInt(MAX_SHUFFLE_CONNECTIONS,DEFAULT_MAX_SHUFFLE_CONNECTIONS);
  int maxShuffleThreads=conf.getInt(MAX_SHUFFLE_THREADS,DEFAULT_MAX_SHUFFLE_THREADS);
  if (maxShuffleThreads == 0) {
    maxShuffleThreads=2 * Runtime.getRuntime().availableProcessors();
  }
  shuffleBufferSize=conf.getInt(SHUFFLE_BUFFER_SIZE,DEFAULT_SHUFFLE_BUFFER_SIZE);
  shuffleTransferToAllowed=conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,(Shell.WINDOWS) ? WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED : DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);
  maxSessionOpenFiles=conf.getInt(SHUFFLE_MAX_SESSION_OPEN_FILES,DEFAULT_SHUFFLE_MAX_SESSION_OPEN_FILES);
  ThreadFactory bossFactory=new ThreadFactoryBuilder().setNameFormat("ShuffleHandler Netty Boss #%d").build();
  ThreadFactory workerFactory=new ThreadFactoryBuilder().setNameFormat("ShuffleHandler Netty Worker #%d").build();
  selector=new NioServerSocketChannelFactory(HadoopExecutors.newCachedThreadPool(bossFactory),HadoopExecutors.newCachedThreadPool(workerFactory),maxShuffleThreads);
  super.serviceInit(new Configuration(conf));
}
