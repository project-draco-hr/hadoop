{
  startDFSCluster(1,1);
  final short replFactor=1;
  Path testFile=new Path("/test");
  createFile(testFile,10,replFactor);
  DataNode dn=cluster.getDataNodes().get(0);
  Collection<String> oldDirs=getDataDirs(dn);
  String newDirs=oldDirs.iterator().next();
  dn.reconfigurePropertyImpl(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY,newDirs);
  assertFileLocksReleased(new ArrayList<String>(oldDirs).subList(1,oldDirs.size()));
  dn.scheduleAllBlockReport(0);
  try {
    DFSTestUtil.readFile(cluster.getFileSystem(),testFile);
    fail("Expect to throw BlockMissingException.");
  }
 catch (  BlockMissingException e) {
    GenericTestUtils.assertExceptionContains("Could not obtain block",e);
  }
  Path newFile=new Path("/newFile");
  createFile(newFile,6);
  String bpid=cluster.getNamesystem().getBlockPoolId();
  List<Map<DatanodeStorage,BlockListAsLongs>> blockReports=cluster.getAllBlockReports(bpid);
  assertEquals((int)replFactor,blockReports.size());
  BlockListAsLongs blocksForVolume1=blockReports.get(0).values().iterator().next();
  assertEquals(10 / 2 + 6,blocksForVolume1.getNumberOfBlocks());
}
