{
  if (wait) {
    waitForState(RMAppAttemptState.LAUNCHED);
  }
  responseId=0;
  final RegisterApplicationMasterRequest req=Records.newRecord(RegisterApplicationMasterRequest.class);
  req.setHost("");
  req.setRpcPort(1);
  req.setTrackingUrl("");
  UserGroupInformation ugi=UserGroupInformation.createRemoteUser(attemptId.toString());
  Token<AMRMTokenIdentifier> token=context.getRMApps().get(attemptId.getApplicationId()).getRMAppAttempt(attemptId).getAMRMToken();
  ugi.addTokenIdentifier(token.decodeIdentifier());
  try {
    return ugi.doAs(new PrivilegedExceptionAction<RegisterApplicationMasterResponse>(){
      @Override public RegisterApplicationMasterResponse run() throws Exception {
        return amRMProtocol.registerApplicationMaster(req);
      }
    }
);
  }
 catch (  UndeclaredThrowableException e) {
    throw (Exception)e.getCause();
  }
}
