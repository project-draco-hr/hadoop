{
  final AllocateRequest req=AllocateRequest.newInstance(attemptId,++responseId,0F,resourceRequest,releases,null);
  UserGroupInformation ugi=UserGroupInformation.createRemoteUser(attemptId.toString());
  Token<AMRMTokenIdentifier> token=context.getRMApps().get(attemptId.getApplicationId()).getRMAppAttempt(attemptId).getAMRMToken();
  ugi.addTokenIdentifier(token.decodeIdentifier());
  try {
    return ugi.doAs(new PrivilegedExceptionAction<AllocateResponse>(){
      @Override public AllocateResponse run() throws Exception {
        return amRMProtocol.allocate(req);
      }
    }
);
  }
 catch (  UndeclaredThrowableException e) {
    throw (Exception)e.getCause();
  }
}
