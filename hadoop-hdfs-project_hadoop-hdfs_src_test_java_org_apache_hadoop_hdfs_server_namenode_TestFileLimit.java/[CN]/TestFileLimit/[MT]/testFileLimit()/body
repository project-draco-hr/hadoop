{
  Configuration conf=new HdfsConfiguration();
  int maxObjects=5;
  conf.setLong(DFSConfigKeys.DFS_NAMENODE_MAX_OBJECTS_KEY,maxObjects);
  conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY,1000L);
  conf.setInt(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,1);
  int currentNodes=0;
  if (simulatedStorage) {
    conf.setBoolean(SimulatedFSDataset.CONFIG_PROPERTY_SIMULATED,true);
  }
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  FileSystem fs=cluster.getFileSystem();
  FSNamesystem namesys=cluster.getNamesystem();
  try {
    Path path=new Path("/");
    assertTrue("/ should be a directory",fs.getFileStatus(path).isDirectory());
    currentNodes=1;
    for (int i=0; i < maxObjects / 2; i++) {
      Path file=new Path("/filestatus" + i);
      createFile(fs,file);
      System.out.println("Created file " + file);
      currentNodes+=2;
    }
    boolean hitException=false;
    try {
      Path file=new Path("/filestatus");
      createFile(fs,file);
      System.out.println("Created file " + file);
    }
 catch (    IOException e) {
      hitException=true;
    }
    assertTrue("Was able to exceed file limit",hitException);
    Path file0=new Path("/filestatus0");
    fs.delete(file0,true);
    System.out.println("Deleted file " + file0);
    currentNodes-=2;
    waitForLimit(namesys,currentNodes);
    createFile(fs,file0);
    System.out.println("Created file " + file0 + " again.");
    currentNodes+=2;
    file0=new Path("/filestatus0");
    fs.delete(file0,true);
    System.out.println("Deleted file " + file0 + " again.");
    currentNodes-=2;
    waitForLimit(namesys,currentNodes);
    Path dir=new Path("/dir0/dir1");
    fs.mkdirs(dir);
    System.out.println("Created directories " + dir);
    currentNodes+=2;
    waitForLimit(namesys,currentNodes);
    hitException=false;
    try {
      fs.mkdirs(new Path("dir.fail"));
      System.out.println("Created directory should not have succeeded.");
    }
 catch (    IOException e) {
      hitException=true;
    }
    assertTrue("Was able to exceed dir limit",hitException);
  }
  finally {
    fs.close();
    cluster.shutdown();
  }
}
