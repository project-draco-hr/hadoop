{
  long numTransactions=0, txId=fromTxId;
  final PriorityQueue<EditLogInputStream> allStreams=new PriorityQueue<EditLogInputStream>(64,JournalSet.EDIT_LOG_INPUT_STREAM_COMPARATOR);
  jm.selectInputStreams(allStreams,fromTxId,inProgressOk,true);
  EditLogInputStream elis=null;
  try {
    while ((elis=allStreams.poll()) != null) {
      try {
        elis.skipUntil(txId);
        while (true) {
          FSEditLogOp op=elis.readOp();
          if (op == null) {
            break;
          }
          if (abortOnGap && (op.getTransactionId() != txId)) {
            LOG.info("getNumberOfTransactions: detected gap at txId " + fromTxId);
            return numTransactions;
          }
          txId=op.getTransactionId() + 1;
          numTransactions++;
        }
      }
  finally {
        IOUtils.cleanup(LOG,elis);
      }
    }
  }
  finally {
    IOUtils.cleanup(LOG,allStreams.toArray(new EditLogInputStream[0]));
  }
  return numTransactions;
}
