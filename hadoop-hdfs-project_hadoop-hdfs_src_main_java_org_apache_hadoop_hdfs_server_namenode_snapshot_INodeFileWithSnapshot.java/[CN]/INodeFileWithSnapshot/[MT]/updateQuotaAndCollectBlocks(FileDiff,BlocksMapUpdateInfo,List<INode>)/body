{
  long oldDiskspace=this.diskspaceConsumed();
  if (removed.snapshotINode != null) {
    short replication=removed.snapshotINode.getFileReplication();
    short currentRepl=getBlockReplication();
    if (currentRepl == 0) {
      oldDiskspace=computeFileSize(true,true) * replication;
    }
 else     if (replication > currentRepl) {
      oldDiskspace=oldDiskspace / getBlockReplication() * replication;
    }
  }
  this.collectBlocksAndClear(collectedBlocks,removedINodes);
  long dsDelta=oldDiskspace - diskspaceConsumed();
  return Quota.Counts.newInstance(0,dsDelta);
}
