{
  try {
    while (true) {
      MapHost host=penalties.take().host;
synchronized (ShuffleScheduler.this) {
        if (host.markAvailable() == MapHost.State.PENDING) {
          pendingHosts.add(host);
          ShuffleScheduler.this.notifyAll();
        }
      }
    }
  }
 catch (  InterruptedException ie) {
    return;
  }
catch (  Throwable t) {
    reporter.reportException(t);
  }
}
