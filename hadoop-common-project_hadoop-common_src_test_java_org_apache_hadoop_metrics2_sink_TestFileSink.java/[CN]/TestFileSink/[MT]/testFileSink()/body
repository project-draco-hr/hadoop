{
  outFile=getTestTempFile("test-file-sink-",".out");
  final String outPath=outFile.getAbsolutePath();
  new ConfigBuilder().add("*.period",10000).add("test.sink.mysink0.class",FileSink.class.getName()).add("test.sink.mysink0.filename",outPath).add("test.sink.mysink0.context","test1").save(TestMetricsConfig.getTestFilename("hadoop-metrics2-test"));
  MetricsSystemImpl ms=new MetricsSystemImpl("test");
  ms.start();
  final MyMetrics1 mm1=new MyMetrics1().registerWith(ms);
  new MyMetrics2().registerWith(ms);
  mm1.testMetric1.incr();
  mm1.testMetric2.incr(2);
  ms.publishMetricsNow();
  ms.stop();
  ms.shutdown();
  InputStream is=new FileInputStream(outFile);
  ByteArrayOutputStream baos=new ByteArrayOutputStream((int)outFile.length());
  IOUtils.copyBytes(is,baos,1024,true);
  String outFileContent=new String(baos.toByteArray(),"UTF-8");
  Pattern expectedContentPattern=Pattern.compile("^\\d+\\s+test1.testRecord1:\\s+Context=test1,\\s+" + "(testTag1=testTagValue1,\\s+testTag2=testTagValue2|testTag2=testTagValue2,\\s+testTag1=testTagValue1)," + "\\s+Hostname=.*,\\s+(testMetric1=1,\\s+testMetric2=2|testMetric2=2,\\s+testMetric1=1)"+ "$[\\n\\r]*^\\d+\\s+test1.testRecord2:\\s+Context=test1,"+ "\\s+testTag22=testTagValue22,\\s+Hostname=.*$[\\n\\r]*",Pattern.MULTILINE);
  assertTrue(expectedContentPattern.matcher(outFileContent).matches());
}
