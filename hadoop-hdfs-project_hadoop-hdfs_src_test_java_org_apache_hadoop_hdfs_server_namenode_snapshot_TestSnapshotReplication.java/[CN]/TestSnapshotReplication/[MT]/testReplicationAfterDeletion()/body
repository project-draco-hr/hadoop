{
  DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,seed);
  Map<Path,Short> snapshotRepMap=new HashMap<Path,Short>();
  for (int i=1; i <= 3; i++) {
    Path root=SnapshotTestHelper.createSnapshot(hdfs,sub1,"s" + i);
    Path ssFile=new Path(root,file1.getName());
    snapshotRepMap.put(ssFile,REPLICATION);
  }
  checkFileReplication(file1,REPLICATION,REPLICATION);
  checkSnapshotFileReplication(file1,snapshotRepMap,REPLICATION);
  hdfs.delete(file1,true);
  for (  Path ss : snapshotRepMap.keySet()) {
    final INodeFile ssInode=getINodeFile(ss);
    assertEquals(REPLICATION,ssInode.getBlockReplication());
    assertEquals(snapshotRepMap.get(ss).shortValue(),ssInode.getFileReplication());
  }
}
