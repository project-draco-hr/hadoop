{
  setupCluster();
  try {
    String[] racks={"/rack2","/rack2","/rack2","/rack2","/rack2","/rack2"};
    String[] hosts={"host2.rack2.com","host3.rack2.com","host4.rack2.com","host5.rack2.com","host6.rack2.com","host7.rack2.com"};
    cluster.startDataNodes(conf,6,true,null,racks,hosts,null);
    String harParity=raidrsHarTempPrefix + "/dir/file";
    int numBlocks=11;
    DFSTestUtil.createFile(fs,new Path(harParity),numBlocks,(short)1,0L);
    DFSTestUtil.waitReplication(fs,new Path(harParity),(short)1);
    FileStatus stat=fs.getFileStatus(new Path(harParity));
    BlockLocation[] loc=fs.getFileBlockLocations(stat,0,stat.getLen());
    int rsParityLength=RaidNode.rsParityLength(conf);
    for (int i=0; i < numBlocks - rsParityLength; i++) {
      Set<String> locations=new HashSet<String>();
      for (int j=0; j < rsParityLength; j++) {
        for (int k=0; k < loc[i + j].getNames().length; k++) {
          String name=loc[i + j].getNames()[k];
          LOG.info("Har Raid block location: " + name);
          Assert.assertTrue(locations.add(name));
        }
      }
    }
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
