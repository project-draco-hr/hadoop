{
  Configuration conf=new Configuration();
  conf.set("hadoop.security.authentication","kerberos");
  UserGroupInformation.setConfiguration(conf);
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  RMState rmState=memStore.getState();
  Map<RMDelegationTokenIdentifier,Long> rmDTState=rmState.getRMDTSecretManagerState().getTokenState();
  Set<DelegationKey> rmDTMasterKeyState=rmState.getRMDTSecretManagerState().getMasterKeyState();
  MockRM rm1=new MyMockRM(conf,memStore);
  rm1.start();
  RMDelegationTokenSecretManager dtSecretManager=rm1.getRMContext().getRMDelegationTokenSecretManager();
  Assert.assertEquals(dtSecretManager.getAllMasterKeys(),rmDTMasterKeyState);
  Set<DelegationKey> expiringKeys=new HashSet<DelegationKey>();
  expiringKeys.addAll(dtSecretManager.getAllMasterKeys());
  GetDelegationTokenRequest request=mock(GetDelegationTokenRequest.class);
  when(request.getRenewer()).thenReturn("renewer1");
  GetDelegationTokenResponse response=rm1.getClientRMService().getDelegationToken(request);
  org.apache.hadoop.yarn.api.records.Token delegationToken=response.getRMDelegationToken();
  Token<RMDelegationTokenIdentifier> token1=ConverterUtils.convertFromYarn(delegationToken,(Text)null);
  RMDelegationTokenIdentifier dtId1=token1.decodeIdentifier();
  while (((TestRMDelegationTokenSecretManager)dtSecretManager).numUpdatedKeys.get() < 3) {
    ((TestRMDelegationTokenSecretManager)dtSecretManager).checkCurrentKeyInStateStore(rmDTMasterKeyState);
    Thread.sleep(100);
  }
  int count=0;
  while (rmDTState.containsKey(dtId1) && count < 100) {
    Thread.sleep(100);
    count++;
  }
  rm1.stop();
}
