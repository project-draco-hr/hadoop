{
  Injector injector=WebAppTests.createMockInjector(RMContext.class,mockRMContext(15,1,2,8 * GiB),new Module(){
    @Override public void configure(    Binder binder){
      try {
        ResourceManager mockRm=mockRm(3,1,2,8 * GiB);
        binder.bind(ResourceManager.class).toInstance(mockRm);
        binder.bind(ApplicationBaseProtocol.class).toInstance(mockRm.getClientRMService());
      }
 catch (      IOException e) {
        throw new IllegalStateException(e);
      }
    }
  }
);
  RmView rmViewInstance=injector.getInstance(RmView.class);
  rmViewInstance.set(YarnWebParams.APP_STATE,YarnApplicationState.RUNNING.toString());
  rmViewInstance.render();
  WebAppTests.flushOutput(injector);
  rmViewInstance.set(YarnWebParams.APP_STATE,StringHelper.cjoin(YarnApplicationState.ACCEPTED.toString(),YarnApplicationState.RUNNING.toString()));
  rmViewInstance.render();
  WebAppTests.flushOutput(injector);
}
