{
  Path path=qualify(f);
  String key=pathToKey(path);
  LOG.debug("List status for path: {}",path);
  incrementStatistic(INVOCATION_LIST_STATUS);
  List<FileStatus> result;
  final FileStatus fileStatus=getFileStatus(path);
  if (fileStatus.isDirectory()) {
    if (!key.isEmpty()) {
      key=key + '/';
    }
    ListObjectsRequest request=createListObjectsRequest(key,"/");
    LOG.debug("listStatus: doing listObjects for directory {}",key);
    Listing.FileStatusListingIterator files=listing.createFileStatusListingIterator(path,request,ACCEPT_ALL,new Listing.AcceptAllButSelfAndS3nDirs(path));
    result=new ArrayList<>(files.getBatchSize());
    while (files.hasNext()) {
      result.add(files.next());
    }
    return result.toArray(new FileStatus[result.size()]);
  }
 else {
    LOG.debug("Adding: rd (not a dir): {}",path);
    FileStatus[] stats=new FileStatus[1];
    stats[0]=fileStatus;
    return stats;
  }
}
