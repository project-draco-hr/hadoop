{
  AWSCredentialsProvider credentials;
  String className=conf.getTrimmed(AWS_CREDENTIALS_PROVIDER);
  if (StringUtils.isEmpty(className)) {
    AWSAccessKeys creds=getAWSAccessKeys(binding,conf);
    credentials=new AWSCredentialsProviderChain(new BasicAWSCredentialsProvider(creds.getAccessKey(),creds.getAccessSecret()),new InstanceProfileCredentialsProvider(),new EnvironmentVariableCredentialsProvider(),new AnonymousAWSCredentialsProvider());
  }
 else {
    try {
      LOG.debug("Credential provider class is {}",className);
      credentials=(AWSCredentialsProvider)Class.forName(className).getDeclaredConstructor(URI.class,Configuration.class).newInstance(this.uri,conf);
    }
 catch (    ClassNotFoundException e) {
      throw new IOException(className + " not found.",e);
    }
catch (    NoSuchMethodException|SecurityException e) {
      throw new IOException(className + " constructor exception.",e);
    }
catch (    ReflectiveOperationException|IllegalArgumentException e) {
      throw new IOException(className + " instantiation exception.",e);
    }
    LOG.debug("Using {} for {}.",credentials,this.uri);
  }
  return credentials;
}
