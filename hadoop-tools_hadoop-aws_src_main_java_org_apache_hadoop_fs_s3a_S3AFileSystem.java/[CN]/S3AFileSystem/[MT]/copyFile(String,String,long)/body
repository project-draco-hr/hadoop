{
  LOG.debug("copyFile {} -> {} ",srcKey,dstKey);
  ObjectMetadata srcom=s3.getObjectMetadata(bucket,srcKey);
  ObjectMetadata dstom=cloneObjectMetadata(srcom);
  if (StringUtils.isNotBlank(serverSideEncryptionAlgorithm)) {
    dstom.setSSEAlgorithm(serverSideEncryptionAlgorithm);
  }
  CopyObjectRequest copyObjectRequest=new CopyObjectRequest(bucket,srcKey,bucket,dstKey);
  copyObjectRequest.setCannedAccessControlList(cannedACL);
  copyObjectRequest.setNewObjectMetadata(dstom);
  ProgressListener progressListener=new ProgressListener(){
    public void progressChanged(    ProgressEvent progressEvent){
switch (progressEvent.getEventType()) {
case TRANSFER_PART_COMPLETED_EVENT:
        statistics.incrementWriteOps(1);
      break;
default :
    break;
}
}
}
;
Copy copy=transfers.copy(copyObjectRequest);
copy.addProgressListener(progressListener);
try {
copy.waitForCopyResult();
statistics.incrementWriteOps(1);
instrumentation.filesCopied(1,size);
}
 catch (InterruptedException e) {
throw new InterruptedIOException("Interrupted copying " + srcKey + " to "+ dstKey+ ", cancelling");
}
}
