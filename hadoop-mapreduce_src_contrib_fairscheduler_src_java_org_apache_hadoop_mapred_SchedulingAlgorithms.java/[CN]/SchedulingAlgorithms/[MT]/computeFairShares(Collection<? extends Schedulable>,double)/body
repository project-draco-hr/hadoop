{
  double totalDemand=0;
  for (  Schedulable sched : schedulables) {
    totalDemand+=sched.getDemand();
  }
  double cap=Math.min(totalDemand,totalSlots);
  double rMax=1.0;
  while (slotsUsedWithWeightToSlotRatio(rMax,schedulables) < cap) {
    rMax*=2.0;
  }
  double left=0;
  double right=rMax;
  for (int i=0; i < COMPUTE_FAIR_SHARES_ITERATIONS; i++) {
    double mid=(left + right) / 2.0;
    if (slotsUsedWithWeightToSlotRatio(mid,schedulables) < cap) {
      left=mid;
    }
 else {
      right=mid;
    }
  }
  for (  Schedulable sched : schedulables) {
    sched.setFairShare(computeShare(sched,right));
  }
}
