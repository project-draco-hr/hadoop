{
  LOG.info("createNameNode " + Arrays.asList(argv));
  if (conf == null)   conf=new HdfsConfiguration();
  GenericOptionsParser hParser=new GenericOptionsParser(conf,argv);
  argv=hParser.getRemainingArgs();
  StartupOption startOpt=parseArguments(argv);
  if (startOpt == null) {
    printUsage(System.err);
    return null;
  }
  setStartupOption(conf,startOpt);
switch (startOpt) {
case FORMAT:
{
      boolean aborted=format(conf,startOpt.getForceFormat(),startOpt.getInteractiveFormat());
      terminate(aborted ? 1 : 0);
      return null;
    }
case GENCLUSTERID:
{
    System.err.println("Generating new cluster id:");
    System.out.println(NNStorage.newClusterID());
    terminate(0);
    return null;
  }
case ROLLBACK:
{
  boolean aborted=doRollback(conf,true);
  terminate(aborted ? 1 : 0);
  return null;
}
case BOOTSTRAPSTANDBY:
{
String toolArgs[]=Arrays.copyOfRange(argv,1,argv.length);
int rc=BootstrapStandby.run(toolArgs,conf);
terminate(rc);
return null;
}
case INITIALIZESHAREDEDITS:
{
boolean aborted=initializeSharedEdits(conf,startOpt.getForceFormat(),startOpt.getInteractiveFormat());
terminate(aborted ? 1 : 0);
return null;
}
case BACKUP:
case CHECKPOINT:
{
NamenodeRole role=startOpt.toNodeRole();
DefaultMetricsSystem.initialize(role.toString().replace(" ",""));
return new BackupNode(conf,role);
}
case RECOVER:
{
NameNode.doRecovery(startOpt,conf);
return null;
}
case METADATAVERSION:
{
printMetadataVersion(conf);
terminate(0);
return null;
}
case UPGRADEONLY:
{
DefaultMetricsSystem.initialize("NameNode");
new NameNode(conf);
terminate(0);
return null;
}
default :
{
DefaultMetricsSystem.initialize("NameNode");
return new NameNode(conf);
}
}
}
