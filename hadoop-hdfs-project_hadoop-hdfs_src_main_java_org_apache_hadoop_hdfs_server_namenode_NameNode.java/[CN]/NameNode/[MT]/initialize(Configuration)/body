{
  if (conf.get(HADOOP_USER_GROUP_METRICS_PERCENTILES_INTERVALS) == null) {
    String intervals=conf.get(DFS_METRICS_PERCENTILES_INTERVALS_KEY);
    if (intervals != null) {
      conf.set(HADOOP_USER_GROUP_METRICS_PERCENTILES_INTERVALS,intervals);
    }
  }
  UserGroupInformation.setConfiguration(conf);
  loginAsNameNodeUser(conf);
  NameNode.initMetrics(conf,this.getRole());
  StartupProgressMetrics.register(startupProgress);
  pauseMonitor=new JvmPauseMonitor();
  pauseMonitor.init(conf);
  pauseMonitor.start();
  metrics.getJvmMetrics().setPauseMonitor(pauseMonitor);
  if (NamenodeRole.NAMENODE == role) {
    startHttpServer(conf);
  }
  loadNamesystem(conf);
  rpcServer=createRpcServer(conf);
  initReconfigurableBackoffKey();
  if (clientNamenodeAddress == null) {
    clientNamenodeAddress=NetUtils.getHostPortString(rpcServer.getRpcAddress());
    LOG.info("Clients are to use " + clientNamenodeAddress + " to access"+ " this namenode/service.");
  }
  if (NamenodeRole.NAMENODE == role) {
    httpServer.setNameNodeAddress(getNameNodeAddress());
    httpServer.setFSImage(getFSImage());
  }
  startCommonServices(conf);
  startMetricsLogger(conf);
}
