{
  int argsLen=(args == null) ? 0 : args.length;
  StartupOption startOpt=StartupOption.REGULAR;
  for (int i=0; i < argsLen; i++) {
    String cmd=args[i];
    if (StartupOption.FORMAT.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.FORMAT;
      if (i + 2 < argsLen && args[i + 1].equalsIgnoreCase(StartupOption.CLUSTERID.getName())) {
        i+=2;
        startOpt.setClusterId(args[i]);
      }
    }
 else     if (StartupOption.GENCLUSTERID.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.GENCLUSTERID;
    }
 else     if (StartupOption.REGULAR.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.REGULAR;
    }
 else     if (StartupOption.BACKUP.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.BACKUP;
    }
 else     if (StartupOption.CHECKPOINT.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.CHECKPOINT;
    }
 else     if (StartupOption.UPGRADE.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.UPGRADE;
      if (i + 2 < argsLen && args[i + 1].equalsIgnoreCase(StartupOption.CLUSTERID.getName())) {
        i+=2;
        startOpt.setClusterId(args[i]);
      }
    }
 else     if (StartupOption.ROLLBACK.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.ROLLBACK;
    }
 else     if (StartupOption.FINALIZE.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.FINALIZE;
    }
 else     if (StartupOption.IMPORT.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.IMPORT;
    }
 else     if (StartupOption.BOOTSTRAPSTANDBY.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.BOOTSTRAPSTANDBY;
      return startOpt;
    }
 else     if (StartupOption.INITIALIZESHAREDEDITS.getName().equalsIgnoreCase(cmd)) {
      startOpt=StartupOption.INITIALIZESHAREDEDITS;
      return startOpt;
    }
 else     if (StartupOption.RECOVER.getName().equalsIgnoreCase(cmd)) {
      if (startOpt != StartupOption.REGULAR) {
        throw new RuntimeException("Can't combine -recover with " + "other startup options.");
      }
      startOpt=StartupOption.RECOVER;
      while (++i < argsLen) {
        if (args[i].equalsIgnoreCase(StartupOption.FORCE.getName())) {
          startOpt.setForce(MetaRecoveryContext.FORCE_FIRST_CHOICE);
        }
 else {
          throw new RuntimeException("Error parsing recovery options: " + "can't understand option \"" + args[i] + "\"");
        }
      }
    }
 else {
      return null;
    }
  }
  return startOpt;
}
