{
  final DatanodeManager datanodeManager=namesystem.getBlockManager().getDatanodeManager();
switch (property) {
case DFS_HEARTBEAT_INTERVAL_KEY:
    namesystem.writeLock();
  try {
    if (newVal == null) {
      datanodeManager.setHeartbeatInterval(DFS_HEARTBEAT_INTERVAL_DEFAULT);
      return String.valueOf(DFS_HEARTBEAT_INTERVAL_DEFAULT);
    }
 else {
      datanodeManager.setHeartbeatInterval(Long.parseLong(newVal));
      return String.valueOf(datanodeManager.getHeartbeatInterval());
    }
  }
 catch (  NumberFormatException nfe) {
    throw new ReconfigurationException(property,newVal,getConf().get(property),nfe);
  }
 finally {
    namesystem.writeUnlock();
    LOG.info("RECONFIGURE* changed heartbeatInterval to " + datanodeManager.getHeartbeatInterval());
  }
case DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY:
namesystem.writeLock();
try {
if (newVal == null) {
  datanodeManager.setHeartbeatRecheckInterval(DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);
  return String.valueOf(DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);
}
 else {
  datanodeManager.setHeartbeatRecheckInterval(Integer.parseInt(newVal));
  return String.valueOf(datanodeManager.getHeartbeatRecheckInterval());
}
}
 catch (NumberFormatException nfe) {
throw new ReconfigurationException(property,newVal,getConf().get(property),nfe);
}
 finally {
namesystem.writeUnlock();
LOG.info("RECONFIGURE* changed heartbeatRecheckInterval to " + datanodeManager.getHeartbeatRecheckInterval());
}
default :
break;
}
throw new ReconfigurationException(property,newVal,getConf().get(property));
}
