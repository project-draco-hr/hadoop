{
  this.conf=conf;
  this.role=role;
  String nsId=getNameServiceId(conf);
  String namenodeId=HAUtil.getNameNodeId(conf,nsId);
  this.haEnabled=HAUtil.isHAEnabled(conf,nsId);
  state=createHAState(getStartupOption(conf));
  this.allowStaleStandbyReads=HAUtil.shouldAllowStandbyReads(conf);
  this.haContext=createHAContext();
  try {
    initializeGenericKeys(conf,nsId,namenodeId);
    initialize(conf);
    try {
      haContext.writeLock();
      state.prepareToEnterState(haContext);
      state.enterState(haContext);
    }
  finally {
      haContext.writeUnlock();
    }
  }
 catch (  IOException e) {
    this.stop();
    throw e;
  }
catch (  HadoopIllegalArgumentException e) {
    this.stop();
    throw e;
  }
}
