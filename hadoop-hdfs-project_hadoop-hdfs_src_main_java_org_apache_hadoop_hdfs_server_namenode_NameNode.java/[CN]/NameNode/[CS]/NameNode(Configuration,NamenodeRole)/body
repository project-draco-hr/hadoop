{
  this.conf=new Configuration(conf);
  this.role=role;
  String nsId=getNameServiceId(this.conf);
  String namenodeId=HAUtil.getNameNodeId(this.conf,nsId);
  this.haEnabled=HAUtil.isHAEnabled(this.conf,nsId);
  if (!haEnabled) {
    state=ACTIVE_STATE;
  }
 else {
    state=STANDBY_STATE;
  }
  this.allowStaleStandbyReads=HAUtil.shouldAllowStandbyReads(this.conf);
  this.haContext=createHAContext();
  try {
    initializeGenericKeys(this.conf,nsId,namenodeId);
    initialize(this.conf);
    state.prepareToEnterState(haContext);
    state.enterState(haContext);
  }
 catch (  IOException e) {
    this.stop();
    throw e;
  }
catch (  HadoopIllegalArgumentException e) {
    this.stop();
    throw e;
  }
}
