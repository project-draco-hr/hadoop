{
  final String infoHost=bindAddress.getHostName();
  int infoPort=bindAddress.getPort();
  httpServer=new HttpServer.Builder().setName("hdfs").setBindAddress(infoHost).setPort(infoPort).setFindPort(infoPort == 0).setConf(conf).setACL(new AccessControlList(conf.get(DFS_ADMIN," "))).setSecurityEnabled(UserGroupInformation.isSecurityEnabled()).setUsernameConfKey(DFSConfigKeys.DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY).setKeytabConfKey(DFSUtil.getSpnegoKeytabKey(conf,DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY)).build();
  if (WebHdfsFileSystem.isEnabled(conf,HttpServer.LOG)) {
    final String name="SPNEGO";
    final String classname=AuthFilter.class.getName();
    final String pathSpec=WebHdfsFileSystem.PATH_PREFIX + "/*";
    Map<String,String> params=getAuthFilterParams(conf);
    httpServer.defineFilter(httpServer.getWebAppContext(),name,classname,params,new String[]{pathSpec});
    HttpServer.LOG.info("Added filter '" + name + "' (class="+ classname+ ")");
    httpServer.addJerseyResourcePackage(NamenodeWebHdfsMethods.class.getPackage().getName() + ";" + Param.class.getPackage().getName(),pathSpec);
  }
  boolean certSSL=conf.getBoolean(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,false);
  if (certSSL) {
    boolean needClientAuth=conf.getBoolean("dfs.https.need.client.auth",false);
    InetSocketAddress secInfoSocAddr=NetUtils.createSocketAddr(infoHost + ":" + conf.get(DFSConfigKeys.DFS_NAMENODE_HTTPS_PORT_KEY,infoHost + ":" + 0));
    Configuration sslConf=new Configuration(false);
    if (certSSL) {
      sslConf.addResource(conf.get(DFSConfigKeys.DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_KEY,"ssl-server.xml"));
    }
    httpServer.addSslListener(secInfoSocAddr,sslConf,needClientAuth);
    InetSocketAddress datanodeSslPort=NetUtils.createSocketAddr(conf.get(DFSConfigKeys.DFS_DATANODE_HTTPS_ADDRESS_KEY,infoHost + ":" + 50475));
    httpServer.setAttribute(DFSConfigKeys.DFS_DATANODE_HTTPS_PORT_KEY,datanodeSslPort.getPort());
  }
  httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY,nn);
  httpServer.setAttribute(JspHelper.CURRENT_CONF,conf);
  setupServlets(httpServer,conf);
  httpServer.start();
  httpAddress=new InetSocketAddress(bindAddress.getAddress(),httpServer.getPort());
}
