{
  HttpConfig.Policy policy=DFSUtil.getHttpPolicy(conf);
  final String infoHost=bindAddress.getHostName();
  HttpServer.Builder builder=new HttpServer.Builder().setName("hdfs").setConf(conf).setACL(new AccessControlList(conf.get(DFS_ADMIN," "))).setSecurityEnabled(UserGroupInformation.isSecurityEnabled()).setUsernameConfKey(DFSConfigKeys.DFS_NAMENODE_INTERNAL_SPNEGO_USER_NAME_KEY).setKeytabConfKey(DFSUtil.getSpnegoKeytabKey(conf,DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY));
  if (policy.isHttpEnabled()) {
    int port=bindAddress.getPort();
    if (port == 0) {
      builder.setFindPort(true);
    }
    builder.addEndpoint(URI.create("http://" + infoHost + ":"+ port));
  }
  if (policy.isHttpsEnabled()) {
    final String httpsAddrString=conf.get(DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY,DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_DEFAULT);
    InetSocketAddress addr=NetUtils.createSocketAddr(httpsAddrString);
    Configuration sslConf=new Configuration(false);
    sslConf.addResource(conf.get(DFSConfigKeys.DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_KEY,DFSConfigKeys.DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_DEFAULT));
    sslConf.addResource(conf.get(DFSConfigKeys.DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_KEY,DFSConfigKeys.DFS_SERVER_HTTPS_KEYSTORE_RESOURCE_DEFAULT));
    sslConf.setBoolean(DFS_CLIENT_HTTPS_NEED_AUTH_KEY,conf.getBoolean(DFS_CLIENT_HTTPS_NEED_AUTH_KEY,DFS_CLIENT_HTTPS_NEED_AUTH_DEFAULT));
    DFSUtil.loadSslConfToHttpServerBuilder(builder,sslConf);
    if (addr.getPort() == 0) {
      builder.setFindPort(true);
    }
    builder.addEndpoint(URI.create("https://" + NetUtils.getHostPortString(addr)));
  }
  httpServer=builder.build();
  if (policy.isHttpsEnabled()) {
    InetSocketAddress datanodeSslPort=NetUtils.createSocketAddr(conf.get(DFSConfigKeys.DFS_DATANODE_HTTPS_ADDRESS_KEY,infoHost + ":" + DFSConfigKeys.DFS_DATANODE_HTTPS_DEFAULT_PORT));
    httpServer.setAttribute(DFSConfigKeys.DFS_DATANODE_HTTPS_PORT_KEY,datanodeSslPort.getPort());
  }
  initWebHdfs(conf);
  httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY,nn);
  httpServer.setAttribute(JspHelper.CURRENT_CONF,conf);
  setupServlets(httpServer,conf);
  httpServer.start();
  int connIdx=0;
  if (policy.isHttpEnabled()) {
    httpAddress=httpServer.getConnectorAddress(connIdx++);
    conf.set(DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY,NetUtils.getHostPortString(httpAddress));
  }
  if (policy.isHttpsEnabled()) {
    httpsAddress=httpServer.getConnectorAddress(connIdx);
    conf.set(DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY,NetUtils.getHostPortString(httpsAddress));
  }
}
