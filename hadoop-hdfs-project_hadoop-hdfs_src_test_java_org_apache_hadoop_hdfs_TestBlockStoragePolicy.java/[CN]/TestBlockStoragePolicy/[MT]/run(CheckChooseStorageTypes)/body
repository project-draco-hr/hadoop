{
  final BlockStoragePolicy hot=POLICY_SUITE.getPolicy(HOT);
  final BlockStoragePolicy warm=POLICY_SUITE.getPolicy(WARM);
  final BlockStoragePolicy cold=POLICY_SUITE.getPolicy(COLD);
  final short replication=3;
{
    final List<StorageType> chosen=Lists.newArrayList();
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.DISK,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.DISK,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.DISK);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(hot,replication,chosen);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK,StorageType.DISK,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.DISK,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen);
    method.checkChooseStorageTypes(cold,replication,chosen,StorageType.ARCHIVE);
  }
{
    final List<StorageType> chosen=Arrays.asList(StorageType.ARCHIVE,StorageType.ARCHIVE,StorageType.ARCHIVE);
    method.checkChooseStorageTypes(hot,replication,chosen,StorageType.DISK,StorageType.DISK,StorageType.DISK);
    method.checkChooseStorageTypes(warm,replication,chosen,StorageType.DISK);
    method.checkChooseStorageTypes(cold,replication,chosen);
  }
}
