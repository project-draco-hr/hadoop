{
  BlockReader reader=null;
  final ReaderRetryPolicy retry=new ReaderRetryPolicy();
  DFSInputStream.DNAddrPair dnInfo=new DFSInputStream.DNAddrPair(null,null,null);
  while (true) {
    try {
      block=refreshLocatedBlock(block);
      targetBlocks[chunkIndex]=block;
      dnInfo=getBestNodeDNAddrPair(block,null);
      if (dnInfo == null) {
        break;
      }
      reader=getBlockReader(block,offsetInBlock,block.getBlockSize() - offsetInBlock,dnInfo.addr,dnInfo.storageType,dnInfo.info);
    }
 catch (    IOException e) {
      if (e instanceof InvalidEncryptionKeyException && retry.shouldRefetchEncryptionKey()) {
        DFSClient.LOG.info("Will fetch a new encryption key and retry, " + "encryption key was invalid when connecting to " + dnInfo.addr + " : "+ e);
        dfsClient.clearDataEncryptionKey();
        retry.refetchEncryptionKey();
      }
 else       if (retry.shouldRefetchToken() && tokenRefetchNeeded(e,dnInfo.addr)) {
        fetchBlockAt(block.getStartOffset());
        retry.refetchToken();
      }
 else {
        DFSClient.LOG.warn("Failed to connect to " + dnInfo.addr + " for "+ "block"+ block.getBlock(),e);
        fetchBlockAt(block.getStartOffset());
        addToDeadNodes(dnInfo.info);
      }
    }
    if (reader != null) {
      readerInfos[chunkIndex]=new BlockReaderInfo(reader,dnInfo.info,offsetInBlock);
      return true;
    }
  }
  return false;
}
