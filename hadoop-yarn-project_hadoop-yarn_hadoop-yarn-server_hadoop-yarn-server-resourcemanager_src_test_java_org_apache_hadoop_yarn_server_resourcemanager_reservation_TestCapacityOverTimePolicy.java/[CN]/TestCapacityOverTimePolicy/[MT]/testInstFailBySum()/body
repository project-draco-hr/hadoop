{
  int[] f=generateData(3600,(int)Math.ceil(0.3 * totCont));
  ReservationDefinition rDef=ReservationSystemTestUtil.createSimpleReservationDefinition(initTime,initTime + f.length + 1,f.length);
  assertTrue(plan.toString(),plan.addReservation(new InMemoryReservationAllocation(ReservationSystemTestUtil.getNewReservationId(),rDef,"u1","dedicated",initTime,initTime + f.length,ReservationSystemTestUtil.generateAllocation(initTime,step,f),res,minAlloc),false));
  assertTrue(plan.toString(),plan.addReservation(new InMemoryReservationAllocation(ReservationSystemTestUtil.getNewReservationId(),rDef,"u1","dedicated",initTime,initTime + f.length,ReservationSystemTestUtil.generateAllocation(initTime,step,f),res,minAlloc),false));
  try {
    assertTrue(plan.toString(),plan.addReservation(new InMemoryReservationAllocation(ReservationSystemTestUtil.getNewReservationId(),rDef,"u1","dedicated",initTime,initTime + f.length,ReservationSystemTestUtil.generateAllocation(initTime,step,f),res,minAlloc),false));
    Assert.fail();
  }
 catch (  PlanningQuotaException p) {
  }
}
