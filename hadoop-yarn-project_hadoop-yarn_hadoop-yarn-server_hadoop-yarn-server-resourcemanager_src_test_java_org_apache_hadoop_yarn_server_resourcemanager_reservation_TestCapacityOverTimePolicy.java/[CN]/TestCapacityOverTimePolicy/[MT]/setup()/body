{
  timeWindow=86400000L;
  step=1000L;
  avgConstraint=25;
  instConstraint=70;
  initTime=System.currentTimeMillis();
  minAlloc=Resource.newInstance(1024,1);
  res=new DefaultResourceCalculator();
  maxAlloc=Resource.newInstance(1024 * 8,8);
  mAgent=mock(ReservationAgent.class);
  ReservationSystemTestUtil testUtil=new ReservationSystemTestUtil();
  CapacityScheduler scheduler=testUtil.mockCapacityScheduler(totCont);
  String reservationQ=testUtil.getFullReservationQueueName();
  CapacitySchedulerConfiguration capConf=scheduler.getConfiguration();
  capConf.setReservationWindow(reservationQ,timeWindow);
  capConf.setInstantaneousMaxCapacity(reservationQ,instConstraint);
  capConf.setAverageCapacity(reservationQ,avgConstraint);
  CapacityOverTimePolicy policy=new CapacityOverTimePolicy();
  policy.init(reservationQ,capConf);
  plan=new InMemoryPlan(scheduler.getRootQueueMetrics(),policy,mAgent,scheduler.getClusterResource(),step,res,minAlloc,maxAlloc,"dedicated",null,true);
}
