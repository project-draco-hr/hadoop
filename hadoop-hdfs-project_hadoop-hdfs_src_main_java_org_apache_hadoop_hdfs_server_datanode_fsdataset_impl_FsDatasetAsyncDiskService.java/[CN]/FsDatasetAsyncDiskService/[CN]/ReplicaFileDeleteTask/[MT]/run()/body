{
  final long blockLength=blockFile.length();
  final long metaLength=metaFile.length();
  boolean result;
  result=(trashDirectory == null) ? deleteFiles() : moveFiles();
  if (!result) {
    LOG.warn("Unexpected error trying to " + (trashDirectory == null ? "delete" : "move") + " block "+ block.getBlockPoolId()+ " "+ block.getLocalBlock()+ " at file "+ blockFile+ ". Ignored.");
  }
 else {
    if (block.getLocalBlock().getNumBytes() != BlockCommand.NO_ACK) {
      datanode.notifyNamenodeDeletedBlock(block,volume.getStorageID());
    }
    volume.onBlockFileDeletion(block.getBlockPoolId(),blockLength);
    volume.onMetaFileDeletion(block.getBlockPoolId(),metaLength);
    LOG.info("Deleted " + block.getBlockPoolId() + " "+ block.getLocalBlock()+ " file "+ blockFile);
  }
  updateDeletedBlockId(block);
  IOUtils.cleanup(null,volumeRef);
}
