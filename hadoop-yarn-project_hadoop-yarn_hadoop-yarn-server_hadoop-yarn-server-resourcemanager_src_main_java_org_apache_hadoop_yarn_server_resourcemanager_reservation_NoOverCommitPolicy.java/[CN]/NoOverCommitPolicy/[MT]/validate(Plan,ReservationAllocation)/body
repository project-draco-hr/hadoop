{
  ReservationAllocation oldReservation=plan.getReservationById(reservation.getReservationId());
  if (oldReservation != null && !oldReservation.getUser().equals(reservation.getUser())) {
    throw new MismatchedUserException("Updating an existing reservation with mismatching user:" + oldReservation.getUser() + " != "+ reservation.getUser());
  }
  RLESparseResourceAllocation available=plan.getAvailableResourceOverTime(reservation.getUser(),reservation.getReservationId(),reservation.getStartTime(),reservation.getEndTime());
  try {
    RLESparseResourceAllocation.merge(plan.getResourceCalculator(),plan.getTotalCapacity(),available,reservation.getResourcesOverTime(),RLESparseResourceAllocation.RLEOperator.subtractTestNonNegative,reservation.getStartTime(),reservation.getEndTime());
  }
 catch (  PlanningException p) {
    throw new ResourceOverCommitException("Resources at time " + " would be overcommitted by " + "accepting reservation: "+ reservation.getReservationId());
  }
}
