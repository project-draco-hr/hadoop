{
  ReservationAllocation oldReservation=plan.getReservationById(reservation.getReservationId());
  if (oldReservation != null && !oldReservation.getUser().equals(reservation.getUser())) {
    throw new MismatchedUserException("Updating an existing reservation with mismatching user:" + oldReservation.getUser() + " != "+ reservation.getUser());
  }
  long startTime=reservation.getStartTime();
  long endTime=reservation.getEndTime();
  long step=plan.getStep();
  for (long t=startTime; t < endTime; t+=step) {
    Resource currExistingAllocTot=plan.getTotalCommittedResources(t);
    Resource currNewAlloc=reservation.getResourcesAtTime(t);
    Resource currOldAlloc=Resource.newInstance(0,0);
    if (oldReservation != null) {
      oldReservation.getResourcesAtTime(t);
    }
    if (Resources.greaterThan(plan.getResourceCalculator(),plan.getTotalCapacity(),Resources.subtract(Resources.add(currExistingAllocTot,currNewAlloc),currOldAlloc),plan.getTotalCapacity())) {
      throw new ResourceOverCommitException("Resources at time " + t + " would be overcommitted by "+ "accepting reservation: "+ reservation.getReservationId());
    }
  }
}
