{
  if (offs < 0) {
    throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
  }
  if (len < 0) {
    throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
  }
  if (offs + len > dest.length) {
    throw new IndexOutOfBoundsException("offs(" + offs + ") + len("+ len+ ") > dest.length("+ dest.length+ ").");
  }
  if (this.in == null) {
    throw new IOException("stream closed");
  }
  if (lazyInitialization) {
    this.init();
    this.lazyInitialization=false;
  }
  if (skipDecompression) {
    changeStateToProcessABlock();
    skipDecompression=false;
  }
  final int hi=offs + len;
  int destOffs=offs;
  int b=0;
  for (; ((destOffs < hi) && ((b=read0())) >= 0); ) {
    dest[destOffs++]=(byte)b;
  }
  int result=destOffs - offs;
  if (result == 0) {
    result=b;
    skipResult=this.skipToNextMarker(CBZip2InputStream.BLOCK_DELIMITER,DELIMITER_BIT_LENGTH);
    this.reportedBytesReadFromCompressedStream=this.bytesReadFromCompressedStream;
    changeStateToProcessABlock();
  }
  return result;
}
