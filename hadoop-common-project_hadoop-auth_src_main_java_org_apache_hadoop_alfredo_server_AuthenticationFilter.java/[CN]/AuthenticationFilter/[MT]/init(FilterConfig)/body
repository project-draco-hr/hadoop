{
  String configPrefix=filterConfig.getInitParameter(CONFIG_PREFIX);
  configPrefix=(configPrefix != null) ? configPrefix + "." : "";
  Properties config=getConfiguration(configPrefix,filterConfig);
  String authHandlerName=config.getProperty(AUTH_TYPE,null);
  String authHandlerClassName;
  if (authHandlerName == null) {
    throw new ServletException("Authentication type must be specified: simple|kerberos|<class>");
  }
  if (authHandlerName.equals("simple")) {
    authHandlerClassName=PseudoAuthenticationHandler.class.getName();
  }
 else   if (authHandlerName.equals("kerberos")) {
    authHandlerClassName=KerberosAuthenticationHandler.class.getName();
  }
 else {
    authHandlerClassName=authHandlerName;
  }
  try {
    Class klass=Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName);
    authHandler=(AuthenticationHandler)klass.newInstance();
    authHandler.init(config);
  }
 catch (  ClassNotFoundException ex) {
    throw new ServletException(ex);
  }
catch (  InstantiationException ex) {
    throw new ServletException(ex);
  }
catch (  IllegalAccessException ex) {
    throw new ServletException(ex);
  }
  String signatureSecret=config.getProperty(configPrefix + SIGNATURE_SECRET);
  if (signatureSecret == null) {
    signatureSecret=Long.toString(new Random(System.currentTimeMillis()).nextLong());
    randomSecret=true;
    LOG.warn("'signature.secret' configuration not set, using a random value as secret");
  }
  signer=new Signer(signatureSecret.getBytes());
  validity=Long.parseLong(config.getProperty(AUTH_TOKEN_VALIDITY,"36000")) * 1000;
  cookieDomain=config.getProperty(COOKIE_DOMAIN,null);
  cookiePath=config.getProperty(COOKIE_PATH,null);
}
