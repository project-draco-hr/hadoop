{
  displayStringsMap=new EnumMap<>(Columns.class);
  appid=appReport.getApplicationId().toString();
  displayStringsMap.put(Columns.APPID,appid);
  user=appReport.getUser();
  displayStringsMap.put(Columns.USER,user);
  type=appReport.getApplicationType().toLowerCase();
  displayStringsMap.put(Columns.TYPE,type);
  state=appReport.getYarnApplicationState().toString().toLowerCase();
  name=appReport.getName();
  displayStringsMap.put(Columns.NAME,name);
  queue=appReport.getQueue();
  displayStringsMap.put(Columns.QUEUE,queue);
  priority=0;
  usedContainers=appReport.getApplicationResourceUsageReport().getNumUsedContainers();
  displayStringsMap.put(Columns.CONT,String.valueOf(usedContainers));
  reservedContainers=appReport.getApplicationResourceUsageReport().getNumReservedContainers();
  displayStringsMap.put(Columns.RCONT,String.valueOf(reservedContainers));
  usedVirtualCores=appReport.getApplicationResourceUsageReport().getUsedResources().getVirtualCores();
  displayStringsMap.put(Columns.VCORES,String.valueOf(usedVirtualCores));
  usedMemory=appReport.getApplicationResourceUsageReport().getUsedResources().getMemory() / 1024;
  displayStringsMap.put(Columns.MEM,String.valueOf(usedMemory) + "G");
  reservedVirtualCores=appReport.getApplicationResourceUsageReport().getReservedResources().getVirtualCores();
  displayStringsMap.put(Columns.RVCORES,String.valueOf(reservedVirtualCores));
  reservedMemory=appReport.getApplicationResourceUsageReport().getReservedResources().getMemory() / 1024;
  displayStringsMap.put(Columns.RMEM,String.valueOf(reservedMemory) + "G");
  attempts=appReport.getCurrentApplicationAttemptId().getAttemptId();
  nodes=0;
  runningTime=Time.now() - appReport.getStartTime();
  time=DurationFormatUtils.formatDuration(runningTime,"dd:HH:mm");
  displayStringsMap.put(Columns.TIME,String.valueOf(time));
  progress=appReport.getProgress() * 100;
  displayStringsMap.put(Columns.PROGRESS,String.format("%.2f",progress));
  memorySeconds=appReport.getApplicationResourceUsageReport().getMemorySeconds() / 1024;
  displayStringsMap.put(Columns.MEMSECS,String.valueOf(memorySeconds));
  vcoreSeconds=appReport.getApplicationResourceUsageReport().getVcoreSeconds();
  displayStringsMap.put(Columns.VCORESECS,String.valueOf(vcoreSeconds));
}
