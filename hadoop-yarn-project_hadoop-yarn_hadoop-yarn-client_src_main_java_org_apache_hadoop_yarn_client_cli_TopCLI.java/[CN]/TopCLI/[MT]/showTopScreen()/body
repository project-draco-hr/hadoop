{
  List<ApplicationInformation> appsInfo=new ArrayList<>();
  List<ApplicationReport> apps;
  try {
    apps=fetchAppReports();
  }
 catch (  Exception e) {
    LOG.error("Unable to get application information",e);
    return;
  }
  for (  ApplicationReport appReport : apps) {
    ApplicationInformation appInfo=new ApplicationInformation(appReport);
    appsInfo.add(appInfo);
  }
  if (ascendingSort) {
    Collections.sort(appsInfo,comparator);
  }
 else {
    Collections.sort(appsInfo,Collections.reverseOrder(comparator));
  }
  NodesInformation nodesInfo=getNodesInfo();
  QueueMetrics queueMetrics=getQueueMetrics();
  String header=getHeader(queueMetrics,nodesInfo);
  String appsStr=getPrintableAppInformation(appsInfo);
synchronized (lock) {
    printHeader(header);
    printApps(appsStr);
    System.out.print(SET_CURSOR_LINE_6_COLUMN_0);
    System.out.print(CLEAR_LINE);
  }
}
