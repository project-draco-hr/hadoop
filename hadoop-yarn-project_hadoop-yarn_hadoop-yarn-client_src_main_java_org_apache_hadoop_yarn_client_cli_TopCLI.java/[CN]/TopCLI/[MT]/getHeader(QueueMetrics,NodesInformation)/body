{
  StringBuilder ret=new StringBuilder();
  String queue="root";
  if (!queues.isEmpty()) {
    queue=StringUtils.join(queues,",");
  }
  long now=Time.now();
  long uptime=now - rmStartTime;
  long days=TimeUnit.MILLISECONDS.toDays(uptime);
  long hours=TimeUnit.MILLISECONDS.toHours(uptime) - TimeUnit.DAYS.toHours(TimeUnit.MILLISECONDS.toDays(uptime));
  long minutes=TimeUnit.MILLISECONDS.toMinutes(uptime) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(uptime));
  String uptimeStr=String.format("%dd, %d:%d",days,hours,minutes);
  String currentTime=DateFormatUtils.ISO_TIME_NO_T_FORMAT.format(now);
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("YARN top - %s, up %s, %d active users, queue(s): %s%n",currentTime,uptimeStr,queueMetrics.activeUsers,queue),terminalWidth,true));
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("NodeManager(s): %d total, %d active, %d unhealthy, %d decommissioned," + " %d lost, %d rebooted%n",nodes.totalNodes,nodes.runningNodes,nodes.unhealthyNodes,nodes.decommissionedNodes,nodes.lostNodes,nodes.rebootedNodes),terminalWidth,true));
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("Queue(s) Applications: %d running, %d submitted, %d pending," + " %d completed, %d killed, %d failed%n",queueMetrics.appsRunning,queueMetrics.appsSubmitted,queueMetrics.appsPending,queueMetrics.appsCompleted,queueMetrics.appsKilled,queueMetrics.appsFailed),terminalWidth,true));
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("Queue(s) Mem(GB): %d available," + " %d allocated, %d pending, %d reserved%n",queueMetrics.availableMemoryGB,queueMetrics.allocatedMemoryGB,queueMetrics.pendingMemoryGB,queueMetrics.reservedMemoryGB),terminalWidth,true));
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("Queue(s) VCores: %d available," + " %d allocated, %d pending, %d reserved%n",queueMetrics.availableVCores,queueMetrics.allocatedVCores,queueMetrics.pendingVCores,queueMetrics.reservedVCores),terminalWidth,true));
  ret.append(CLEAR_LINE);
  ret.append(limitLineLength(String.format("Queue(s) Containers: %d allocated, %d pending, %d reserved%n",queueMetrics.allocatedContainers,queueMetrics.pendingContainers,queueMetrics.reservedContainers),terminalWidth,true));
  return ret.toString();
}
