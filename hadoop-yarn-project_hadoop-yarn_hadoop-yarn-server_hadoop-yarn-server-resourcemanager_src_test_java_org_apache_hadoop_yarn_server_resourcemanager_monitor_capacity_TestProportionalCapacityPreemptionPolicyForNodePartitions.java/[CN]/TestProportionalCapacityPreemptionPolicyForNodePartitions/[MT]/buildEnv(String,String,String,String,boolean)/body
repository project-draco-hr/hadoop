{
  if (useDominantResourceCalculator) {
    when(cs.getResourceCalculator()).thenReturn(new DominantResourceCalculator());
  }
  mockNodeLabelsManager(labelsConfig);
  mockSchedulerNodes(nodesConfig);
  for (  NodeId nodeId : nodeIdToSchedulerNodes.keySet()) {
    when(cs.getSchedulerNode(nodeId)).thenReturn(nodeIdToSchedulerNodes.get(nodeId));
  }
  ParentQueue root=mockQueueHierarchy(queuesConfig);
  when(cs.getRootQueue()).thenReturn(root);
  when(cs.getClusterResource()).thenReturn(clusterResource);
  mockApplications(appsConfig);
  policy=new ProportionalCapacityPreemptionPolicy(rmContext,cs,mClock);
}
