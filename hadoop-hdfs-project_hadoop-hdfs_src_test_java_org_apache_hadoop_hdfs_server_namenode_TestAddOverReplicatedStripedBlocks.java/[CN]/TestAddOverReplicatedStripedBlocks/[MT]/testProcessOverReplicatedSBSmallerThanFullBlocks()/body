{
  int fileLen=CELLSIZE * (DATA_BLK_NUM - 1);
  byte[] content=new byte[fileLen];
  DFSTestUtil.writeFile(fs,filePath,new String(content));
  LocatedBlocks lbs=cluster.getNameNodeRpc().getBlockLocations(filePath.toString(),0,fileLen);
  LocatedStripedBlock bg=(LocatedStripedBlock)(lbs.get(0));
  long gs=bg.getBlock().getGenerationStamp();
  String bpid=bg.getBlock().getBlockPoolId();
  long groupId=bg.getBlock().getBlockId();
  Block blk=new Block(groupId,BLOCK_SIZE,gs);
  cluster.triggerBlockReports();
  List<DatanodeInfo> infos=Arrays.asList(bg.getLocations());
  blk.setBlockId(groupId);
  List<DataNode> dataNodeList=cluster.getDataNodes();
  for (int i=0; i < numDNs; i++) {
    if (!infos.contains(dataNodeList.get(i).getDatanodeId())) {
      cluster.injectBlocks(i,Arrays.asList(blk),bpid);
      System.out.println("XXX: inject block into datanode " + i);
    }
  }
  cluster.triggerBlockReports();
  cluster.triggerHeartbeats();
  cluster.triggerHeartbeats();
  cluster.triggerBlockReports();
  lbs=cluster.getNameNodeRpc().getBlockLocations(filePath.toString(),0,fileLen);
  StripedFileTestUtil.verifyLocatedStripedBlocks(lbs,GROUP_SIZE - 1);
}
