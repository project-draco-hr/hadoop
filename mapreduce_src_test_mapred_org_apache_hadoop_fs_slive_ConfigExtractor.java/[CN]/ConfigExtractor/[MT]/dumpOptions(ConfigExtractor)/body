{
  if (cfg == null) {
    return;
  }
  LOG.info("Base directory = " + cfg.getBaseDirectory());
  LOG.info("Data directory = " + cfg.getDataPath());
  LOG.info("Output directory = " + cfg.getOutputPath());
  LOG.info("Result file = " + cfg.getResultFile());
  LOG.info("Grid queue = " + cfg.getQueueName());
  LOG.info("Should exit on first error = " + cfg.shouldExitOnFirstError());
{
    String duration="Duration = ";
    if (cfg.getDurationMilliseconds() == Integer.MAX_VALUE) {
      duration+="unlimited";
    }
 else {
      duration+=cfg.getDurationMilliseconds() + " milliseconds";
    }
    LOG.info(duration);
  }
  LOG.info("Map amount = " + cfg.getMapAmount());
  LOG.info("Reducer amount = " + cfg.getReducerAmount());
  LOG.info("Operation amount = " + cfg.getOpCount());
  LOG.info("Total file limit = " + cfg.getTotalFiles());
  LOG.info("Total dir file limit = " + cfg.getDirSize());
{
    String read="Read size = ";
    if (cfg.shouldReadFullFile()) {
      read+="entire file";
    }
 else {
      read+=cfg.getReadSize() + " bytes";
    }
    LOG.info(read);
  }
{
    String write="Write size = ";
    if (cfg.shouldWriteUseBlockSize()) {
      write+="blocksize";
    }
 else {
      write+=cfg.getWriteSize() + " bytes";
    }
    LOG.info(write);
  }
{
    String append="Append size = ";
    if (cfg.shouldAppendUseBlockSize()) {
      append+="blocksize";
    }
 else {
      append+=cfg.getAppendSize() + " bytes";
    }
    LOG.info(append);
  }
{
    String bsize="Block size = ";
    bsize+=cfg.getBlockSize() + " bytes";
    LOG.info(bsize);
  }
  if (cfg.getRandomSeed() != null) {
    LOG.info("Random seed = " + cfg.getRandomSeed());
  }
  if (cfg.getSleepRange() != null) {
    LOG.info("Sleep range = " + cfg.getSleepRange() + " milliseconds");
  }
  LOG.info("Replication amount = " + cfg.getReplication());
  LOG.info("Operations are:");
  NumberFormat percFormatter=Formatter.getPercentFormatter();
  Map<OperationType,OperationData> operations=cfg.getOperations();
  for (  OperationType type : operations.keySet()) {
    String name=type.name();
    LOG.info(name);
    OperationData opInfo=operations.get(type);
    LOG.info(" " + opInfo.getDistribution().name());
    if (opInfo.getPercent() != null) {
      LOG.info(" " + percFormatter.format(opInfo.getPercent()));
    }
 else {
      LOG.info(" ???");
    }
  }
}
