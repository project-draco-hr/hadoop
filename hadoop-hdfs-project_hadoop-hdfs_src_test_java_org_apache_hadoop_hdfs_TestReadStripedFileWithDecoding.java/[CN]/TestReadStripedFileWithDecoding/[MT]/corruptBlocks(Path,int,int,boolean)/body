{
  int recoverBlkNum=dataBlkDelNum + parityBlkDelNum;
  LocatedBlocks locatedBlocks=getLocatedBlocks(srcPath);
  LocatedStripedBlock lastBlock=(LocatedStripedBlock)locatedBlocks.getLastLocatedBlock();
  int[] delDataBlkIndices=StripedFileTestUtil.randomArray(0,dataBlocks,dataBlkDelNum);
  Assert.assertNotNull(delDataBlkIndices);
  int[] delParityBlkIndices=StripedFileTestUtil.randomArray(dataBlocks,dataBlocks + parityBlocks,parityBlkDelNum);
  Assert.assertNotNull(delParityBlkIndices);
  int[] delBlkIndices=new int[recoverBlkNum];
  System.arraycopy(delDataBlkIndices,0,delBlkIndices,0,delDataBlkIndices.length);
  System.arraycopy(delParityBlkIndices,0,delBlkIndices,delDataBlkIndices.length,delParityBlkIndices.length);
  ExtendedBlock[] delBlocks=new ExtendedBlock[recoverBlkNum];
  for (int i=0; i < recoverBlkNum; i++) {
    delBlocks[i]=StripedBlockUtil.constructInternalBlock(lastBlock.getBlock(),cellSize,dataBlocks,delBlkIndices[i]);
    if (deleteBlockFile) {
      cluster.corruptBlockOnDataNodesByDeletingBlockFile(delBlocks[i]);
    }
 else {
      cluster.corruptBlockOnDataNodes(delBlocks[i]);
    }
  }
}
