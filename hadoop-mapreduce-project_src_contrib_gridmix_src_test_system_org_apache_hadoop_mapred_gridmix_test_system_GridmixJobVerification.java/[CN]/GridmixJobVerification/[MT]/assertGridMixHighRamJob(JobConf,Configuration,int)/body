{
  int simuMapFactor=getMapFactor(simuJobConf);
  int simuReduceFactor=getReduceFactor(simuJobConf);
switch (option) {
case 1:
    Assert.assertTrue("Gridmix job has not honored the high " + "ram for map.",simuMapFactor >= 2 && simuMapFactor == getMapFactor(origConf));
  Assert.assertTrue("Gridmix job has not honored the high " + "ram for reduce.",simuReduceFactor >= 2 && simuReduceFactor == getReduceFactor(origConf));
break;
case 2:
Assert.assertTrue("Gridmix job has not honored the high " + "ram for map.",simuMapFactor >= 2 && simuMapFactor == getMapFactor(origConf));
break;
case 3:
Assert.assertTrue("Girdmix job has not honored the high " + "ram for reduce.",simuReduceFactor >= 2 && simuReduceFactor == getReduceFactor(origConf));
break;
case 4:
Assert.assertTrue("Gridmix job has honored the high " + "ram for map in emulation disable state.",simuMapFactor < 2 && simuMapFactor != getMapFactor(origConf));
Assert.assertTrue("Gridmix job has honored the high " + "ram for reduce in emulation disable state.",simuReduceFactor < 2 && simuReduceFactor != getReduceFactor(origConf));
break;
case 5:
Assert.assertTrue("Gridmix job has honored the high " + "ram for map in emulation disable state.",simuMapFactor < 2 && simuMapFactor != getMapFactor(origConf));
break;
case 6:
Assert.assertTrue("Girdmix job has honored the high " + "ram for reduce in emulation disable state.",simuReduceFactor < 2 && simuReduceFactor != getReduceFactor(origConf));
break;
}
}
