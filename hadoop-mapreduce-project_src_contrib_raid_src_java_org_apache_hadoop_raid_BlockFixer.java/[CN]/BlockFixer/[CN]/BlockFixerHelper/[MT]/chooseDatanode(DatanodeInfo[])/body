{
  DistributedFileSystem dfs=getDFS(new Path("/"));
  DatanodeInfo[] live=dfs.getClient().datanodeReport(DatanodeReportType.LIVE);
  LOG.info("Choosing a datanode from " + live.length + " live nodes while avoiding "+ locationsToAvoid.length);
  Random rand=new Random();
  DatanodeInfo chosen=null;
  int maxAttempts=1000;
  for (int i=0; i < maxAttempts && chosen == null; i++) {
    int idx=rand.nextInt(live.length);
    chosen=live[idx];
    for (    DatanodeInfo avoid : locationsToAvoid) {
      if (chosen.name.equals(avoid.name)) {
        LOG.info("Avoiding " + avoid.name);
        chosen=null;
        break;
      }
    }
  }
  if (chosen == null) {
    throw new IOException("Could not choose datanode");
  }
  LOG.info("Choosing datanode " + chosen.name);
  return chosen;
}
