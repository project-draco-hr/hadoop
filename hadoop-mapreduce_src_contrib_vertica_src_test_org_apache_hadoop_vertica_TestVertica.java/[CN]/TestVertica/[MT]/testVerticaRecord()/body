{
  if (!AllTests.isSetup()) {
    return;
  }
  List<Integer> types=new ArrayList<Integer>();
  List<Object> values=new ArrayList<Object>();
  DataOutputBuffer out=new DataOutputBuffer();
  DataInputBuffer in=new DataInputBuffer();
  DateFormat datefmt=new SimpleDateFormat("yyyy-MM-dd");
  DateFormat timefmt=new SimpleDateFormat("HH:mm:ss");
  DateFormat tmstmpfmt=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
  types.add(Types.BIGINT);
  values.add(209348039485345L);
  types.add(Types.INTEGER);
  values.add(2342345);
  types.add(Types.TINYINT);
  values.add((short)564);
  types.add(Types.SMALLINT);
  values.add((short)4);
  types.add(Types.REAL);
  values.add(new BigDecimal(15234342345.532637));
  types.add(Types.DECIMAL);
  values.add(new BigDecimal(346223093.4256));
  types.add(Types.NUMERIC);
  values.add(new BigDecimal(209232301132.4203));
  types.add(Types.DOUBLE);
  values.add(934029342.234);
  types.add(Types.FLOAT);
  values.add((float)62304.235);
  types.add(Types.BINARY);
  values.add(new byte[10]);
  types.add(Types.LONGVARBINARY);
  values.add(new byte[10]);
  types.add(Types.VARBINARY);
  values.add(new byte[10]);
  types.add(Types.BOOLEAN);
  values.add(new Boolean(true));
  types.add(Types.CHAR);
  values.add('x');
  types.add(Types.LONGNVARCHAR);
  values.add("2ialnnnnsfm9.3;olainlekf nasl f'\\4\r\n");
  types.add(Types.LONGVARCHAR);
  values.add("3jflin4f'\\4\r\n'");
  types.add(Types.NCHAR);
  values.add("jf|ls4\\4\r\nf44sf");
  types.add(Types.VARCHAR);
  values.add("4filjsf!@#$^&)*()");
  types.add(Types.DATE);
  values.add(new Date(datefmt.parse("2009-06-07").getTime()));
  types.add(Types.TIME);
  values.add(new Time(timefmt.parse("16:17:18.90").getTime()));
  types.add(Types.TIMESTAMP);
  values.add(new Timestamp(tmstmpfmt.parse("2007-08-09 6:07:05.06").getTime()));
  types.add(Types.BIGINT);
  values.add(null);
  types.add(Types.INTEGER);
  values.add(null);
  types.add(Types.TINYINT);
  values.add(null);
  types.add(Types.SMALLINT);
  values.add(null);
  types.add(Types.REAL);
  values.add(null);
  types.add(Types.DECIMAL);
  values.add(null);
  types.add(Types.NUMERIC);
  values.add(null);
  types.add(Types.DOUBLE);
  values.add(null);
  types.add(Types.FLOAT);
  values.add(null);
  types.add(Types.BINARY);
  values.add(null);
  types.add(Types.LONGVARBINARY);
  values.add(null);
  types.add(Types.VARBINARY);
  values.add(null);
  types.add(Types.BOOLEAN);
  values.add(null);
  types.add(Types.CHAR);
  values.add(null);
  types.add(Types.LONGNVARCHAR);
  values.add(null);
  types.add(Types.LONGVARCHAR);
  values.add(null);
  types.add(Types.NCHAR);
  values.add(null);
  types.add(Types.VARCHAR);
  values.add(null);
  types.add(Types.DATE);
  values.add(null);
  types.add(Types.TIME);
  values.add(null);
  types.add(Types.TIMESTAMP);
  values.add(null);
  String sql1=null;
  sql1=recordTest(types,values,out,in,true);
  out=new DataOutputBuffer();
  in=new DataInputBuffer();
  String sql2=null;
  sql2=recordTest(types,values,out,in,true);
  assertEquals("SQL Serialization test failed",sql1,sql2);
}
