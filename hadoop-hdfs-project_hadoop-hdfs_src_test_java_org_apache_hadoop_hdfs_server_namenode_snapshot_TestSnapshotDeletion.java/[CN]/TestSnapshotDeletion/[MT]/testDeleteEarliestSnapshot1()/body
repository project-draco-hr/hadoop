{
  Path file0=new Path(sub,"file0");
  Path file1=new Path(sub,"file1");
  DFSTestUtil.createFile(hdfs,file0,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,file1,BLOCKSIZE,REPLICATION,seed);
  String snapshotName="s1";
  try {
    hdfs.deleteSnapshot(sub,snapshotName);
    fail("SnapshotException expected: " + sub.toString() + " is not snapshottable yet");
  }
 catch (  Exception e) {
    GenericTestUtils.assertExceptionContains("Directory is not a snapshottable directory: " + sub,e);
  }
  hdfs.allowSnapshot(sub.toString());
  try {
    hdfs.deleteSnapshot(sub,snapshotName);
    fail("SnapshotException expected: snapshot " + snapshotName + " does not exist for "+ sub.toString());
  }
 catch (  Exception e) {
    GenericTestUtils.assertExceptionContains("Cannot delete snapshot " + snapshotName + " from path "+ sub.toString()+ ": the snapshot does not exist.",e);
  }
  hdfs.createSnapshot(sub,snapshotName);
  hdfs.deleteSnapshot(sub,snapshotName);
  hdfs.createSnapshot(sub,snapshotName);
  Path newFile=new Path(sub,"newFile");
  DFSTestUtil.createFile(hdfs,newFile,BLOCKSIZE,REPLICATION,seed);
  String snapshotName2="s2";
  hdfs.createSnapshot(sub,snapshotName2);
  Path ss=SnapshotTestHelper.getSnapshotPath(sub,snapshotName2,"newFile");
  FileStatus statusBeforeDeletion=hdfs.getFileStatus(ss);
  hdfs.deleteSnapshot(sub,snapshotName);
  FileStatus statusAfterDeletion=hdfs.getFileStatus(ss);
  System.out.println("Before deletion: " + statusBeforeDeletion.toString() + "\n"+ "After deletion: "+ statusAfterDeletion.toString());
  assertEquals(statusBeforeDeletion.toString(),statusAfterDeletion.toString());
}
