{
  ECBlock[] inputBlocks=codingStep.getInputBlocks();
  ECBlock[] outputBlocks=codingStep.getOutputBlocks();
  ECChunk[] inputChunks=new ECChunk[inputBlocks.length];
  ECChunk[] outputChunks=new ECChunk[outputBlocks.length];
  for (int i=0; i < numChunksInBlock; ++i) {
    for (int j=0; j < inputBlocks.length; ++j) {
      inputChunks[j]=((TestBlock)inputBlocks[j]).chunks[i];
    }
    for (int j=0; j < outputBlocks.length; ++j) {
      outputChunks[j]=allocateOutputChunk();
      ((TestBlock)outputBlocks[j]).chunks[i]=outputChunks[j];
    }
    codingStep.performCoding(inputChunks,outputChunks);
  }
  codingStep.finish();
}
