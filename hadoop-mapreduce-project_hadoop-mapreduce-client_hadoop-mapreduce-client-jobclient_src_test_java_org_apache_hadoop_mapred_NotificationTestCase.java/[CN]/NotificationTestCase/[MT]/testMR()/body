{
  System.out.println(launchWordCount(this.createJobConf(),"a b c d e f g h",1,1));
  boolean keepTrying=true;
  for (int tries=0; tries < 30 && keepTrying; tries++) {
    Thread.sleep(50);
    keepTrying=!(NotificationServlet.counter == 2);
  }
  assertEquals(2,NotificationServlet.counter);
  assertEquals(0,NotificationServlet.failureCounter);
  Path inDir=new Path("notificationjob/input");
  Path outDir=new Path("notificationjob/output");
  if (isLocalFS()) {
    String localPathRoot=System.getProperty("test.build.data","/tmp").toString().replace(' ','+');
    ;
    inDir=new Path(localPathRoot,inDir);
    outDir=new Path(localPathRoot,outDir);
  }
  System.out.println(UtilsForTests.runJobKill(this.createJobConf(),inDir,outDir).getID());
  keepTrying=true;
  for (int tries=0; tries < 30 && keepTrying; tries++) {
    Thread.sleep(50);
    keepTrying=!(NotificationServlet.counter == 4);
  }
  assertEquals(4,NotificationServlet.counter);
  assertEquals(0,NotificationServlet.failureCounter);
  System.out.println(UtilsForTests.runJobFail(this.createJobConf(),inDir,outDir).getID());
  keepTrying=true;
  for (int tries=0; tries < 30 && keepTrying; tries++) {
    Thread.sleep(50);
    keepTrying=!(NotificationServlet.counter == 6);
  }
  assertEquals(6,NotificationServlet.counter);
  assertEquals(0,NotificationServlet.failureCounter);
}
