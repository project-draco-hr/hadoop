{
  assumeNotWindows();
  Path fileAbs=new Path(testBaseDir1() + "/file");
  Path fileQual=new Path(testURI().toString(),fileAbs);
  Path link=new Path(testBaseDir1() + "/linkToFile");
  Path linkQual=new Path(testURI().toString(),link.toString());
  wrapper.createSymlink(fileAbs,link,false);
  FileUtil.fullyDelete(new File(link.toUri().getPath()));
  wrapper.createSymlink(fileAbs,link,false);
  try {
    wrapper.getFileStatus(link);
    fail("Got FileStatus for dangling link");
  }
 catch (  FileNotFoundException f) {
  }
  UserGroupInformation user=UserGroupInformation.getCurrentUser();
  FileStatus fsd=wrapper.getFileLinkStatus(link);
  assertEquals(fileQual,fsd.getSymlink());
  assertTrue(fsd.isSymlink());
  assertFalse(fsd.isDirectory());
  assertEquals(user.getUserName(),fsd.getOwner());
  assertEquals(user.getGroupNames()[0],fsd.getGroup());
  assertEquals(linkQual,fsd.getPath());
  try {
    readFile(link);
    fail("Got FileStatus for dangling link");
  }
 catch (  FileNotFoundException f) {
  }
  createAndWriteFile(fileAbs);
  wrapper.getFileStatus(link);
}
