{
  r.setSeed(seed);
  for (int i=0; i < iter; ++i) {
switch (r.nextInt(7)) {
case 0:
      assertEquals((byte)(r.nextInt() & 0xFF),in.readByte());
    break;
case 1:
  assertEquals((short)(r.nextInt() & 0xFFFF),in.readShort());
break;
case 2:
assertEquals(r.nextInt(),in.readInt());
break;
case 3:
assertEquals(r.nextLong(),in.readLong());
break;
case 4:
assertEquals(Double.doubleToLongBits(r.nextDouble()),Double.doubleToLongBits(in.readDouble()));
break;
case 5:
assertEquals(Float.floatToIntBits(r.nextFloat()),Float.floatToIntBits(in.readFloat()));
break;
case 6:
int len=r.nextInt(1024);
byte[] vb=new byte[len];
r.nextBytes(vb);
byte[] b=new byte[len];
in.readFully(b,0,len);
assertArrayEquals(vb,b);
break;
}
}
}
