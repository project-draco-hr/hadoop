{
  this.trackerId=trackerId;
  this.numDir=numDir;
  localDirs=new String[numDir];
  final JobConf conf;
  if (cfg == null) {
    conf=createJobConf();
  }
 else {
    conf=createJobConf(cfg);
  }
  if (hostname != null) {
    conf.set(TTConfig.TT_HOST_NAME,hostname);
  }
  conf.set(TTConfig.TT_HTTP_ADDRESS,"0.0.0.0:0");
  conf.set(TTConfig.TT_REPORT_ADDRESS,"127.0.0.1:" + taskTrackerPort);
  File localDirBase=new File(conf.get(MRConfig.LOCAL_DIR)).getAbsoluteFile();
  localDirBase.mkdirs();
  StringBuffer localPath=new StringBuffer();
  for (int i=0; i < numDir; ++i) {
    File ttDir=new File(localDirBase,Integer.toString(trackerId) + "_" + i);
    if (!ttDir.mkdirs()) {
      if (!ttDir.isDirectory()) {
        throw new IOException("Mkdirs failed to create " + ttDir);
      }
    }
    localDirs[i]=ttDir.toString();
    if (i != 0) {
      localPath.append(",");
    }
    localPath.append(localDirs[i]);
  }
  conf.set(MRConfig.LOCAL_DIR,localPath.toString());
  LOG.info(MRConfig.LOCAL_DIR + " is " + localPath);
  try {
    tt=ugi.doAs(new PrivilegedExceptionAction<TaskTracker>(){
      public TaskTracker run() throws InterruptedException, IOException {
        return createTaskTracker(conf);
      }
    }
);
    isInitialized=true;
  }
 catch (  Throwable e) {
    isDead=true;
    tt=null;
    LOG.error("task tracker " + trackerId + " crashed",e);
  }
}
