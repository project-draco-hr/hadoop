{
  this.conf=conf;
  Class<? extends ResourceScheduler> klass=conf.getClass(SLSConfiguration.RM_SCHEDULER,null,ResourceScheduler.class);
  scheduler=ReflectionUtils.newInstance(klass,conf);
  metricsON=conf.getBoolean(SLSConfiguration.METRICS_SWITCH,true);
  if (metricsON) {
    try {
      initMetrics();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  ShutdownHookManager.get().addShutdownHook(new Runnable(){
    @Override public void run(){
      try {
        if (metricsLogBW != null) {
          metricsLogBW.write("]");
          metricsLogBW.close();
        }
        if (web != null) {
          web.stop();
        }
        tearDown();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
,SHUTDOWN_HOOK_PRIORITY);
}
