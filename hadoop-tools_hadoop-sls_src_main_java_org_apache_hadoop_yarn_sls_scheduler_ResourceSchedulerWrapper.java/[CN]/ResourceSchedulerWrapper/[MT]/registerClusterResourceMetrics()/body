{
  metrics.register("variable.cluster.allocated.memory",new Gauge<Long>(){
    @Override public Long getValue(){
      if (scheduler == null || scheduler.getRootQueueMetrics() == null) {
        return 0L;
      }
 else {
        return scheduler.getRootQueueMetrics().getAllocatedMB();
      }
    }
  }
);
  metrics.register("variable.cluster.allocated.vcores",new Gauge<Long>(){
    @Override public Long getValue(){
      if (scheduler == null || scheduler.getRootQueueMetrics() == null) {
        return 0L;
      }
 else {
        return scheduler.getRootQueueMetrics().getAllocatedVirtualCores();
      }
    }
  }
);
  metrics.register("variable.cluster.available.memory",new Gauge<Long>(){
    @Override public Long getValue(){
      if (scheduler == null || scheduler.getRootQueueMetrics() == null) {
        return 0L;
      }
 else {
        return scheduler.getRootQueueMetrics().getAvailableMB();
      }
    }
  }
);
  metrics.register("variable.cluster.available.vcores",new Gauge<Long>(){
    @Override public Long getValue(){
      if (scheduler == null || scheduler.getRootQueueMetrics() == null) {
        return 0L;
      }
 else {
        return scheduler.getRootQueueMetrics().getAvailableVirtualCores();
      }
    }
  }
);
}
