{
  if (name == null) {
    LOG.warn("Metric was emitted with no name.");
    return;
  }
 else   if (value == null) {
    LOG.warn("Metric name " + name + " was emitted with a null value.");
    return;
  }
 else   if (type == null) {
    LOG.warn("Metric name " + name + ", value "+ value+ " has no type.");
    return;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Emitting metric " + name + ", type "+ type+ ", value "+ value+ " from hostname"+ hostName);
  }
  String units=getUnits(name);
  int slope=getSlope(name);
  int tmax=getTmax(name);
  int dmax=getDmax(name);
  offset=0;
  String groupName=name.substring(0,name.lastIndexOf("."));
  xdr_int(128);
  xdr_string(hostName);
  xdr_string(name);
  xdr_int(0);
  xdr_string(type);
  xdr_string(name);
  xdr_string(units);
  xdr_int(slope);
  xdr_int(tmax);
  xdr_int(dmax);
  xdr_int(1);
  xdr_string("GROUP");
  xdr_string(groupName);
  for (  SocketAddress socketAddress : metricsServers) {
    DatagramPacket packet=new DatagramPacket(buffer,offset,socketAddress);
    datagramSocket.send(packet);
  }
  offset=0;
  xdr_int(133);
  xdr_string(hostName);
  xdr_string(name);
  xdr_int(0);
  xdr_string("%s");
  xdr_string(value);
  for (  SocketAddress socketAddress : metricsServers) {
    DatagramPacket packet=new DatagramPacket(buffer,offset,socketAddress);
    datagramSocket.send(packet);
  }
}
