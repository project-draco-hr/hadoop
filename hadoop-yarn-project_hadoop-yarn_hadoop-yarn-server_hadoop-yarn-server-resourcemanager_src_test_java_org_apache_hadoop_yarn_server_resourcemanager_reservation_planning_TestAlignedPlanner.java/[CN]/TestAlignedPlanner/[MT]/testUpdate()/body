{
  ReservationDefinition rrFlex=createReservationDefinition(10 * step,14 * step,new ReservationRequest[]{ReservationRequest.newInstance(Resource.newInstance(1024,1),100,1,2 * step)},ReservationRequestInterpreter.R_ALL,"u1");
  ReservationDefinition rrBlock=createReservationDefinition(10 * step,11 * step,new ReservationRequest[]{ReservationRequest.newInstance(Resource.newInstance(1024,1),100,100,step)},ReservationRequestInterpreter.R_ALL,"u1");
  ReservationId flexReservationID=ReservationSystemTestUtil.getNewReservationId();
  ReservationId blockReservationID=ReservationSystemTestUtil.getNewReservationId();
  agent.createReservation(blockReservationID,"uBlock",plan,rrBlock);
  agent.createReservation(flexReservationID,"uFlex",plan,rrFlex);
  agent.deleteReservation(blockReservationID,"uBlock",plan);
  agent.updateReservation(flexReservationID,"uFlex",plan,rrFlex);
  assertTrue("Agent-based allocation failed",flexReservationID != null);
  assertTrue("Agent-based allocation failed",plan.getAllReservations().size() == 1);
  ReservationAllocation alloc1=plan.getReservationById(flexReservationID);
  assertTrue(alloc1.toString(),check(alloc1,10 * step,14 * step,50,1024,1));
}
