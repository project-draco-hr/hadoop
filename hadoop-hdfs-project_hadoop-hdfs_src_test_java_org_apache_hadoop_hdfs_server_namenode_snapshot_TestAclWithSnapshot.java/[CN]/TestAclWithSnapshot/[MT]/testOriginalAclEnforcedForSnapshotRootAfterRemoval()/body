{
  FileSystem.mkdirs(hdfs,path,FsPermission.createImmutable((short)0700));
  List<AclEntry> aclSpec=Lists.newArrayList(aclEntry(ACCESS,USER,ALL),aclEntry(ACCESS,USER,"bruce",READ_EXECUTE),aclEntry(ACCESS,GROUP,NONE),aclEntry(ACCESS,OTHER,NONE));
  hdfs.setAcl(path,aclSpec);
  assertDirPermissionGranted(fsAsBruce,BRUCE,path);
  assertDirPermissionDenied(fsAsDiana,DIANA,path);
  SnapshotTestHelper.createSnapshot(hdfs,path,snapshotName);
  AclStatus s=hdfs.getAclStatus(path);
  AclEntry[] returned=s.getEntries().toArray(new AclEntry[0]);
  assertArrayEquals(new AclEntry[]{aclEntry(ACCESS,USER,"bruce",READ_EXECUTE),aclEntry(ACCESS,GROUP,NONE)},returned);
  assertPermission((short)0750,path);
  s=hdfs.getAclStatus(snapshotPath);
  returned=s.getEntries().toArray(new AclEntry[0]);
  assertArrayEquals(new AclEntry[]{aclEntry(ACCESS,USER,"bruce",READ_EXECUTE),aclEntry(ACCESS,GROUP,NONE)},returned);
  assertPermission((short)0750,snapshotPath);
  assertDirPermissionGranted(fsAsBruce,BRUCE,snapshotPath);
  assertDirPermissionDenied(fsAsDiana,DIANA,snapshotPath);
  hdfs.removeAcl(path);
  doSnapshotRootRemovalAssertions(path,snapshotPath);
  restart(false);
  doSnapshotRootRemovalAssertions(path,snapshotPath);
  restart(true);
  doSnapshotRootRemovalAssertions(path,snapshotPath);
}
