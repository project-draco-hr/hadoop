{
  final int fetcher=7;
  Path onDiskMapOutputPath=new Path(name.getMethodName() + "/foo");
  Path shuffledToDisk=OnDiskMapOutput.getTempPath(onDiskMapOutputPath,fetcher);
  fs=FileSystem.getLocal(job).getRaw();
  MapOutputFile mof=mock(MapOutputFile.class);
  OnDiskMapOutput<Text,Text> odmo=new OnDiskMapOutput<Text,Text>(map1ID,id,mm,100L,job,mof,fetcher,true,fs,onDiskMapOutputPath);
  String mapData="MAPDATA12345678901234567890";
  ShuffleHeader header=new ShuffleHeader(map1ID.toString(),14,10,1);
  ByteArrayOutputStream bout=new ByteArrayOutputStream();
  DataOutputStream dos=new DataOutputStream(bout);
  IFileOutputStream ios=new IFileOutputStream(dos);
  header.write(dos);
  int headerSize=dos.size();
  try {
    ios.write(mapData.getBytes());
  }
  finally {
    ios.close();
  }
  int dataSize=bout.size() - headerSize;
  MapHost host=new MapHost("TestHost","http://test/url");
  ByteArrayInputStream bin=new ByteArrayInputStream(bout.toByteArray());
  try {
    bin.read(new byte[headerSize],0,headerSize);
    odmo.shuffle(host,bin,dataSize,dataSize,metrics,Reporter.NULL);
  }
  finally {
    bin.close();
  }
  byte[] corrupted=bout.toByteArray();
  corrupted[headerSize + (dataSize / 2)]=0x0;
  try {
    bin=new ByteArrayInputStream(corrupted);
    bin.read(new byte[headerSize],0,headerSize);
    odmo.shuffle(host,bin,dataSize,dataSize,metrics,Reporter.NULL);
    fail("OnDiskMapOutput.shuffle didn't detect the corrupted map partition file");
  }
 catch (  ChecksumException e) {
    LOG.info("The expected checksum exception was thrown.",e);
  }
 finally {
    bin.close();
  }
  IFileInputStream iFin=new IFileInputStream(fs.open(shuffledToDisk),dataSize,job);
  try {
    iFin.read(new byte[dataSize],0,dataSize);
  }
  finally {
    iFin.close();
  }
}
