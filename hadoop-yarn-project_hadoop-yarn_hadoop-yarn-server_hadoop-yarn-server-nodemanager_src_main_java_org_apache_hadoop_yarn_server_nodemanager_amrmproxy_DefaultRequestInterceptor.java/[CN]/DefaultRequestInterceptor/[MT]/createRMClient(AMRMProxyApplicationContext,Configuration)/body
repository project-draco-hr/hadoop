{
  if (appContext.getNMCotext().isDistributedSchedulingEnabled()) {
    return user.doAs(new PrivilegedExceptionAction<DistributedSchedulingAMProtocol>(){
      @Override public DistributedSchedulingAMProtocol run() throws Exception {
        setAMRMTokenService(conf);
        return ServerRMProxy.createRMProxy(conf,DistributedSchedulingAMProtocol.class);
      }
    }
);
  }
 else {
    return user.doAs(new PrivilegedExceptionAction<ApplicationMasterProtocol>(){
      @Override public ApplicationMasterProtocol run() throws Exception {
        setAMRMTokenService(conf);
        return ClientRMProxy.createRMProxy(conf,ApplicationMasterProtocol.class);
      }
    }
);
  }
}
