{
  String src=srcArg;
  FSPermissionChecker pc=fsd.getPermissionChecker();
  byte[][] pathComponents=FSDirectory.getPathComponentsForReservedPath(src);
  String startAfterString=new String(startAfter);
  src=fsd.resolvePath(pc,src,pathComponents);
  if (FSDirectory.isReservedName(startAfterString)) {
    byte[][] startAfterComponents=FSDirectory.getPathComponentsForReservedPath(startAfterString);
    try {
      String tmp=FSDirectory.resolvePath(src,startAfterComponents,fsd);
      byte[][] regularPath=INode.getPathComponents(tmp);
      startAfter=regularPath[regularPath.length - 1];
    }
 catch (    IOException e) {
      throw new DirectoryListingStartAfterNotFoundException("Can't find startAfter " + startAfterString);
    }
  }
  boolean isSuperUser=true;
  if (fsd.isPermissionEnabled()) {
    if (fsd.isDir(src)) {
      fsd.checkPathAccess(pc,src,FsAction.READ_EXECUTE);
    }
 else {
      fsd.checkTraverse(pc,src);
    }
    isSuperUser=pc.isSuperUser();
  }
  return getListing(fsd,src,startAfter,needLocation,isSuperUser);
}
