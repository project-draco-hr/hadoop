{
  String src=null;
  final INodesInPath iip;
  if (fsd.isPermissionEnabled()) {
    FSPermissionChecker pc=fsd.getPermissionChecker();
    iip=fsd.resolvePath(pc,srcArg);
    src=iip.getPath();
  }
 else {
    src=FSDirectory.resolvePath(srcArg,fsd);
    iip=fsd.getINodesInPath(src,true);
  }
  if (startAfter.length > 0 && startAfter[0] == Path.SEPARATOR_CHAR) {
    final String startAfterString=DFSUtil.bytes2String(startAfter);
    if (FSDirectory.isReservedName(startAfterString)) {
      try {
        byte[][] components=INode.getPathComponents(startAfterString);
        components=FSDirectory.resolveComponents(components,fsd);
        startAfter=components[components.length - 1];
      }
 catch (      IOException e) {
        throw new DirectoryListingStartAfterNotFoundException("Can't find startAfter " + startAfterString);
      }
    }
  }
  boolean isSuperUser=true;
  if (fsd.isPermissionEnabled()) {
    FSPermissionChecker pc=fsd.getPermissionChecker();
    if (iip.getLastINode() != null && iip.getLastINode().isDirectory()) {
      fsd.checkPathAccess(pc,iip,FsAction.READ_EXECUTE);
    }
 else {
      fsd.checkTraverse(pc,iip);
    }
    isSuperUser=pc.isSuperUser();
  }
  return getListing(fsd,iip,src,startAfter,needLocation,isSuperUser);
}
