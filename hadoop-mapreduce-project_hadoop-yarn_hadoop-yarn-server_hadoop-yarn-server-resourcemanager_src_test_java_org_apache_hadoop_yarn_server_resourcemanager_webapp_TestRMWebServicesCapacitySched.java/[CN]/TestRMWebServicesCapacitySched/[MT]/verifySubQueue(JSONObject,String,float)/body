{
  int numExpectedElements=11;
  boolean isParentQueue=true;
  if (!info.has("subQueues")) {
    numExpectedElements=20;
    isParentQueue=false;
  }
  assertEquals("incorrect number of elements",numExpectedElements,info.length());
  float absCapacity=(float)info.getDouble("absoluteCapacity");
  verifySubQueueGeneric(q,(float)info.getDouble("usedCapacity"),(float)info.getDouble("capacity"),(float)info.getDouble("maxCapacity"),absCapacity,(float)info.getDouble("absoluteMaxCapacity"),parentAbsCapacity,info.getString("queueName"),info.getString("state"));
  if (isParentQueue) {
    JSONArray arr=info.getJSONArray("subQueues");
    for (int i=0; i < arr.length(); i++) {
      JSONObject obj=arr.getJSONObject(i);
      String q2=q + "." + obj.getString("queueName");
      verifySubQueue(obj,q2,absCapacity);
    }
  }
 else {
    verifyLeafQueueGeneric(q,info.getInt("userLimit"),(float)info.getDouble("userLimitFactor"));
  }
}
