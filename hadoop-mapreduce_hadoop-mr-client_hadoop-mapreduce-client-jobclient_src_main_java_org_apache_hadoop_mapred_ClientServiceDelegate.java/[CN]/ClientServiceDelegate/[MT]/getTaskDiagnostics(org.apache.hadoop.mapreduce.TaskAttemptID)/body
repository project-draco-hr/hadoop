{
  List<String> list=null;
  org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID=TypeConverter.toYarn(arg0);
  GetDiagnosticsRequest request=recordFactory.newRecordInstance(GetDiagnosticsRequest.class);
  MRClientProtocol protocol;
  try {
    request.setTaskAttemptId(attemptID);
    protocol=getProxy(arg0.getJobID());
    if (protocol == null) {
      return new String[0];
    }
    list=getProxy(arg0.getJobID()).getDiagnostics(request).getDiagnosticsList();
  }
 catch (  YarnRemoteException yre) {
    LOG.warn(RPCUtil.toString(yre));
    throw yre;
  }
catch (  Exception e) {
    LOG.debug("Failed to contact application master ",e);
    try {
      protocol=getRefreshedProxy(arg0.getJobID());
      if (protocol == null) {
        return new String[0];
      }
      list=protocol.getDiagnostics(request).getDiagnosticsList();
    }
 catch (    YarnRemoteException yre) {
      LOG.warn(RPCUtil.toString(yre));
      throw yre;
    }
  }
  String[] result=new String[list.size()];
  int i=0;
  for (  String c : list) {
    result[i++]=c.toString();
  }
  return result;
}
