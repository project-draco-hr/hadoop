{
  List<org.apache.hadoop.mapreduce.v2.api.records.TaskReport> taskReports=null;
  org.apache.hadoop.mapreduce.v2.api.records.JobId nJobID=TypeConverter.toYarn(jobID);
  GetTaskReportsRequest request=recordFactory.newRecordInstance(GetTaskReportsRequest.class);
  MRClientProtocol protocol=null;
  try {
    request.setJobId(nJobID);
    request.setTaskType(TypeConverter.toYarn(taskType));
    protocol=getProxy(jobID);
    if (protocol == null) {
      return new org.apache.hadoop.mapreduce.TaskReport[0];
    }
    taskReports=getProxy(jobID).getTaskReports(request).getTaskReportList();
  }
 catch (  YarnRemoteException yre) {
    LOG.warn(RPCUtil.toString(yre));
    throw yre;
  }
catch (  Exception e) {
    LOG.debug("Failed to contact application master ",e);
    try {
      request.setJobId(nJobID);
      request.setTaskType(TypeConverter.toYarn(taskType));
      protocol=getRefreshedProxy(jobID);
      if (protocol == null) {
        return new org.apache.hadoop.mapreduce.TaskReport[0];
      }
      taskReports=protocol.getTaskReports(request).getTaskReportList();
    }
 catch (    YarnRemoteException yre) {
      LOG.warn(RPCUtil.toString(yre));
      throw yre;
    }
  }
  return TypeConverter.fromYarn(taskReports).toArray(new org.apache.hadoop.mapreduce.TaskReport[0]);
}
