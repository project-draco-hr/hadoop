{
  ApplicationId appId=ApplicationId.newInstance(0,1);
  RMApp app=rmAppsMapInContext.get(appId);
  if (app == null) {
    app=createAppAndRegister(appId);
  }
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  RMAppAttempt appAttempt=createRMAppAttempt(appAttemptId);
  metricsPublisher.appAttemptRegistered(appAttempt,Integer.MAX_VALUE + 1L);
  when(app.getFinalApplicationStatus()).thenReturn(FinalApplicationStatus.UNDEFINED);
  metricsPublisher.appAttemptFinished(appAttempt,RMAppAttemptState.FINISHED,app,Integer.MAX_VALUE + 2L);
  dispatcher.await();
  String outputDirApp=getTimelineEntityDir(app) + "/" + TimelineEntityType.YARN_APPLICATION_ATTEMPT+ "/";
  File entityFolder=new File(outputDirApp);
  Assert.assertTrue(entityFolder.isDirectory());
  String timelineServiceFileName=appAttemptId.toString() + FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
  File appFile=new File(outputDirApp,timelineServiceFileName);
  Assert.assertTrue(appFile.exists());
  Assert.assertEquals("Expected 2 events to be published",2,getNumOfNonEmptyLines(appFile));
}
