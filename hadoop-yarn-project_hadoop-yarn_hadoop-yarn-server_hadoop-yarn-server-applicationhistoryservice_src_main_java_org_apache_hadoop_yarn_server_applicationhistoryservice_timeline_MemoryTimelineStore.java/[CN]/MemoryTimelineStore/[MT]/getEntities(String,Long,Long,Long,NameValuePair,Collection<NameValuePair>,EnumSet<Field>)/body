{
  if (limit == null) {
    limit=DEFAULT_LIMIT;
  }
  if (windowStart == null) {
    windowStart=Long.MIN_VALUE;
  }
  if (windowEnd == null) {
    windowEnd=Long.MAX_VALUE;
  }
  if (fields == null) {
    fields=EnumSet.allOf(Field.class);
  }
  List<TimelineEntity> entitiesSelected=new ArrayList<TimelineEntity>();
  for (  TimelineEntity entity : new PriorityQueue<TimelineEntity>(entities.values())) {
    if (entitiesSelected.size() >= limit) {
      break;
    }
    if (!entity.getEntityType().equals(entityType)) {
      continue;
    }
    if (entity.getStartTime() <= windowStart) {
      continue;
    }
    if (entity.getStartTime() > windowEnd) {
      continue;
    }
    if (primaryFilter != null && !matchPrimaryFilter(entity.getPrimaryFilters(),primaryFilter)) {
      continue;
    }
    if (secondaryFilters != null) {
      boolean flag=true;
      for (      NameValuePair secondaryFilter : secondaryFilters) {
        if (secondaryFilter != null && !matchPrimaryFilter(entity.getPrimaryFilters(),secondaryFilter) && !matchFilter(entity.getOtherInfo(),secondaryFilter)) {
          flag=false;
          break;
        }
      }
      if (!flag) {
        continue;
      }
    }
    entitiesSelected.add(entity);
  }
  List<TimelineEntity> entitiesToReturn=new ArrayList<TimelineEntity>();
  for (  TimelineEntity entitySelected : entitiesSelected) {
    entitiesToReturn.add(maskFields(entitySelected,fields));
  }
  Collections.sort(entitiesToReturn);
  TimelineEntities entitiesWrapper=new TimelineEntities();
  entitiesWrapper.setEntities(entitiesToReturn);
  return entitiesWrapper;
}
