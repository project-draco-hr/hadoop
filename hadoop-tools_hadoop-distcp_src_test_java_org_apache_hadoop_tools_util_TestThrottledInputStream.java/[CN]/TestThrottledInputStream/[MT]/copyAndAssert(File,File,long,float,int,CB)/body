{
  long bandwidth;
  ThrottledInputStream in;
  long maxBPS=(long)(maxBandwidth / factor);
  if (maxBandwidth == 0) {
    in=new ThrottledInputStream(new FileInputStream(tmpFile));
  }
 else {
    in=new ThrottledInputStream(new FileInputStream(tmpFile),maxBPS);
  }
  OutputStream out=new FileOutputStream(outFile);
  try {
    if (flag == CB.BUFFER) {
      copyBytes(in,out,BUFF_SIZE);
    }
 else     if (flag == CB.BUFF_OFFSET) {
      copyBytesWithOffset(in,out,BUFF_SIZE);
    }
 else {
      copyByteByByte(in,out);
    }
    LOG.info(in);
    bandwidth=in.getBytesPerSec();
    Assert.assertEquals(in.getTotalBytesRead(),tmpFile.length());
    Assert.assertTrue(in.getBytesPerSec() > maxBandwidth / (factor * 1.2));
    Assert.assertTrue(in.getTotalSleepTime() > sleepTime || in.getBytesPerSec() <= maxBPS);
  }
  finally {
    IOUtils.closeStream(in);
    IOUtils.closeStream(out);
  }
  return bandwidth;
}
