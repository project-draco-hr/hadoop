{
  Job job=this.appCtx.getJob(MRApps.toJobID(jid));
  if (job == null) {
    throw new NotFoundException("job, " + jid + ", is not found");
  }
  checkAccess(job,hsr);
  TasksInfo allTasks=new TasksInfo();
  for (  Task task : job.getTasks().values()) {
    TaskType ttype=null;
    if (type != null && !type.isEmpty()) {
      try {
        ttype=MRApps.taskType(type);
      }
 catch (      YarnException e) {
        throw new BadRequestException("tasktype must be either m or r");
      }
    }
    if (ttype != null && task.getType() != ttype) {
      continue;
    }
    allTasks.add(new TaskInfo(task));
  }
  return allTasks;
}
