{
  NodeList capacitiesListInfos=partitionCapacitiesElem.getChildNodes();
  assertEquals("incorrect number of partitions",3,capacitiesListInfos.getLength());
  for (int k=0; k < capacitiesListInfos.getLength(); k++) {
    Element partitionCapacitiesInfo=(Element)capacitiesListInfos.item(k);
    String partitionName=WebServicesTestUtils.getXmlString(partitionCapacitiesInfo,"partitionName");
switch (partitionName) {
case LABEL_LX:
      verifyPartitionCapacityInfoXML(partitionCapacitiesInfo,lxCaps,0,lxMaxCaps,lxAbsCaps,0,lxAbsMaxCaps);
    break;
case LABEL_LY:
  verifyPartitionCapacityInfoXML(partitionCapacitiesInfo,lyCaps,0,lyMaxCaps,lyAbsCaps,0,lyAbsMaxCaps);
break;
case DEFAULT_PARTITION:
verifyPartitionCapacityInfoXML(partitionCapacitiesInfo,defCaps,0,defMaxCaps,defAbsCaps,0,defAbsMaxCaps);
break;
default :
Assert.fail("Unexpected partition" + partitionName);
}
}
}
