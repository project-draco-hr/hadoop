{
  assertEquals("incorrect number of partitions",CLUSTER_LABELS.size(),partitionsCapsArray.length());
  for (int j=0; j < partitionsCapsArray.length(); j++) {
    JSONObject partitionInfo=partitionsCapsArray.getJSONObject(j);
    String partitionName=partitionInfo.getString("partitionName");
switch (partitionName) {
case LABEL_LX:
      verifyPartitionCapacityInfoJson(partitionInfo,lxCaps,0,lxMaxCaps,lxAbsCaps,0,lxAbsMaxCaps);
    break;
case LABEL_LY:
  verifyPartitionCapacityInfoJson(partitionInfo,lyCaps,0,lyMaxCaps,lyAbsCaps,0,lyAbsMaxCaps);
break;
case DEFAULT_PARTITION:
verifyPartitionCapacityInfoJson(partitionInfo,defCaps,0,defMaxCaps,defAbsCaps,0,defAbsMaxCaps);
break;
default :
Assert.fail("Unexpected partition" + partitionName);
}
}
}
