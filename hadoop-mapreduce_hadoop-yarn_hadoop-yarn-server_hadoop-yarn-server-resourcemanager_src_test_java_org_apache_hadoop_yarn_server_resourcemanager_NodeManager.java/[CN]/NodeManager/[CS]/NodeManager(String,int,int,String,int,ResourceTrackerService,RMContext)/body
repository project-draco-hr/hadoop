{
  this.containerManagerAddress=hostName + ":" + containerManagerPort;
  this.nodeHttpAddress=hostName + ":" + httpPort;
  this.rackName=rackName;
  this.resourceTrackerService=resourceTrackerService;
  this.capability=Resources.createResource(memory);
  Resources.addTo(available,capability);
  this.nodeId=recordFactory.newRecordInstance(NodeId.class);
  this.nodeId.setHost(hostName);
  this.nodeId.setPort(containerManagerPort);
  RegisterNodeManagerRequest request=recordFactory.newRecordInstance(RegisterNodeManagerRequest.class);
  request.setHttpPort(httpPort);
  request.setNodeId(this.nodeId);
  request.setResource(capability);
  request.setNodeId(this.nodeId);
  resourceTrackerService.registerNodeManager(request).getRegistrationResponse();
  this.schedulerNode=new SchedulerNode(rmContext.getRMNodes().get(this.nodeId));
  Assert.assertEquals(memory,schedulerNode.getAvailableResource().getMemory());
}
