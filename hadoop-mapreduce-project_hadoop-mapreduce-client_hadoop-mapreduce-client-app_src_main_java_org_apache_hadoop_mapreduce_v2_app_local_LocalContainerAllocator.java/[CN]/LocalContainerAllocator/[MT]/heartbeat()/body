{
  AllocateRequest allocateRequest=AllocateRequest.newInstance(this.applicationAttemptId,this.lastResponseID,super.getApplicationProgress(),new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>(),null);
  AllocateResponse allocateResponse;
  try {
    allocateResponse=scheduler.allocate(allocateRequest);
    retrystartTime=System.currentTimeMillis();
  }
 catch (  Exception e) {
    if (System.currentTimeMillis() - retrystartTime >= retryInterval) {
      LOG.error("Could not contact RM after " + retryInterval + " milliseconds.");
      eventHandler.handle(new JobEvent(this.getJob().getID(),JobEventType.INTERNAL_ERROR));
      throw new YarnRuntimeException("Could not contact RM after " + retryInterval + " milliseconds.");
    }
    throw e;
  }
  if (allocateResponse.getAMCommand() != null) {
switch (allocateResponse.getAMCommand()) {
case AM_RESYNC:
case AM_SHUTDOWN:
      LOG.info("Event from RM: shutting down Application Master");
    eventHandler.handle(new JobEvent(this.getJob().getID(),JobEventType.JOB_AM_REBOOT));
  throw new YarnRuntimeException("Resource Manager doesn't recognize AttemptId: " + this.getContext().getApplicationID());
default :
String msg="Unhandled value of AMCommand: " + allocateResponse.getAMCommand();
LOG.error(msg);
throw new YarnRuntimeException(msg);
}
}
}
