{
  int errCode=-1;
  int numCorrupt=0;
  int cookie=0;
  final String noCorruptLine="has no CORRUPT files";
  final String noMoreCorruptLine="has no more CORRUPT files";
  final String cookiePrefix="Cookie:";
  boolean allDone=false;
  while (!allDone) {
    final StringBuffer url=new StringBuffer(baseUrl);
    if (cookie > 0) {
      url.append("&startblockafter=").append(String.valueOf(cookie));
    }
    URL path=new URL(url.toString());
    URLConnection connection=SecurityUtil.openSecureHttpConnection(path);
    InputStream stream=connection.getInputStream();
    BufferedReader input=new BufferedReader(new InputStreamReader(stream,"UTF-8"));
    try {
      String line=null;
      while ((line=input.readLine()) != null) {
        if (line.startsWith(cookiePrefix)) {
          try {
            cookie=Integer.parseInt(line.split("\t")[1]);
          }
 catch (          Exception e) {
            allDone=true;
            break;
          }
          continue;
        }
        if ((line.endsWith(noCorruptLine)) || (line.endsWith(noMoreCorruptLine)) || (line.endsWith(NamenodeFsck.NONEXISTENT_STATUS))) {
          allDone=true;
          break;
        }
        if ((line.isEmpty()) || (line.startsWith("FSCK started by")) || (line.startsWith("The filesystem under path")))         continue;
        numCorrupt++;
        if (numCorrupt == 1) {
          out.println("The list of corrupt files under path '" + dir + "' are:");
        }
        out.println(line);
      }
    }
  finally {
      input.close();
    }
  }
  out.println("The filesystem under path '" + dir + "' has "+ numCorrupt+ " CORRUPT files");
  if (numCorrupt == 0)   errCode=0;
  return errCode;
}
