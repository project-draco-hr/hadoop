{
  this.writtenRecordsCounter=writesCounter;
  this.checksumOut=new IFileOutputStream(out);
  this.rawOut=out;
  this.start=this.rawOut.getPos();
  if (codec != null) {
    this.compressor=CodecPool.getCompressor(codec);
    if (this.compressor != null) {
      this.compressor.reset();
      this.compressedOut=codec.createOutputStream(checksumOut,compressor);
      this.out=new FSDataOutputStream(this.compressedOut,null);
      this.compressOutput=true;
    }
 else {
      LOG.warn("Could not obtain compressor from CodecPool");
      this.out=new FSDataOutputStream(checksumOut,null);
    }
  }
 else {
    this.out=new FSDataOutputStream(checksumOut,null);
  }
  this.keyClass=keyClass;
  this.valueClass=valueClass;
  if (keyClass != null) {
    SerializationFactory serializationFactory=new SerializationFactory(conf);
    this.keySerializer=serializationFactory.getSerializer(keyClass);
    this.keySerializer.open(buffer);
    this.valueSerializer=serializationFactory.getSerializer(valueClass);
    this.valueSerializer.open(buffer);
  }
  this.ownOutputStream=ownOutputStream;
}
