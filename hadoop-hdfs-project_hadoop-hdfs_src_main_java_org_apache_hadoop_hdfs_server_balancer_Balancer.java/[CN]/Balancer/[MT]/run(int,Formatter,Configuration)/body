{
  try {
    final long bytesLeftToMove=init(nnc.getClient().getDatanodeStorageReport(DatanodeReportType.LIVE));
    if (bytesLeftToMove == 0) {
      System.out.println("The cluster is balanced. Exiting...");
      return ReturnStatus.SUCCESS;
    }
 else {
      LOG.info("Need to move " + StringUtils.byteDesc(bytesLeftToMove) + " to make the cluster balanced.");
    }
    final long bytesToMove=chooseStorageGroups();
    if (bytesToMove == 0) {
      System.out.println("No block can be moved. Exiting...");
      return ReturnStatus.NO_MOVE_BLOCK;
    }
 else {
      LOG.info("Will move " + StringUtils.byteDesc(bytesToMove) + " in this iteration");
    }
    formatter.format("%-24s %10d  %19s  %18s  %17s%n",DateFormat.getDateTimeInstance().format(new Date()),iteration,StringUtils.byteDesc(bytesMoved.get()),StringUtils.byteDesc(bytesLeftToMove),StringUtils.byteDesc(bytesToMove));
    if (!this.nnc.shouldContinue(dispatchBlockMoves())) {
      return ReturnStatus.NO_MOVE_PROGRESS;
    }
    return ReturnStatus.IN_PROGRESS;
  }
 catch (  IllegalArgumentException e) {
    System.out.println(e + ".  Exiting ...");
    return ReturnStatus.ILLEGAL_ARGS;
  }
catch (  IOException e) {
    System.out.println(e + ".  Exiting ...");
    return ReturnStatus.IO_EXCEPTION;
  }
catch (  InterruptedException e) {
    System.out.println(e + ".  Exiting ...");
    return ReturnStatus.INTERRUPTED;
  }
 finally {
    dispatcherExecutor.shutdownNow();
    moverExecutor.shutdownNow();
  }
}
