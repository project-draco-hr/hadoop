{
  for (Iterator<NodeTask> tasks=nodeTasks.iterator(); tasks.hasNext(); ) {
    NodeTask task=tasks.next();
    BalancerDatanode target=task.getDatanode();
    PendingBlockMove pendingBlock=new PendingBlockMove();
    if (target.addPendingBlock(pendingBlock)) {
      pendingBlock.source=this;
      pendingBlock.target=target;
      if (pendingBlock.chooseBlockAndProxy()) {
        long blockSize=pendingBlock.block.getNumBytes();
        scheduledSize-=blockSize;
        task.size-=blockSize;
        if (task.size == 0) {
          tasks.remove();
        }
        return pendingBlock;
      }
 else {
        target.removePendingBlock(pendingBlock);
      }
    }
  }
  return null;
}
