{
  final long movedWinWidth=conf.getLong(DFSConfigKeys.DFS_BALANCER_MOVEDWINWIDTH_KEY,DFSConfigKeys.DFS_BALANCER_MOVEDWINWIDTH_DEFAULT);
  final int moverThreads=conf.getInt(DFSConfigKeys.DFS_BALANCER_MOVERTHREADS_KEY,DFSConfigKeys.DFS_BALANCER_MOVERTHREADS_DEFAULT);
  final int dispatcherThreads=conf.getInt(DFSConfigKeys.DFS_BALANCER_DISPATCHERTHREADS_KEY,DFSConfigKeys.DFS_BALANCER_DISPATCHERTHREADS_DEFAULT);
  final int maxConcurrentMovesPerNode=conf.getInt(DFSConfigKeys.DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_KEY,DFSConfigKeys.DFS_DATANODE_BALANCE_MAX_NUM_CONCURRENT_MOVES_DEFAULT);
  this.nnc=theblockpool;
  this.dispatcher=new Dispatcher(theblockpool,p.nodesToBeIncluded,p.nodesToBeExcluded,movedWinWidth,moverThreads,dispatcherThreads,maxConcurrentMovesPerNode,conf);
  this.threshold=p.threshold;
  this.policy=p.policy;
  this.runDuringUpgrade=p.runDuringUpgrade;
}
