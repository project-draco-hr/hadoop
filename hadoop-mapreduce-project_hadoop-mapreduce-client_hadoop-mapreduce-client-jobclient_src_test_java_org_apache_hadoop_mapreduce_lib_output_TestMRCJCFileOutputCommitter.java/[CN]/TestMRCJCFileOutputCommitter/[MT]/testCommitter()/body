{
  Job job=Job.getInstance();
  FileOutputFormat.setOutputPath(job,outDir);
  Configuration conf=job.getConfiguration();
  conf.set(MRJobConfig.TASK_ATTEMPT_ID,attempt);
  JobContext jContext=new JobContextImpl(conf,taskID.getJobID());
  TaskAttemptContext tContext=new TaskAttemptContextImpl(conf,taskID);
  FileOutputCommitter committer=new FileOutputCommitter(outDir,tContext);
  committer.setupJob(jContext);
  committer.setupTask(tContext);
  TextOutputFormat theOutputFormat=new TextOutputFormat();
  RecordWriter theRecordWriter=theOutputFormat.getRecordWriter(tContext);
  writeOutput(theRecordWriter,tContext);
  committer.commitTask(tContext);
  committer.commitJob(jContext);
  File expectedFile=new File(new Path(outDir,partFile).toString());
  StringBuffer expectedOutput=new StringBuffer();
  expectedOutput.append(key1).append('\t').append(val1).append("\n");
  expectedOutput.append(val1).append("\n");
  expectedOutput.append(val2).append("\n");
  expectedOutput.append(key2).append("\n");
  expectedOutput.append(key1).append("\n");
  expectedOutput.append(key2).append('\t').append(val2).append("\n");
  String output=UtilsForTests.slurp(expectedFile);
  assertEquals(output,expectedOutput.toString());
  FileUtil.fullyDelete(new File(outDir.toString()));
}
