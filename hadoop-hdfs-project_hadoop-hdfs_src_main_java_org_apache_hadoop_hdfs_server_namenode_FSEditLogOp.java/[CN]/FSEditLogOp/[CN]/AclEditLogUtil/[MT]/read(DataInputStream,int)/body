{
  if (!NameNodeLayoutVersion.supports(Feature.EXTENDED_ACL,logVersion)) {
    return null;
  }
  int size=in.readInt();
  if (size == 0) {
    return null;
  }
  List<AclEntry> aclEntries=Lists.newArrayListWithCapacity(size);
  for (int i=0; i < size; ++i) {
    int v=in.read();
    int p=v & ACL_EDITLOG_PERM_MASK;
    int t=(v >> ACL_EDITLOG_ENTRY_TYPE_OFFSET) & ACL_EDITLOG_ENTRY_TYPE_MASK;
    int s=(v >> ACL_EDITLOG_ENTRY_SCOPE_OFFSET) & ACL_EDITLOG_ENTRY_SCOPE_MASK;
    boolean hasName=((v >> ACL_EDITLOG_ENTRY_HAS_NAME_OFFSET) & 1) == 1;
    String name=hasName ? FSImageSerialization.readString(in) : null;
    aclEntries.add(new AclEntry.Builder().setName(name).setPermission(FSACTION_VALUES[p]).setScope(ACL_ENTRY_SCOPE_VALUES[s]).setType(ACL_ENTRY_TYPE_VALUES[t]).build());
  }
  return aclEntries;
}
