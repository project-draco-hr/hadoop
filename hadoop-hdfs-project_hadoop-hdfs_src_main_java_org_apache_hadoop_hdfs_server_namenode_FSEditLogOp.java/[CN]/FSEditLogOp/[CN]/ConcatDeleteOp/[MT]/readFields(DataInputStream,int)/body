{
  if (!LayoutVersion.supports(Feature.EDITLOG_OP_OPTIMIZATION,logVersion)) {
    this.length=in.readInt();
    if (length < 3) {
      throw new IOException("Incorrect data format " + "for ConcatDeleteOp.");
    }
  }
  this.trg=FSImageSerialization.readString(in);
  int srcSize=0;
  if (LayoutVersion.supports(Feature.EDITLOG_OP_OPTIMIZATION,logVersion)) {
    srcSize=in.readInt();
  }
 else {
    srcSize=this.length - 1 - 1;
  }
  if (srcSize < 0) {
    throw new IOException("Incorrect data format. " + "ConcatDeleteOp cannot have a negative number of data " + " sources.");
  }
 else   if (srcSize > MAX_CONCAT_SRC) {
    throw new IOException("Incorrect data format. " + "ConcatDeleteOp can have at most " + MAX_CONCAT_SRC + " sources, but we tried to have "+ (length - 3)+ " sources.");
  }
  this.srcs=new String[srcSize];
  for (int i=0; i < srcSize; i++) {
    srcs[i]=FSImageSerialization.readString(in);
  }
  if (LayoutVersion.supports(Feature.EDITLOG_OP_OPTIMIZATION,logVersion)) {
    this.timestamp=FSImageSerialization.readLong(in);
  }
 else {
    this.timestamp=readLong(in);
  }
  readRpcIds(in,logVersion);
}
