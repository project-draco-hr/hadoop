{
  this.length=Integer.valueOf(st.getValue("LENGTH"));
  this.inodeId=Long.valueOf(st.getValue("INODEID"));
  this.path=st.getValue("PATH");
  this.replication=Short.valueOf(st.getValue("REPLICATION"));
  this.mtime=Long.valueOf(st.getValue("MTIME"));
  this.atime=Long.valueOf(st.getValue("ATIME"));
  this.blockSize=Long.valueOf(st.getValue("BLOCKSIZE"));
  this.clientName=st.getValue("CLIENT_NAME");
  this.clientMachine=st.getValue("CLIENT_MACHINE");
  if (st.hasChildren("BLOCK")) {
    List<Stanza> blocks=st.getChildren("BLOCK");
    this.blocks=new Block[blocks.size()];
    for (int i=0; i < blocks.size(); i++) {
      this.blocks[i]=FSEditLogOp.blockFromXml(blocks.get(i));
    }
  }
 else {
    this.blocks=new Block[0];
  }
  this.permissions=permissionStatusFromXml(st);
  if (permissions.getPermission().getAclBit()) {
    aclEntries=readAclEntriesFromXml(st);
  }
 else {
    aclEntries=null;
  }
  readRpcIdsFromXml(st);
}
