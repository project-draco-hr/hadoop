{
  StringBuilder builder=new StringBuilder();
  builder.append("[length=");
  builder.append(length);
  builder.append(", inodeId=");
  builder.append(inodeId);
  builder.append(", path=");
  builder.append(path);
  builder.append(", replication=");
  builder.append(replication);
  builder.append(", mtime=");
  builder.append(mtime);
  builder.append(", atime=");
  builder.append(atime);
  builder.append(", blockSize=");
  builder.append(blockSize);
  builder.append(", lazyPersist");
  builder.append(isLazyPersist);
  builder.append(", blocks=");
  builder.append(Arrays.toString(blocks));
  builder.append(", permissions=");
  builder.append(permissions);
  builder.append(", aclEntries=");
  builder.append(aclEntries);
  builder.append(", clientName=");
  builder.append(clientName);
  builder.append(", clientMachine=");
  builder.append(clientMachine);
  builder.append(", overwrite=");
  builder.append(overwrite);
  if (this.opCode == OP_ADD) {
    appendRpcIdsToString(builder,rpcClientId,rpcCallId);
  }
  builder.append(", storagePolicyId=");
  builder.append(storagePolicyId);
  builder.append(", opCode=");
  builder.append(opCode);
  builder.append(", txid=");
  builder.append(txid);
  builder.append("]");
  return builder.toString();
}
