{
  FSImageSerialization.writeLong(inodeId,out);
  FSImageSerialization.writeString(path,out);
  FSImageSerialization.writeShort(replication,out);
  FSImageSerialization.writeLong(mtime,out);
  FSImageSerialization.writeLong(atime,out);
  FSImageSerialization.writeLong(blockSize,out);
  FSImageSerialization.writeInt((isLazyPersist ? 1 : 0),out);
  new ArrayWritable(Block.class,blocks).write(out);
  permissions.write(out);
  if (this.opCode == OP_ADD) {
    AclEditLogUtil.write(aclEntries,out);
    XAttrEditLogProto.Builder b=XAttrEditLogProto.newBuilder();
    b.addAllXAttrs(PBHelper.convertXAttrProto(xAttrs));
    b.build().writeDelimitedTo(out);
    FSImageSerialization.writeString(clientName,out);
    FSImageSerialization.writeString(clientMachine,out);
    FSImageSerialization.writeBoolean(overwrite,out);
    writeRpcIds(rpcClientId,rpcCallId,out);
  }
}
