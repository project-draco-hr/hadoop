{
  FSImageSerialization.writeLong(inodeId,out);
  FSImageSerialization.writeString(path,out);
  FSImageSerialization.writeShort(replication,out);
  FSImageSerialization.writeLong(mtime,out);
  FSImageSerialization.writeLong(atime,out);
  FSImageSerialization.writeLong(blockSize,out);
  new ArrayWritable(Block.class,blocks).write(out);
  permissions.write(out);
  if (this.opCode == OP_ADD) {
    boolean hasAcl=aclEntries != null;
    out.writeBoolean(hasAcl);
    if (hasAcl) {
      AclFeatureProto.newBuilder().addAllEntries(PBHelper.convertAclEntryProto(aclEntries)).build().writeDelimitedTo(out);
    }
    FSImageSerialization.writeString(clientName,out);
    FSImageSerialization.writeString(clientMachine,out);
    writeRpcIds(rpcClientId,rpcCallId,out);
  }
}
