{
  TimelineWriteResponse response=new TimelineWriteResponse();
  String sql="UPSERT INTO " + info.getTableName() + " ("+ StringUtils.join(info.getPrimaryKeyList(),",")+ ", created_time, modified_time, metric_names) "+ "VALUES ("+ StringUtils.repeat("?,",info.getPrimaryKeyList().length)+ "?, ?, ?)";
  if (LOG.isDebugEnabled()) {
    LOG.debug("TimelineEntity write SQL: " + sql);
  }
  try (Connection conn=getConnection();PreparedStatement ps=conn.prepareStatement(sql)){
    for (    TimelineEntity entity : entities.getEntities()) {
      HashMap<String,TimelineMetric> formattedMetrics=new HashMap<>();
      if (entity.getMetrics() != null) {
        for (        TimelineMetric m : entity.getMetrics()) {
          formattedMetrics.put(m.getId(),m);
        }
      }
      int idx=info.setStringsForPrimaryKey(ps,context,null,1);
      ps.setLong(idx++,entity.getCreatedTime());
      ps.setLong(idx++,entity.getModifiedTime());
      ps.setString(idx++,StringUtils.join(formattedMetrics.keySet().toArray(),AGGREGATION_STORAGE_SEPARATOR));
      ps.execute();
      storeEntityVariableLengthFields(entity,formattedMetrics,context,conn,info);
      conn.commit();
    }
  }
 catch (  SQLException se) {
    LOG.error("Failed to add entity to Phoenix " + se.getMessage());
    throw new IOException(se);
  }
catch (  Exception e) {
    LOG.error("Exception on getting connection: " + e.getMessage());
    throw new IOException(e);
  }
  return response;
}
