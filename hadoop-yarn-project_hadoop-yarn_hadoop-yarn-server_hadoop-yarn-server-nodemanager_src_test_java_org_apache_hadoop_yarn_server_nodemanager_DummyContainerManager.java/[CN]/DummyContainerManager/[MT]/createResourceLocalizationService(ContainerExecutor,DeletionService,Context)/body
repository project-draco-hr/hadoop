{
  return new ResourceLocalizationService(super.dispatcher,exec,deletionContext,super.dirsHandler,context){
    @Override public void handle(    LocalizationEvent event){
switch (event.getType()) {
case INIT_APPLICATION_RESOURCES:
        Application app=((ApplicationLocalizationEvent)event).getApplication();
      dispatcher.getEventHandler().handle(new ApplicationInitedEvent(app.getAppId()));
    break;
case LOCALIZE_CONTAINER_RESOURCES:
  ContainerLocalizationRequestEvent rsrcReqs=(ContainerLocalizationRequestEvent)event;
for (Collection<LocalResourceRequest> rc : rsrcReqs.getRequestedResources().values()) {
  for (  LocalResourceRequest req : rc) {
    LOG.info("DEBUG: " + req + ":"+ rsrcReqs.getContainer().getContainerId());
    dispatcher.getEventHandler().handle(new ContainerResourceLocalizedEvent(rsrcReqs.getContainer().getContainerId(),req,new Path("file:///local" + req.getPath().toUri().getPath())));
  }
}
break;
case CLEANUP_CONTAINER_RESOURCES:
Container container=((ContainerLocalizationEvent)event).getContainer();
this.dispatcher.getEventHandler().handle(new ContainerEvent(container.getContainerId(),ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));
break;
case DESTROY_APPLICATION_RESOURCES:
Application application=((ApplicationLocalizationEvent)event).getApplication();
this.dispatcher.getEventHandler().handle(new ApplicationEvent(application.getAppId(),ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));
break;
default :
fail("Unexpected event: " + event.getType());
}
}
}
;
}
