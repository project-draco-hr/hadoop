{
  super.allocateResource(clusterResource,resource,nodePartition);
  if (null != rmContainer && rmContainer.getNodeLabelExpression().equals(RMNodeLabelsManager.NO_LABEL) && !nodePartition.equals(RMNodeLabelsManager.NO_LABEL)) {
    TreeSet<RMContainer> rmContainers=null;
    if (null == (rmContainers=ignorePartitionExclusivityRMContainers.get(nodePartition))) {
      rmContainers=new TreeSet<>();
      ignorePartitionExclusivityRMContainers.put(nodePartition,rmContainers);
    }
    rmContainers.add(rmContainer);
  }
  String userName=application.getUser();
  User user=getUser(userName);
  user.assignContainer(resource,nodePartition);
  Resources.subtractFrom(application.getHeadroom(),resource);
  metrics.setAvailableResourcesToUser(userName,application.getHeadroom());
  if (LOG.isDebugEnabled()) {
    LOG.info(getQueueName() + " user=" + userName+ " used="+ queueUsage.getUsed()+ " numContainers="+ numContainers+ " headroom = "+ application.getHeadroom()+ " user-resources="+ user.getUsed());
  }
}
