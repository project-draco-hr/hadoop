{
  Resource potentialTotalResource=Resources.add(usedResources,required);
  float potentialNewCapacity=Resources.divide(resourceCalculator,clusterResource,potentialTotalResource,clusterResource);
  if (potentialNewCapacity > absoluteMaxCapacity) {
    if (this.reservationsContinueLooking && checkReservations) {
      float potentialNewWithoutReservedCapacity=Resources.divide(resourceCalculator,clusterResource,Resources.subtract(potentialTotalResource,application.getCurrentReservation()),clusterResource);
      if (potentialNewWithoutReservedCapacity <= absoluteMaxCapacity) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("try to use reserved: " + getQueueName() + " usedResources: "+ usedResources+ " clusterResources: "+ clusterResource+ " reservedResources: "+ application.getCurrentReservation()+ " currentCapacity "+ Resources.divide(resourceCalculator,clusterResource,usedResources,clusterResource)+ " required "+ required+ " potentialNewWithoutReservedCapacity: "+ potentialNewWithoutReservedCapacity+ " ( "+ " max-capacity: "+ absoluteMaxCapacity+ ")");
        }
        return true;
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(getQueueName() + " usedResources: " + usedResources+ " clusterResources: "+ clusterResource+ " currentCapacity "+ Resources.divide(resourceCalculator,clusterResource,usedResources,clusterResource)+ " required "+ required+ " potentialNewCapacity: "+ potentialNewCapacity+ " ( "+ " max-capacity: "+ absoluteMaxCapacity+ ")");
    }
    return false;
  }
  return true;
}
