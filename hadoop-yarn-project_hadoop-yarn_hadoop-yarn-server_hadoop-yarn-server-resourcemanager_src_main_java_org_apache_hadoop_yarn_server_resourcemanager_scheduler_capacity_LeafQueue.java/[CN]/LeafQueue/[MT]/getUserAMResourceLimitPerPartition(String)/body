{
  try {
    readLock.lock();
    float effectiveUserLimit=Math.max(userLimit / 100.0f,1.0f / Math.max(getActiveUsersManager().getNumActiveUsers(),1));
    Resource queuePartitionResource=Resources.multiplyAndNormalizeUp(resourceCalculator,labelManager.getResourceByLabel(nodePartition,lastClusterResource),queueCapacities.getAbsoluteCapacity(nodePartition),minimumAllocation);
    Resource userAMLimit=Resources.multiplyAndNormalizeUp(resourceCalculator,queuePartitionResource,queueCapacities.getMaxAMResourcePercentage(nodePartition) * effectiveUserLimit * userLimitFactor,minimumAllocation);
    return Resources.lessThanOrEqual(resourceCalculator,lastClusterResource,userAMLimit,getAMResourceLimitPerPartition(nodePartition)) ? userAMLimit : getAMResourceLimitPerPartition(nodePartition);
  }
  finally {
    readLock.unlock();
  }
}
