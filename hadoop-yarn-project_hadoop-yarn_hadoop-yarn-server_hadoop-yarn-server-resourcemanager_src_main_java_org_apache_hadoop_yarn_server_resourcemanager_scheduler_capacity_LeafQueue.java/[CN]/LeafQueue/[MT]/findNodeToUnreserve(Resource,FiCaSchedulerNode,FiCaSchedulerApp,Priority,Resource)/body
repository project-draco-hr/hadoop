{
  NodeId idToUnreserve=application.getNodeIdToUnreserve(priority,capability);
  if (idToUnreserve == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("checked to see if could unreserve for app but nothing " + "reserved that matches for this app");
    }
    return false;
  }
  FiCaSchedulerNode nodeToUnreserve=scheduler.getNode(idToUnreserve);
  if (nodeToUnreserve == null) {
    LOG.error("node to unreserve doesn't exist, nodeid: " + idToUnreserve);
    return false;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("unreserving for app: " + application.getApplicationId() + " on nodeId: "+ idToUnreserve+ " in order to replace reserved application and place it on node: "+ node.getNodeID()+ " needing: "+ capability);
  }
  Resources.addTo(application.getHeadroom(),nodeToUnreserve.getReservedContainer().getReservedResource());
  completedContainer(clusterResource,application,nodeToUnreserve,nodeToUnreserve.getReservedContainer(),SchedulerUtils.createAbnormalContainerStatus(nodeToUnreserve.getReservedContainer().getContainerId(),SchedulerUtils.UNRESERVED_CONTAINER),RMContainerEventType.RELEASED,null,false);
  return true;
}
