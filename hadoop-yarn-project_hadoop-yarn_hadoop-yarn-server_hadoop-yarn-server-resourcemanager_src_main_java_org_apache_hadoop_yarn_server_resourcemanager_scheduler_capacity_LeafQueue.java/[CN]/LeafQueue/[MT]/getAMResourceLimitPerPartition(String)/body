{
  Resource queuePartitionResource=Resources.multiplyAndNormalizeUp(resourceCalculator,labelManager.getResourceByLabel(nodePartition,lastClusterResource),queueCapacities.getAbsoluteCapacity(nodePartition),minimumAllocation);
  Resource queueCurrentLimit=Resources.none();
  if (nodePartition.equals(RMNodeLabelsManager.NO_LABEL)) {
synchronized (queueResourceLimitsInfo) {
      queueCurrentLimit=queueResourceLimitsInfo.getQueueCurrentLimit();
    }
  }
  float amResourcePercent=queueCapacities.getMaxAMResourcePercentage(nodePartition);
  Resource queuePartitionUsableResource=Resources.max(resourceCalculator,lastClusterResource,queueCurrentLimit,queuePartitionResource);
  Resource amResouceLimit=Resources.multiplyAndNormalizeUp(resourceCalculator,queuePartitionUsableResource,amResourcePercent,minimumAllocation);
  metrics.setAMResouceLimit(amResouceLimit);
  queueUsage.setAMLimit(nodePartition,amResouceLimit);
  return amResouceLimit;
}
