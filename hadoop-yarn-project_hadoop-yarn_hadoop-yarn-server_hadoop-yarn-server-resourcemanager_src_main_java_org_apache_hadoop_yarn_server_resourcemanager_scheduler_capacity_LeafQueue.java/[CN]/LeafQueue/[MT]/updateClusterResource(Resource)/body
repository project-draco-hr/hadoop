{
  maxActiveApplications=CSQueueUtils.computeMaxActiveApplications(resourceCalculator,clusterResource,minimumAllocation,maxAMResourcePerQueuePercent,absoluteMaxCapacity);
  maxActiveAppsUsingAbsCap=CSQueueUtils.computeMaxActiveApplications(resourceCalculator,clusterResource,minimumAllocation,maxAMResourcePerQueuePercent,absoluteCapacity);
  maxActiveApplicationsPerUser=CSQueueUtils.computeMaxActiveApplicationsPerUser(maxActiveAppsUsingAbsCap,userLimit,userLimitFactor);
  CSQueueUtils.updateQueueStatistics(resourceCalculator,this,getParent(),clusterResource,minimumAllocation);
  for (  FiCaSchedulerApp application : activeApplications) {
synchronized (application) {
      computeUserLimitAndSetHeadroom(application,clusterResource,Resources.none());
    }
  }
}
