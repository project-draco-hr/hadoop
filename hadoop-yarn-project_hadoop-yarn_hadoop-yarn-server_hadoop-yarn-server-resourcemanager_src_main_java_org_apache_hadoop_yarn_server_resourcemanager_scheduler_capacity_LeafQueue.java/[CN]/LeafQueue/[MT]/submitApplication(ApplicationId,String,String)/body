{
  UserGroupInformation userUgi=UserGroupInformation.createRemoteUser(userName);
  if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS,userUgi) && !hasAccess(QueueACL.ADMINISTER_QUEUE,userUgi)) {
    throw new AccessControlException("User " + userName + " cannot submit"+ " applications to queue "+ getQueuePath());
  }
  User user=null;
synchronized (this) {
    if (getState() != QueueState.RUNNING) {
      String msg="Queue " + getQueuePath() + " is STOPPED. Cannot accept submission of application: "+ applicationId;
      LOG.info(msg);
      throw new AccessControlException(msg);
    }
    if (getNumApplications() >= getMaxApplications()) {
      String msg="Queue " + getQueuePath() + " already has "+ getNumApplications()+ " applications,"+ " cannot accept submission of application: "+ applicationId;
      LOG.info(msg);
      throw new AccessControlException(msg);
    }
    user=getUser(userName);
    if (user.getTotalApplications() >= getMaxApplicationsPerUser()) {
      String msg="Queue " + getQueuePath() + " already has "+ user.getTotalApplications()+ " applications from user "+ userName+ " cannot accept submission of application: "+ applicationId;
      LOG.info(msg);
      throw new AccessControlException(msg);
    }
  }
  try {
    getParent().submitApplication(applicationId,userName,queue);
  }
 catch (  AccessControlException ace) {
    LOG.info("Failed to submit application to parent-queue: " + getParent().getQueuePath(),ace);
    throw ace;
  }
}
