{
  if (LOG.isDebugEnabled()) {
    LOG.debug("assignContainers: node=" + node.getHostName() + " #applications="+ activeApplications.size());
  }
  RMContainer reservedContainer=node.getReservedContainer();
  if (reservedContainer != null) {
    FiCaSchedulerApp application=getApplication(reservedContainer.getApplicationAttemptId());
    return new CSAssignment(assignReservedContainer(application,node,reservedContainer,clusterResource),NodeType.NODE_LOCAL);
  }
  for (  FiCaSchedulerApp application : activeApplications) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("pre-assignContainers for application " + application.getApplicationId());
      application.showRequests();
    }
synchronized (application) {
      for (      Priority priority : application.getPriorities()) {
        Resource required=application.getResourceRequest(priority,RMNode.ANY).getCapability();
        if (!needContainers(application,priority,required)) {
          continue;
        }
        Resource userLimit=computeUserLimitAndSetHeadroom(application,clusterResource,required);
        if (!assignToQueue(clusterResource,required)) {
          return NULL_ASSIGNMENT;
        }
        if (!assignToUser(application.getUser(),userLimit)) {
          break;
        }
        application.addSchedulingOpportunity(priority);
        CSAssignment assignment=assignContainersOnNode(clusterResource,node,application,priority,null);
        Resource assigned=assignment.getResource();
        if (Resources.greaterThan(assigned,Resources.none())) {
          allocateResource(clusterResource,application,assigned);
          if (assignment.getType() != NodeType.OFF_SWITCH) {
            application.resetSchedulingOpportunities(priority);
          }
          return assignment;
        }
 else {
          break;
        }
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("post-assignContainers for application " + application.getApplicationId());
    }
    application.showRequests();
  }
  return NULL_ASSIGNMENT;
}
