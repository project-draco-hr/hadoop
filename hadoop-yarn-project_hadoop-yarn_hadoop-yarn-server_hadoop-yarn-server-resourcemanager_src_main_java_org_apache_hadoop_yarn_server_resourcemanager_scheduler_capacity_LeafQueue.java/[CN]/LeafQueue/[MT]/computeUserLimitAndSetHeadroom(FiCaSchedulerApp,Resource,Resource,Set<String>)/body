{
  String user=application.getUser();
  User queueUser=getUser(user);
  Resource userLimit=computeUserLimit(application,clusterResource,required,queueUser,requestedLabels);
  float absoluteMaxAvailCapacity=CSQueueUtils.getAbsoluteMaxAvailCapacity(resourceCalculator,clusterResource,this);
  Resource queueMaxCap=updateHeadroomInfo(clusterResource,absoluteMaxAvailCapacity);
  Resource headroom=getHeadroom(queueUser,queueMaxCap,clusterResource,userLimit);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Headroom calculation for user " + user + ": "+ " userLimit="+ userLimit+ " queueMaxCap="+ queueMaxCap+ " consumed="+ queueUser.getUsed()+ " headroom="+ headroom);
  }
  CapacityHeadroomProvider headroomProvider=new CapacityHeadroomProvider(queueUser,this,application,required,queueHeadroomInfo);
  application.setHeadroomProvider(headroomProvider);
  metrics.setAvailableResourcesToUser(user,headroom);
  return userLimit;
}
