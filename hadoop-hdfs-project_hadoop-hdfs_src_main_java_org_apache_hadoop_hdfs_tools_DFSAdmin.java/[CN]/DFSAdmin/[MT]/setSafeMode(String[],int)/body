{
  if (idx != argv.length - 1) {
    printUsage("-safemode");
    return;
  }
  HdfsConstants.SafeModeAction action;
  Boolean waitExitSafe=false;
  if ("leave".equalsIgnoreCase(argv[idx])) {
    action=HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;
  }
 else   if ("enter".equalsIgnoreCase(argv[idx])) {
    action=HdfsConstants.SafeModeAction.SAFEMODE_ENTER;
  }
 else   if ("get".equalsIgnoreCase(argv[idx])) {
    action=HdfsConstants.SafeModeAction.SAFEMODE_GET;
  }
 else   if ("wait".equalsIgnoreCase(argv[idx])) {
    action=HdfsConstants.SafeModeAction.SAFEMODE_GET;
    waitExitSafe=true;
  }
 else {
    printUsage("-safemode");
    return;
  }
  DistributedFileSystem dfs=getDFS();
  Configuration dfsConf=dfs.getConf();
  URI dfsUri=dfs.getUri();
  boolean isHaEnabled=HAUtilClient.isLogicalUri(dfsConf,dfsUri);
  if (isHaEnabled) {
    String nsId=dfsUri.getHost();
    List<ProxyAndInfo<ClientProtocol>> proxies=HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf,nsId,ClientProtocol.class);
    for (    ProxyAndInfo<ClientProtocol> proxy : proxies) {
      ClientProtocol haNn=proxy.getProxy();
      boolean inSafeMode=haNn.setSafeMode(action,false);
      if (waitExitSafe) {
        inSafeMode=waitExitSafeMode(haNn,inSafeMode);
      }
      System.out.println("Safe mode is " + (inSafeMode ? "ON" : "OFF") + " in "+ proxy.getAddress());
    }
  }
 else {
    boolean inSafeMode=dfs.setSafeMode(action);
    if (waitExitSafe) {
      inSafeMode=waitExitSafeMode(dfs,inSafeMode);
    }
    System.out.println("Safe mode is " + (inSafeMode ? "ON" : "OFF"));
  }
}
