{
  List<String> args=new LinkedList<String>();
  for (int i=idx; i < argsArray.length; i++) {
    args.add(argsArray[i]);
  }
  String name=StringUtils.popFirstNonOption(args);
  if (name == null) {
    System.err.println("You must specify a name when deleting a " + "cache pool.");
    return 1;
  }
  if (!args.isEmpty()) {
    System.err.print("Can't understand arguments: " + Joiner.on(" ").join(args) + "\n");
    System.err.println("Usage is " + REMOVE_CACHE_POOL_USAGE);
    return 1;
  }
  DistributedFileSystem dfs=getDFS();
  try {
    dfs.removeCachePool(name);
  }
 catch (  IOException e) {
    dfs.removeCachePool(name);
    throw new RemoteException(e.getClass().getName(),e.getMessage());
  }
  System.out.println("Successfully removed cache pool " + name + ".");
  return 0;
}
