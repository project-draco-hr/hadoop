{
  List<String> args=new LinkedList<String>();
  for (int i=idx; i < argsArray.length; i++) {
    args.add(argsArray[i]);
  }
  String owner=StringUtils.popOptionWithArgument("-owner",args);
  String group=StringUtils.popOptionWithArgument("-group",args);
  String modeString=StringUtils.popOptionWithArgument("-mode",args);
  Integer mode=(modeString == null) ? null : Integer.parseInt(modeString,8);
  String weightString=StringUtils.popOptionWithArgument("-weight",args);
  Integer weight=(weightString == null) ? null : Integer.parseInt(weightString);
  String name=StringUtils.popFirstNonOption(args);
  if (name == null) {
    System.err.println("You must specify a name when creating a " + "cache pool.");
    return 1;
  }
  if (!args.isEmpty()) {
    System.err.print("Can't understand arguments: " + Joiner.on(" ").join(args) + "\n");
    System.err.println("usage is " + MODIFY_CACHE_POOL_USAGE);
    return 1;
  }
  boolean changed=false;
  CachePoolInfo info=new CachePoolInfo(name);
  if (owner != null) {
    info.setOwnerName(owner);
    changed=true;
  }
  if (group != null) {
    info.setGroupName(group);
    changed=true;
  }
  if (mode != null) {
    info.setMode(new FsPermission(mode.shortValue()));
    changed=true;
  }
  if (weight != null) {
    info.setWeight(weight);
    changed=true;
  }
  if (!changed) {
    System.err.println("You must specify at least one attribute to " + "change in the cache pool.");
    return 1;
  }
  DistributedFileSystem dfs=getDFS();
  try {
    dfs.modifyCachePool(info);
  }
 catch (  IOException e) {
    throw new RemoteException(e.getClass().getName(),e.getMessage());
  }
  System.out.print("Successfully modified cache pool " + name);
  String prefix=" to have ";
  if (owner != null) {
    System.out.print(prefix + "owner name " + owner);
    prefix="and ";
  }
  if (group != null) {
    System.out.print(prefix + "group name " + group);
    prefix="and ";
  }
  if (mode != null) {
    System.out.print(prefix + "mode " + new FsPermission(mode.shortValue()));
    prefix="and ";
  }
  if (weight != null) {
    System.out.print(prefix + "weight " + weight);
    prefix="and ";
  }
  System.out.print("\n");
  return 0;
}
