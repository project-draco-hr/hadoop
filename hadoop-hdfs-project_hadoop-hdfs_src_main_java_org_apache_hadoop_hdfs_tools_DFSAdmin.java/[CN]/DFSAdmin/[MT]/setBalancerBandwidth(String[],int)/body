{
  long bandwidth;
  int exitCode=-1;
  try {
    bandwidth=Long.parseLong(argv[idx]);
  }
 catch (  NumberFormatException nfe) {
    System.err.println("NumberFormatException: " + nfe.getMessage());
    System.err.println("Usage: hdfs dfsadmin" + " [-setBalancerBandwidth <bandwidth in bytes per second>]");
    return exitCode;
  }
  FileSystem fs=getFS();
  if (!(fs instanceof DistributedFileSystem)) {
    System.err.println("FileSystem is " + fs.getUri());
    return exitCode;
  }
  DistributedFileSystem dfs=(DistributedFileSystem)fs;
  Configuration dfsConf=dfs.getConf();
  URI dfsUri=dfs.getUri();
  boolean isHaEnabled=HAUtil.isLogicalUri(dfsConf,dfsUri);
  if (isHaEnabled) {
    String nsId=dfsUri.getHost();
    List<ProxyAndInfo<ClientProtocol>> proxies=HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf,nsId,ClientProtocol.class);
    for (    ProxyAndInfo<ClientProtocol> proxy : proxies) {
      proxy.getProxy().setBalancerBandwidth(bandwidth);
      System.out.println("Balancer bandwidth is set to " + bandwidth + " for "+ proxy.getAddress());
    }
  }
 else {
    dfs.setBalancerBandwidth(bandwidth);
    System.out.println("Balancer bandwidth is set to " + bandwidth);
  }
  exitCode=0;
  return exitCode;
}
