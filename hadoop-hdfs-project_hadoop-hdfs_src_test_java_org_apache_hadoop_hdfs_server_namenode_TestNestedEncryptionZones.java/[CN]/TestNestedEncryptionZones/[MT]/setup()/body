{
  Configuration conf=new HdfsConfiguration();
  FileSystemTestHelper fsHelper=new FileSystemTestHelper();
  String testRoot=fsHelper.getTestRootDir();
  testRootDir=new File(testRoot).getAbsoluteFile();
  conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH,getKeyProviderURI());
  conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY,true);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES,2);
  cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
  Logger.getLogger(EncryptionZoneManager.class).setLevel(Level.TRACE);
  fs=cluster.getFileSystem();
  setProvider();
  DFSTestUtil.createKey(TOP_EZ_KEY,cluster,conf);
  DFSTestUtil.createKey(NESTED_EZ_KEY,cluster,conf);
  fs.mkdir(topEZDir,FsPermission.getDirDefault());
  fs.createEncryptionZone(topEZDir,TOP_EZ_KEY);
  fs.mkdir(nestedEZDir,FsPermission.getDirDefault());
  fs.createEncryptionZone(nestedEZDir,NESTED_EZ_KEY);
  DFSTestUtil.createFile(fs,topEZBaseFile,len,(short)1,0xFEED);
  DFSTestUtil.createFile(fs,topEZFile,len,(short)1,0xFEED);
  DFSTestUtil.createFile(fs,nestedEZBaseFile,len,(short)1,0xFEED);
  DFSTestUtil.createFile(fs,nestedEZFile,len,(short)1,0xFEED);
}
