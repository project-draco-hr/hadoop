{
  final int parts=30;
  JobConf conf=new JobConf();
  FileSystem fs=FileSystem.getLocal(conf).getRaw();
  Path p=new Path(System.getProperty("test.build.data","/tmp"),"cache").makeQualified(fs);
  fs.delete(p,true);
  conf.setInt(TTConfig.TT_INDEX_CACHE,1);
  IndexCache cache=new IndexCache(conf);
  Path f=new Path(p,"badindex");
  FSDataOutputStream out=fs.create(f,false);
  CheckedOutputStream iout=new CheckedOutputStream(out,new CRC32());
  DataOutputStream dout=new DataOutputStream(iout);
  for (int i=0; i < parts; ++i) {
    for (int j=0; j < MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH / 8; ++j) {
      if (0 == (i % 3)) {
        dout.writeLong(i);
      }
 else {
        out.writeLong(i);
      }
    }
  }
  out.writeLong(iout.getChecksum().getValue());
  dout.close();
  try {
    cache.getIndexInformation("badindex",7,f,UserGroupInformation.getCurrentUser().getShortUserName());
    fail("Did not detect bad checksum");
  }
 catch (  IOException e) {
    if (!(e.getCause() instanceof ChecksumException)) {
      throw e;
    }
  }
}
