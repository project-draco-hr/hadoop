{
  scheduler.preemptionEnabled=true;
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<fairSharePreemptionTimeout>5</fairSharePreemptionTimeout>");
  out.println("<pool name=\"pool1\">");
  out.println("<minMaps>2</minMaps>");
  out.println("<minReduces>2</minReduces>");
  out.println("<minSharePreemptionTimeout>5</minSharePreemptionTimeout>");
  out.println("</pool>");
  out.println("</allocations>");
  out.close();
  scheduler.getPoolManager().reloadAllocs();
  Pool pool1=scheduler.getPoolManager().getPool("pool1");
  Pool defaultPool=scheduler.getPoolManager().getPool("default");
  JobInProgress job1=submitJob(JobStatus.RUNNING,10,10,"pool1");
  JobInfo info1=scheduler.infos.get(job1);
  checkAssignment("tt1","attempt_test_0001_m_000000_0 on tt1");
  checkAssignment("tt1","attempt_test_0001_r_000000_0 on tt1");
  checkAssignment("tt1","attempt_test_0001_m_000001_0 on tt1");
  checkAssignment("tt1","attempt_test_0001_r_000001_0 on tt1");
  advanceTime(100);
  checkAssignment("tt2","attempt_test_0001_m_000002_0 on tt2");
  checkAssignment("tt2","attempt_test_0001_r_000002_0 on tt2");
  checkAssignment("tt2","attempt_test_0001_m_000003_0 on tt2");
  checkAssignment("tt2","attempt_test_0001_r_000003_0 on tt2");
  advanceTime(10000);
  assertEquals(4,info1.mapSchedulable.getRunningTasks());
  assertEquals(4,info1.reduceSchedulable.getRunningTasks());
  assertEquals(4.0,info1.mapSchedulable.getFairShare());
  assertEquals(4.0,info1.reduceSchedulable.getFairShare());
  JobInProgress job2=submitJob(JobStatus.RUNNING,10,10,"default");
  clock.advance(6000);
  assertEquals(4,info1.mapSchedulable.getRunningTasks());
  assertEquals(4,info1.reduceSchedulable.getRunningTasks());
  assertEquals(2.0,info1.mapSchedulable.getFairShare());
  assertEquals(2.0,info1.reduceSchedulable.getFairShare());
  assertEquals(0,scheduler.tasksToPreempt(pool1.getMapSchedulable(),clock.getTime()));
  assertEquals(0,scheduler.tasksToPreempt(pool1.getReduceSchedulable(),clock.getTime()));
  assertEquals(2,scheduler.tasksToPreempt(defaultPool.getMapSchedulable(),clock.getTime()));
  assertEquals(2,scheduler.tasksToPreempt(defaultPool.getReduceSchedulable(),clock.getTime()));
  scheduler.preemptTasksIfNecessary();
  scheduler.update();
  assertEquals(2,job1.runningMaps());
  assertEquals(2,job1.runningReduces());
  checkAssignment("tt2","attempt_test_0002_m_000000_0 on tt2");
  checkAssignment("tt2","attempt_test_0002_r_000000_0 on tt2");
  checkAssignment("tt2","attempt_test_0002_m_000001_0 on tt2");
  checkAssignment("tt2","attempt_test_0002_r_000001_0 on tt2");
  assertNull(scheduler.assignTasks(tracker("tt1")));
  assertNull(scheduler.assignTasks(tracker("tt2")));
}
