{
  if (!protocol.equals(LocalizationProtocol.LocalizationProtocolService.BlockingInterface.class)) {
    return null;
  }
  return new TokenInfo(){
    @Override public Class<? extends Annotation> annotationType(){
      return null;
    }
    @Override public Class<? extends TokenSelector<? extends TokenIdentifier>> value(){
      System.err.print("=========== Using localizerTokenSecurityInfo");
      return LocalizerTokenSelector.class;
    }
  }
;
}
