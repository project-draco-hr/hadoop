{
  String prefix="";
  if (tOption) {
    StringBuffer content=new StringBuffer();
    for (    StorageType st : types) {
      long typeQuota=getTypeQuota(st);
      long typeConsumed=getTypeConsumed(st);
      String quotaStr=QUOTA_NONE;
      String quotaRem=QUOTA_INF;
      if (typeQuota > 0) {
        quotaStr=formatSize(typeQuota,hOption);
        quotaRem=formatSize(typeQuota - typeConsumed,hOption);
      }
      content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,quotaStr,quotaRem));
    }
    return content.toString();
  }
  if (qOption) {
    String quotaStr=QUOTA_NONE;
    String quotaRem=QUOTA_INF;
    String spaceQuotaStr=QUOTA_NONE;
    String spaceQuotaRem=QUOTA_INF;
    if (quota > 0) {
      quotaStr=formatSize(quota,hOption);
      quotaRem=formatSize(quota - (directoryCount + fileCount),hOption);
    }
    if (spaceQuota > 0) {
      spaceQuotaStr=formatSize(spaceQuota,hOption);
      spaceQuotaRem=formatSize(spaceQuota - spaceConsumed,hOption);
    }
    prefix=String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,quotaStr,quotaRem,spaceQuotaStr,spaceQuotaRem);
  }
  return prefix + String.format(SUMMARY_FORMAT,formatSize(directoryCount,hOption),formatSize(fileCount,hOption),formatSize(length,hOption));
}
