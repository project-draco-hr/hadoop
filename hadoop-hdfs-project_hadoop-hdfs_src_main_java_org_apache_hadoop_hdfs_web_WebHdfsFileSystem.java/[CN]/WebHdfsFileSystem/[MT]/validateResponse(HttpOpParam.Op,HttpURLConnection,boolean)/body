{
  final int code=conn.getResponseCode();
  if (code == HttpURLConnection.HTTP_UNAUTHORIZED) {
    throw new AccessControlException(conn.getResponseMessage());
  }
  if (code != op.getExpectedHttpResponseCode()) {
    final Map<?,?> m;
    try {
      m=jsonParse(conn,true);
    }
 catch (    Exception e) {
      throw new IOException("Unexpected HTTP response: code=" + code + " != "+ op.getExpectedHttpResponseCode()+ ", "+ op.toQueryString()+ ", message="+ conn.getResponseMessage(),e);
    }
    if (m == null) {
      throw new IOException("Unexpected HTTP response: code=" + code + " != "+ op.getExpectedHttpResponseCode()+ ", "+ op.toQueryString()+ ", message="+ conn.getResponseMessage());
    }
 else     if (m.get(RemoteException.class.getSimpleName()) == null) {
      return m;
    }
    IOException re=JsonUtil.toRemoteException(m);
    if (re.getMessage().startsWith("Failed to obtain user group information:")) {
      String[] parts=re.getMessage().split(":\\s+",3);
      re=new RemoteException(parts[1],parts[2]);
      re=((RemoteException)re).unwrapRemoteException(InvalidToken.class);
    }
    throw unwrapException ? toIOException(re) : re;
  }
  return null;
}
