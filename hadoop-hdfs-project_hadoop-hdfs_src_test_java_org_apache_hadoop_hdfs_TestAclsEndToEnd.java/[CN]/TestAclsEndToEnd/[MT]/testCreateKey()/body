{
  Configuration conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE",realUgi.getUserName());
  conf.set(KMSConfiguration.WHITELIST_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  try {
    setup(conf);
    assertTrue("Exception during key creation with correct config" + " using whitelist key ACLs",createKey(realUgi,KEY1,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE",realUgi.getUserName());
  conf.set(KMSConfiguration.DEFAULT_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  try {
    setup(conf);
    assertTrue("Exception during key creation with correct config" + " using default key ACLs",createKey(realUgi,KEY2,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE",realUgi.getUserName());
  conf.set(KMSConfiguration.CONFIG_PREFIX + "blacklist.CREATE",realUgi.getUserName());
  conf.set(KMSConfiguration.WHITELIST_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  try {
    setup(conf);
    assertFalse("Allowed key creation with blacklist for CREATE",createKey(realUgi,KEY3,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE"," ");
  conf.set(KMSConfiguration.WHITELIST_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  try {
    setup(conf);
    assertFalse("Allowed key creation without CREATE KMS ACL",createKey(realUgi,KEY3,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE",realUgi.getUserName());
  try {
    setup(conf);
    assertFalse("Allowed key creation without MANAGMENT key ACL",createKey(realUgi,KEY3,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.CONFIG_PREFIX + "acl.CREATE",realUgi.getUserName());
  conf.set(KMSConfiguration.DEFAULT_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  conf.set(KeyAuthorizationKeyProvider.KEY_ACL + KEY3 + ".DECRYPT_EEK",realUgi.getUserName());
  try {
    setup(conf);
    assertFalse("Allowed key creation when default key ACL should have been" + " overridden by key ACL",createKey(realUgi,KEY3,conf));
  }
  finally {
    teardown();
  }
  conf=new Configuration();
  conf.set(KMSConfiguration.WHITELIST_KEY_ACL_PREFIX + "MANAGEMENT",realUgi.getUserName());
  try {
    setup(conf);
    assertTrue("Exception during key creation with default KMS ACLs",createKey(realUgi,KEY3,conf));
  }
  finally {
    teardown();
  }
}
