{
  FSNamesystem fsn=Mockito.mock(FSNamesystem.class);
  Mockito.when(fsn.hasWriteLock()).thenReturn(true);
  DatanodeManager dm=mockDatanodeManager(fsn,new Configuration());
  HostFileManager hm=new HostFileManager();
  HostSet noNodes=new HostSet();
  HostSet oneNode=new HostSet();
  HostSet twoNodes=new HostSet();
  DatanodeRegistration dr1=new DatanodeRegistration(new DatanodeID("127.0.0.1","127.0.0.1","someStorageID-123",12345,12345,12345,12345),new StorageInfo(HdfsServerConstants.NodeType.DATA_NODE),new ExportedBlockKeys(),"test");
  DatanodeRegistration dr2=new DatanodeRegistration(new DatanodeID("127.0.0.1","127.0.0.1","someStorageID-234",23456,23456,23456,23456),new StorageInfo(HdfsServerConstants.NodeType.DATA_NODE),new ExportedBlockKeys(),"test");
  twoNodes.add(entry("127.0.0.1:12345"));
  twoNodes.add(entry("127.0.0.1:23456"));
  oneNode.add(entry("127.0.0.1:23456"));
  hm.refresh(twoNodes,noNodes);
  Whitebox.setInternalState(dm,"hostConfigManager",hm);
  dm.registerDatanode(dr1);
  dm.registerDatanode(dr2);
  List<DatanodeDescriptor> both=dm.getDatanodeListForReport(HdfsConstants.DatanodeReportType.ALL);
  Collections.sort(both);
  Assert.assertEquals("Incorrect number of hosts reported",2,both.size());
  Assert.assertEquals("Unexpected host or host in unexpected position","127.0.0.1:12345",both.get(0).getInfoAddr());
  Assert.assertEquals("Unexpected host or host in unexpected position","127.0.0.1:23456",both.get(1).getInfoAddr());
  hm.refresh(oneNode,noNodes);
  List<DatanodeDescriptor> onlyOne=dm.getDatanodeListForReport(HdfsConstants.DatanodeReportType.ALL);
  Assert.assertEquals("Incorrect number of hosts reported",1,onlyOne.size());
  Assert.assertEquals("Unexpected host reported","127.0.0.1:23456",onlyOne.get(0).getInfoAddr());
  hm.refresh(noNodes,noNodes);
  List<DatanodeDescriptor> bothAgain=dm.getDatanodeListForReport(HdfsConstants.DatanodeReportType.ALL);
  Collections.sort(bothAgain);
  Assert.assertEquals("Incorrect number of hosts reported",2,bothAgain.size());
  Assert.assertEquals("Unexpected host or host in unexpected position","127.0.0.1:12345",bothAgain.get(0).getInfoAddr());
  Assert.assertEquals("Unexpected host or host in unexpected position","127.0.0.1:23456",bothAgain.get(1).getInfoAddr());
}
