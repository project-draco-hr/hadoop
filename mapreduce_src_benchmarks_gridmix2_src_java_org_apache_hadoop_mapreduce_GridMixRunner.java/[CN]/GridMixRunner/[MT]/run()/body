{
  Thread theGridmixRunner=new Thread(gridmix);
  theGridmixRunner.start();
  long startTime=System.currentTimeMillis();
  while (!gridmix.allFinished()) {
    System.out.println("Jobs in waiting state: " + gridmix.getWaitingJobList().size());
    System.out.println("Jobs in ready state: " + gridmix.getReadyJobsList().size());
    System.out.println("Jobs in running state: " + gridmix.getRunningJobList().size());
    System.out.println("Jobs in success state: " + gridmix.getSuccessfulJobList().size());
    System.out.println("Jobs in failed state: " + gridmix.getFailedJobList().size());
    System.out.println("\n");
    try {
      Thread.sleep(10 * 1000);
    }
 catch (    Exception e) {
    }
  }
  long endTime=System.currentTimeMillis();
  List<ControlledJob> fail=gridmix.getFailedJobList();
  List<ControlledJob> succeed=gridmix.getSuccessfulJobList();
  int numOfSuccessfulJob=succeed.size();
  if (numOfSuccessfulJob > 0) {
    System.out.println(numOfSuccessfulJob + " jobs succeeded");
    printStatsForJobs(succeed);
  }
  int numOfFailedjob=fail.size();
  if (numOfFailedjob > 0) {
    System.out.println("------------------------------- ");
    System.out.println(numOfFailedjob + " jobs failed");
    printStatsForJobs(fail);
  }
  System.out.println("GridMix results:");
  System.out.println("Total num of Jobs: " + numOfJobs);
  System.out.println("ExecutionTime: " + ((endTime - startTime) / 1000));
  gridmix.stop();
}
