{
  final String prefix=String.format("%s.%sJobs",job.getName(),size);
  int[] numJobs=getInts(config,prefix + ".numOfJobs",size.defaultNumJobs());
  int[] numReduces=getInts(config,prefix + ".numOfReduces",size.defaultNumReducers());
  if (numJobs.length != numReduces.length) {
    throw new IOException("Configuration error: " + prefix + ".numOfJobs must match "+ prefix+ ".numOfReduces");
  }
  int numMapoutputCompressed=config.getInt(prefix + ".numOfMapoutputCompressed",0);
  int numOutputCompressed=config.getInt(prefix + ".numOfOutputCompressed",size.defaultNumJobs());
  int totalJobs=0;
  for (  int nJob : numJobs) {
    totalJobs+=nJob;
  }
  int currentIndex=0;
  for (int i=0; i < numJobs.length; ++i) {
    for (int j=0; j < numJobs[i]; ++j) {
      boolean mapoutputComp=select(totalJobs,numMapoutputCompressed,currentIndex);
      boolean outputComp=select(totalJobs,numOutputCompressed,currentIndex);
      job.addJob(numReduces[i],mapoutputComp,outputComp,size,gridmix);
      ++numOfJobs;
      ++currentIndex;
    }
  }
}
