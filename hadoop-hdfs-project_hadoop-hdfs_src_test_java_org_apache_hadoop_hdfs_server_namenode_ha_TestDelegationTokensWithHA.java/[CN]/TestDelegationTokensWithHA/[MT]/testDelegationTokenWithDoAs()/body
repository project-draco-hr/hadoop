{
  final Token<DelegationTokenIdentifier> token=dfs.getDelegationToken("JobTracker");
  final UserGroupInformation longUgi=UserGroupInformation.createRemoteUser("JobTracker/foo.com@FOO.COM");
  final UserGroupInformation shortUgi=UserGroupInformation.createRemoteUser("JobTracker");
  longUgi.doAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      DistributedFileSystem dfs=(DistributedFileSystem)HATestUtil.configureFailoverFs(cluster,conf);
      dfs.renewDelegationToken(token);
      return null;
    }
  }
);
  shortUgi.doAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      DistributedFileSystem dfs=(DistributedFileSystem)HATestUtil.configureFailoverFs(cluster,conf);
      dfs.renewDelegationToken(token);
      return null;
    }
  }
);
  longUgi.doAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      DistributedFileSystem dfs=(DistributedFileSystem)HATestUtil.configureFailoverFs(cluster,conf);
      dfs.cancelDelegationToken(token);
      return null;
    }
  }
);
}
