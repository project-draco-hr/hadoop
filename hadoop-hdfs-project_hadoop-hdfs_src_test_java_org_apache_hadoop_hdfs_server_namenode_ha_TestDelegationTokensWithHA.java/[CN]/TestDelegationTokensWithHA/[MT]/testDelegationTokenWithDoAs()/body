{
  final Token<DelegationTokenIdentifier> token=getDelegationToken(fs,"JobTracker");
  final UserGroupInformation longUgi=UserGroupInformation.createRemoteUser("JobTracker/foo.com@FOO.COM");
  final UserGroupInformation shortUgi=UserGroupInformation.createRemoteUser("JobTracker");
  longUgi.doAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      token.renew(conf);
      return null;
    }
  }
);
  shortUgi.doAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      token.renew(conf);
      return null;
    }
  }
);
  longUgi.doAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      token.cancel(conf);
      ;
      return null;
    }
  }
);
}
