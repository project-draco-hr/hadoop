{
  String user=UserGroupInformation.getCurrentUser().getShortUserName();
  UserGroupInformation ugi1=UserGroupInformation.createRemoteUser(user);
  ugi1.doAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      final Token<DelegationTokenIdentifier> token1=getDelegationToken(fs,"JobTracker");
      UserGroupInformation.getCurrentUser().addToken(token1.getService(),token1);
      FileSystem fs1=HATestUtil.configureFailoverFs(cluster,conf);
      doRenewOrCancel(token1,conf,TokenTestAction.CANCEL);
      final Token<DelegationTokenIdentifier> token2=getDelegationToken(fs,"JobTracker");
      UserGroupInformation.getCurrentUser().addToken(token2.getService(),token2);
      fs1.listFiles(new Path("/"),false);
      return null;
    }
  }
);
}
