{
  Configuration conf=new Configuration();
  conf.setClass("fs.mockfs.impl",MockFileSystem.class,FileSystem.class);
  URI chrootUri=URI.create("mockfs://foo/a/b");
  ChRootedFileSystem chrootFs=new ChRootedFileSystem(chrootUri,conf);
  FileSystem mockFs=((FilterFileSystem)chrootFs.getRawFileSystem()).getRawFileSystem();
  Path chrootPath=new Path("/c");
  Path rawPath=new Path("/a/b/c");
  List<AclEntry> entries=Collections.emptyList();
  EnumSet<AclWriteFlag> writeFlags=EnumSet.noneOf(AclWriteFlag.class);
  EnumSet<AclReadFlag> readFlags=EnumSet.noneOf(AclReadFlag.class);
  chrootFs.modifyAclEntries(chrootPath,entries,writeFlags);
  verify(mockFs).modifyAclEntries(rawPath,entries,writeFlags);
  chrootFs.removeAclEntries(chrootPath,entries,writeFlags);
  verify(mockFs).removeAclEntries(rawPath,entries,writeFlags);
  chrootFs.removeDefaultAcl(chrootPath,writeFlags);
  verify(mockFs).removeDefaultAcl(rawPath,writeFlags);
  chrootFs.removeAcl(chrootPath,writeFlags);
  verify(mockFs).removeAcl(rawPath,writeFlags);
  chrootFs.setAcl(chrootPath,entries,writeFlags);
  verify(mockFs).setAcl(rawPath,entries,writeFlags);
  chrootFs.listAclStatus(chrootPath,readFlags);
  verify(mockFs).listAclStatus(rawPath,readFlags);
}
