{
  JobConf job=new JobConf(defaultConf);
  CompressionCodec gzip=new GzipCodec();
  ReflectionUtils.setConf(gzip,job);
  localFs.delete(workDir,true);
  writeFile(localFs,new Path(workDir,"part1.txt.gz"),gzip,"the quick\nbrown\nfox jumped\nover\n the lazy\n dog\n");
  writeFile(localFs,new Path(workDir,"part2.txt.gz"),gzip,"this is a test\nof gzip\n");
  FileInputFormat.setInputPaths(job,workDir);
  TextInputFormat format=new TextInputFormat();
  format.configure(job);
  InputSplit[] splits=format.getSplits(job,100);
  assertEquals("compressed splits == 2",2,splits.length);
  FileSplit tmp=(FileSplit)splits[0];
  if (tmp.getPath().getName().equals("part2.txt.gz")) {
    splits[0]=splits[1];
    splits[1]=tmp;
  }
  List<Text> results=readSplit(format,splits[0],job);
  assertEquals("splits[0] length",6,results.size());
  assertEquals("splits[0][5]"," dog",results.get(5).toString());
  results=readSplit(format,splits[1],job);
  assertEquals("splits[1] length",2,results.size());
  assertEquals("splits[1][0]","this is a test",results.get(0).toString());
  assertEquals("splits[1][1]","of gzip",results.get(1).toString());
}
