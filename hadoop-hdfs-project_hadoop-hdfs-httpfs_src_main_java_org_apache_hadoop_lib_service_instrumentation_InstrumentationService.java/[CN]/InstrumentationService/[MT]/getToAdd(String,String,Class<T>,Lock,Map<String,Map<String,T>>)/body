{
  boolean locked=false;
  try {
    Map<String,T> groupMap=map.get(group);
    if (groupMap == null) {
      lock.lock();
      locked=true;
      groupMap=map.get(group);
      if (groupMap == null) {
        groupMap=new ConcurrentHashMap<String,T>();
        map.put(group,groupMap);
      }
    }
    T element=groupMap.get(name);
    if (element == null) {
      if (!locked) {
        lock.lock();
        locked=true;
      }
      element=groupMap.get(name);
      if (element == null) {
        try {
          if (klass == Timer.class) {
            element=(T)new Timer(timersSize);
          }
 else {
            element=klass.newInstance();
          }
        }
 catch (        Exception ex) {
          throw new RuntimeException(ex);
        }
        groupMap.put(name,element);
      }
    }
    return element;
  }
  finally {
    if (locked) {
      lock.unlock();
    }
  }
}
