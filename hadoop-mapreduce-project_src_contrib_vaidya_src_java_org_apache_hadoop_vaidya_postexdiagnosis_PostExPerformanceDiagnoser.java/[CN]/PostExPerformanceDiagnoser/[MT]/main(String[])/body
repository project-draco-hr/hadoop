{
  String jobconffile=null;
  String joblogfile=null;
  InputStream testsconffileis=null;
  String reportfile=null;
  try {
    for (int i=0; i < args.length - 1; i=i + 2) {
      if (args[i].equalsIgnoreCase("-jobconf")) {
        jobconffile=args[i + 1];
      }
 else       if (args[i].equalsIgnoreCase("-joblog")) {
        joblogfile=args[i + 1];
      }
 else       if (args[i].equalsIgnoreCase("-testconf")) {
        testsconffileis=new FileInputStream(new java.io.File(args[i + 1]));
      }
 else       if (args[i].equalsIgnoreCase("-report")) {
        reportfile=args[i + 1];
      }
 else       if (args[i].equalsIgnoreCase("-help")) {
        printHelp();
        return;
      }
 else {
        printHelp();
        return;
      }
    }
  }
 catch (  Exception e) {
    System.err.println("Invalid arguments.");
    e.printStackTrace();
    System.err.println();
    printHelp();
  }
  if (jobconffile == null || joblogfile == null) {
    System.err.println("Invalid arguments: -jobconf or -joblog arguments are missing");
    printHelp();
    return;
  }
  try {
    PostExPerformanceDiagnoser pa=new PostExPerformanceDiagnoser(jobconffile,joblogfile,testsconffileis,reportfile);
    if (pa.getTestsConfFileIs() == null) {
      java.io.InputStream testsconfis=Thread.currentThread().getContextClassLoader().getResourceAsStream("postex_diagnosis_tests.xml");
      pa.setTestsConfFileIs(testsconfis);
    }
    Document rulesDoc=XMLUtils.parse(pa.getTestsConfFileIs());
    NodeList list=rulesDoc.getElementsByTagName("DiagnosticTest");
    int list_size=list.getLength();
    for (int i=0; i < list_size; i++) {
      Element dRule=(Element)list.item(i);
      NodeList cNodeList=dRule.getElementsByTagName("ClassName");
      Element cn=(Element)cNodeList.item(0);
      String className=cn.getFirstChild().getNodeValue().trim();
      Class rc=Class.forName(className);
      DiagnosticTest test=(DiagnosticTest)rc.newInstance();
      test.initGlobals(pa.getJobExecutionStatistics(),(Element)list.item(i));
      test.run();
      NodeList nodelist=pa.getReport().getElementsByTagName("PostExPerformanceDiagnosticReport");
      Element root=(Element)nodelist.item(0);
      Element re=test.getReportElement(pa.getReport(),root,i);
    }
    if (pa.getReportFile() == null) {
      pa.printReport();
    }
 else {
      pa.saveReport(pa.getReportFile());
    }
  }
 catch (  Exception e) {
    System.err.print("Exception:" + e);
    e.printStackTrace();
  }
}
