{
  int parityBlkSize=(int)StripedBlockUtil.getInternalBlockLength(size,cellSize,dataBytes.length,dataBytes.length);
  final byte[][] expectedParityBytes=new byte[parityBytes.length][];
  for (int i=0; i < parityBytes.length; i++) {
    expectedParityBytes[i]=new byte[parityBlkSize];
  }
  for (int i=0; i < dataBytes.length; i++) {
    if (dataBytes[i] == null) {
      dataBytes[i]=new byte[dataBytes[0].length];
    }
 else     if (dataBytes[i].length < dataBytes[0].length) {
      final byte[] tmp=dataBytes[i];
      dataBytes[i]=new byte[dataBytes[0].length];
      System.arraycopy(tmp,0,dataBytes[i],0,tmp.length);
    }
  }
  final RawErasureEncoder encoder=CodecUtil.createRSRawEncoder(conf,dataBytes.length,parityBytes.length);
  encoder.encode(dataBytes,expectedParityBytes);
  for (int i=0; i < parityBytes.length; i++) {
    if (i != killedDnIndex) {
      Assert.assertArrayEquals("i=" + i + ", killedDnIndex="+ killedDnIndex,expectedParityBytes[i],parityBytes[i]);
    }
  }
}
