{
  this.strictResourceUsageMode=conf.getBoolean(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);
  this.cGroupsHandler.mountCGroupController(CPU);
  nodeVCores=NodeManagerHardwareUtils.getVCores(plugin,conf);
  yarnProcessors=NodeManagerHardwareUtils.getContainersCPUs(plugin,conf);
  int systemProcessors=NodeManagerHardwareUtils.getNodeCPUs(plugin,conf);
  boolean existingCpuLimits;
  try {
    existingCpuLimits=cpuLimitsExist(cGroupsHandler.getPathForCGroup(CPU,""));
  }
 catch (  IOException ie) {
    throw new ResourceHandlerException(ie);
  }
  if (systemProcessors != (int)yarnProcessors) {
    LOG.info("YARN containers restricted to " + yarnProcessors + " cores");
    int[] limits=getOverallLimits(yarnProcessors);
    cGroupsHandler.updateCGroupParam(CPU,"",CGroupsHandler.CGROUP_CPU_PERIOD_US,String.valueOf(limits[0]));
    cGroupsHandler.updateCGroupParam(CPU,"",CGroupsHandler.CGROUP_CPU_QUOTA_US,String.valueOf(limits[1]));
  }
 else   if (existingCpuLimits) {
    LOG.info("Removing CPU constraints for YARN containers.");
    cGroupsHandler.updateCGroupParam(CPU,"",CGroupsHandler.CGROUP_CPU_QUOTA_US,String.valueOf(-1));
  }
  return null;
}
