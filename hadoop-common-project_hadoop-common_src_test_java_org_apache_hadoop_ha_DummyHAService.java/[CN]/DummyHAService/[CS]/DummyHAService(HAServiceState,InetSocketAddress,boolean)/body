{
  this.state=state;
  this.testWithProtoBufRPC=testWithProtoBufRPC;
  if (testWithProtoBufRPC) {
    this.address=startAndGetRPCServerAddress(address);
  }
 else {
    this.address=address;
  }
  Configuration conf=new Configuration();
  this.proxy=makeMock(conf,HA_HM_RPC_TIMEOUT_DEFAULT);
  this.healthMonitorProxy=makeHealthMonitorMock(conf,HA_HM_RPC_TIMEOUT_DEFAULT);
  try {
    conf.set(DUMMY_FENCE_KEY,DummyFencer.class.getName());
    this.fencer=Mockito.spy(NodeFencer.create(conf,DUMMY_FENCE_KEY));
  }
 catch (  BadFencingConfigurationException e) {
    throw new RuntimeException(e);
  }
synchronized (instances) {
    instances.add(this);
    this.index=instances.size();
  }
}
