def __init__(self, cfg, log, logMasterSources, retry=5):
    try:
        from hodlib.Common.socketServers import twistedXMLRPCServer
        ringMasterServer.xmlrpc = twistedXMLRPCServer('', cfg['ringmaster']['xrs-port-range'])
    except ImportError:
        log.info('Twisted interface not found. Using hodXMLRPCServer.')
        ringMasterServer.xmlrpc = hodXMLRPCServer('', cfg['ringmaster']['xrs-port-range'])
    ringMasterServer.xmlrpc.register_instance(logMasterSources)
    self.logMasterSources = logMasterSources
    ringMasterServer.xmlrpc.serve_forever()
    while (not ringMasterServer.xmlrpc.is_alive()):
        time.sleep(0.5)
    log.debug(('Ringmaster RPC Server at %d' % ringMasterServer.xmlrpc.server_address[1]))
