{
  assertNativeLibraryLoaded();
synchronized (reporter) {
    final byte[] statusBytes=JNIUpdateStatus();
    final DataInputBuffer ib=new DataInputBuffer();
    ib.reset(statusBytes,statusBytes.length);
    final FloatWritable progress=new FloatWritable();
    progress.readFields(ib);
    reporter.setProgress(progress.get());
    final Text status=new Text();
    status.readFields(ib);
    if (status.getLength() > 0) {
      reporter.setStatus(status.toString());
    }
    final IntWritable numCounters=new IntWritable();
    numCounters.readFields(ib);
    if (numCounters.get() == 0) {
      return;
    }
    final Text group=new Text();
    final Text name=new Text();
    final LongWritable amount=new LongWritable();
    for (int i=0; i < numCounters.get(); i++) {
      group.readFields(ib);
      name.readFields(ib);
      amount.readFields(ib);
      reporter.incrCounter(group.toString(),name.toString(),amount.get());
    }
  }
}
