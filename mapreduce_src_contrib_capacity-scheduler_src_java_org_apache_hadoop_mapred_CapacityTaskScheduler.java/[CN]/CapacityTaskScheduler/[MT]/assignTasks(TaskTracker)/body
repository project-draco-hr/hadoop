{
  TaskLookupResult tlr;
  TaskTrackerStatus taskTrackerStatus=taskTracker.getStatus();
  List<Task> result=new ArrayList<Task>();
  ClusterStatus c=taskTrackerManager.getClusterStatus();
  int mapClusterCapacity=c.getMaxMapTasks();
  int reduceClusterCapacity=c.getMaxReduceTasks();
  int maxMapSlots=taskTrackerStatus.getMaxMapSlots();
  int currentMapSlots=taskTrackerStatus.countOccupiedMapSlots();
  int maxReduceSlots=taskTrackerStatus.getMaxReduceSlots();
  int currentReduceSlots=taskTrackerStatus.countOccupiedReduceSlots();
  if (LOG.isDebugEnabled()) {
    LOG.debug("TT asking for task, max maps=" + taskTrackerStatus.getMaxMapSlots() + ", run maps="+ taskTrackerStatus.countMapTasks()+ ", max reds="+ taskTrackerStatus.getMaxReduceSlots()+ ", run reds="+ taskTrackerStatus.countReduceTasks()+ ", map cap="+ mapClusterCapacity+ ", red cap = "+ reduceClusterCapacity);
  }
  updateContextObjects(mapClusterCapacity,reduceClusterCapacity);
  if (maxReduceSlots > currentReduceSlots) {
    tlr=reduceScheduler.assignTasks(taskTracker);
    if (TaskLookupResult.LookUpStatus.TASK_FOUND == tlr.getLookUpStatus()) {
      result.add(tlr.getTask());
    }
  }
  if (maxMapSlots > currentMapSlots) {
    tlr=mapScheduler.assignTasks(taskTracker);
    if (TaskLookupResult.LookUpStatus.TASK_FOUND == tlr.getLookUpStatus()) {
      result.add(tlr.getTask());
    }
  }
  return (result.isEmpty()) ? null : result;
}
