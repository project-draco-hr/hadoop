{
  Class<?> clazz;
  try {
    clazz=STANDARD_METHODS.get(clazzName);
    if (clazz == null) {
      clazz=Class.forName(clazzName);
    }
  }
 catch (  Exception e) {
    throw new BadFencingConfigurationException("Could not find configured fencing method " + clazzName,e);
  }
  if (!FenceMethod.class.isAssignableFrom(clazz)) {
    throw new BadFencingConfigurationException("Class " + clazzName + " does not implement FenceMethod");
  }
  FenceMethod method=(FenceMethod)ReflectionUtils.newInstance(clazz,conf);
  method.checkArgs(arg);
  return new FenceMethodWithArg(method,arg);
}
