{
  this.queueName=queueName;
  this.current=current;
  if (queue instanceof LeafQueue) {
    LeafQueue l=(LeafQueue)queue;
    pending=l.getTotalPendingResourcesConsideringUserLimit(totalPartitionResource,partition);
    leafQueue=l;
  }
 else {
    pending=Resources.createResource(0);
  }
  this.idealAssigned=Resource.newInstance(0,0);
  this.actuallyToBePreempted=Resource.newInstance(0,0);
  this.toBePreempted=Resource.newInstance(0,0);
  this.normalizedGuarantee=Float.NaN;
  this.children=new ArrayList<>();
  this.untouchableExtra=Resource.newInstance(0,0);
  this.preemptableExtra=Resource.newInstance(0,0);
  this.preemptionDisabled=preemptionDisabled;
  this.partition=partition;
  this.killable=killable;
  this.absCapacity=absCapacity;
  this.absMaxCapacity=absMaxCapacity;
  this.totalPartitionResource=totalPartitionResource;
  this.reserved=reserved;
}
