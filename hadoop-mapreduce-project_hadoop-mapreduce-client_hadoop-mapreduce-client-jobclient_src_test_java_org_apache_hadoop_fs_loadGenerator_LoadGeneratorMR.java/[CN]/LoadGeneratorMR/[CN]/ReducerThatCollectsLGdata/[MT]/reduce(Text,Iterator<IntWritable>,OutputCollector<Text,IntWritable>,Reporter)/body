{
  int sum=0;
  while (values.hasNext()) {
    sum+=values.next().get();
  }
  if (key.equals(OPEN_EXECTIME)) {
    executionTime[OPEN]=sum;
  }
 else   if (key.equals(NUMOPS_OPEN)) {
    numOfOps[OPEN]=sum;
  }
 else   if (key.equals(LIST_EXECTIME)) {
    executionTime[LIST]=sum;
  }
 else   if (key.equals(NUMOPS_LIST)) {
    numOfOps[LIST]=sum;
  }
 else   if (key.equals(DELETE_EXECTIME)) {
    executionTime[DELETE]=sum;
  }
 else   if (key.equals(NUMOPS_DELETE)) {
    numOfOps[DELETE]=sum;
  }
 else   if (key.equals(CREATE_EXECTIME)) {
    executionTime[CREATE]=sum;
  }
 else   if (key.equals(NUMOPS_CREATE)) {
    numOfOps[CREATE]=sum;
  }
 else   if (key.equals(WRITE_CLOSE_EXECTIME)) {
    System.out.println(WRITE_CLOSE_EXECTIME + " = " + sum);
    executionTime[WRITE_CLOSE]=sum;
  }
 else   if (key.equals(NUMOPS_WRITE_CLOSE)) {
    numOfOps[WRITE_CLOSE]=sum;
  }
 else   if (key.equals(TOTALOPS)) {
    totalOps=sum;
  }
 else   if (key.equals(ELAPSED_TIME)) {
    totalTime=sum;
  }
  result.set(sum);
  output.collect(key,result);
}
