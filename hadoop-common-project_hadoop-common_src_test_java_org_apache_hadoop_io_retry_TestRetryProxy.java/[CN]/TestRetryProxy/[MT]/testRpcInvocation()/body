{
  final UnreliableInterface unreliable=(UnreliableInterface)RetryProxy.create(UnreliableInterface.class,unreliableImpl,RETRY_FOREVER);
  assertTrue(RetryInvocationHandler.isRpcInvocation(unreliable));
  final AtomicInteger count=new AtomicInteger();
  ProtocolTranslator xlator=new ProtocolTranslator(){
    @Override public Object getUnderlyingProxyObject(){
      count.getAndIncrement();
      return unreliable;
    }
  }
;
  assertTrue(RetryInvocationHandler.isRpcInvocation(xlator));
  assertEquals(1,count.get());
  assertFalse(RetryInvocationHandler.isRpcInvocation(new Object()));
}
