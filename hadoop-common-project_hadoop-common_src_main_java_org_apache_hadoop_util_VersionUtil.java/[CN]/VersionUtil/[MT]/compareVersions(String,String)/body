{
  String[] version1Parts=version1.split("\\.");
  String[] version2Parts=version2.split("\\.");
  for (int i=0; i < version1Parts.length && i < version2Parts.length; i++) {
    String component1=version1Parts[i];
    String component2=version2Parts[i];
    if (!component1.equals(component2)) {
      Matcher matcher1=COMPONENT_GROUPS.matcher(component1);
      Matcher matcher2=COMPONENT_GROUPS.matcher(component2);
      while (matcher1.find() && matcher2.find()) {
        String group1=matcher1.group();
        String group2=matcher2.group();
        if (!group1.equals(group2)) {
          if (isNumeric(group1) && isNumeric(group2)) {
            return Integer.parseInt(group1) - Integer.parseInt(group2);
          }
 else           if (!isNumeric(group1) && !isNumeric(group2)) {
            return group1.compareTo(group2);
          }
 else {
            return isNumeric(group1) ? -1 : 1;
          }
        }
      }
      return component1.length() - component2.length();
    }
  }
  return version1Parts.length - version2Parts.length;
}
