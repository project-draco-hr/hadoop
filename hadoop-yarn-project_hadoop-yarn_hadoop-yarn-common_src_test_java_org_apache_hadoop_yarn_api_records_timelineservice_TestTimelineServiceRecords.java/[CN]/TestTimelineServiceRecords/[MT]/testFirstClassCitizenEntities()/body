{
  TimelineUser user=new TimelineUser();
  user.setId("test user id");
  TimelineQueue queue=new TimelineQueue();
  queue.setId("test queue id");
  ClusterEntity cluster=new ClusterEntity();
  cluster.setId("test cluster id");
  FlowEntity flow1=new FlowEntity();
  flow1.setId("test flow id");
  flow1.setUser(user.getId());
  flow1.setVersion("test flow version");
  flow1.setRun("test run 1");
  FlowEntity flow2=new FlowEntity();
  flow2.setId("test flow run id2");
  flow2.setUser(user.getId());
  flow1.setVersion("test flow version2");
  flow2.setRun("test run 2");
  ApplicationEntity app=new ApplicationEntity();
  app.setId(ApplicationId.newInstance(0,1).toString());
  app.setQueue(queue.getId());
  ApplicationAttemptEntity appAttempt=new ApplicationAttemptEntity();
  appAttempt.setId(ApplicationAttemptId.newInstance(ApplicationId.newInstance(0,1),1).toString());
  ContainerEntity container=new ContainerEntity();
  container.setId(ContainerId.newContainerId(ApplicationAttemptId.newInstance(ApplicationId.newInstance(0,1),1),1).toString());
  cluster.addChild(TimelineEntityType.YARN_FLOW.toString(),flow1.getId());
  flow1.setParent(TimelineEntityType.YARN_CLUSTER.toString(),cluster.getId());
  flow1.addChild(TimelineEntityType.YARN_FLOW.toString(),flow2.getId());
  flow2.setParent(TimelineEntityType.YARN_FLOW.toString(),flow1.getId());
  flow2.addChild(TimelineEntityType.YARN_APPLICATION.toString(),app.getId());
  app.setParent(TimelineEntityType.YARN_FLOW.toString(),flow2.getId());
  app.addChild(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString(),appAttempt.getId());
  appAttempt.setParent(TimelineEntityType.YARN_APPLICATION.toString(),app.getId());
  appAttempt.addChild(TimelineEntityType.YARN_CONTAINER.toString(),container.getId());
  container.setParent(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString(),appAttempt.getId());
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(cluster,true));
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(flow1,true));
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(flow2,true));
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(app,true));
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(appAttempt,true));
  LOG.info(TimelineUtils.dumpTimelineRecordtoJSON(container,true));
}
