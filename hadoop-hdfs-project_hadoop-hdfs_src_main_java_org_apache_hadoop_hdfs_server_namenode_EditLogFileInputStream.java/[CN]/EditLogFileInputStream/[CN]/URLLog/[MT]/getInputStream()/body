{
  return SecurityUtil.doAsCurrentUser(new PrivilegedExceptionAction<InputStream>(){
    @Override public InputStream run() throws IOException {
      HttpURLConnection connection;
      try {
        connection=(HttpURLConnection)connectionFactory.openConnection(url,isSpnegoEnabled);
      }
 catch (      AuthenticationException e) {
        throw new IOException(e);
      }
      if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
        throw new HttpGetFailedException("Fetch of " + url + " failed with status code "+ connection.getResponseCode()+ "\nResponse message:\n"+ connection.getResponseMessage(),connection);
      }
      String contentLength=connection.getHeaderField(CONTENT_LENGTH);
      if (contentLength != null) {
        advertisedSize=Long.parseLong(contentLength);
        if (advertisedSize <= 0) {
          throw new IOException("Invalid " + CONTENT_LENGTH + " header: "+ contentLength);
        }
      }
 else {
        throw new IOException(CONTENT_LENGTH + " header is not provided " + "by the server when trying to fetch "+ url);
      }
      return connection.getInputStream();
    }
  }
);
}
