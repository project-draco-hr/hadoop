{
  int countOfQueues=jobQueues.size();
  String[] queues=(String[])jobQueues.keySet().toArray(new String[countOfQueues]);
  int numberOfQueuesPerThread=countOfQueues / poolSize;
  int numberOfQueuesAssigned=0;
  for (int i=0; i < poolSize; i++) {
    JobInitializationThread initializer=createJobInitializationThread();
    int batch=(i * numberOfQueuesPerThread);
    for (int j=batch; j < (batch + numberOfQueuesPerThread); j++) {
      initializer.addQueue(queues[j]);
      threadsToQueueMap.put(queues[j],initializer);
      numberOfQueuesAssigned++;
    }
  }
  if (numberOfQueuesAssigned < countOfQueues) {
    int startIndex=0;
    for (int i=numberOfQueuesAssigned; i < countOfQueues; i++) {
      JobInitializationThread t=threadsToQueueMap.get(queues[startIndex]);
      t.addQueue(queues[i]);
      threadsToQueueMap.put(queues[i],t);
      startIndex++;
    }
  }
}
