{
  DatanodeDescriptor chosenNode=null;
  try {
    String path=cachedFullPathNames.get(inode);
    FileType type=getFileType(path);
    if (type == FileType.NOT_RAID) {
      return defaultPolicy.chooseReplicaToDelete(inode,block,replicationFactor,first,second);
    }
    List<LocatedBlock> companionBlocks=getCompanionBlocks(path,type,block);
    if (companionBlocks == null || companionBlocks.size() == 0) {
      return defaultPolicy.chooseReplicaToDelete(inode,block,replicationFactor,first,second);
    }
    Collection<DatanodeDescriptor> all=new HashSet<DatanodeDescriptor>();
    all.addAll(first);
    all.addAll(second);
    chosenNode=chooseReplicaToDelete(companionBlocks,all);
    if (chosenNode != null) {
      return chosenNode;
    }
    return defaultPolicy.chooseReplicaToDelete(inode,block,replicationFactor,first,second);
  }
 catch (  Exception e) {
    LOG.debug("Error happend when choosing replica to delete" + StringUtils.stringifyException(e));
    return defaultPolicy.chooseReplicaToDelete(inode,block,replicationFactor,first,second);
  }
}
