{
  job.setCredentials(credentials);
  ApplicationAttemptId appAttemptId=ConverterUtils.toContainerId(System.getenv(Environment.CONTAINER_ID.name())).getApplicationAttemptId();
  LOG.debug("APPLICATION_ATTEMPT_ID: " + appAttemptId);
  job.setInt(MRJobConfig.APPLICATION_ATTEMPT_ID,appAttemptId.getAttemptId());
  job.setBoolean("ipc.client.tcpnodelay",true);
  job.setClass(MRConfig.TASK_LOCAL_OUTPUT_CLASS,YarnOutputFiles.class,MapOutputFile.class);
  task.setJobTokenSecret(JobTokenSecretManager.createSecretKey(jt.getPassword()));
  byte[] shuffleSecret=TokenCache.getShuffleSecretKey(credentials);
  if (shuffleSecret == null) {
    LOG.warn("Shuffle secret missing from task credentials." + " Using job token secret as shuffle secret.");
    shuffleSecret=jt.getPassword();
  }
  task.setShuffleSecret(JobTokenSecretManager.createSecretKey(shuffleSecret));
  configureLocalDirs(task,job);
  task.localizeConfiguration(job);
  MRApps.setupDistributedCacheLocal(job);
  Path localTaskFile=new Path(MRJobConfig.JOB_CONF_FILE);
  writeLocalJobFile(localTaskFile,job);
  task.setJobFile(localTaskFile.toString());
  task.setConf(job);
}
