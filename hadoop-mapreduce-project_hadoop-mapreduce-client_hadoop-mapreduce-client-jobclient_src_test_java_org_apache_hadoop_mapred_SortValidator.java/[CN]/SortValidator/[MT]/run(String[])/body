{
  Configuration defaults=getConf();
  int noMaps=-1, noReduces=-1;
  Path sortInput=null, sortOutput=null;
  boolean deepTest=false;
  for (int i=0; i < args.length; ++i) {
    try {
      if ("-m".equals(args[i])) {
        noMaps=Integer.parseInt(args[++i]);
      }
 else       if ("-r".equals(args[i])) {
        noReduces=Integer.parseInt(args[++i]);
      }
 else       if ("-sortInput".equals(args[i])) {
        sortInput=new Path(args[++i]);
      }
 else       if ("-sortOutput".equals(args[i])) {
        sortOutput=new Path(args[++i]);
      }
 else       if ("-deep".equals(args[i])) {
        deepTest=true;
      }
 else {
        printUsage();
        return -1;
      }
    }
 catch (    NumberFormatException except) {
      System.err.println("ERROR: Integer expected instead of " + args[i]);
      printUsage();
      return -1;
    }
catch (    ArrayIndexOutOfBoundsException except) {
      System.err.println("ERROR: Required parameter missing from " + args[i - 1]);
      printUsage();
      return -1;
    }
  }
  if (sortInput == null || sortOutput == null) {
    printUsage();
    return -2;
  }
  RecordStatsChecker.checkRecords(defaults,sortInput,sortOutput);
  if (deepTest) {
    RecordChecker.checkRecords(defaults,noMaps,noReduces,sortInput,sortOutput);
  }
  System.out.println("\nSUCCESS! Validated the MapReduce framework's 'sort'" + " successfully.");
  return 0;
}
