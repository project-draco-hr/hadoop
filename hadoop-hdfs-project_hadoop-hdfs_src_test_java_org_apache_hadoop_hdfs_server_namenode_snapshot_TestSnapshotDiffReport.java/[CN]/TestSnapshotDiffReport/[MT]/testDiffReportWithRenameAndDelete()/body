{
  final Path root=new Path("/");
  final Path dir1=new Path(root,"dir1");
  final Path dir2=new Path(root,"dir2");
  final Path foo=new Path(dir1,"foo");
  final Path fileInFoo=new Path(foo,"file");
  final Path bar=new Path(dir2,"bar");
  final Path fileInBar=new Path(bar,"file");
  DFSTestUtil.createFile(hdfs,fileInFoo,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,fileInBar,BLOCKSIZE,REPLICATION,seed);
  SnapshotTestHelper.createSnapshot(hdfs,root,"s0");
  hdfs.rename(fileInFoo,fileInBar,Rename.OVERWRITE);
  SnapshotTestHelper.createSnapshot(hdfs,root,"s1");
  verifyDiffReport(root,"s0","s1",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir1/foo")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir2/bar")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("dir2/bar/file")),new DiffReportEntry(DiffType.RENAME,DFSUtil.string2Bytes("dir1/foo/file"),DFSUtil.string2Bytes("dir2/bar/file")));
  hdfs.delete(bar,true);
  SnapshotTestHelper.createSnapshot(hdfs,root,"s2");
  verifyDiffReport(root,"s0","s2",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir1/foo")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("dir2")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("dir2/bar")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("dir1/foo/file")));
}
