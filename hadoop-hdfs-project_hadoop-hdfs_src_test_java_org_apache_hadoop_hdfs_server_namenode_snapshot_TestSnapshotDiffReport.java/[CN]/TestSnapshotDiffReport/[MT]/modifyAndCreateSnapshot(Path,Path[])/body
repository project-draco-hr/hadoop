{
  Path file10=new Path(modifyDir,"file10");
  Path file11=new Path(modifyDir,"file11");
  Path file12=new Path(modifyDir,"file12");
  Path file13=new Path(modifyDir,"file13");
  Path file14=new Path(modifyDir,"file14");
  Path file15=new Path(modifyDir,"file15");
  DFSTestUtil.createFile(hdfs,file10,BLOCKSIZE,REPLICATION_1,seed);
  DFSTestUtil.createFile(hdfs,file11,BLOCKSIZE,REPLICATION_1,seed);
  DFSTestUtil.createFile(hdfs,file12,BLOCKSIZE,REPLICATION_1,seed);
  DFSTestUtil.createFile(hdfs,file13,BLOCKSIZE,REPLICATION_1,seed);
  for (  Path snapshotDir : snapshotDirs) {
    hdfs.allowSnapshot(snapshotDir);
    hdfs.createSnapshot(snapshotDir,genSnapshotName(snapshotDir));
  }
  hdfs.delete(file11,true);
  hdfs.setReplication(file12,REPLICATION);
  hdfs.setReplication(file13,REPLICATION);
  DFSTestUtil.createFile(hdfs,file14,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.createFile(hdfs,file15,BLOCKSIZE,REPLICATION,seed);
  for (  Path snapshotDir : snapshotDirs) {
    hdfs.createSnapshot(snapshotDir,genSnapshotName(snapshotDir));
  }
  DFSTestUtil.createFile(hdfs,file11,BLOCKSIZE,REPLICATION,seed);
  hdfs.delete(file12,true);
  hdfs.setReplication(file13,(short)(REPLICATION - 2));
  hdfs.delete(file14,true);
  hdfs.setReplication(file15,(short)(REPLICATION - 1));
  for (  Path snapshotDir : snapshotDirs) {
    hdfs.createSnapshot(snapshotDir,genSnapshotName(snapshotDir));
  }
  hdfs.setReplication(file10,(short)(REPLICATION - 1));
}
