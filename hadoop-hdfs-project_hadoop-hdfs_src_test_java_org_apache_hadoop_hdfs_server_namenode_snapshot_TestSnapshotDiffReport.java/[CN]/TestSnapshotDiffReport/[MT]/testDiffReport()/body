{
  cluster.getNamesystem().getSnapshotManager().setAllowNestedSnapshots(true);
  Path subsub1=new Path(sub1,"subsub1");
  Path subsubsub1=new Path(subsub1,"subsubsub1");
  hdfs.mkdirs(subsubsub1);
  modifyAndCreateSnapshot(sub1,new Path[]{sub1,subsubsub1});
  modifyAndCreateSnapshot(subsubsub1,new Path[]{sub1,subsubsub1});
  try {
    hdfs.getSnapshotDiffReport(subsub1,"s1","s2");
    fail("Expect exception when getting snapshot diff report: " + subsub1 + " is not a snapshottable directory.");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("Directory is not a snapshottable directory: " + subsub1,e);
  }
  final String invalidName="invalid";
  try {
    hdfs.getSnapshotDiffReport(sub1,invalidName,invalidName);
    fail("Expect exception when providing invalid snapshot name for diff report");
  }
 catch (  IOException e) {
    GenericTestUtils.assertExceptionContains("Cannot find the snapshot of directory " + sub1 + " with name "+ invalidName,e);
  }
  SnapshotDiffReport report=hdfs.getSnapshotDiffReport(sub1,"s0","s0");
  System.out.println(report);
  assertEquals(0,report.getDiffList().size());
  report=hdfs.getSnapshotDiffReport(sub1,"","");
  System.out.println(report);
  assertEquals(0,report.getDiffList().size());
  report=hdfs.getSnapshotDiffReport(subsubsub1,"s0","s2");
  System.out.println(report);
  assertEquals(0,report.getDiffList().size());
  report=hdfs.getSnapshotDiffReport(hdfs.makeQualified(subsubsub1),"s0","s2");
  System.out.println(report);
  assertEquals(0,report.getDiffList().size());
  verifyDiffReport(sub1,"s0","s2",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("file15")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("file12")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("file11")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("file11")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("file13")));
  verifyDiffReport(sub1,"s0","s5",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("file15")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("file12")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("file10")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("file11")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("file11")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("file13")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("subsub1/subsubsub1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file10")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file11")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file13")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file15")));
  verifyDiffReport(sub1,"s2","s5",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("file10")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("subsub1/subsubsub1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file10")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file11")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file13")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file15")));
  verifyDiffReport(sub1,"s3","",new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("subsub1/subsubsub1")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file15")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("subsub1/subsubsub1/file12")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("subsub1/subsubsub1/file10")),new DiffReportEntry(DiffType.DELETE,DFSUtil.string2Bytes("subsub1/subsubsub1/file11")),new DiffReportEntry(DiffType.CREATE,DFSUtil.string2Bytes("subsub1/subsubsub1/file11")),new DiffReportEntry(DiffType.MODIFY,DFSUtil.string2Bytes("subsub1/subsubsub1/file13")));
}
