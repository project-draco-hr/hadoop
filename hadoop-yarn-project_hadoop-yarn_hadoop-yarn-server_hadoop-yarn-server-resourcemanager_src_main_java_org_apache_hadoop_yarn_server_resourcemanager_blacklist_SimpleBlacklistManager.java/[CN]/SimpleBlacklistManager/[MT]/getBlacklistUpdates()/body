{
  BlacklistUpdates ret;
  List<String> blacklist=new ArrayList<>(blacklistNodes);
  final int currentBlacklistSize=blacklist.size();
  final double failureThreshold=this.blacklistDisableFailureThreshold * numberOfNodeManagerHosts;
  if (currentBlacklistSize < failureThreshold) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("blacklist size " + currentBlacklistSize + " is less than "+ "failure threshold ratio "+ blacklistDisableFailureThreshold+ " out of total usable nodes "+ numberOfNodeManagerHosts);
    }
    ret=new BlacklistUpdates(blacklist,EMPTY_LIST);
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("blacklist size " + currentBlacklistSize + " is more than "+ "failure threshold ratio "+ blacklistDisableFailureThreshold+ " out of total usable nodes "+ numberOfNodeManagerHosts);
    }
    ret=new BlacklistUpdates(EMPTY_LIST,blacklist);
  }
  return ret;
}
