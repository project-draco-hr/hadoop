{
  ResourceBlacklistRequest ret;
  List<String> blacklist=new ArrayList<>(blacklistNodes);
  final int currentBlacklistSize=blacklist.size();
  final double failureThreshold=this.blacklistDisableFailureThreshold * numberOfNodeManagerHosts;
  if (currentBlacklistSize < failureThreshold) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("blacklist size " + currentBlacklistSize + " is less than "+ "failure threshold ratio "+ blacklistDisableFailureThreshold+ " out of total usable nodes "+ numberOfNodeManagerHosts);
    }
    ret=ResourceBlacklistRequest.newInstance(blacklist,EMPTY_LIST);
  }
 else {
    LOG.warn("Ignoring Blacklists, blacklist size " + currentBlacklistSize + " is more than failure threshold ratio "+ blacklistDisableFailureThreshold+ " out of total usable nodes "+ numberOfNodeManagerHosts);
    ret=ResourceBlacklistRequest.newInstance(EMPTY_LIST,blacklist);
  }
  return ret;
}
