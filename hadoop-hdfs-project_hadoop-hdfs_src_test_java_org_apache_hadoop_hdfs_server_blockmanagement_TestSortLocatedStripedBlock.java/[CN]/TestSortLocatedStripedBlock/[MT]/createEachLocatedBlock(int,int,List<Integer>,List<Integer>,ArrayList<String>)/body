{
  final long blockGroupID=Long.MIN_VALUE;
  int totalDns=numDataBlk + numParityBlk + targetNodeIndices.size();
  DatanodeInfo[] locs=new DatanodeInfo[totalDns];
  String[] storageIDs=new String[totalDns];
  StorageType[] storageTypes=new StorageType[totalDns];
  byte[] blkIndices=new byte[totalDns];
  int index=0;
  for (; index < numDataBlk; index++) {
    blkIndices[index]=(byte)index;
    locs[index]=DFSTestUtil.getLocalDatanodeInfo(blkIndices[index]);
    locs[index].setLastUpdateMonotonic(Time.monotonicNow());
    storageIDs[index]=locs[index].getDatanodeUuid();
    storageTypes[index]=StorageType.DISK;
    if (decommnNodeIndices.contains(index)) {
      locs[index].setDecommissioned();
      decommNodeInfo.add(locs[index].toString());
      decommnNodeIndices.remove(new Integer(index));
    }
  }
  index=NUM_DATA_BLOCKS;
  for (int j=numDataBlk; j < numDataBlk + numParityBlk; j++, index++) {
    blkIndices[j]=(byte)index;
    locs[j]=DFSTestUtil.getLocalDatanodeInfo(blkIndices[j]);
    locs[j].setLastUpdateMonotonic(Time.monotonicNow());
    storageIDs[j]=locs[j].getDatanodeUuid();
    storageTypes[j]=StorageType.DISK;
    if (decommnNodeIndices.contains(index)) {
      locs[j].setDecommissioned();
      decommNodeInfo.add(locs[j].toString());
      decommnNodeIndices.remove(new Integer(index));
    }
  }
  int basePortValue=NUM_DATA_BLOCKS + NUM_PARITY_BLOCKS;
  index=numDataBlk + numParityBlk;
  for (int i=0; i < targetNodeIndices.size(); i++, index++) {
    int blkIndexPos=targetNodeIndices.get(i);
    blkIndices[index]=(byte)blkIndexPos;
    locs[index]=DFSTestUtil.getLocalDatanodeInfo(basePortValue++);
    locs[index].setLastUpdateMonotonic(Time.monotonicNow());
    storageIDs[index]=locs[index].getDatanodeUuid();
    storageTypes[index]=StorageType.DISK;
    if (decommnNodeIndices.contains(blkIndexPos)) {
      locs[index].setDecommissioned();
      decommNodeInfo.add(locs[index].toString());
      decommnNodeIndices.remove(new Integer(blkIndexPos));
    }
  }
  return new LocatedStripedBlock(new ExtendedBlock("pool",blockGroupID,StripedFileTestUtil.BLOCK_STRIPED_CELL_SIZE,1001),locs,storageIDs,storageTypes,blkIndices,0,false,null);
}
