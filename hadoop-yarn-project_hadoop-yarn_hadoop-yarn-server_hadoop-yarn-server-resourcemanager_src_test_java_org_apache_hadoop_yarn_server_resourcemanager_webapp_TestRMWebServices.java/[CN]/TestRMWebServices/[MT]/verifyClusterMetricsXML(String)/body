{
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  DocumentBuilder db=dbf.newDocumentBuilder();
  InputSource is=new InputSource();
  is.setCharacterStream(new StringReader(xml));
  Document dom=db.parse(is);
  NodeList nodes=dom.getElementsByTagName("clusterMetrics");
  assertEquals("incorrect number of elements",1,nodes.getLength());
  for (int i=0; i < nodes.getLength(); i++) {
    Element element=(Element)nodes.item(i);
    verifyClusterMetrics(WebServicesTestUtils.getXmlInt(element,"appsSubmitted"),WebServicesTestUtils.getXmlInt(element,"appsCompleted"),WebServicesTestUtils.getXmlInt(element,"reservedMB"),WebServicesTestUtils.getXmlInt(element,"availableMB"),WebServicesTestUtils.getXmlInt(element,"allocatedMB"),WebServicesTestUtils.getXmlInt(element,"reservedVirtualCores"),WebServicesTestUtils.getXmlInt(element,"availableVirtualCores"),WebServicesTestUtils.getXmlInt(element,"allocatedVirtualCores"),WebServicesTestUtils.getXmlInt(element,"totalVirtualCores"),WebServicesTestUtils.getXmlInt(element,"containersAllocated"),WebServicesTestUtils.getXmlInt(element,"totalMB"),WebServicesTestUtils.getXmlInt(element,"totalNodes"),WebServicesTestUtils.getXmlInt(element,"lostNodes"),WebServicesTestUtils.getXmlInt(element,"unhealthyNodes"),WebServicesTestUtils.getXmlInt(element,"decommissionedNodes"),WebServicesTestUtils.getXmlInt(element,"rebootedNodes"),WebServicesTestUtils.getXmlInt(element,"activeNodes"));
  }
}
