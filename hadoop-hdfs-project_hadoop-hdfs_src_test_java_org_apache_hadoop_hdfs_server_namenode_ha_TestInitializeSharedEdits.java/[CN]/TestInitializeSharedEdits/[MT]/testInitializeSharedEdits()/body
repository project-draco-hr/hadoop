{
  try {
    cluster.restartNameNode(0,false);
    fail("Should not have been able to start NN1 without shared dir");
  }
 catch (  IOException ioe) {
    LOG.info("Got expected exception",ioe);
    GenericTestUtils.assertExceptionContains("Cannot start an HA namenode with name dirs that need recovery",ioe);
  }
  try {
    cluster.restartNameNode(1,false);
    fail("Should not have been able to start NN2 without shared dir");
  }
 catch (  IOException ioe) {
    LOG.info("Got expected exception",ioe);
    GenericTestUtils.assertExceptionContains("Cannot start an HA namenode with name dirs that need recovery",ioe);
  }
  assertFalse(NameNode.initializeSharedEdits(conf));
  cluster.restartNameNode(0,false);
  cluster.restartNameNode(1,true);
  cluster.transitionToActive(0);
  FileSystem fs=null;
  try {
    fs=HATestUtil.configureFailoverFs(cluster,conf);
    assertTrue(fs.mkdirs(TEST_PATH));
    cluster.transitionToStandby(0);
    cluster.transitionToActive(1);
    assertTrue(fs.isDirectory(TEST_PATH));
  }
  finally {
    if (fs != null) {
      fs.close();
    }
  }
}
