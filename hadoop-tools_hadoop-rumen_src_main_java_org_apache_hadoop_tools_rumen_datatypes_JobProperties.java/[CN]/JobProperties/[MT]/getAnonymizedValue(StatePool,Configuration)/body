{
  Properties filteredProperties=null;
  List<JobPropertyParser> pList=new ArrayList<JobPropertyParser>(1);
  String config=conf.get(PARSERS_CONFIG_KEY);
  if (config != null) {
    @SuppressWarnings("unchecked") Class<JobPropertyParser>[] parsers=(Class[])conf.getClasses(PARSERS_CONFIG_KEY);
    for (    Class<JobPropertyParser> c : parsers) {
      JobPropertyParser parser=ReflectionUtils.newInstance(c,conf);
      pList.add(parser);
    }
  }
 else {
    JobPropertyParser parser=new MapReduceJobPropertiesParser();
    pList.add(parser);
  }
  if (jobProperties != null) {
    filteredProperties=new Properties();
    for (    Map.Entry<Object,Object> entry : jobProperties.entrySet()) {
      String key=entry.getKey().toString();
      String value=entry.getValue().toString();
      for (      JobPropertyParser p : pList) {
        DataType<?> pValue=p.parseJobProperty(key,value);
        if (pValue != null) {
          filteredProperties.put(key,pValue);
          break;
        }
      }
    }
  }
  return filteredProperties;
}
