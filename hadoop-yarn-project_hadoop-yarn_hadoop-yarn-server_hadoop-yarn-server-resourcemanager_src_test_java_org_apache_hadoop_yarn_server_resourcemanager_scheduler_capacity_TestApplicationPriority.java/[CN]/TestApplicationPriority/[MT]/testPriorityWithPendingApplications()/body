{
  Configuration conf=new Configuration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  conf.setInt(YarnConfiguration.MAX_CLUSTER_LEVEL_APPLICATION_PRIORITY,10);
  MockRM rm=new MockRM(conf);
  rm.start();
  Priority appPriority1=Priority.newInstance(5);
  MockNM nm1=rm.registerNode("127.0.0.1:1234",8 * GB);
  RMApp app1=rm.submitApp(1 * GB,appPriority1);
  MockAM am1=MockRM.launchAM(app1,rm,nm1);
  am1.registerAppAttempt();
  List<Container> allocated1=am1.allocateAndWaitForContainers("127.0.0.1",7,1 * GB,nm1);
  Assert.assertEquals(7,allocated1.size());
  Assert.assertEquals(1 * GB,allocated1.get(0).getResource().getMemory());
  SchedulerNodeReport report_nm1=rm.getResourceScheduler().getNodeReport(nm1.getNodeId());
  Assert.assertEquals(8 * GB,report_nm1.getUsedResource().getMemory());
  Assert.assertEquals(0 * GB,report_nm1.getAvailableResource().getMemory());
  Priority appPriority2=Priority.newInstance(7);
  RMApp app2=rm.submitApp(1 * GB,appPriority2);
  Priority appPriority3=Priority.newInstance(8);
  RMApp app3=rm.submitApp(1 * GB,appPriority3);
  Priority appPriority4=Priority.newInstance(6);
  RMApp app4=rm.submitApp(1 * GB,appPriority4);
  rm.killApp(app1.getApplicationId());
  MockAM am3=MockRM.launchAM(app3,rm,nm1);
  am3.registerAppAttempt();
  report_nm1=rm.getResourceScheduler().getNodeReport(nm1.getNodeId());
  Assert.assertEquals(1 * GB,report_nm1.getUsedResource().getMemory());
  Assert.assertEquals(7 * GB,report_nm1.getAvailableResource().getMemory());
  rm.stop();
}
