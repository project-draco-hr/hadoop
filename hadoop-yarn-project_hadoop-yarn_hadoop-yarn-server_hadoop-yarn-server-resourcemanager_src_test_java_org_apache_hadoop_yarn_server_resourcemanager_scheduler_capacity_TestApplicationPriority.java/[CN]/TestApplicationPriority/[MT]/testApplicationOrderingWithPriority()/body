{
  Configuration conf=new Configuration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  MockRM rm=new MockRM(conf);
  rm.start();
  CapacityScheduler cs=(CapacityScheduler)rm.getResourceScheduler();
  LeafQueue q=(LeafQueue)cs.getQueue("default");
  Assert.assertNotNull(q);
  String host="127.0.0.1";
  RMNode node=MockNodes.newNodeInfo(0,MockNodes.newResource(16 * GB),1,host);
  cs.handle(new NodeAddedSchedulerEvent(node));
  ApplicationId appId1=BuilderUtils.newApplicationId(100,1);
  ApplicationAttemptId appAttemptId1=BuilderUtils.newApplicationAttemptId(appId1,1);
  RMAppAttemptMetrics attemptMetric1=new RMAppAttemptMetrics(appAttemptId1,rm.getRMContext());
  RMAppImpl app1=mock(RMAppImpl.class);
  when(app1.getApplicationId()).thenReturn(appId1);
  RMAppAttemptImpl attempt1=mock(RMAppAttemptImpl.class);
  when(attempt1.getAppAttemptId()).thenReturn(appAttemptId1);
  when(attempt1.getRMAppAttemptMetrics()).thenReturn(attemptMetric1);
  when(app1.getCurrentAppAttempt()).thenReturn(attempt1);
  rm.getRMContext().getRMApps().put(appId1,app1);
  SchedulerEvent addAppEvent1=new AppAddedSchedulerEvent(appId1,"default","user",null,Priority.newInstance(5));
  cs.handle(addAppEvent1);
  SchedulerEvent addAttemptEvent1=new AppAttemptAddedSchedulerEvent(appAttemptId1,false);
  cs.handle(addAttemptEvent1);
  ApplicationId appId2=BuilderUtils.newApplicationId(100,2);
  ApplicationAttemptId appAttemptId2=BuilderUtils.newApplicationAttemptId(appId2,1);
  RMAppAttemptMetrics attemptMetric2=new RMAppAttemptMetrics(appAttemptId2,rm.getRMContext());
  RMAppImpl app2=mock(RMAppImpl.class);
  when(app2.getApplicationId()).thenReturn(appId2);
  RMAppAttemptImpl attempt2=mock(RMAppAttemptImpl.class);
  when(attempt2.getAppAttemptId()).thenReturn(appAttemptId2);
  when(attempt2.getRMAppAttemptMetrics()).thenReturn(attemptMetric2);
  when(app2.getCurrentAppAttempt()).thenReturn(attempt2);
  rm.getRMContext().getRMApps().put(appId2,app2);
  SchedulerEvent addAppEvent2=new AppAddedSchedulerEvent(appId2,"default","user",null,Priority.newInstance(8));
  cs.handle(addAppEvent2);
  SchedulerEvent addAttemptEvent2=new AppAttemptAddedSchedulerEvent(appAttemptId2,false);
  cs.handle(addAttemptEvent2);
  assertEquals(q.getApplications().size(),2);
  assertEquals(q.getApplications().iterator().next().getApplicationAttemptId(),appAttemptId2);
  rm.stop();
}
