{
  ArrayList<String> unjarFiles=new ArrayList<String>();
  String runtimeClasses=config_.get("stream.shipped.hadoopstreaming");
  if (runtimeClasses == null) {
    runtimeClasses=StreamUtil.findInClasspath(StreamJob.class.getName());
  }
  if (runtimeClasses == null) {
    throw new IOException("runtime classes not found: " + getClass().getPackage());
  }
 else {
    msg("Found runtime classes in: " + runtimeClasses);
  }
  if (isLocalHadoop()) {
  }
 else {
    if (new File(runtimeClasses).isDirectory()) {
      packageFiles_.add(runtimeClasses);
    }
 else {
      unjarFiles.add(runtimeClasses);
    }
  }
  if (packageFiles_.size() + unjarFiles.size() == 0) {
    return null;
  }
  String tmp=jobConf_.get("stream.tmpdir");
  File tmpDir=(tmp == null) ? null : new File(tmp);
  File jobJar=File.createTempFile("streamjob",".jar",tmpDir);
  System.out.println("packageJobJar: " + packageFiles_ + " "+ unjarFiles+ " "+ jobJar+ " tmpDir="+ tmpDir);
  if (debug_ == 0) {
    jobJar.deleteOnExit();
  }
  JarBuilder builder=new JarBuilder();
  if (verbose_) {
    builder.setVerbose(true);
  }
  String jobJarName=jobJar.getAbsolutePath();
  builder.merge(packageFiles_,unjarFiles,jobJarName);
  return jobJarName;
}
