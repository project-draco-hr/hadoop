{
  System.out.println("Usage: $HADOOP_PREFIX/bin/hadoop jar hadoop-streaming.jar" + " [options]");
  System.out.println("Options:");
  System.out.println("  -input          <path> DFS input file(s) for the Map" + " step.");
  System.out.println("  -output         <path> DFS output directory for the" + " Reduce step.");
  System.out.println("  -mapper         <cmd|JavaClassName> Optional. Command" + " to be run as mapper.");
  System.out.println("  -combiner       <cmd|JavaClassName> Optional. Command" + " to be run as combiner.");
  System.out.println("  -reducer        <cmd|JavaClassName> Optional. Command" + " to be run as reducer.");
  System.out.println("  -file           <file> Optional. File/dir to be " + "shipped in the Job jar file.\n" + "                  Deprecated. Use generic option \"-files\" instead.");
  System.out.println("  -inputformat    <TextInputFormat(default)" + "|SequenceFileAsTextInputFormat|JavaClassName>\n" + "                  Optional. The input format class.");
  System.out.println("  -outputformat   <TextOutputFormat(default)" + "|JavaClassName>\n" + "                  Optional. The output format class.");
  System.out.println("  -partitioner    <JavaClassName>  Optional. The" + " partitioner class.");
  System.out.println("  -numReduceTasks <num> Optional. Number of reduce " + "tasks.");
  System.out.println("  -inputreader    <spec> Optional. Input recordreader" + " spec.");
  System.out.println("  -cmdenv         <n>=<v> Optional. Pass env.var to" + " streaming commands.");
  System.out.println("  -mapdebug       <cmd> Optional. " + "To run this script when a map task fails.");
  System.out.println("  -reducedebug    <cmd> Optional." + " To run this script when a reduce task fails.");
  System.out.println("  -io             <identifier> Optional. Format to use" + " for input to and output");
  System.out.println("                  from mapper/reducer commands");
  System.out.println("  -lazyOutput     Optional. Lazily create Output.");
  System.out.println("  -background     Optional. Submit the job and don't wait till it completes.");
  System.out.println("  -verbose        Optional. Print verbose output.");
  System.out.println("  -info           Optional. Print detailed usage.");
  System.out.println("  -help           Optional. Print help message.");
  System.out.println();
  GenericOptionsParser.printGenericCommandUsage(System.out);
  if (!detailed) {
    System.out.println();
    System.out.println("For more details about these options:");
    System.out.println("Use " + "$HADOOP_PREFIX/bin/hadoop jar hadoop-streaming.jar -info");
    return;
  }
  System.out.println();
  System.out.println("Usage tips:");
  System.out.println("In -input: globbing on <path> is supported and can " + "have multiple -input");
  System.out.println();
  System.out.println("Default Map input format: a line is a record in UTF-8 " + "the key part ends at first");
  System.out.println("  TAB, the rest of the line is the value");
  System.out.println();
  System.out.println("To pass a Custom input format:");
  System.out.println("  -inputformat package.MyInputFormat");
  System.out.println();
  System.out.println("Similarly, to pass a custom output format:");
  System.out.println("  -outputformat package.MyOutputFormat");
  System.out.println();
  System.out.println("The files with extensions .class and .jar/.zip," + " specified for the -file");
  System.out.println("  argument[s], end up in \"classes\" and \"lib\" " + "directories respectively inside");
  System.out.println("  the working directory when the mapper and reducer are" + " run. All other files");
  System.out.println("  specified for the -file argument[s]" + " end up in the working directory when the");
  System.out.println("  mapper and reducer are run. The location of this " + "working directory is");
  System.out.println("  unspecified.");
  System.out.println();
  System.out.println("To set the number of reduce tasks (num. of output " + "files) as, say 10:");
  System.out.println("  Use -numReduceTasks 10");
  System.out.println("To skip the sort/combine/shuffle/sort/reduce step:");
  System.out.println("  Use -numReduceTasks 0");
  System.out.println("  Map output then becomes a 'side-effect " + "output' rather than a reduce input.");
  System.out.println("  This speeds up processing. This also feels " + "more like \"in-place\" processing");
  System.out.println("  because the input filename and the map " + "input order are preserved.");
  System.out.println("  This is equivalent to -reducer NONE");
  System.out.println();
  System.out.println("To speed up the last maps:");
  System.out.println("  -D " + MRJobConfig.MAP_SPECULATIVE + "=true");
  System.out.println("To speed up the last reduces:");
  System.out.println("  -D " + MRJobConfig.REDUCE_SPECULATIVE + "=true");
  System.out.println("To name the job (appears in the JobTracker Web UI):");
  System.out.println("  -D " + MRJobConfig.JOB_NAME + "='My Job'");
  System.out.println("To change the local temp directory:");
  System.out.println("  -D dfs.data.dir=/tmp/dfs");
  System.out.println("  -D stream.tmpdir=/tmp/streaming");
  System.out.println("Additional local temp directories with -jt local:");
  System.out.println("  -D " + MRConfig.LOCAL_DIR + "=/tmp/local");
  System.out.println("  -D " + JTConfig.JT_SYSTEM_DIR + "=/tmp/system");
  System.out.println("  -D " + MRConfig.TEMP_DIR + "=/tmp/temp");
  System.out.println("To treat tasks with non-zero exit status as SUCCEDED:");
  System.out.println("  -D stream.non.zero.exit.is.failure=false");
  System.out.println("Use a custom hadoop streaming build along with standard" + " hadoop install:");
  System.out.println("  $HADOOP_PREFIX/bin/hadoop jar " + "/path/my-hadoop-streaming.jar [...]\\");
  System.out.println("    [...] -D stream.shipped.hadoopstreaming=" + "/path/my-hadoop-streaming.jar");
  System.out.println("For more details about jobconf parameters see:");
  System.out.println("  http://wiki.apache.org/hadoop/JobConfFile");
  System.out.println("To set an environement variable in a streaming " + "command:");
  System.out.println("   -cmdenv EXAMPLE_DIR=/home/example/dictionaries/");
  System.out.println();
  System.out.println("Shortcut:");
  System.out.println("   setenv HSTREAMING \"$HADOOP_PREFIX/bin/hadoop jar " + "hadoop-streaming.jar\"");
  System.out.println();
  System.out.println("Example: $HSTREAMING -mapper " + "\"/usr/local/bin/perl5 filter.pl\"");
  System.out.println("           -file /local/filter.pl -input " + "\"/logs/0604*/*\" [...]");
  System.out.println("  Ships a script, invokes the non-shipped perl " + "interpreter. Shipped files go to");
  System.out.println("  the working directory so filter.pl is found by perl. " + "Input files are all the");
  System.out.println("  daily logs for days in month 2006-04");
}
