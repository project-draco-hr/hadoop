{
  final PriorityQueue<ComposableRecordReader<K,?>> q=getRecordReaderQueue();
  if (q != null && !q.isEmpty()) {
    int highpos=-1;
    ArrayList<ComposableRecordReader<K,?>> list=new ArrayList<ComposableRecordReader<K,?>>(kids.length);
    q.peek().key(iterkey);
    final WritableComparator cmp=getComparator();
    while (0 == cmp.compare(q.peek().key(),iterkey)) {
      ComposableRecordReader<K,?> t=q.poll();
      if (-1 == highpos || list.get(highpos).id() < t.id()) {
        highpos=list.size();
      }
      list.add(t);
      if (q.isEmpty())       break;
    }
    ComposableRecordReader<K,?> t=list.remove(highpos);
    t.accept(jc,iterkey);
    for (    ComposableRecordReader<K,?> rr : list) {
      rr.skip(iterkey);
    }
    list.add(t);
    for (    ComposableRecordReader<K,?> rr : list) {
      if (rr.hasNext()) {
        q.add(rr);
      }
    }
  }
}
