{
  conf=new YarnConfiguration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  MockRM rm=new MockRM(conf);
  try {
    rm.start();
    MockNM nm1=rm.registerNode("127.0.0.1:1234",6 * GB);
    RMApp app1=rm.submitApp(1024);
    nm1.nodeHeartbeat(true);
    RMAppAttempt attempt1=app1.getCurrentAppAttempt();
    MockAM am1=rm.sendAMLaunched(attempt1.getAppAttemptId());
    RegisterApplicationMasterResponse registerResponse=am1.registerAppAttempt();
    sentRMContainerLaunched(rm,ContainerId.newContainerId(am1.getApplicationAttemptId(),1));
    am1.sendContainerResizingRequest(Arrays.asList(UpdateContainerRequest.newInstance(0,ContainerId.newContainerId(attempt1.getAppAttemptId(),1),ContainerUpdateType.INCREASE_RESOURCE,Resources.createResource(2048),null)));
    AllocateResponse response=am1.sendContainerResizingRequest(Arrays.asList(UpdateContainerRequest.newInstance(0,ContainerId.newContainerId(attempt1.getAppAttemptId(),1),ContainerUpdateType.INCREASE_RESOURCE,Resources.createResource(-1),null)));
    Assert.assertEquals(1,response.getUpdateErrors().size());
    Assert.assertEquals("RESOURCE_OUTSIDE_ALLOWED_RANGE",response.getUpdateErrors().get(0).getReason());
    response=am1.sendContainerResizingRequest(Arrays.asList(UpdateContainerRequest.newInstance(0,ContainerId.newContainerId(attempt1.getAppAttemptId(),1),ContainerUpdateType.INCREASE_RESOURCE,Resources.add(registerResponse.getMaximumResourceCapability(),Resources.createResource(1)),null)));
    Assert.assertEquals(1,response.getUpdateErrors().size());
    Assert.assertEquals("RESOURCE_OUTSIDE_ALLOWED_RANGE",response.getUpdateErrors().get(0).getReason());
    response=am1.sendContainerResizingRequest(Arrays.asList(UpdateContainerRequest.newInstance(0,ContainerId.newContainerId(attempt1.getAppAttemptId(),1),ContainerUpdateType.INCREASE_RESOURCE,Resources.createResource(2048,4),null),UpdateContainerRequest.newInstance(0,ContainerId.newContainerId(attempt1.getAppAttemptId(),1),ContainerUpdateType.DECREASE_RESOURCE,Resources.createResource(1024,1),null)));
    Assert.assertEquals(1,response.getUpdateErrors().size());
    Assert.assertEquals("UPDATE_OUTSTANDING_ERROR",response.getUpdateErrors().get(0).getReason());
  }
  finally {
    if (rm != null) {
      rm.close();
    }
  }
}
