{
  MockRM rm=new MockRM(conf);
  rm.start();
  MockNM nm1=rm.registerNode("127.0.0.1:1234",6 * GB);
  RMApp app1=rm.submitApp(2048);
  nm1.nodeHeartbeat(true);
  RMAppAttempt attempt1=app1.getCurrentAppAttempt();
  MockAM am1=rm.sendAMLaunched(attempt1.getAppAttemptId());
  am1.registerAppAttempt();
  AllocateRequestPBImpl allocateRequest=new AllocateRequestPBImpl();
  List<ContainerId> release=new ArrayList<ContainerId>();
  List<ResourceRequest> ask=new ArrayList<ResourceRequest>();
  allocateRequest.setReleaseList(release);
  allocateRequest.setAskList(ask);
  allocateRequest.setProgress(Float.POSITIVE_INFINITY);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 1) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
  allocateRequest.setProgress(Float.NaN);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 0) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
  allocateRequest.setProgress((float)9);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 1) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
  allocateRequest.setProgress(Float.NEGATIVE_INFINITY);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 0) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
  allocateRequest.setProgress((float)0.5);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 0.5) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
  allocateRequest.setProgress((float)-1);
  am1.allocate(allocateRequest);
  while (attempt1.getProgress() != 0) {
    LOG.info("Waiting for allocate event to be handled ...");
    sleep(100);
  }
}
