{
  JobInfo jobInfo=getJobInfo(jobId);
  if (jobInfo == null) {
    return;
  }
  LOG.info("waiting for the setup to be finished");
  while (!jobInfo.isSetupFinished()) {
    Thread.sleep(2000);
    jobInfo=getJobInfo(jobId);
    if (jobInfo == null) {
      break;
    }
  }
  assertTrue(jobId.toString().startsWith("job_"));
  LOG.info("verified job id and is : " + jobId.toString());
  verifyNumTasks(jobId);
  verifyJobProgress(jobId);
  jobInfo=getJobInfo(jobId);
  if (jobInfo == null) {
    return;
  }
  if (jobInfo.getStatus().getRunState() == JobStatus.SUCCEEDED) {
    jobInfo=getJobInfo(jobId);
    if (jobInfo == null) {
      return;
    }
    assertEquals(1.0,jobInfo.getStatus().mapProgress(),0.001);
    assertEquals(1.0,jobInfo.getStatus().reduceProgress(),0.001);
    verifyAllTasksSuccess(jobId);
  }
  if (jobInfo.getStatus().isJobComplete()) {
    jobInfo=getJobInfo(jobId);
    if (jobInfo == null) {
      return;
    }
    assertTrue(jobInfo.isCleanupLaunched());
    LOG.info("Verified launching of cleanup");
  }
}
