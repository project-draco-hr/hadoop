{
  XDR req=new XDR();
  RpcCall.getInstance(++xid,RpcProgramPortmap.PROGRAM,RpcProgramPortmap.VERSION,RpcProgramPortmap.PMAPPROC_SET,new CredentialsNone(),new VerifierNone()).write(req);
  PortmapMapping sent=new PortmapMapping(90000,1,PortmapMapping.TRANSPORT_TCP,1234);
  sent.serialize(req);
  byte[] reqBuf=req.getBytes();
  DatagramSocket s=new DatagramSocket();
  DatagramPacket p=new DatagramPacket(reqBuf,reqBuf.length,pm.getUdpServerLoAddress());
  try {
    s.send(p);
  }
  finally {
    s.close();
  }
  Thread.sleep(100);
  boolean found=false;
  @SuppressWarnings("unchecked") Map<String,PortmapMapping> map=(Map<String,PortmapMapping>)Whitebox.getInternalState(pm.getHandler(),"map");
  for (  PortmapMapping m : map.values()) {
    if (m.getPort() == sent.getPort() && PortmapMapping.key(m).equals(PortmapMapping.key(sent))) {
      found=true;
      break;
    }
  }
  Assert.assertTrue("Registration failed",found);
}
