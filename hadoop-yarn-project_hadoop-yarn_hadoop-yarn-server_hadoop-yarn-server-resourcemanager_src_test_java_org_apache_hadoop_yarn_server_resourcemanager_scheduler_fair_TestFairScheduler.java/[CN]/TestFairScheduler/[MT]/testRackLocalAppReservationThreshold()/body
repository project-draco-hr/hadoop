{
  conf.setFloat(FairSchedulerConfiguration.RESERVABLE_NODES,0.50f);
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(3072),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  RMNode node2=MockNodes.newNodeInfo(2,Resources.createResource(3072),1,"127.0.0.2");
  NodeAddedSchedulerEvent nodeEvent2=new NodeAddedSchedulerEvent(node2);
  scheduler.handle(nodeEvent2);
  RMNode node3=MockNodes.newNodeInfo(2,Resources.createResource(3072),1,"127.0.0.3");
  NodeAddedSchedulerEvent nodeEvent3=new NodeAddedSchedulerEvent(node3);
  scheduler.handle(nodeEvent3);
  RMNode node4=MockNodes.newNodeInfo(2,Resources.createResource(3072),1,"127.0.0.4");
  NodeAddedSchedulerEvent nodeEvent4=new NodeAddedSchedulerEvent(node4);
  scheduler.handle(nodeEvent4);
  createSchedulingRequest(2048,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node1));
  createSchedulingRequest(2048,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node2));
  createSchedulingRequest(2048,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node3));
  createSchedulingRequest(2048,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node4));
  assertEquals(8192,scheduler.getQueueManager().getQueue("queue1").getResourceUsage().getMemorySize());
  ApplicationAttemptId attemptId=createAppAttemptId(this.APP_ID++,this.ATTEMPT_ID++);
  createMockRMApp(attemptId);
  scheduler.addApplication(attemptId.getApplicationId(),"queue1","user1",false);
  scheduler.addApplicationAttempt(attemptId,false,false);
  List<ResourceRequest> asks=new ArrayList<ResourceRequest>();
  asks.add(createResourceRequest(2048,node2.getRackName(),1,1,false));
  scheduler.allocate(attemptId,asks,new ArrayList<ContainerId>(),null,null,null,null);
  ApplicationAttemptId attId=createSchedulingRequest(2048,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node1));
  assertEquals(1,scheduler.getSchedulerApp(attId).getNumReservations(null,true));
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node2));
  assertEquals(2,scheduler.getSchedulerApp(attId).getNumReservations(null,true));
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node3));
  assertEquals(2,scheduler.getSchedulerApp(attId).getNumReservations(null,true));
  RMNode node5=MockNodes.newNodeInfo(2,Resources.createResource(3072),1,"127.0.0.4");
  NodeAddedSchedulerEvent nodeEvent5=new NodeAddedSchedulerEvent(node5);
  scheduler.handle(nodeEvent5);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node4));
  assertEquals(10240,scheduler.getQueueManager().getQueue("queue1").getResourceUsage().getMemorySize());
  scheduler.handle(new NodeUpdateSchedulerEvent(node1));
  scheduler.handle(new NodeUpdateSchedulerEvent(node2));
  scheduler.handle(new NodeUpdateSchedulerEvent(node3));
  scheduler.handle(new NodeUpdateSchedulerEvent(node4));
  scheduler.update();
  assertEquals(0,scheduler.getSchedulerApp(attId).getNumReservations(null,true));
}
