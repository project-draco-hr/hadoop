{
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  ControlledClock clock=new ControlledClock();
  scheduler.setClock(clock);
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<queue name=\"queue1\">");
  out.println("  <maxRunningApps>3</maxRunningApps>");
  out.println("  <queue name=\"sub1\"></queue>");
  out.println("  <queue name=\"sub2\"></queue>");
  out.println("  <queue name=\"sub3\">");
  out.println("    <maxRunningApps>1</maxRunningApps>");
  out.println("  </queue>");
  out.println("</queue>");
  out.println("</allocations>");
  out.close();
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  ApplicationAttemptId attId1=createSchedulingRequest(1024,"queue1.sub1","user1");
  verifyAppRunnable(attId1,true);
  verifyQueueNumRunnable("queue1.sub1",1,0);
  clock.tickSec(10);
  ApplicationAttemptId attId2=createSchedulingRequest(1024,"queue1.sub3","user1");
  verifyAppRunnable(attId2,true);
  verifyQueueNumRunnable("queue1.sub3",1,0);
  clock.tickSec(10);
  ApplicationAttemptId attId3=createSchedulingRequest(1024,"queue1.sub2","user1");
  verifyAppRunnable(attId3,true);
  verifyQueueNumRunnable("queue1.sub2",1,0);
  clock.tickSec(10);
  ApplicationAttemptId attId4=createSchedulingRequest(1024,"queue1.sub2","user1");
  verifyAppRunnable(attId4,false);
  verifyQueueNumRunnable("queue1.sub2",1,1);
  clock.tickSec(10);
  ApplicationAttemptId attId5=createSchedulingRequest(1024,"queue1.sub3","user1");
  verifyAppRunnable(attId5,false);
  verifyQueueNumRunnable("queue1.sub3",1,1);
  clock.tickSec(10);
  AppAttemptRemovedSchedulerEvent appRemovedEvent1=new AppAttemptRemovedSchedulerEvent(attId2,RMAppAttemptState.FINISHED,false);
  scheduler.handle(appRemovedEvent1);
  verifyAppRunnable(attId4,true);
  verifyQueueNumRunnable("queue1.sub2",2,0);
  verifyAppRunnable(attId5,false);
  verifyQueueNumRunnable("queue1.sub3",0,1);
  AppAttemptRemovedSchedulerEvent appRemovedEvent2=new AppAttemptRemovedSchedulerEvent(attId5,RMAppAttemptState.KILLED,true);
  scheduler.handle(appRemovedEvent2);
  assertEquals(0,scheduler.maxRunningEnforcer.usersNonRunnableApps.get("user1").size());
  verifyQueueNumRunnable("queue1.sub3",0,0);
  AppAttemptRemovedSchedulerEvent appRemovedEvent3=new AppAttemptRemovedSchedulerEvent(attId4,RMAppAttemptState.FINISHED,true);
  scheduler.handle(appRemovedEvent3);
  verifyQueueNumRunnable("queue1.sub2",1,0);
  verifyQueueNumRunnable("queue1.sub3",0,0);
}
