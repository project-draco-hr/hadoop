{
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<user name=\"user1\">");
  out.println("<maxRunningApps>1</maxRunningApps>");
  out.println("</user>");
  out.println("</allocations>");
  out.close();
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(8192,8),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  ApplicationAttemptId attId1=createSchedulingRequest(1024,"queue1","user1",1);
  scheduler.update();
  NodeUpdateSchedulerEvent updateEvent=new NodeUpdateSchedulerEvent(node1);
  scheduler.handle(updateEvent);
  assertEquals(1,scheduler.getSchedulerApp(attId1).getLiveContainers().size());
  ApplicationAttemptId attId2=createSchedulingRequest(1024,"queue1","user1",1);
  scheduler.update();
  scheduler.handle(updateEvent);
  assertEquals(0,scheduler.getSchedulerApp(attId2).getLiveContainers().size());
  createSchedulingRequestExistingApplication(1024,1,attId1);
  scheduler.update();
  scheduler.handle(updateEvent);
  assertEquals(2,scheduler.getSchedulerApp(attId1).getLiveContainers().size());
}
