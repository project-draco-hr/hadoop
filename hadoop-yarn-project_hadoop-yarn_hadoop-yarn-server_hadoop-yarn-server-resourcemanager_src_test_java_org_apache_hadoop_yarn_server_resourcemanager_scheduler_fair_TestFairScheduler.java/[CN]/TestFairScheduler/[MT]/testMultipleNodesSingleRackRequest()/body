{
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(1024),1,"127.0.0.1");
  RMNode node2=MockNodes.newNodeInfo(1,Resources.createResource(1024),2,"127.0.0.2");
  RMNode node3=MockNodes.newNodeInfo(2,Resources.createResource(1024),3,"127.0.0.3");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  NodeAddedSchedulerEvent nodeEvent2=new NodeAddedSchedulerEvent(node2);
  scheduler.handle(nodeEvent2);
  ApplicationAttemptId attemptId=createAppAttemptId(this.APP_ID++,this.ATTEMPT_ID++);
  createMockRMApp(attemptId);
  scheduler.addApplication(attemptId.getApplicationId(),"queue1","user1",false);
  scheduler.addApplicationAttempt(attemptId,false,false);
  List<ResourceRequest> asks=new ArrayList<ResourceRequest>();
  asks.add(createResourceRequest(1024,node1.getHostName(),1,1,true));
  asks.add(createResourceRequest(1024,node2.getHostName(),1,1,true));
  asks.add(createResourceRequest(1024,node3.getHostName(),1,1,true));
  asks.add(createResourceRequest(1024,node1.getRackName(),1,1,true));
  asks.add(createResourceRequest(1024,node3.getRackName(),1,1,true));
  asks.add(createResourceRequest(1024,ResourceRequest.ANY,1,2,true));
  scheduler.allocate(attemptId,asks,new ArrayList<ContainerId>(),null,null,null,null);
  scheduler.update();
  NodeUpdateSchedulerEvent updateEvent1=new NodeUpdateSchedulerEvent(node1);
  scheduler.handle(updateEvent1);
  assertEquals(1,scheduler.getSchedulerApp(attemptId).getLiveContainers().size());
  scheduler.update();
  NodeUpdateSchedulerEvent updateEvent2=new NodeUpdateSchedulerEvent(node2);
  scheduler.handle(updateEvent2);
  assertEquals(2,scheduler.getSchedulerApp(attemptId).getLiveContainers().size());
}
