{
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(10 * 1024),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  createSchedulingRequest(10 * 1024,"queue1","user1");
  createSchedulingRequest(10 * 1024,"queue2","user1");
  createSchedulingRequest(10 * 1024,"root.default","user1");
  scheduler.update();
  scheduler.getQueueManager().getRootQueue().setSteadyFairShare(scheduler.getClusterResource());
  scheduler.getQueueManager().getRootQueue().recomputeSteadyShares();
  Collection<FSLeafQueue> queues=scheduler.getQueueManager().getLeafQueues();
  assertEquals(3,queues.size());
  for (  FSLeafQueue p : queues) {
    assertEquals(3414,p.getFairShare().getMemorySize());
    assertEquals(3414,p.getMetrics().getFairShareMB());
    assertEquals(3414,p.getSteadyFairShare().getMemorySize());
    assertEquals(3414,p.getMetrics().getSteadyFairShareMB());
  }
}
