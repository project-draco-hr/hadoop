{
  conf.setFloat(FairSchedulerConfiguration.RESERVABLE_NODES,0f);
  conf.setBoolean(FairSchedulerConfiguration.ASSIGN_MULTIPLE,true);
  conf.setBoolean(FairSchedulerConfiguration.DYNAMIC_MAX_ASSIGN,false);
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(4096,4),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  RMNode node2=MockNodes.newNodeInfo(2,Resources.createResource(4096,4),1,"127.0.0.2");
  NodeAddedSchedulerEvent nodeEvent2=new NodeAddedSchedulerEvent(node2);
  scheduler.handle(nodeEvent2);
  ApplicationAttemptId attId=createSchedulingRequest(1024,"queue1","user1",10);
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node1));
  scheduler.update();
  scheduler.handle(new NodeUpdateSchedulerEvent(node2));
  assertEquals(8192,scheduler.getQueueManager().getQueue("queue1").getResourceUsage().getMemorySize());
  assertEquals(0,scheduler.getSchedulerApp(attId).getNumReservations(null,true));
}
