{
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  final String user="user1";
  final String fifoQueue="fifo";
  final String fairParent="fairParent";
  final String fairChild1=fairParent + ".fairChild1";
  final String fairChild2=fairParent + ".fairChild2";
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(8192,8),1,"127.0.0.1");
  RMNode node2=MockNodes.newNodeInfo(1,Resources.createResource(8192,8),2,"127.0.0.2");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  NodeAddedSchedulerEvent nodeEvent2=new NodeAddedSchedulerEvent(node2);
  scheduler.handle(nodeEvent1);
  scheduler.handle(nodeEvent2);
  ApplicationAttemptId attId1=createSchedulingRequest(1024,fifoQueue,user,4);
  ApplicationAttemptId attId2=createSchedulingRequest(1024,fairChild1,user,4);
  ApplicationAttemptId attId3=createSchedulingRequest(1024,fairChild2,user,4);
  ApplicationAttemptId attId4=createSchedulingRequest(1024,fifoQueue,user,4);
  FSSchedulerApp app1=scheduler.appAttempts.get(attId1);
  FSSchedulerApp app2=scheduler.appAttempts.get(attId2);
  FSSchedulerApp app3=scheduler.appAttempts.get(attId3);
  FSSchedulerApp app4=scheduler.appAttempts.get(attId4);
  scheduler.getQueueManager().getLeafQueue(fifoQueue,true).setPolicy(SchedulingPolicy.parse("fifo"));
  scheduler.update();
  NodeUpdateSchedulerEvent updateEvent1=new NodeUpdateSchedulerEvent(node1);
  NodeUpdateSchedulerEvent updateEvent2=new NodeUpdateSchedulerEvent(node2);
  for (int i=0; i < 8; i++) {
    scheduler.handle(updateEvent1);
    scheduler.handle(updateEvent2);
    if ((i + 1) % 2 == 0) {
      String ERR="Wrong number of assigned containers after " + (i + 1) + " updates";
      if (i < 4) {
        assertEquals(ERR,(i + 1),app1.getLiveContainers().size());
        assertEquals(ERR,0,app4.getLiveContainers().size());
      }
 else {
        assertEquals(ERR,4,app1.getLiveContainers().size());
        assertEquals(ERR,(i - 3),app4.getLiveContainers().size());
      }
      assertEquals(ERR,(i + 1) / 2,app2.getLiveContainers().size());
      assertEquals(ERR,(i + 1) / 2,app3.getLiveContainers().size());
    }
  }
}
