{
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node=MockNodes.newNodeInfo(1,BuilderUtils.newResource(8192,7),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent=new NodeAddedSchedulerEvent(node);
  scheduler.handle(nodeEvent);
  ApplicationAttemptId appAttId1=createSchedulingRequest(3072,1,"queue1","user1",2);
  FSSchedulerApp app1=scheduler.getSchedulerApp(appAttId1);
  ApplicationAttemptId appAttId2=createSchedulingRequest(2048,2,"queue1","user1",2);
  FSSchedulerApp app2=scheduler.getSchedulerApp(appAttId2);
  ApplicationAttemptId appAttId3=createSchedulingRequest(1024,2,"queue2","user1",2);
  FSSchedulerApp app3=scheduler.getSchedulerApp(appAttId3);
  DominantResourceFairnessPolicy drfPolicy=new DominantResourceFairnessPolicy();
  drfPolicy.initialize(scheduler.getClusterResource());
  scheduler.getQueueManager().getQueue("root").setPolicy(drfPolicy);
  scheduler.getQueueManager().getQueue("queue1").setPolicy(drfPolicy);
  scheduler.update();
  NodeUpdateSchedulerEvent updateEvent=new NodeUpdateSchedulerEvent(node);
  scheduler.handle(updateEvent);
  Assert.assertEquals(1,app1.getLiveContainers().size());
  scheduler.handle(updateEvent);
  Assert.assertEquals(1,app3.getLiveContainers().size());
  scheduler.handle(updateEvent);
  Assert.assertEquals(2,app3.getLiveContainers().size());
  scheduler.handle(updateEvent);
  Assert.assertEquals(1,app2.getLiveContainers().size());
}
