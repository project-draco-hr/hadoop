{
  RMContext spyContext=Mockito.spy(resourceManager.getRMContext());
  Dispatcher mockDispatcher=mock(AsyncDispatcher.class);
  when(mockDispatcher.getEventHandler()).thenReturn(new EventHandler(){
    @Override public void handle(    Event event){
      if (event instanceof RMNodeResourceUpdateEvent) {
        RMNodeResourceUpdateEvent resourceEvent=(RMNodeResourceUpdateEvent)event;
        resourceManager.getResourceScheduler().getSchedulerNode(resourceEvent.getNodeId()).setTotalResource(resourceEvent.getResourceOption().getResource());
      }
    }
  }
);
  Mockito.doReturn(mockDispatcher).when(spyContext).getDispatcher();
  ((FairScheduler)resourceManager.getResourceScheduler()).setRMContext(spyContext);
  ((AsyncDispatcher)mockDispatcher).start();
  String host_0="host_0";
  org.apache.hadoop.yarn.server.resourcemanager.NodeManager nm_0=registerNode(host_0,1234,2345,NetworkTopology.DEFAULT_RACK,Resources.createResource(8 * GB,4));
  RMNode node=resourceManager.getRMContext().getRMNodes().get(nm_0.getNodeId());
  NodeUpdateSchedulerEvent nodeUpdate=new NodeUpdateSchedulerEvent(node);
  resourceManager.getResourceScheduler().handle(nodeUpdate);
  RMNode spyNode=Mockito.spy(resourceManager.getRMContext().getRMNodes().get(nm_0.getNodeId()));
  when(spyNode.getState()).thenReturn(NodeState.DECOMMISSIONING);
  resourceManager.getResourceScheduler().handle(new NodeUpdateSchedulerEvent(spyNode));
  Resource usedResource=resourceManager.getResourceScheduler().getSchedulerNode(nm_0.getNodeId()).getUsedResource();
  Assert.assertEquals(usedResource.getMemory(),0);
  Assert.assertEquals(usedResource.getVirtualCores(),0);
  Resource totalResource=resourceManager.getResourceScheduler().getSchedulerNode(nm_0.getNodeId()).getTotalResource();
  Assert.assertEquals(totalResource.getMemory(),0 * GB);
  Assert.assertEquals(totalResource.getVirtualCores(),0);
  Resource availableResource=resourceManager.getResourceScheduler().getSchedulerNode(nm_0.getNodeId()).getAvailableResource();
  Assert.assertEquals(availableResource.getMemory(),0);
  Assert.assertEquals(availableResource.getVirtualCores(),0);
}
