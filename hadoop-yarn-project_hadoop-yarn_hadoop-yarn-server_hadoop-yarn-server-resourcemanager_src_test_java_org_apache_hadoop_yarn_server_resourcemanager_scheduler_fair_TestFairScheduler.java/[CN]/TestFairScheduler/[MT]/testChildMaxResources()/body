{
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("  <queue name=\"queueA\" type=\"parent\">");
  out.println("    <maxChildResources>2048mb,2vcores</maxChildResources>");
  out.println("  </queue>");
  out.println("</allocations>");
  out.close();
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(8 * 1024,8),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  ApplicationAttemptId attId1=createSchedulingRequest(1024,1,"queueA.queueB","user1",8);
  ApplicationAttemptId attId2=createSchedulingRequest(1024,1,"queueA.queueC","user1",8);
  scheduler.update();
  NodeUpdateSchedulerEvent nodeEvent=new NodeUpdateSchedulerEvent(node1);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  assertEquals("App 1 is not running with the correct number of containers",2,scheduler.getSchedulerApp(attId1).getLiveContainers().size());
  assertEquals("App 2 is not running with the correct number of containers",2,scheduler.getSchedulerApp(attId2).getLiveContainers().size());
  out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("  <queue name=\"queueA\" type=\"parent\">");
  out.println("    <maxChildResources>3072mb,3vcores</maxChildResources>");
  out.println("  </queue>");
  out.println("</allocations>");
  out.close();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  scheduler.update();
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  scheduler.handle(nodeEvent);
  assertEquals("App 1 is not running with the correct number of containers",3,scheduler.getSchedulerApp(attId1).getLiveContainers().size());
  assertEquals("App 2 is not running with the correct number of containers",3,scheduler.getSchedulerApp(attId2).getLiveContainers().size());
  out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("  <queue name=\"queueA\" type=\"parent\">");
  out.println("    <maxChildResources>1024mb,1vcores</maxChildResources>");
  out.println("  </queue>");
  out.println("</allocations>");
  out.close();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  scheduler.update();
  scheduler.handle(nodeEvent);
  assertEquals("App 1 is not running with the correct number of containers",3,scheduler.getSchedulerApp(attId1).getLiveContainers().size());
  assertEquals("App 2 is not running with the correct number of containers",3,scheduler.getSchedulerApp(attId2).getLiveContainers().size());
}
