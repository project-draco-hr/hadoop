{
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  RMNode node1=MockNodes.newNodeInfo(1,Resources.createResource(1024),1,"127.0.0.1");
  NodeAddedSchedulerEvent nodeEvent1=new NodeAddedSchedulerEvent(node1);
  scheduler.handle(nodeEvent1);
  RMNode node2=MockNodes.newNodeInfo(1,Resources.createResource(1024),2,"127.0.0.2");
  NodeAddedSchedulerEvent nodeEvent2=new NodeAddedSchedulerEvent(node2);
  scheduler.handle(nodeEvent2);
  ApplicationAttemptId attId1=createSchedulingRequest(1024,"queue1","user1",0);
  ResourceRequest nodeRequest=createResourceRequest(1024,node1.getHostName(),1,1,true);
  ResourceRequest rackRequest=createResourceRequest(1024,"rack1",1,1,false);
  ResourceRequest anyRequest=createResourceRequest(1024,ResourceRequest.ANY,1,1,false);
  createSchedulingRequestExistingApplication(nodeRequest,attId1);
  createSchedulingRequestExistingApplication(rackRequest,attId1);
  createSchedulingRequestExistingApplication(anyRequest,attId1);
  scheduler.update();
  NodeUpdateSchedulerEvent node2UpdateEvent=new NodeUpdateSchedulerEvent(node2);
  FSSchedulerApp app=scheduler.appAttempts.get(attId1);
  for (int i=0; i < 10; i++) {
    scheduler.handle(node2UpdateEvent);
    assertEquals(0,app.getLiveContainers().size());
  }
  List<ResourceRequest> update=Arrays.asList(createResourceRequest(1024,node1.getHostName(),1,0,true),createResourceRequest(1024,"rack1",1,0,true),createResourceRequest(1024,ResourceRequest.ANY,1,1,true));
  scheduler.allocate(attId1,update,new ArrayList<ContainerId>(),null,null);
  scheduler.handle(node2UpdateEvent);
  assertEquals(1,app.getLiveContainers().size());
}
