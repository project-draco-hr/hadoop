{
  YarnConfiguration conf=new YarnConfiguration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class,ResourceScheduler.class);
  conf.setInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,1);
  MockRM rm1=new MockRM(conf);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",8000,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app1=rm1.submitApp(200);
  RMAppAttempt attempt1=app1.getCurrentAppAttempt();
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  CapacityScheduler scheduler=(CapacityScheduler)rm1.getResourceScheduler();
  ContainerId amContainer=ContainerId.newInstance(am1.getApplicationAttemptId(),1);
  scheduler.killContainer(scheduler.getRMContainer(amContainer));
  am1.waitForState(RMAppAttemptState.FAILED);
  Assert.assertTrue(attempt1.isPreempted());
  rm1.waitForState(app1.getApplicationId(),RMAppState.ACCEPTED);
  MockAM am2=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  RMAppAttempt attempt2=app1.getCurrentAppAttempt();
  Assert.assertTrue(((RMAppAttemptImpl)attempt2).mayBeLastAttempt());
  ContainerId amContainer2=ContainerId.newInstance(am2.getApplicationAttemptId(),1);
  scheduler.killContainer(scheduler.getRMContainer(amContainer2));
  am2.waitForState(RMAppAttemptState.FAILED);
  Assert.assertTrue(attempt2.isPreempted());
  rm1.waitForState(app1.getApplicationId(),RMAppState.ACCEPTED);
  MockAM am3=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  RMAppAttempt attempt3=app1.getCurrentAppAttempt();
  Assert.assertTrue(((RMAppAttemptImpl)attempt3).mayBeLastAttempt());
  nm1.nodeHeartbeat(am3.getApplicationAttemptId(),1,ContainerState.COMPLETE);
  am3.waitForState(RMAppAttemptState.FAILED);
  Assert.assertFalse(attempt3.isPreempted());
  rm1.waitForState(app1.getApplicationId(),RMAppState.FAILED);
  Assert.assertEquals(3,app1.getAppAttempts().size());
  rm1.stop();
}
