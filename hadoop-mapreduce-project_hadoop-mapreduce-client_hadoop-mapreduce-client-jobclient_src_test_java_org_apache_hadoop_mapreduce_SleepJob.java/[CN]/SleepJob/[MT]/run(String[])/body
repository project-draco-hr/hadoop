{
  if (args.length < 1) {
    System.err.println("SleepJob [-m numMapper] [-r numReducer]" + " [-mt mapSleepTime (msec)] [-rt reduceSleepTime (msec)]" + " [-recordt recordSleepTime (msec)]");
    ToolRunner.printGenericCommandUsage(System.err);
    return 2;
  }
  int numMapper=1, numReducer=1;
  long mapSleepTime=100, reduceSleepTime=100, recSleepTime=100;
  int mapSleepCount=1, reduceSleepCount=1;
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("-m")) {
      numMapper=Integer.parseInt(args[++i]);
    }
 else     if (args[i].equals("-r")) {
      numReducer=Integer.parseInt(args[++i]);
    }
 else     if (args[i].equals("-mt")) {
      mapSleepTime=Long.parseLong(args[++i]);
    }
 else     if (args[i].equals("-rt")) {
      reduceSleepTime=Long.parseLong(args[++i]);
    }
 else     if (args[i].equals("-recordt")) {
      recSleepTime=Long.parseLong(args[++i]);
    }
  }
  mapSleepCount=(int)Math.ceil(mapSleepTime / ((double)recSleepTime));
  reduceSleepCount=(int)Math.ceil(reduceSleepTime / ((double)recSleepTime));
  Job job=createJob(numMapper,numReducer,mapSleepTime,mapSleepCount,reduceSleepTime,reduceSleepCount);
  return job.waitForCompletion(true) ? 0 : 1;
}
