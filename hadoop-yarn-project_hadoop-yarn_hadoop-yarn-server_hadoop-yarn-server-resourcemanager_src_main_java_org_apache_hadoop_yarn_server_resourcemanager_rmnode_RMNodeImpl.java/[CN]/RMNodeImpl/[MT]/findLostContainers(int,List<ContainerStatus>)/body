{
  if (numRemoteRunning >= launchedContainers.size()) {
    return Collections.emptyList();
  }
  Set<ContainerId> nodeContainers=new HashSet<ContainerId>(numRemoteRunning);
  List<ContainerStatus> lostContainers=new ArrayList<ContainerStatus>(launchedContainers.size() - numRemoteRunning);
  for (  ContainerStatus remoteContainer : containerStatuses) {
    if (remoteContainer.getState() == ContainerState.RUNNING && remoteContainer.getExecutionType() == ExecutionType.GUARANTEED) {
      nodeContainers.add(remoteContainer.getContainerId());
    }
  }
  Iterator<ContainerId> iter=launchedContainers.iterator();
  while (iter.hasNext()) {
    ContainerId containerId=iter.next();
    if (!nodeContainers.contains(containerId)) {
      String diag="Container " + containerId + " was running but not reported from "+ nodeId;
      LOG.warn(diag);
      lostContainers.add(SchedulerUtils.createAbnormalContainerStatus(containerId,diag));
      iter.remove();
    }
  }
  return lostContainers;
}
