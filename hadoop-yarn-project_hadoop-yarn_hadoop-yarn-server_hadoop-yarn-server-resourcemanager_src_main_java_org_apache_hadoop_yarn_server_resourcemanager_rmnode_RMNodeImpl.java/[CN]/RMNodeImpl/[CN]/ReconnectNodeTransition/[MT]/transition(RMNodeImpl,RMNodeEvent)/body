{
  RMNodeReconnectEvent reconnectEvent=(RMNodeReconnectEvent)event;
  RMNode newNode=reconnectEvent.getReconnectedNode();
  rmNode.nodeManagerVersion=newNode.getNodeManagerVersion();
  List<ApplicationId> runningApps=reconnectEvent.getRunningApplications();
  boolean noRunningApps=(runningApps == null) || (runningApps.size() == 0);
  if (noRunningApps) {
    rmNode.nodeUpdateQueue.clear();
    rmNode.context.getDispatcher().getEventHandler().handle(new NodeRemovedSchedulerEvent(rmNode));
    if (rmNode.getHttpPort() == newNode.getHttpPort()) {
      rmNode.getLastNodeHeartBeatResponse().setResponseId(0);
      if (rmNode.getState().equals(NodeState.RUNNING)) {
        rmNode.context.getDispatcher().getEventHandler().handle(new NodeAddedSchedulerEvent(newNode));
      }
    }
 else {
switch (rmNode.getState()) {
case RUNNING:
        ClusterMetrics.getMetrics().decrNumActiveNodes();
      break;
case UNHEALTHY:
    ClusterMetrics.getMetrics().decrNumUnhealthyNMs();
  break;
default :
LOG.debug("Unexpected Rmnode state");
}
rmNode.context.getRMNodes().put(newNode.getNodeID(),newNode);
rmNode.context.getDispatcher().getEventHandler().handle(new RMNodeStartedEvent(newNode.getNodeID(),null,null));
}
}
 else {
rmNode.httpPort=newNode.getHttpPort();
rmNode.httpAddress=newNode.getHttpAddress();
boolean isCapabilityChanged=false;
if (rmNode.getTotalCapability() != newNode.getTotalCapability()) {
rmNode.totalCapability=newNode.getTotalCapability();
isCapabilityChanged=true;
}
handleNMContainerStatus(reconnectEvent.getNMContainerStatuses(),rmNode);
rmNode.getLastNodeHeartBeatResponse().setResponseId(0);
for (ApplicationId appId : reconnectEvent.getRunningApplications()) {
handleRunningAppOnNode(rmNode,rmNode.context,appId,rmNode.nodeId);
}
if (isCapabilityChanged && rmNode.getState().equals(NodeState.RUNNING)) {
rmNode.context.getDispatcher().getEventHandler().handle(new NodeResourceUpdateSchedulerEvent(rmNode,ResourceOption.newInstance(newNode.getTotalCapability(),-1)));
}
}
}
