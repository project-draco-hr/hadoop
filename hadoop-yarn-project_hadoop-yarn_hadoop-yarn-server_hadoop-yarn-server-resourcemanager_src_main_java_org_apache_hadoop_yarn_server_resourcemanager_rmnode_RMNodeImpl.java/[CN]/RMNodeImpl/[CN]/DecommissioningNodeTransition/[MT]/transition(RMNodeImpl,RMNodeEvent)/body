{
  Integer timeout=null;
  if (RMNodeDecommissioningEvent.class.isInstance(event)) {
    RMNodeDecommissioningEvent e=((RMNodeDecommissioningEvent)event);
    timeout=e.getDecommissioningTimeout();
  }
  if (rmNode.getState() == NodeState.DECOMMISSIONING) {
    if (!Objects.equals(rmNode.getDecommissioningTimeout(),timeout)) {
      LOG.info("Update " + rmNode.getNodeID() + " DecommissioningTimeout to be "+ timeout);
      rmNode.decommissioningTimeout=timeout;
    }
 else {
      LOG.info(rmNode.getNodeID() + " is already DECOMMISSIONING");
    }
    return;
  }
  LOG.info("Put Node " + rmNode.nodeId + " in DECOMMISSIONING.");
  rmNode.updateMetricsForGracefulDecommission(initState,finalState);
  rmNode.decommissioningTimeout=timeout;
  if (rmNode.originalTotalCapability == null) {
    rmNode.originalTotalCapability=Resources.clone(rmNode.totalCapability);
    LOG.info("Preserve original total capability: " + rmNode.originalTotalCapability);
  }
}
