{
  RMNodeStatusEvent statusEvent=(RMNodeStatusEvent)event;
  rmNode.latestNodeHeartBeatResponse=statusEvent.getLatestResponse();
  NodeHealthStatus remoteNodeHealthStatus=statusEvent.getNodeHealthStatus();
  rmNode.setHealthReport(remoteNodeHealthStatus.getHealthReport());
  rmNode.setLastHealthReportTime(remoteNodeHealthStatus.getLastHealthReportTime());
  if (!remoteNodeHealthStatus.getIsNodeHealthy()) {
    LOG.info("Node " + rmNode.nodeId + " reported UNHEALTHY with details: "+ remoteNodeHealthStatus.getHealthReport());
    rmNode.nodeUpdateQueue.clear();
    rmNode.context.getDispatcher().getEventHandler().handle(new NodeRemovedSchedulerEvent(rmNode));
    rmNode.context.getDispatcher().getEventHandler().handle(new NodesListManagerEvent(NodesListManagerEventType.NODE_UNUSABLE,rmNode));
    rmNode.updateMetricsForDeactivatedNode(rmNode.getState(),NodeState.UNHEALTHY);
    return NodeState.UNHEALTHY;
  }
  rmNode.handleContainerStatus(statusEvent.getContainers());
  Map<ApplicationId,LogAggregationReport> logAggregationReportsForApps=statusEvent.getLogAggregationReportsForApps();
  if (logAggregationReportsForApps != null && !logAggregationReportsForApps.isEmpty()) {
    rmNode.handleLogAggregationStatus(logAggregationReportsForApps);
  }
  if (rmNode.nextHeartBeat) {
    rmNode.nextHeartBeat=false;
    rmNode.context.getDispatcher().getEventHandler().handle(new NodeUpdateSchedulerEvent(rmNode));
  }
  if (UserGroupInformation.isSecurityEnabled()) {
    rmNode.context.getDelegationTokenRenewer().updateKeepAliveApplications(statusEvent.getKeepAliveAppIds());
  }
  return NodeState.RUNNING;
}
