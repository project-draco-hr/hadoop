{
  RegisterApplicationMasterResponse response=registerApplicationMaster(request);
  RegisterDistributedSchedulingAMResponse dsResp=recordFactory.newRecordInstance(RegisterDistributedSchedulingAMResponse.class);
  dsResp.setRegisterResponse(response);
  dsResp.setMinContainerResource(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MIN_CONTAINER_MEMORY_MB,YarnConfiguration.DIST_SCHEDULING_MIN_CONTAINER_MEMORY_MB_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MIN_CONTAINER_VCORES,YarnConfiguration.DIST_SCHEDULING_MIN_CONTAINER_VCORES_DEFAULT)));
  dsResp.setMaxContainerResource(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MAX_MEMORY_MB,YarnConfiguration.DIST_SCHEDULING_MAX_MEMORY_MB_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_MAX_CONTAINER_VCORES,YarnConfiguration.DIST_SCHEDULING_MAX_CONTAINER_VCORES_DEFAULT)));
  dsResp.setIncrContainerResource(Resource.newInstance(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_INCR_CONTAINER_MEMORY_MB,YarnConfiguration.DIST_SCHEDULING_INCR_CONTAINER_MEMORY_MB_DEFAULT),getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_INCR_CONTAINER_VCORES,YarnConfiguration.DIST_SCHEDULING_INCR_CONTAINER_VCORES_DEFAULT)));
  dsResp.setContainerTokenExpiryInterval(getConfig().getInt(YarnConfiguration.DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS,YarnConfiguration.DIST_SCHEDULING_CONTAINER_TOKEN_EXPIRY_MS_DEFAULT));
  dsResp.setContainerIdStart(this.rmContext.getEpoch() << ResourceManager.EPOCH_BIT_SHIFT);
  dsResp.setNodesForScheduling(this.nodeMonitor.selectLeastLoadedNodes(this.k));
  return dsResp;
}
