{
  List<Container> distAllocContainers=request.getAllocatedContainers();
  for (  Container container : distAllocContainers) {
    SchedulerApplicationAttempt appAttempt=((AbstractYarnScheduler)rmContext.getScheduler()).getCurrentAttemptForContainer(container.getId());
    RMContainer rmContainer=new RMContainerImpl(container,appAttempt.getApplicationAttemptId(),container.getNodeId(),appAttempt.getUser(),rmContext,true);
    appAttempt.addRMContainer(container.getId(),rmContainer);
    rmContainer.handle(new RMContainerEvent(container.getId(),RMContainerEventType.LAUNCHED));
  }
  AllocateResponse response=allocate(request.getAllocateRequest());
  DistributedSchedulingAllocateResponse dsResp=recordFactory.newRecordInstance(DistributedSchedulingAllocateResponse.class);
  dsResp.setAllocateResponse(response);
  dsResp.setNodesForScheduling(this.nodeMonitor.selectLeastLoadedNodes(this.k));
  return dsResp;
}
