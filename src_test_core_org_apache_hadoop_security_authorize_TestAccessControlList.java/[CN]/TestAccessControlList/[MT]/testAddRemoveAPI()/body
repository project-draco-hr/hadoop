{
  AccessControlList acl;
  Set<String> users;
  Set<String> groups;
  acl=new AccessControlList("");
  assertEquals(0,acl.getUsers().size());
  assertEquals(0,acl.getGroups().size());
  assertEquals("",acl.toString());
  acl.addUser("drwho");
  users=acl.getUsers();
  assertEquals(users.size(),1);
  assertEquals(users.iterator().next(),"drwho");
  assertEquals("drwho",acl.toString());
  acl.addGroup("tardis");
  groups=acl.getGroups();
  assertEquals(groups.size(),1);
  assertEquals(groups.iterator().next(),"tardis");
  assertEquals("drwho tardis",acl.toString());
  acl.addUser("joe");
  acl.addGroup("users");
  users=acl.getUsers();
  assertEquals(users.size(),2);
  Iterator<String> iter=users.iterator();
  assertEquals(iter.next(),"drwho");
  assertEquals(iter.next(),"joe");
  groups=acl.getGroups();
  assertEquals(groups.size(),2);
  iter=groups.iterator();
  assertEquals(iter.next(),"tardis");
  assertEquals(iter.next(),"users");
  assertEquals("drwho,joe tardis,users",acl.toString());
  acl.removeUser("joe");
  acl.removeGroup("users");
  users=acl.getUsers();
  assertEquals(users.size(),1);
  assertFalse(users.contains("joe"));
  groups=acl.getGroups();
  assertEquals(groups.size(),1);
  assertFalse(groups.contains("users"));
  assertEquals("drwho tardis",acl.toString());
  acl.removeGroup("tardis");
  groups=acl.getGroups();
  assertEquals(0,groups.size());
  assertFalse(groups.contains("tardis"));
  assertEquals("drwho",acl.toString());
  acl.removeUser("drwho");
  assertEquals(0,users.size());
  assertFalse(users.contains("drwho"));
  assertEquals(0,acl.getGroups().size());
  assertEquals(0,acl.getUsers().size());
  assertEquals("",acl.toString());
}
