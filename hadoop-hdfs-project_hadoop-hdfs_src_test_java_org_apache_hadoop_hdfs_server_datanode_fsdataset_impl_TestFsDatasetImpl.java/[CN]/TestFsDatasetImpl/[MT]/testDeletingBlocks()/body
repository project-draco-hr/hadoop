{
  HdfsConfiguration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).build();
  try {
    cluster.waitActive();
    DataNode dn=cluster.getDataNodes().get(0);
    FsDatasetSpi<?> ds=DataNodeTestUtils.getFSDataset(dn);
    ds.addBlockPool(BLOCKPOOL,conf);
    FsVolumeImpl vol;
    try (FsDatasetSpi.FsVolumeReferences volumes=ds.getFsVolumeReferences()){
      vol=(FsVolumeImpl)volumes.get(0);
    }
     ExtendedBlock eb;
    ReplicaInfo info;
    List<Block> blockList=new ArrayList<>();
    for (int i=1; i <= 63; i++) {
      eb=new ExtendedBlock(BLOCKPOOL,i,1,1000 + i);
      cluster.getFsDatasetTestUtils(0).createFinalizedReplica(eb);
      blockList.add(eb.getLocalBlock());
    }
    ds.invalidate(BLOCKPOOL,blockList.toArray(new Block[0]));
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
    }
    assertTrue(ds.isDeletingBlock(BLOCKPOOL,blockList.get(0).getBlockId()));
    blockList.clear();
    eb=new ExtendedBlock(BLOCKPOOL,64,1,1064);
    cluster.getFsDatasetTestUtils(0).createFinalizedReplica(eb);
    blockList.add(eb.getLocalBlock());
    ds.invalidate(BLOCKPOOL,blockList.toArray(new Block[0]));
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
    }
    assertFalse(ds.isDeletingBlock(BLOCKPOOL,blockList.get(0).getBlockId()));
  }
  finally {
    cluster.shutdown();
  }
}
