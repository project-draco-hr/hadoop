{
  final int numExistingVolumes=dataset.getVolumes().size();
  List<NamespaceInfo> nsInfos=new ArrayList<>();
  for (  String bpid : BLOCK_POOL_IDS) {
    nsInfos.add(new NamespaceInfo(0,CLUSTER_ID,bpid,1));
  }
  String newVolumePath=BASE_DIR + "/newVolumeToRemoveLater";
  StorageLocation loc=StorageLocation.parse(newVolumePath);
  Storage.StorageDirectory sd=createStorageDirectory(new File(newVolumePath));
  DataStorage.VolumeBuilder builder=new DataStorage.VolumeBuilder(storage,sd);
  when(storage.prepareVolume(eq(datanode),eq(loc.getFile()),anyListOf(NamespaceInfo.class))).thenReturn(builder);
  dataset.addVolume(loc,nsInfos);
  assertEquals(numExistingVolumes + 1,dataset.getVolumes().size());
  when(storage.getNumStorageDirs()).thenReturn(numExistingVolumes + 1);
  when(storage.getStorageDir(numExistingVolumes)).thenReturn(sd);
  List<StorageLocation> volumesToRemove=Arrays.asList(loc);
  dataset.removeVolumes(volumesToRemove);
  assertEquals(numExistingVolumes,dataset.getVolumes().size());
}
