{
  final Path foo=new Path(dir,"foo");
  Path createdFile1=new Path(foo,"created_file1.data");
  dfs.mkdirs(foo);
  dfs.setStoragePolicy(foo,storagePolicy);
  dfs.setQuotaByStorageType(foo,storageType,BLOCKSIZE * 10);
  INode fnode=fsdir.getINode4Write(foo.toString());
  assertTrue(fnode.isDirectory());
  assertTrue(fnode.isQuotaSet());
  long file1Len=BLOCKSIZE * 2 + BLOCKSIZE / 2;
  int bufLen=BLOCKSIZE / 16;
  DFSTestUtil.createFile(dfs,createdFile1,bufLen,file1Len,BLOCKSIZE,REPLICATION,seed);
  long storageTypeConsumed=fnode.asDirectory().getDirectoryWithQuotaFeature().getSpaceConsumed().getTypeSpaces().get(storageType);
  assertEquals(file1Len * replication,storageTypeConsumed);
}
