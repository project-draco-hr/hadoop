def getServiceInfo(self, userid=None, job=None, name=None, type=None):
    'This method is called upon by others\n        to query for a particular service returns\n        a dictionary of elements'
    self.logs['main'].debug(('inside getServiceInfo: %s.%s.%s' % (userid, job, name)))
    retdict = {}
    lock = self.__serviceDictLock
    lock.acquire()
    try:
        if (userid in self.__serviceDict):
            if (job in self.__serviceDict[userid]):
                if (name and type):
                    retdict = []
                    id = ('%s.%s' % (name, type))
                    for host in self.__serviceDict[userid][job]:
                        for dict in self.__serviceDict[userid][job][host]:
                            [loopID] = dict.keys()
                            if (loopID == id):
                                retdict.append(dict[id])
                else:
                    retdict = copy.deepcopy(self.__serviceDict[userid][job])
            elif (not job):
                retdict = copy.deepcopy(self.__serviceDict[userid])
        elif (not userid):
            retdict = copy.deepcopy(self.__serviceDict)
    finally:
        lock.release()
    return retdict
