{
  if (statusMap == null || statusMap.isEmpty()) {
    return;
  }
  Iterator<Entry<String,Map<String,String>>> it=statusMap.entrySet().iterator();
  while (it.hasNext()) {
    Entry<String,Map<String,String>> entry=it.next();
    Map<String,String> nnStatus=entry.getValue();
    if (nnStatus == null || nnStatus.isEmpty()) {
      continue;
    }
    boolean isUnknown=false;
    int unknown=0;
    int decommissioned=0;
    int decomInProg=0;
    int inservice=0;
    int dead=0;
    DecommissionStates overallState=DecommissionStates.UNKNOWN;
    for (    Map.Entry<String,String> m : nnStatus.entrySet()) {
      String status=m.getValue();
      if (status.equals(DecommissionStates.UNKNOWN.toString())) {
        isUnknown=true;
        unknown++;
      }
 else       if (status.equals(AdminStates.DECOMMISSION_INPROGRESS.toString())) {
        decomInProg++;
      }
 else       if (status.equals(AdminStates.DECOMMISSIONED.toString())) {
        decommissioned++;
      }
 else       if (status.equals(AdminStates.NORMAL.toString())) {
        inservice++;
      }
 else       if (status.equals(DEAD)) {
        dead++;
      }
    }
    int nns=nnStatus.keySet().size();
    if ((inservice + dead + unknown) == nns) {
      it.remove();
    }
 else     if (isUnknown) {
      overallState=DecommissionStates.UNKNOWN;
    }
 else     if (decommissioned == nns) {
      overallState=DecommissionStates.DECOMMISSIONED;
    }
 else     if ((decommissioned + decomInProg) == nns) {
      overallState=DecommissionStates.DECOMMISSION_INPROGRESS;
    }
 else     if ((decommissioned + decomInProg < nns) && (decommissioned + decomInProg > 0)) {
      overallState=DecommissionStates.PARTIALLY_DECOMMISSIONED;
    }
 else {
      LOG.warn("Cluster console encounters a not handled situtation.");
    }
    nnStatus.put(OVERALL_STATUS,overallState.toString());
  }
}
