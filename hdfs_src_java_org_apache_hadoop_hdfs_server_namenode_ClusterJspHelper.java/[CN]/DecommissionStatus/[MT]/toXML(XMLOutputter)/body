{
  if (error != null) {
    createGeneralException(doc,clusterid,StringUtils.stringifyException(error));
    doc.getWriter().flush();
    return;
  }
  if (statusMap == null || statusMap.isEmpty()) {
    doc.startTag("cluster");
    createNamenodeExceptionMsg(doc,exceptions);
    doc.endTag();
    doc.getWriter().flush();
    return;
  }
  doc.startTag("cluster");
  doc.attribute("clusterId",clusterid);
  doc.startTag("decommissioningReport");
  countDecommissionDatanodes();
  toXmlItemBlock(doc,DecommissionStates.DECOMMISSIONED.toString(),Integer.toString(decommissioned));
  toXmlItemBlock(doc,DecommissionStates.DECOMMISSION_INPROGRESS.toString(),Integer.toString(decommissioning));
  toXmlItemBlock(doc,DecommissionStates.PARTIALLY_DECOMMISSIONED.toString(),Integer.toString(partial));
  doc.endTag();
  doc.startTag("datanodes");
  Set<String> dnSet=statusMap.keySet();
  for (  String dnhost : dnSet) {
    Map<String,String> nnStatus=statusMap.get(dnhost);
    if (nnStatus == null || nnStatus.isEmpty()) {
      continue;
    }
    String overallStatus=nnStatus.get(OVERALL_STATUS);
    if (overallStatus != null && (overallStatus.equals(AdminStates.DECOMMISSION_INPROGRESS.toString()) || overallStatus.equals(AdminStates.DECOMMISSIONED.toString()) || overallStatus.equals(DecommissionStates.PARTIALLY_DECOMMISSIONED.toString())|| overallStatus.equals(DecommissionStates.UNKNOWN.toString()))) {
      doc.startTag("node");
      toXmlItemBlockWithLink(doc,dnhost,(dnhost + ":" + httpPort),"DataNode");
      toXmlItemBlock(doc,OVERALL_STATUS,overallStatus);
      for (      Map.Entry<String,String> m : nnStatus.entrySet()) {
        String nn=m.getKey();
        if (nn.equals(OVERALL_STATUS)) {
          continue;
        }
        toXmlItemBlock(doc,nn,nnStatus.get(nn));
      }
      doc.endTag();
    }
  }
  doc.endTag();
  createNamenodeExceptionMsg(doc,exceptions);
  doc.endTag();
}
