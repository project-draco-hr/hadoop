{
  final FsUrlStreamHandlerFactory factory=new FsUrlStreamHandlerFactory();
  final Random random=new Random();
  ExecutorService executor=Executors.newFixedThreadPool(THREADS);
  ArrayList<Future<?>> futures=new ArrayList<Future<?>>(TASKS);
  for (int i=0; i < TASKS; i++) {
    final int aux=i;
    futures.add(executor.submit(new Runnable(){
      @Override public void run(){
        int rand=aux + random.nextInt(3);
        factory.createURLStreamHandler(String.valueOf(rand));
      }
    }
));
  }
  executor.shutdown();
  try {
    executor.awaitTermination(TIMEOUT,TimeUnit.SECONDS);
    executor.shutdownNow();
  }
 catch (  InterruptedException e) {
  }
  for (  Future future : futures) {
    if (!future.isDone()) {
      break;
    }
    future.get();
  }
}
