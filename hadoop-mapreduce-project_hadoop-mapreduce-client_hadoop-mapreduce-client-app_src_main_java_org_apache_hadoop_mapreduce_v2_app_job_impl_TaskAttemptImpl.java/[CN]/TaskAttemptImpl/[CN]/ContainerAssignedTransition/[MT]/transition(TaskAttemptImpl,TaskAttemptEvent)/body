{
  final TaskAttemptContainerAssignedEvent cEvent=(TaskAttemptContainerAssignedEvent)event;
  taskAttempt.containerID=cEvent.getContainer().getId();
  taskAttempt.containerNodeId=cEvent.getContainer().getNodeId();
  taskAttempt.containerMgrAddress=taskAttempt.containerNodeId.toString();
  taskAttempt.nodeHttpAddress=cEvent.getContainer().getNodeHttpAddress();
  taskAttempt.nodeRackName=RackResolver.resolve(taskAttempt.containerNodeId.getHost()).getNetworkLocation();
  taskAttempt.containerToken=cEvent.getContainer().getContainerToken();
  taskAttempt.assignedCapability=cEvent.getContainer().getResource();
  taskAttempt.remoteTask=taskAttempt.createRemoteTask();
  taskAttempt.jvmID=new WrappedJvmID(taskAttempt.remoteTask.getTaskID().getJobID(),taskAttempt.remoteTask.isMapTask(),taskAttempt.containerID.getId());
  taskAttempt.taskAttemptListener.registerPendingTask(taskAttempt.jvmID);
  taskAttempt.eventHandler.handle(new ContainerRemoteLaunchEvent(taskAttempt.attemptId,taskAttempt.containerID,taskAttempt.containerMgrAddress,taskAttempt.containerToken){
    @Override public ContainerLaunchContext getContainer(){
      return taskAttempt.createContainerLaunchContext(cEvent.getApplicationACLs());
    }
    @Override public Task getRemoteTask(){
      return taskAttempt.remoteTask;
    }
  }
);
  taskAttempt.eventHandler.handle(new SpeculatorEvent(taskAttempt.getID().getTaskId(),-1));
}
