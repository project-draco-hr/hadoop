{
synchronized (commonContainerSpecLock) {
    if (commonContainerSpec == null) {
      commonContainerSpec=createCommonContainerLaunchContext(applicationACLs,conf,jobToken,oldJobId,credentials);
    }
  }
  Map<String,String> env=commonContainerSpec.getEnvironment();
  Map<String,String> myEnv=new HashMap<String,String>(env.size());
  myEnv.putAll(env);
  MapReduceChildJVM.setVMEnv(myEnv,remoteTask);
  List<String> commands=MapReduceChildJVM.getVMCommand(taskAttemptListener.getAddress(),remoteTask,jvmID);
  Map<String,ByteBuffer> myServiceData=new HashMap<String,ByteBuffer>();
  for (  Entry<String,ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) {
    myServiceData.put(entry.getKey(),entry.getValue().duplicate());
  }
  ContainerLaunchContext container=BuilderUtils.newContainerLaunchContext(commonContainerSpec.getUser(),commonContainerSpec.getLocalResources(),myEnv,commands,myServiceData,commonContainerSpec.getContainerTokens().duplicate(),applicationACLs);
  return container;
}
