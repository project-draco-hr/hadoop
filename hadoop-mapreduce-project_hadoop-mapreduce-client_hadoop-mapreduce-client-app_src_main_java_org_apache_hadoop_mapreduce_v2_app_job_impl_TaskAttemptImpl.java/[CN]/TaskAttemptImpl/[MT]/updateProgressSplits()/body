{
  double newProgress=reportedStatus.progress;
  Counters counters=reportedStatus.counters;
  if (counters == null)   return;
  WrappedProgressSplitsBlock splitsBlock=getProgressSplitBlock();
  if (splitsBlock != null) {
    long now=clock.getTime();
    long start=getLaunchTime();
    if (start != 0 && now - start <= Integer.MAX_VALUE) {
      splitsBlock.getProgressWallclockTime().extend(newProgress,(int)(now - start));
    }
    Counter cpuCounter=counters.findCounter(TaskCounter.CPU_MILLISECONDS);
    if (cpuCounter != null && cpuCounter.getValue() <= Integer.MAX_VALUE) {
      splitsBlock.getProgressCPUTime().extend(newProgress,(int)cpuCounter.getValue());
    }
    Counter virtualBytes=counters.findCounter(TaskCounter.VIRTUAL_MEMORY_BYTES);
    if (virtualBytes != null) {
      splitsBlock.getProgressVirtualMemoryKbytes().extend(newProgress,(int)(virtualBytes.getValue() / (MEMORY_SPLITS_RESOLUTION)));
    }
    Counter physicalBytes=counters.findCounter(TaskCounter.PHYSICAL_MEMORY_BYTES);
    if (physicalBytes != null) {
      splitsBlock.getProgressPhysicalMemoryKbytes().extend(newProgress,(int)(physicalBytes.getValue() / (MEMORY_SPLITS_RESOLUTION)));
    }
  }
}
