{
  TaskType taskType=taskAttempt.getID().getTaskId().getTaskType();
  long duration=(taskAttempt.getFinishTime() - taskAttempt.getLaunchTime());
  int mbRequired=taskAttempt.getMemoryRequired(taskAttempt.conf,taskType);
  int vcoresRequired=taskAttempt.getCpuRequired(taskAttempt.conf,taskType);
  int minSlotMemSize=taskAttempt.conf.getInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);
  int simSlotsRequired=minSlotMemSize == 0 ? 0 : (int)Math.ceil((float)mbRequired / minSlotMemSize);
  if (taskType == TaskType.MAP) {
    jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS,simSlotsRequired * duration);
    jce.addCounterUpdate(JobCounter.MB_MILLIS_MAPS,duration * mbRequired);
    jce.addCounterUpdate(JobCounter.VCORES_MILLIS_MAPS,duration * vcoresRequired);
    jce.addCounterUpdate(JobCounter.MILLIS_MAPS,duration);
  }
 else {
    jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES,simSlotsRequired * duration);
    jce.addCounterUpdate(JobCounter.MB_MILLIS_REDUCES,duration * mbRequired);
    jce.addCounterUpdate(JobCounter.VCORES_MILLIS_REDUCES,duration * vcoresRequired);
    jce.addCounterUpdate(JobCounter.MILLIS_REDUCES,duration);
  }
}
