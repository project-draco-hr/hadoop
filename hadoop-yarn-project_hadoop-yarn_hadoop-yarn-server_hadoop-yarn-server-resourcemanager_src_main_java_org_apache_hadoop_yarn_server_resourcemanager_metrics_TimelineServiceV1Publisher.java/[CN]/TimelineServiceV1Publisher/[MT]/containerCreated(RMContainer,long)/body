{
  TimelineEntity entity=createContainerEntity(container.getContainerId());
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,container.getAllocatedResource().getMemorySize());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,container.getAllocatedResource().getVirtualCores());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,container.getAllocatedNode().getHost());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,container.getAllocatedNode().getPort());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,container.getAllocatedPriority().getPriority());
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,container.getNodeHttpAddress());
  entity.setOtherInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(createdTime);
  entity.addEvent(tEvent);
  getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,entity,container.getContainerId().getApplicationAttemptId().getApplicationId()));
}
