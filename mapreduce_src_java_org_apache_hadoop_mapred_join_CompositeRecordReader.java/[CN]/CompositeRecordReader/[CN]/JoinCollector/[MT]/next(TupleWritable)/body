{
  if (first) {
    int i=-1;
    for (pos=0; pos < iters.length; ++pos) {
      if (iters[pos].hasNext() && iters[pos].next((X)val.get(pos))) {
        i=pos;
        val.setWritten(i);
      }
    }
    pos=i;
    first=false;
    if (pos < 0) {
      clear();
      return false;
    }
    return true;
  }
  while (0 <= pos && !(iters[pos].hasNext() && iters[pos].next((X)val.get(pos)))) {
    --pos;
  }
  if (pos < 0) {
    clear();
    return false;
  }
  val.setWritten(pos);
  for (int i=0; i < pos; ++i) {
    if (iters[i].replay((X)val.get(i))) {
      val.setWritten(i);
    }
  }
  while (pos + 1 < iters.length) {
    ++pos;
    iters[pos].reset();
    if (iters[pos].hasNext() && iters[pos].next((X)val.get(pos))) {
      val.setWritten(pos);
    }
  }
  return true;
}
