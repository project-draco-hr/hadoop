{
  BlockInfo[] blockInfos=file.getBlocks();
  directive.addFilesNeeded(1);
  long neededTotal=0;
  for (  BlockInfo blockInfo : blockInfos) {
    long neededByBlock=directive.getReplication() * blockInfo.getNumBytes();
    neededTotal+=neededByBlock;
  }
  directive.addBytesNeeded(neededTotal);
  long cachedTotal=0;
  for (  BlockInfo blockInfo : blockInfos) {
    if (!blockInfo.getBlockUCState().equals(BlockUCState.COMPLETE)) {
      continue;
    }
    Block block=new Block(blockInfo.getBlockId());
    CachedBlock ncblock=new CachedBlock(block.getBlockId(),directive.getReplication(),mark);
    CachedBlock ocblock=cachedBlocks.get(ncblock);
    if (ocblock == null) {
      cachedBlocks.put(ncblock);
    }
 else {
      List<DatanodeDescriptor> cachedOn=ocblock.getDatanodes(Type.CACHED);
      long cachedByBlock=Math.min(cachedOn.size(),directive.getReplication()) * blockInfo.getNumBytes();
      cachedTotal+=cachedByBlock;
      if (mark != ocblock.getMark()) {
        ocblock.setReplicationAndMark(directive.getReplication(),mark);
      }
 else {
        ocblock.setReplicationAndMark((short)Math.max(directive.getReplication(),ocblock.getReplication()),mark);
      }
    }
  }
  directive.addBytesCached(cachedTotal);
  if (cachedTotal == neededTotal) {
    directive.addFilesCached(1);
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Directive " + directive.getId() + " is caching "+ file.getFullPathName()+ ": "+ cachedTotal+ "/"+ neededTotal+ " bytes");
  }
}
