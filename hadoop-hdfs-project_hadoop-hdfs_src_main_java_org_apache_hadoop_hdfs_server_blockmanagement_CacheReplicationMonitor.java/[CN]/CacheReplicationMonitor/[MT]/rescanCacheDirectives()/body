{
  FSDirectory fsDir=namesystem.getFSDirectory();
  final long now=new Date().getTime();
  for (  CacheDirective directive : cacheManager.getCacheDirectives()) {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Directive expiry is at " + directive.getExpiryTime());
    }
    if (directive.getExpiryTime() > 0 && directive.getExpiryTime() <= now) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping directive id " + directive.getId() + " because it has expired ("+ directive.getExpiryTime()+ "<="+ now+ ")");
      }
      continue;
    }
    scannedDirectives++;
    String path=directive.getPath();
    INode node;
    try {
      node=fsDir.getINode(path);
    }
 catch (    UnresolvedLinkException e) {
      continue;
    }
    if (node == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("No inode found at " + path);
      }
    }
 else     if (node.isDirectory()) {
      INodeDirectory dir=node.asDirectory();
      ReadOnlyList<INode> children=dir.getChildrenList(null);
      for (      INode child : children) {
        if (child.isFile()) {
          rescanFile(directive,child.asFile());
        }
      }
    }
 else     if (node.isFile()) {
      rescanFile(directive,node.asFile());
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Ignoring non-directory, non-file inode " + node + " found at "+ path);
      }
    }
  }
}
