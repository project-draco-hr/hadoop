{
  if (totCap.equals(ZERO_RESOURCE)) {
    return true;
  }
  writeLock.lock();
  try {
    NavigableMap<Long,Resource> removeInt=new TreeMap<Long,Resource>();
    removeInt.put(reservationInterval.getStartTime(),totCap);
    removeInt.put(reservationInterval.getEndTime(),ZERO_RESOURCE);
    try {
      cumulativeCapacity=merge(resourceCalculator,totCap,cumulativeCapacity,removeInt,Long.MIN_VALUE,Long.MAX_VALUE,RLEOperator.subtract);
    }
 catch (    PlanningException e) {
    }
    return true;
  }
  finally {
    writeLock.unlock();
  }
}
