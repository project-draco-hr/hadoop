{
  List<AclEntry> acl=Lists.newArrayListWithCapacity(entries.size() + 3);
  acl.add(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(AclEntryType.USER).setPermission(perm.getUserAction()).build());
  boolean hasAccessAcl=false;
  Iterator<AclEntry> entryIter=entries.iterator();
  AclEntry curEntry=null;
  while (entryIter.hasNext()) {
    curEntry=entryIter.next();
    if (curEntry.getScope() == AclEntryScope.DEFAULT) {
      break;
    }
    hasAccessAcl=true;
    acl.add(curEntry);
  }
  acl.add(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(hasAccessAcl ? AclEntryType.MASK : AclEntryType.GROUP).setPermission(perm.getGroupAction()).build());
  acl.add(new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(AclEntryType.OTHER).setPermission(perm.getOtherAction()).build());
  if (curEntry != null && curEntry.getScope() == AclEntryScope.DEFAULT) {
    acl.add(curEntry);
    while (entryIter.hasNext()) {
      acl.add(entryIter.next());
    }
  }
  return acl;
}
