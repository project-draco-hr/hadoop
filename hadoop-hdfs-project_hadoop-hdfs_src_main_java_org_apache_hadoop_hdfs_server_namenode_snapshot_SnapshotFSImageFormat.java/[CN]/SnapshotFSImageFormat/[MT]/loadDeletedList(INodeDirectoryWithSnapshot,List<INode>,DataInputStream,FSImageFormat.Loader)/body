{
  int deletedSize=in.readInt();
  List<INode> deletedList=new ArrayList<INode>(deletedSize);
  for (int i=0; i < deletedSize; i++) {
    byte[] deletedNodeName=new byte[in.readShort()];
    in.readFully(deletedNodeName);
    INode deleted=loader.loadINode(in);
    deleted.setLocalName(deletedNodeName);
    deletedList.add(deleted);
    deleted.setParent(parent);
    if (deleted instanceof INodeFile && ((INodeFile)deleted).getBlocks() == null) {
      int c=Collections.binarySearch(createdList,deletedNodeName);
      if (c < 0) {
        throw new IOException("Cannot find the INode linked with the INode " + DFSUtil.bytes2String(deletedNodeName) + " in deleted list while loading FSImage.");
      }
      FileWithSnapshot deletedWithLink=(FileWithSnapshot)deleted;
      INodeFile cNode=(INodeFile)createdList.get(c);
      INodeFileWithSnapshot cNodeWithLink=(INodeFileWithSnapshot)cNode;
      ((INodeFile)deleted).setBlocks(cNode.getBlocks());
      cNodeWithLink.insertBefore(deletedWithLink);
    }
  }
  return deletedList;
}
