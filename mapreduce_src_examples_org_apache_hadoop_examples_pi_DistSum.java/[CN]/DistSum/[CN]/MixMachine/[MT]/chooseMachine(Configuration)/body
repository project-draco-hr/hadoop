{
  final int parts=conf.getInt(N_PARTS,Integer.MAX_VALUE);
  try {
    for (; ; Thread.sleep(2000)) {
      final ClusterMetrics status=cluster.getClusterStatus();
      final int m=status.getMapSlotCapacity() - status.getOccupiedMapSlots();
      final int r=status.getReduceSlotCapacity() - status.getOccupiedReduceSlots();
      if (m >= parts || r >= parts) {
        final Machine value=r >= parts ? ReduceSide.INSTANCE : MapSide.INSTANCE;
        Util.out.println("  " + this + " is "+ value+ " (m="+ m+ ", r="+ r+ ")");
        return value;
      }
    }
  }
 catch (  InterruptedException e) {
    throw new IOException(e);
  }
}
