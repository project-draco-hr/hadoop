{
  if (kids != null) {
    for (int i=0; i < kids.length; ++i) {
      kids[i].initialize(((CompositeInputSplit)split).get(i),context);
      if (kids[i].key() == null) {
        continue;
      }
      if (keyclass == null) {
        keyclass=kids[i].createKey().getClass().asSubclass(WritableComparable.class);
      }
      if (null == q) {
        cmp=WritableComparator.get(keyclass,conf);
        q=new PriorityQueue<ComposableRecordReader<K,?>>(3,new Comparator<ComposableRecordReader<K,?>>(){
          public int compare(          ComposableRecordReader<K,?> o1,          ComposableRecordReader<K,?> o2){
            return cmp.compare(o1.key(),o2.key());
          }
        }
);
      }
      if (!keyclass.equals(kids[i].key().getClass())) {
        throw new ClassCastException("Child key classes fail to agree");
      }
      if (kids[i].hasNext()) {
        q.add(kids[i]);
      }
    }
  }
}
