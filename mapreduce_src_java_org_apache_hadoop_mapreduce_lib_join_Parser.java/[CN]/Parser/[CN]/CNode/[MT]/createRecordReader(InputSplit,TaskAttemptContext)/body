{
  if (!(split instanceof CompositeInputSplit)) {
    throw new IOException("Invalid split type:" + split.getClass().getName());
  }
  final CompositeInputSplit spl=(CompositeInputSplit)split;
  final int capacity=kids.size();
  CompositeRecordReader ret=null;
  try {
    if (!rrCstrMap.containsKey(ident)) {
      throw new IOException("No RecordReader for " + ident);
    }
    ret=(CompositeRecordReader)rrCstrMap.get(ident).newInstance(id,taskContext.getConfiguration(),capacity,cmpcl);
  }
 catch (  IllegalAccessException e) {
    throw new IOException(e);
  }
catch (  InstantiationException e) {
    throw new IOException(e);
  }
catch (  InvocationTargetException e) {
    throw new IOException(e);
  }
  for (int i=0; i < capacity; ++i) {
    ret.add(kids.get(i).createRecordReader(spl.get(i),taskContext));
  }
  return (ComposableRecordReader)ret;
}
