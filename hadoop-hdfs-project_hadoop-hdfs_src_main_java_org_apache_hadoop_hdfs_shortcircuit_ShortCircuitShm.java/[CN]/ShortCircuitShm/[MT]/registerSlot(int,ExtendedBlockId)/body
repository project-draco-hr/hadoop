{
  if (slotIdx < 0) {
    throw new InvalidRequestException(this + ": invalid negative slot " + "index "+ slotIdx);
  }
  if (slotIdx >= slots.length) {
    throw new InvalidRequestException(this + ": invalid slot " + "index "+ slotIdx);
  }
  if (allocatedSlots.get(slotIdx)) {
    throw new InvalidRequestException(this + ": slot " + slotIdx+ " is already in use.");
  }
  Slot slot=new Slot(calculateSlotAddress(slotIdx),blockId);
  if (!slot.isValid()) {
    throw new InvalidRequestException(this + ": slot " + slotIdx+ " is not marked as valid.");
  }
  slots[slotIdx]=slot;
  allocatedSlots.set(slotIdx,true);
  if (LOG.isTraceEnabled()) {
    LOG.trace(this + ": registerSlot " + slotIdx+ ": allocatedSlots="+ allocatedSlots+ StringUtils.getStackTrace(Thread.currentThread()));
  }
  return slot;
}
