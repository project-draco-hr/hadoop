{
  Socket sock=params.getSocket();
  final DataOutputStream out=new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(sock,HdfsServerConstants.WRITE_TIMEOUT)));
  new Sender(out).readBlock(params.getBlock(),params.getBlockToken(),params.getClientName(),params.getStartOffset(),params.getLen());
  DataInputStream in=new DataInputStream(new BufferedInputStream(NetUtils.getInputStream(sock),params.getBufferSize()));
  BlockOpResponseProto status=BlockOpResponseProto.parseFrom(vintPrefixed(in));
  RemoteBlockReader2.checkSuccess(status,sock,params.getBlock(),params.getFile());
  ReadOpChecksumInfoProto checksumInfo=status.getReadOpChecksumInfo();
  DataChecksum checksum=DataTransferProtoUtil.fromProto(checksumInfo.getChecksum());
  long firstChunkOffset=checksumInfo.getChunkOffset();
  if (firstChunkOffset < 0 || firstChunkOffset > params.getStartOffset() || firstChunkOffset <= (params.getStartOffset() - checksum.getBytesPerChecksum())) {
    throw new IOException("BlockReader: error in first chunk offset (" + firstChunkOffset + ") startOffset is "+ params.getStartOffset()+ " for file "+ params.getFile());
  }
  return new RemoteBlockReader(params.getFile(),params.getBlock().getBlockPoolId(),params.getBlock().getBlockId(),in,checksum,params.getVerifyChecksum(),params.getStartOffset(),firstChunkOffset,params.getLen(),sock);
}
