{
  inReaders=new Reader[inMapFiles.length];
  for (int i=0; i < inMapFiles.length; i++) {
    Reader reader=new Reader(inMapFiles[i],conf);
    if (keyClass == null || valueClass == null) {
      keyClass=(Class<WritableComparable>)reader.getKeyClass();
      valueClass=(Class<Writable>)reader.getValueClass();
    }
 else     if (keyClass != reader.getKeyClass() || valueClass != reader.getValueClass()) {
      throw new HadoopIllegalArgumentException("Input files cannot be merged as they" + " have different Key and Value classes");
    }
    inReaders[i]=reader;
  }
  if (comparator == null) {
    Class<? extends WritableComparable> cls;
    cls=keyClass.asSubclass(WritableComparable.class);
    this.comparator=WritableComparator.get(cls,conf);
  }
 else   if (comparator.getKeyClass() != keyClass) {
    throw new HadoopIllegalArgumentException("Input files cannot be merged as they" + " have different Key class compared to" + " specified comparator");
  }
  outWriter=new MapFile.Writer(conf,outMapFile,MapFile.Writer.keyClass(keyClass),MapFile.Writer.valueClass(valueClass));
}
