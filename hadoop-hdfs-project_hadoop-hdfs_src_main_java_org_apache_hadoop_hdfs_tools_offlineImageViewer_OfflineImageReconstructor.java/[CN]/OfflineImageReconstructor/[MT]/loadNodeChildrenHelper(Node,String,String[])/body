{
  XMLEvent ev=null;
  while (true) {
    try {
      ev=events.peek();
switch (ev.getEventType()) {
case XMLEvent.END_ELEMENT:
        if (terminators.length != 0) {
          return;
        }
      events.nextEvent();
    return;
case XMLEvent.START_ELEMENT:
  String key=ev.asStartElement().getName().getLocalPart();
for (String terminator : terminators) {
  if (terminator.equals(key)) {
    return;
  }
}
events.nextEvent();
Node node=new Node();
parent.addChild(key,node);
loadNodeChildrenHelper(node,expected,new String[0]);
break;
case XMLEvent.CHARACTERS:
String val=XMLUtils.unmangleXmlString(ev.asCharacters().getData(),true);
parent.setVal(val);
events.nextEvent();
break;
case XMLEvent.ATTRIBUTE:
throw new IOException("Unexpected XML event " + ev);
default :
if (LOG.isTraceEnabled()) {
LOG.trace("Skipping XMLEvent " + ev);
}
events.nextEvent();
break;
}
}
 catch (XMLStreamException e) {
throw new IOException("Expecting " + expected + ", but got XMLStreamException",e);
}
}
}
