{
  Node node=new Node();
  loadNodeChildren(node,"CacheManager fields","pool","directive");
  CacheManagerSection.Builder b=CacheManagerSection.newBuilder();
  Long nextDirectiveId=node.removeChildLong(CACHE_MANAGER_SECTION_NEXT_DIRECTIVE_ID);
  if (nextDirectiveId == null) {
    throw new IOException("CacheManager section had no <nextDirectiveId>");
  }
  b.setNextDirectiveId(nextDirectiveId);
  Integer expectedNumPools=node.removeChildInt(CACHE_MANAGER_SECTION_NUM_POOLS);
  if (expectedNumPools == null) {
    throw new IOException("CacheManager section had no <numPools>");
  }
  b.setNumPools(expectedNumPools);
  Integer expectedNumDirectives=node.removeChildInt(CACHE_MANAGER_SECTION_NUM_DIRECTIVES);
  if (expectedNumDirectives == null) {
    throw new IOException("CacheManager section had no <numDirectives>");
  }
  b.setNumDirectives(expectedNumDirectives);
  b.build().writeDelimitedTo(out);
  long actualNumPools=0;
  while (actualNumPools < expectedNumPools) {
    try {
      expectTag(CACHE_MANAGER_SECTION_POOL,false);
    }
 catch (    IOException e) {
      throw new IOException("Only read " + actualNumPools + " cache pools out of "+ expectedNumPools,e);
    }
    actualNumPools++;
    Node pool=new Node();
    loadNodeChildren(pool,"pool fields","");
    processPoolXml(node);
  }
  long actualNumDirectives=0;
  while (actualNumDirectives < expectedNumDirectives) {
    try {
      expectTag(CACHE_MANAGER_SECTION_DIRECTIVE,false);
    }
 catch (    IOException e) {
      throw new IOException("Only read " + actualNumDirectives + " cache pools out of "+ expectedNumDirectives,e);
    }
    actualNumDirectives++;
    Node pool=new Node();
    loadNodeChildren(pool,"directive fields","");
    processDirectiveXml(node);
  }
  expectTagEnd(CACHE_MANAGER_SECTION_NAME);
  recordSectionLength(SectionName.CACHE_MANAGER.name());
}
