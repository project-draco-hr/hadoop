{
  AuthenticationMethod authMethod=AuthenticationMethod.SIMPLE;
  if (isSecurityEnabled) {
    authMethod=AuthenticationMethod.KERBEROS;
  }
  SecurityUtil.setAuthenticationMethod(authMethod,conf);
  UserGroupInformation.setConfiguration(conf);
  InlineDispatcher rmDispatcher=new InlineDispatcher();
  ContainerAllocationExpirer containerAllocationExpirer=mock(ContainerAllocationExpirer.class);
  amLivelinessMonitor=mock(AMLivelinessMonitor.class);
  amFinishingMonitor=mock(AMLivelinessMonitor.class);
  rmContext=new RMContextImpl(rmDispatcher,containerAllocationExpirer,amLivelinessMonitor,amFinishingMonitor,null,amRMTokenManager,new RMContainerTokenSecretManager(conf),new NMTokenSecretManagerInRM(conf),clientToAMTokenManager);
  RMStateStore store=mock(RMStateStore.class);
  ((RMContextImpl)rmContext).setStateStore(store);
  scheduler=mock(YarnScheduler.class);
  masterService=mock(ApplicationMasterService.class);
  applicationMasterLauncher=mock(ApplicationMasterLauncher.class);
  rmDispatcher.register(RMAppAttemptEventType.class,new TestApplicationAttemptEventDispatcher());
  rmDispatcher.register(RMAppEventType.class,new TestApplicationEventDispatcher());
  rmDispatcher.register(SchedulerEventType.class,new TestSchedulerEventDispatcher());
  rmDispatcher.register(AMLauncherEventType.class,new TestAMLauncherEventDispatcher());
  rmDispatcher.init(conf);
  rmDispatcher.start();
  ApplicationId applicationId=MockApps.newAppID(appId++);
  ApplicationAttemptId applicationAttemptId=ApplicationAttemptId.newInstance(applicationId,0);
  final String user=MockApps.newUserName();
  final String queue=MockApps.newQueue();
  submissionContext=mock(ApplicationSubmissionContext.class);
  when(submissionContext.getQueue()).thenReturn(queue);
  Resource resource=BuilderUtils.newResource(1536,1);
  ContainerLaunchContext amContainerSpec=BuilderUtils.newContainerLaunchContext(null,null,null,null,null,null);
  when(submissionContext.getAMContainerSpec()).thenReturn(amContainerSpec);
  when(submissionContext.getResource()).thenReturn(resource);
  unmanagedAM=false;
  application=mock(RMApp.class);
  applicationAttempt=new RMAppAttemptImpl(applicationAttemptId,rmContext,scheduler,masterService,submissionContext,new Configuration(),user);
  when(application.getCurrentAppAttempt()).thenReturn(applicationAttempt);
  when(application.getApplicationId()).thenReturn(applicationId);
  testAppAttemptNewState();
}
