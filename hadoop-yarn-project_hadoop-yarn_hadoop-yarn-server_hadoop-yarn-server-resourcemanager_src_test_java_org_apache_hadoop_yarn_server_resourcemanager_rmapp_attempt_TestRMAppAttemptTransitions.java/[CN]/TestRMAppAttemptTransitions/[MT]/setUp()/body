{
  InlineDispatcher rmDispatcher=new InlineDispatcher();
  ContainerAllocationExpirer containerAllocationExpirer=mock(ContainerAllocationExpirer.class);
  amLivelinessMonitor=mock(AMLivelinessMonitor.class);
  amFinishingMonitor=mock(AMLivelinessMonitor.class);
  Configuration conf=new Configuration();
  rmContext=new RMContextImpl(new MemStore(),rmDispatcher,containerAllocationExpirer,amLivelinessMonitor,amFinishingMonitor,null,new ApplicationTokenSecretManager(conf),new RMContainerTokenSecretManager(conf),new ClientToAMTokenSecretManagerInRM());
  scheduler=mock(YarnScheduler.class);
  masterService=mock(ApplicationMasterService.class);
  applicationMasterLauncher=mock(ApplicationMasterLauncher.class);
  rmDispatcher.register(RMAppAttemptEventType.class,new TestApplicationAttemptEventDispatcher());
  rmDispatcher.register(RMAppEventType.class,new TestApplicationEventDispatcher());
  rmDispatcher.register(SchedulerEventType.class,new TestSchedulerEventDispatcher());
  rmDispatcher.register(AMLauncherEventType.class,new TestAMLauncherEventDispatcher());
  rmDispatcher.init(conf);
  rmDispatcher.start();
  ApplicationId applicationId=MockApps.newAppID(appId++);
  ApplicationAttemptId applicationAttemptId=MockApps.newAppAttemptID(applicationId,0);
  final String user=MockApps.newUserName();
  final String queue=MockApps.newQueue();
  submissionContext=mock(ApplicationSubmissionContext.class);
  when(submissionContext.getUser()).thenReturn(user);
  when(submissionContext.getQueue()).thenReturn(queue);
  ContainerLaunchContext amContainerSpec=mock(ContainerLaunchContext.class);
  Resource resource=mock(Resource.class);
  when(amContainerSpec.getResource()).thenReturn(resource);
  when(submissionContext.getAMContainerSpec()).thenReturn(amContainerSpec);
  unmanagedAM=false;
  application=mock(RMApp.class);
  applicationAttempt=new RMAppAttemptImpl(applicationAttemptId,null,rmContext,scheduler,masterService,submissionContext,null);
  when(application.getCurrentAppAttempt()).thenReturn(applicationAttempt);
  when(application.getApplicationId()).thenReturn(applicationId);
  testAppAttemptNewState();
}
