{
  ApplicationAttemptId attemptId=applicationAttempt.getAppAttemptId();
  ApplicationResourceUsageReport appResUsgRpt=mock(ApplicationResourceUsageReport.class);
  when(appResUsgRpt.getMemorySeconds()).thenReturn(123456L);
  when(appResUsgRpt.getVcoreSeconds()).thenReturn(55544L);
  when(scheduler.getAppResourceUsageReport(any(ApplicationAttemptId.class))).thenReturn(appResUsgRpt);
  Container amContainer=allocateApplicationAttempt();
  launchApplicationAttempt(amContainer);
  runApplicationAttempt(amContainer,"host",8042,"oldtrackingurl",false);
  applicationAttempt.handle(new RMAppAttemptUnregistrationEvent(attemptId,"",FinalApplicationStatus.SUCCEEDED,""));
  ApplicationResourceUsageReport report=applicationAttempt.getApplicationResourceUsageReport();
  Assert.assertEquals(123456L,report.getMemorySeconds());
  Assert.assertEquals(55544L,report.getVcoreSeconds());
  when(appResUsgRpt.getMemorySeconds()).thenReturn(223456L);
  when(appResUsgRpt.getVcoreSeconds()).thenReturn(75544L);
  sendAttemptUpdateSavedEvent(applicationAttempt);
  applicationAttempt.handle(new RMAppAttemptContainerFinishedEvent(attemptId,ContainerStatus.newInstance(amContainer.getId(),ContainerState.COMPLETE,"",0)));
  when(scheduler.getSchedulerAppInfo(eq(attemptId))).thenReturn(null);
  report=applicationAttempt.getApplicationResourceUsageReport();
  Assert.assertEquals(223456,report.getMemorySeconds());
  Assert.assertEquals(75544,report.getVcoreSeconds());
}
