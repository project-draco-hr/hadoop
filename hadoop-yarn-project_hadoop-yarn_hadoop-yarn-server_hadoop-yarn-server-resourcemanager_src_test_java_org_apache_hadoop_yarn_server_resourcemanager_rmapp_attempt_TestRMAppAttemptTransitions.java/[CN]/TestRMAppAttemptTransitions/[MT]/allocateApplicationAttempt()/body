{
  scheduleApplicationAttempt();
  Container container=mock(Container.class);
  Resource resource=BuilderUtils.newResource(2048,1);
  when(container.getId()).thenReturn(BuilderUtils.newContainerId(applicationAttempt.getAppAttemptId(),1));
  when(container.getResource()).thenReturn(resource);
  Allocation allocation=mock(Allocation.class);
  when(allocation.getContainers()).thenReturn(Collections.singletonList(container));
  when(scheduler.allocate(any(ApplicationAttemptId.class),any(List.class),any(List.class),any(List.class),any(List.class))).thenReturn(allocation);
  applicationAttempt.handle(new RMAppAttemptContainerAllocatedEvent(applicationAttempt.getAppAttemptId()));
  assertEquals(RMAppAttemptState.ALLOCATED_SAVING,applicationAttempt.getAppAttemptState());
  applicationAttempt.handle(new RMAppAttemptNewSavedEvent(applicationAttempt.getAppAttemptId(),null));
  testAppAttemptAllocatedState(container);
  return container;
}
