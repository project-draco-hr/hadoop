{
  this.name=name;
  this.children=null;
  if (level < ParsedHost.numberOfDistances() - 1) {
    HashMap<String,HashSet<ParsedHost>> topologies=new HashMap<String,HashSet<ParsedHost>>();
    Iterator<ParsedHost> iter=hosts.iterator();
    while (iter.hasNext()) {
      ParsedHost host=iter.next();
      String thisComponent=host.nameComponent(level);
      HashSet<ParsedHost> thisSet=topologies.get(thisComponent);
      if (thisSet == null) {
        thisSet=new HashSet<ParsedHost>();
        topologies.put(thisComponent,thisSet);
      }
      thisSet.add(host);
    }
    children=new ArrayList<LoggedNetworkTopology>();
    for (    Map.Entry<String,HashSet<ParsedHost>> ent : topologies.entrySet()) {
      children.add(new LoggedNetworkTopology(ent.getValue(),ent.getKey(),level + 1));
    }
  }
 else {
  }
}
