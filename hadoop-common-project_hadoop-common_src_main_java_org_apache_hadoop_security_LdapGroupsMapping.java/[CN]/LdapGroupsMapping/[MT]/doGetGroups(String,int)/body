{
  DirContext c=getDirContext();
  NamingEnumeration<SearchResult> results=c.search(baseDN,userSearchFilter,new Object[]{user},SEARCH_CONTROLS);
  if (!results.hasMoreElements()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("doGetGroups(" + user + ") returned no groups because the "+ "user is not found.");
    }
    return new ArrayList<String>();
  }
  SearchResult result=results.nextElement();
  List<String> groups=null;
  if (useOneQuery) {
    try {
      Attribute groupDNAttr=result.getAttributes().get(memberOfAttr);
      if (groupDNAttr == null) {
        throw new NamingException("The user object does not have '" + memberOfAttr + "' attribute."+ "Returned user object: "+ result.toString());
      }
      groups=new ArrayList<String>();
      NamingEnumeration groupEnumeration=groupDNAttr.getAll();
      while (groupEnumeration.hasMore()) {
        String groupDN=groupEnumeration.next().toString();
        groups.add(getRelativeDistinguishedName(groupDN));
      }
    }
 catch (    NamingException e) {
      LOG.info("Failed to get groups from the first lookup. Initiating " + "the second LDAP query using the user's DN.",e);
    }
  }
  if (groups == null || groups.isEmpty() || goUpHierarchy > 0) {
    groups=lookupGroup(result,c,goUpHierarchy);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("doGetGroups(" + user + ") returned "+ groups);
  }
  return groups;
}
