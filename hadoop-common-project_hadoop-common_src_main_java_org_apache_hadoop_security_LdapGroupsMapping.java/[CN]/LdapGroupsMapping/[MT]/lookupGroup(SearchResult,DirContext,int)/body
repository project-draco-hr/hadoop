{
  List<String> groups=new ArrayList<String>();
  Set<String> groupDNs=new HashSet<String>();
  NamingEnumeration<SearchResult> groupResults=null;
  if (isPosix) {
    groupResults=lookupPosixGroup(result,c);
  }
 else {
    String userDn=result.getNameInNamespace();
    groupResults=c.search(baseDN,"(&" + groupSearchFilter + "("+ groupMemberAttr+ "={0}))",new Object[]{userDn},SEARCH_CONTROLS);
  }
  if (groupResults != null) {
    while (groupResults.hasMoreElements()) {
      SearchResult groupResult=groupResults.nextElement();
      getGroupNames(groupResult,groups,groupDNs,goUpHierarchy > 0);
    }
    if (goUpHierarchy > 0 && !isPosix) {
      Set<String> groupset=new HashSet<String>(groups);
      goUpGroupHierarchy(groupDNs,goUpHierarchy,groupset);
      groups=new ArrayList<String>(groupset);
    }
  }
  return groups;
}
