{
  AppsList list=getInstance(AppsList.class);
  StringBuilder init=tableInit().append(", 'aaData': appsTableData").append(", bDeferRender: true").append(", bProcessing: true").append("\n, aoColumnDefs: [\n").append("{'sType':'numeric', 'aTargets': [0]").append(", 'mRender': parseHadoopID }").append("\n, {'sType':'numeric', 'aTargets': [4, 5]").append(", 'mRender': renderHadoopDate }").append("\n, {'sType':'numeric', bSearchable:false, 'aTargets': [8]").append(", 'mRender': parseHadoopProgress }]").append(", aaSorting: [[0, 'desc']]");
  String rows=$("rowlimit");
  int rowLimit=rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);
  if (list.apps.size() < rowLimit) {
    list.rendering=Render.HTML;
    return init.append('}').toString();
  }
  if (list.apps.size() > MAX_FAST_ROWS) {
    tableInitProgress(init,list.apps.size() * 6);
  }
  list.rendering=Render.JS_ARRAY;
  return init.append(", aaData:appsData}").toString();
}
