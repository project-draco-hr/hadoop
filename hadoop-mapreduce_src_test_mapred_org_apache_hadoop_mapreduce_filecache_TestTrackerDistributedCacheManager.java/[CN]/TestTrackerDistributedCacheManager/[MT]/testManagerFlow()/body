{
  if (!canRun()) {
    return;
  }
  Configuration subConf=new Configuration(conf);
  String userName=getJobOwnerName();
  subConf.set(MRJobConfig.USER_NAME,userName);
  DistributedCache.addCacheFile(firstCacheFile.toUri(),subConf);
  DistributedCache.addFileToClassPath(secondCacheFile,subConf);
  ClientDistributedCacheManager.determineTimestamps(subConf);
  ClientDistributedCacheManager.determineCacheVisibilities(subConf);
  Path jobFile=new Path(TEST_ROOT_DIR,"job.xml");
  FileOutputStream os=new FileOutputStream(new File(jobFile.toString()));
  subConf.writeXml(os);
  os.close();
  TrackerDistributedCacheManager manager=new TrackerDistributedCacheManager(conf,taskController);
  TaskDistributedCacheManager handle=manager.newTaskDistributedCacheManager(subConf);
  assertNull(null,DistributedCache.getLocalCacheFiles(subConf));
  File workDir=new File(new Path(TEST_ROOT_DIR,"workdir").toString());
  handle.setup(localDirAllocator,workDir,TaskTracker.getPrivateDistributedCacheDir(userName),TaskTracker.getPublicDistributedCacheDir());
  Path[] localCacheFiles=DistributedCache.getLocalCacheFiles(subConf);
  assertNotNull(null,localCacheFiles);
  assertEquals(2,localCacheFiles.length);
  Path cachedFirstFile=localCacheFiles[0];
  Path cachedSecondFile=localCacheFiles[1];
  assertFileLengthEquals(firstCacheFile,cachedFirstFile);
  assertFalse("Paths should be different.",firstCacheFile.equals(cachedFirstFile));
  assertEquals(1,handle.getClassPaths().size());
  assertEquals(cachedSecondFile.toString(),handle.getClassPaths().get(0));
  checkFilePermissions(localCacheFiles);
  handle.release();
  manager.purgeCache();
  assertFalse(pathToFile(cachedFirstFile).exists());
}
