{
  if (!canRun()) {
    return;
  }
  String userName=getJobOwnerName();
  conf.set(MRJobConfig.USER_NAME,userName);
  TrackerDistributedCacheManager manager=new TrackerDistributedCacheManager(conf,taskController);
  FileSystem localfs=FileSystem.getLocal(conf);
  Path[] localCache=new Path[2];
  localCache[0]=manager.getLocalCache(firstCacheFile.toUri(),conf,TaskTracker.getPrivateDistributedCacheDir(userName),fs.getFileStatus(firstCacheFile),false,getFileStamp(firstCacheFile),new Path(TEST_ROOT_DIR),false,false);
  FsPermission myPermission=new FsPermission((short)0600);
  Path myFile=new Path(localCache[0].getParent(),"myfile.txt");
  if (FileSystem.create(localfs,myFile,myPermission) == null) {
    throw new IOException("Could not create " + myFile);
  }
  try {
    localCache[1]=manager.getLocalCache(secondCacheFile.toUri(),conf,TaskTracker.getPrivateDistributedCacheDir(userName),fs.getFileStatus(secondCacheFile),false,getFileStamp(secondCacheFile),new Path(TEST_ROOT_DIR),false,false);
    FileStatus stat=localfs.getFileStatus(myFile);
    assertTrue(stat.getPermission().equals(myPermission));
    checkFilePermissions(localCache);
  }
  finally {
    localfs.delete(myFile,false);
  }
}
