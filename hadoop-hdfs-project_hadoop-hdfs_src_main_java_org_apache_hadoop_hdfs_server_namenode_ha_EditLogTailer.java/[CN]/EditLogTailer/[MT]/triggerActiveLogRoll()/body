{
  LOG.info("Triggering log roll on remote NameNode");
  Future<Void> future=null;
  try {
    future=rollEditsRpcExecutor.submit(getNameNodeProxy());
    future.get(rollEditsTimeoutMs,TimeUnit.MILLISECONDS);
    lastRollTriggerTxId=lastLoadedTxnId;
  }
 catch (  ExecutionException e) {
    Throwable cause=e.getCause();
    if (cause instanceof RemoteException) {
      IOException ioe=((RemoteException)cause).unwrapRemoteException();
      if (ioe instanceof StandbyException) {
        LOG.info("Skipping log roll. Remote node is not in Active state: " + ioe.getMessage().split("\n")[0]);
        return;
      }
    }
    LOG.warn("Unable to trigger a roll of the active NN",e);
  }
catch (  TimeoutException e) {
    if (future != null) {
      future.cancel(true);
    }
    LOG.warn(String.format("Unable to finish rolling edits in %d ms",rollEditsTimeoutMs));
  }
catch (  InterruptedException e) {
    LOG.warn("Unable to trigger a roll of the active NN",e);
  }
}
