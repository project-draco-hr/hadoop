{
  assertTrue(fs.mkdirs(new Path(TEST_DIR1)));
  HATestUtil.waitForStandbyToCatchUp(nn0,nn1);
  HATestUtil.waitForCheckpoint(cluster,0,ImmutableList.of(0,3));
  causeFailureOnEditLogRead();
  assertTrue(fs.mkdirs(new Path(TEST_DIR2)));
  assertTrue(fs.mkdirs(new Path(TEST_DIR3)));
  try {
    HATestUtil.waitForStandbyToCatchUp(nn0,nn1);
    fail("Standby fully caught up, but should not have been able to");
  }
 catch (  HATestUtil.CouldNotCatchUpException e) {
    verify(mockRuntime,times(0)).exit(anyInt());
  }
  cluster.shutdownNameNode(0);
  Runtime mockRuntime=mock(Runtime.class);
  cluster.getNameNode(1).setRuntimeForTesting(mockRuntime);
  verify(mockRuntime,times(0)).exit(anyInt());
  try {
    cluster.transitionToActive(1);
    fail("Standby transitioned to active, but should not have been able to");
  }
 catch (  ServiceFailedException sfe) {
    Throwable sfeCause=sfe.getCause();
    LOG.info("got expected exception: " + sfeCause.toString(),sfeCause);
    assertTrue("Standby failed to catch up for some reason other than " + "failure to read logs",sfeCause.getCause().toString().contains(EditLogInputException.class.getName()));
  }
  verify(mockRuntime,times(1)).exit(anyInt());
}
