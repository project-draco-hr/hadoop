{
  conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD_KEY,1);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_KEY,1);
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_KEY,10);
  conf.setInt(DFSConfigKeys.DFS_HA_TAILEDITS_PERIOD_KEY,1);
  HAUtil.setAllowStandbyReads(conf,true);
  if (clusterType == TestType.SHARED_DIR_HA) {
    MiniDFSNNTopology topology=MiniQJMHACluster.createDefaultTopology(10000);
    cluster=new MiniDFSCluster.Builder(conf).nnTopology(topology).numDataNodes(0).checkExitOnShutdown(false).build();
  }
 else {
    Builder builder=new MiniQJMHACluster.Builder(conf);
    builder.getDfsBuilder().numDataNodes(0).checkExitOnShutdown(false);
    miniQjmHaCluster=builder.build();
    cluster=miniQjmHaCluster.getDfsCluster();
  }
  cluster.waitActive();
  nn0=cluster.getNameNode(0);
  nn1=cluster.getNameNode(1);
  cluster.transitionToActive(0);
  fs=HATestUtil.configureFailoverFs(cluster,conf);
}
