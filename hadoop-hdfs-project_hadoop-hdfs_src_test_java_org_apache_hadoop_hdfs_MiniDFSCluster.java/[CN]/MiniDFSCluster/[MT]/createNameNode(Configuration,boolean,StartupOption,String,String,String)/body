{
  if (format) {
    DFSTestUtil.formatNameNode(hdfsConf);
  }
  if (operation == StartupOption.UPGRADE) {
    operation.setClusterId(clusterId);
  }
  String[] args=createArgs(operation);
  NameNode nn=NameNode.createNameNode(args,hdfsConf);
  if (operation == StartupOption.RECOVER) {
    return;
  }
  hdfsConf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,nameserviceId,nnId),nn.getNameNodeAddressHostPortString());
  if (nn.getHttpAddress() != null) {
    hdfsConf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_HTTP_ADDRESS_KEY,nameserviceId,nnId),NetUtils.getHostPortString(nn.getHttpAddress()));
  }
  if (nn.getHttpsAddress() != null) {
    hdfsConf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_HTTPS_ADDRESS_KEY,nameserviceId,nnId),NetUtils.getHostPortString(nn.getHttpsAddress()));
  }
  copyKeys(hdfsConf,conf,nameserviceId,nnId);
  DFSUtil.setGenericConf(hdfsConf,nameserviceId,nnId,DFS_NAMENODE_HTTP_ADDRESS_KEY);
  NameNodeInfo info=new NameNodeInfo(nn,nameserviceId,nnId,operation,hdfsConf);
  namenodes.put(nameserviceId,info);
}
