{
  Preconditions.checkArgument(nnTopology.countNameNodes() > 0,"empty NN topology: no namenodes specified!");
  if (!federation && nnTopology.countNameNodes() == 1) {
    NNConf onlyNN=nnTopology.getOnlyNameNode();
    conf.set(FS_DEFAULT_NAME_KEY,"127.0.0.1:" + onlyNN.getIpcPort());
  }
  int nnCounter=0;
  List<String> nsIds=Lists.newArrayList();
  for (  MiniDFSNNTopology.NSConf nameservice : nnTopology.getNameservices()) {
    String nsId=nameservice.getId();
    nsIds.add(nameservice.getId());
    Preconditions.checkArgument(!federation || nsId != null,"if there is more than one NS, they must have names");
    List<String> nnIds=Lists.newArrayList();
    for (    NNConf nn : nameservice.getNNs()) {
      nnIds.add(nn.getNnId());
      initNameNodeAddress(conf,nameservice.getId(),nn);
    }
    if (nnIds.size() > 1) {
      conf.set(DFSUtil.addKeySuffixes(DFS_HA_NAMENODES_KEY,nameservice.getId()),Joiner.on(",").join(nnIds));
      if (manageNameDfsDirs) {
        URI sharedEditsUri=getSharedEditsDir(nnCounter,nnCounter + nnIds.size() - 1);
        conf.set(DFS_NAMENODE_SHARED_EDITS_DIR_KEY,sharedEditsUri.toString());
      }
    }
    int i=0;
    Collection<URI> prevNNDirs=null;
    int nnCounterForFormat=nnCounter;
    for (    NNConf nn : nameservice.getNNs()) {
      initNameNodeConf(conf,nsId,nn.getNnId(),manageNameDfsDirs,nnCounterForFormat);
      boolean formatThisOne=format;
      if (format && i++ > 0) {
        formatThisOne=false;
        assert(null != prevNNDirs);
        copyNameDirs(prevNNDirs,FSNamesystem.getNamespaceDirs(conf),conf);
      }
      nnCounterForFormat++;
      if (formatThisOne) {
        DFSTestUtil.formatNameNode(conf);
      }
      prevNNDirs=FSNamesystem.getNamespaceDirs(conf);
    }
    for (    NNConf nn : nameservice.getNNs()) {
      initNameNodeConf(conf,nsId,nn.getNnId(),manageNameDfsDirs,nnCounter);
      createNameNode(nnCounter++,conf,numDataNodes,false,operation,clusterId,nsId,nn.getNnId());
    }
  }
  if (federation) {
    conf.set(DFS_FEDERATION_NAMESERVICES,Joiner.on(",").join(nsIds));
  }
}
