{
  int cellSize=ecSchema.getChunkSize();
  int dataBlkNum=ecSchema.getNumDataUnits();
  int len=(int)(end - start + 1);
  int firstCellIdxInBG=(int)(start / cellSize);
  int lastCellIdxInBG=(int)(end / cellSize);
  int firstCellSize=Math.min(cellSize - (int)(start % cellSize),len);
  long firstCellOffsetInBlk=firstCellIdxInBG / dataBlkNum * cellSize + start % cellSize;
  int lastCellSize=lastCellIdxInBG == firstCellIdxInBG ? firstCellSize : (int)(end % cellSize) + 1;
  VerticalRange[] ranges=getRangesForInternalBlocks(ecSchema,firstCellIdxInBG,lastCellIdxInBG,firstCellSize,firstCellOffsetInBlk,lastCellSize);
  AlignedStripe[] stripes=mergeRangesForInternalBlocks(ecSchema,ranges);
  calcualteChunkPositionsInBuf(ecSchema,blockGroup,buf,offsetInBuf,firstCellIdxInBG,lastCellIdxInBG,firstCellSize,firstCellOffsetInBlk,lastCellSize,stripes);
  prepareAllZeroChunks(blockGroup,buf,stripes,cellSize,dataBlkNum);
  return stripes;
}
