{
  String setType="java.util.Set<" + key.getWrapperType() + "> ";
  String iterType="java.util.Iterator<" + key.getWrapperType() + "> ";
  cb.append("{\n");
  cb.append(setType + getId(Consts.RIO_PREFIX + "set1") + " = "+ fname+ ".keySet();\n");
  cb.append(setType + getId(Consts.RIO_PREFIX + "set2") + " = "+ other+ ".keySet();\n");
  cb.append(iterType + getId(Consts.RIO_PREFIX + "miter1") + " = "+ getId(Consts.RIO_PREFIX + "set1")+ ".iterator();\n");
  cb.append(iterType + getId(Consts.RIO_PREFIX + "miter2") + " = "+ getId(Consts.RIO_PREFIX + "set2")+ ".iterator();\n");
  cb.append("for(; " + getId(Consts.RIO_PREFIX + "miter1") + ".hasNext() && "+ getId(Consts.RIO_PREFIX + "miter2")+ ".hasNext();) {\n");
  cb.append(key.getType() + " " + getId(Consts.RIO_PREFIX + "k1")+ " = "+ getId(Consts.RIO_PREFIX + "miter1")+ ".next();\n");
  cb.append(key.getType() + " " + getId(Consts.RIO_PREFIX + "k2")+ " = "+ getId(Consts.RIO_PREFIX + "miter2")+ ".next();\n");
  key.genCompareTo(cb,getId(Consts.RIO_PREFIX + "k1"),getId(Consts.RIO_PREFIX + "k2"));
  cb.append("if (" + Consts.RIO_PREFIX + "ret != 0) { return "+ Consts.RIO_PREFIX+ "ret; }\n");
  cb.append("}\n");
  cb.append(Consts.RIO_PREFIX + "ret = (" + getId(Consts.RIO_PREFIX + "set1")+ ".size() - "+ getId(Consts.RIO_PREFIX + "set2")+ ".size());\n");
  cb.append("}\n");
}
