{
  final Configuration conf=new Configuration();
  conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,1024);
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
    cluster.waitActive();
    cluster.getFileSystem().setPermission(new Path("/"),new FsPermission((short)0777));
    final String uri=WebHdfsConstants.WEBHDFS_SCHEME + "://" + conf.get(DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);
    final UserGroupInformation current=UserGroupInformation.getCurrentUser();
    final UserGroupInformation ugi=UserGroupInformation.createUserForTesting(current.getShortUserName() + "x",new String[]{"user"});
    fileSystem=ugi.doAs(new PrivilegedExceptionAction<FileSystem>(){
      @Override public FileSystem run() throws Exception {
        return FileSystem.get(new URI(uri),conf);
      }
    }
);
    defaultWorkingDirectory=fileSystem.getWorkingDirectory();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
