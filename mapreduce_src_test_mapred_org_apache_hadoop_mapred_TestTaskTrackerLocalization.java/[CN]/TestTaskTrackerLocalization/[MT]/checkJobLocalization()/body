{
  for (  String dir : localDirs) {
    File localDir=new File(dir);
    File taskTrackerSubDir=new File(localDir,TaskTracker.SUBDIR);
    File userDir=new File(taskTrackerSubDir,task.getUser());
    File jobCache=new File(userDir,TaskTracker.JOBCACHE);
    File jobDir=new File(jobCache,jobId.toString());
    assertTrue("job-dir in " + jobCache + " isn't created!",jobDir.exists());
    checkFilePermissions(jobDir.getAbsolutePath(),"drwx------",task.getUser(),taskTrackerUGI.getGroupNames()[0]);
  }
  assertTrue("job.xml is not localized on this TaskTracker!!",lDirAlloc.getLocalPathToRead(TaskTracker.getLocalJobConfFile(task.getUser(),jobId.toString()),trackerFConf) != null);
  Path jarFileLocalized=lDirAlloc.getLocalPathToRead(TaskTracker.getJobJarFile(task.getUser(),jobId.toString()),trackerFConf);
  assertTrue("job.jar is not localized on this TaskTracker!!",jarFileLocalized != null);
  assertTrue("lib/lib1.jar is not unjarred on this TaskTracker!!",new File(jarFileLocalized.getParent() + Path.SEPARATOR + "lib/lib1.jar").exists());
  assertTrue("lib/lib2.jar is not unjarred on this TaskTracker!!",new File(jarFileLocalized.getParent() + Path.SEPARATOR + "lib/lib2.jar").exists());
  assertTrue("job-work dir is not created on this TaskTracker!!",lDirAlloc.getLocalPathToRead(TaskTracker.getJobWorkDir(task.getUser(),jobId.toString()),trackerFConf) != null);
  boolean jobLocalDirFlag=false, mapredJarFlag=false;
  String localizedJobLocalDir=localizedJobConf.get(TaskTracker.JOB_LOCAL_DIR);
  String localizedJobJar=localizedJobConf.getJar();
  for (  String localDir : localizedJobConf.getStrings(MRConfig.LOCAL_DIR)) {
    if (localizedJobLocalDir.equals(localDir + Path.SEPARATOR + TaskTracker.getJobWorkDir(task.getUser(),jobId.toString()))) {
      jobLocalDirFlag=true;
    }
    if (localizedJobJar.equals(localDir + Path.SEPARATOR + TaskTracker.getJobJarFile(task.getUser(),jobId.toString()))) {
      mapredJarFlag=true;
    }
  }
  assertTrue(TaskTracker.JOB_LOCAL_DIR + " is not set properly to the target users directory : " + localizedJobLocalDir,jobLocalDirFlag);
  assertTrue("mapreduce.job.jar is not set properly to the target users directory : " + localizedJobJar,mapredJarFlag);
  File jobLogDir=TaskLog.getJobDir(jobId);
  assertTrue("job log directory " + jobLogDir + " does not exist!",jobLogDir.exists());
  checkFilePermissions(jobLogDir.toString(),"drwx------",task.getUser(),taskTrackerUGI.getGroupNames()[0]);
  File jobACLsFile=new File(jobLogDir,TaskTracker.jobACLsFile);
  assertTrue("JobACLsFile is missing in the job userlog dir " + jobLogDir,jobACLsFile.exists());
  checkFilePermissions(jobACLsFile.getAbsolutePath(),"-rw-------",taskTrackerUGI.getShortUserName(),taskTrackerUGI.getGroupNames()[0]);
  validateJobACLsFileContent();
}
