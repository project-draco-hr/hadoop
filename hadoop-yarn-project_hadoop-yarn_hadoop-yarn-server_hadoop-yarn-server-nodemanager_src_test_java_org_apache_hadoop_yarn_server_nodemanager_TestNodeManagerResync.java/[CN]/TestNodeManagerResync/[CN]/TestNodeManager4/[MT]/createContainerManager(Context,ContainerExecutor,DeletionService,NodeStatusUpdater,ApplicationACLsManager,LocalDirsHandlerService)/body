{
  return new ContainerManagerImpl(context,exec,del,nodeStatusUpdater,metrics,dirsHandler){
    @Override public void setBlockNewContainerRequests(    boolean blockNewContainerRequests){
    }
    @Override protected void authorizeGetAndStopContainerRequest(    ContainerId containerId,    Container container,    boolean stopRequest,    NMTokenIdentifier identifier) throws YarnException {
    }
    @Override protected void authorizeUser(    UserGroupInformation remoteUgi,    NMTokenIdentifier nmTokenIdentifier){
    }
    @Override protected void authorizeStartAndResourceIncreaseRequest(    NMTokenIdentifier nmTokenIdentifier,    ContainerTokenIdentifier containerTokenIdentifier,    boolean startRequest) throws YarnException {
      try {
        Thread.sleep(2000);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
    @Override protected void updateNMTokenIdentifier(    NMTokenIdentifier nmTokenIdentifier) throws SecretManager.InvalidToken {
    }
    @Override public Map<String,ByteBuffer> getAuxServiceMetaData(){
      return new HashMap<>();
    }
    @Override protected NMTokenIdentifier selectNMTokenIdentifier(    UserGroupInformation remoteUgi){
      return new NMTokenIdentifier();
    }
  }
;
}
