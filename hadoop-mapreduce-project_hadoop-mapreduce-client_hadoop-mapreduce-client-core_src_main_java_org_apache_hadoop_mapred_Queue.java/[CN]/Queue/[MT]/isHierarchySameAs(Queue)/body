{
  if (newState == null) {
    return false;
  }
  if (!(name.equals(newState.getName()))) {
    LOG.info(" current name " + name + " not equal to "+ newState.getName());
    return false;
  }
  if (children == null || children.size() == 0) {
    if (newState.getChildren() != null && newState.getChildren().size() > 0) {
      LOG.info(newState + " has added children in refresh ");
      return false;
    }
  }
 else   if (children.size() > 0) {
    if (newState.getChildren() == null) {
      LOG.fatal("In the current state, queue " + getName() + " has "+ children.size()+ " but the new state has none!");
      return false;
    }
    int childrenSize=children.size();
    int newChildrenSize=newState.getChildren().size();
    if (childrenSize != newChildrenSize) {
      LOG.fatal("Number of children for queue " + newState.getName() + " in newState is "+ newChildrenSize+ " which is not equal to "+ childrenSize+ " in the current state.");
      return false;
    }
    Iterator<Queue> itr1=children.iterator();
    Iterator<Queue> itr2=newState.getChildren().iterator();
    while (itr1.hasNext()) {
      Queue q=itr1.next();
      Queue newq=itr2.next();
      if (!(q.isHierarchySameAs(newq))) {
        LOG.info(" Queue " + q.getName() + " not equal to "+ newq.getName());
        return false;
      }
    }
  }
  return true;
}
