{
  doAnswer(new Answer<Resource>(){
    @Override public Resource answer(    InvocationOnMock invocation) throws Throwable {
      try {
        throw new Exception();
      }
 catch (      Exception e) {
        LOG.info("FOOBAR q.assignContainers q=" + queue.getQueueName() + " alloc="+ allocation+ " node="+ node.getHostName());
      }
      final Resource allocatedResource=Resources.createResource(allocation);
      if (queue instanceof ParentQueue) {
        ((ParentQueue)queue).allocateResource(clusterResource,allocatedResource);
      }
 else {
        SchedulerApp app1=getMockApplication(0,"");
        ((LeafQueue)queue).allocateResource(clusterResource,app1,allocatedResource);
      }
      if (allocation > 0) {
        doReturn(Resources.none()).when(queue).assignContainers(eq(clusterResource),eq(node));
        Resource available=node.getAvailableResource();
        doReturn(Resources.subtractFrom(available,allocatedResource)).when(node).getAvailableResource();
      }
      return allocatedResource;
    }
  }
).when(queue).assignContainers(eq(clusterResource),eq(node));
}
