{
  InlineDispatcher rmDispatcher=new InlineDispatcher();
  rmContext=new RMContextImpl(rmDispatcher,null,null,null,null,null,null,null,null);
  rmContext.setSystemMetricsPublisher(mock(SystemMetricsPublisher.class));
  rmContext.setRMApplicationHistoryWriter(mock(RMApplicationHistoryWriter.class));
  rmContext.setRMTimelineCollectorManager(mock(RMTimelineCollectorManager.class));
  scheduler=mock(YarnScheduler.class);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      final SchedulerEvent event=(SchedulerEvent)(invocation.getArguments()[0]);
      eventType=event.getType();
      if (eventType == SchedulerEventType.NODE_UPDATE) {
      }
      return null;
    }
  }
).when(scheduler).handle(any(SchedulerEvent.class));
  rmDispatcher.register(SchedulerEventType.class,new TestSchedulerEventDispatcher());
  appId=ApplicationId.newInstance(System.currentTimeMillis(),1);
}
