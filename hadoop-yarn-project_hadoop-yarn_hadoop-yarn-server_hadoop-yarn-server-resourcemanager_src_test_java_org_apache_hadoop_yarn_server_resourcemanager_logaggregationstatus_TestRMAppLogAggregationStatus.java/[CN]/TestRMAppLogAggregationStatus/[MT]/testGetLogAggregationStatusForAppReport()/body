{
  YarnConfiguration conf=new YarnConfiguration();
  conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,false);
  RMAppImpl rmApp=(RMAppImpl)createRMApp(conf);
  Assert.assertEquals(LogAggregationStatus.DISABLED,rmApp.getLogAggregationStatusForAppReport());
  conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,true);
  rmApp=(RMAppImpl)createRMApp(conf);
  Assert.assertEquals(LogAggregationStatus.NOT_START,rmApp.getLogAggregationStatusForAppReport());
  NodeId nodeId1=NodeId.newInstance("localhost",1111);
  NodeId nodeId2=NodeId.newInstance("localhost",2222);
  NodeId nodeId3=NodeId.newInstance("localhost",3333);
  NodeId nodeId4=NodeId.newInstance("localhost",4444);
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  Assert.assertEquals(LogAggregationStatus.NOT_START,rmApp.getLogAggregationStatusForAppReport());
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  Assert.assertEquals(LogAggregationStatus.RUNNING,rmApp.getLogAggregationStatusForAppReport());
  rmApp.handle(new RMAppEvent(rmApp.getApplicationId(),RMAppEventType.KILL));
  Assert.assertTrue(RMAppImpl.isAppInFinalState(rmApp));
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.TIME_OUT,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  Assert.assertEquals(LogAggregationStatus.TIME_OUT,rmApp.getLogAggregationStatusForAppReport());
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  Assert.assertEquals(LogAggregationStatus.SUCCEEDED,rmApp.getLogAggregationStatusForAppReport());
  rmApp=(RMAppImpl)createRMApp(conf);
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  Assert.assertEquals(LogAggregationStatus.RUNNING,rmApp.getLogAggregationStatusForAppReport());
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING_WITH_FAILURE,""));
  Assert.assertEquals(LogAggregationStatus.RUNNING_WITH_FAILURE,rmApp.getLogAggregationStatusForAppReport());
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.NOT_START,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.RUNNING,""));
  Assert.assertEquals(LogAggregationStatus.RUNNING_WITH_FAILURE,rmApp.getLogAggregationStatusForAppReport());
  rmApp.handle(new RMAppEvent(rmApp.getApplicationId(),RMAppEventType.KILL));
  Assert.assertTrue(RMAppImpl.isAppInFinalState(rmApp));
  rmApp.aggregateLogReport(nodeId1,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.SUCCEEDED,""));
  rmApp.aggregateLogReport(nodeId2,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.TIME_OUT,""));
  rmApp.aggregateLogReport(nodeId3,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.FAILED,""));
  rmApp.aggregateLogReport(nodeId4,LogAggregationReport.newInstance(rmApp.getApplicationId(),LogAggregationStatus.FAILED,""));
  Assert.assertEquals(LogAggregationStatus.FAILED,rmApp.getLogAggregationStatusForAppReport());
}
