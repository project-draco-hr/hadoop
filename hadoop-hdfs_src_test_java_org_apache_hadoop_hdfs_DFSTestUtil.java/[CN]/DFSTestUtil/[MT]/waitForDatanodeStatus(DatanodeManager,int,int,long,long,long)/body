{
  final List<DatanodeDescriptor> live=new ArrayList<DatanodeDescriptor>();
  final List<DatanodeDescriptor> dead=new ArrayList<DatanodeDescriptor>();
  final int ATTEMPTS=10;
  int count=0;
  long currTotalCapacity=0;
  int volFails=0;
  do {
    Thread.sleep(timeout);
    live.clear();
    dead.clear();
    dm.fetchDatanodes(live,dead,false);
    currTotalCapacity=0;
    volFails=0;
    for (    final DatanodeDescriptor dd : live) {
      currTotalCapacity+=dd.getCapacity();
      volFails+=dd.getVolumeFailures();
    }
    count++;
  }
 while ((expectedLive != live.size() || expectedDead != dead.size() || expectedTotalCapacity != currTotalCapacity || expectedVolFails != volFails) && count < ATTEMPTS);
  if (count == ATTEMPTS) {
    throw new TimeoutException("Timed out waiting for capacity." + " Live = " + live.size() + " Expected = "+ expectedLive+ " Dead = "+ dead.size()+ " Expected = "+ expectedDead+ " Total capacity = "+ currTotalCapacity+ " Expected = "+ expectedTotalCapacity+ " Vol Fails = "+ volFails+ " Expected = "+ expectedVolFails);
  }
}
