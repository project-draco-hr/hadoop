def writeData(self, parsedUrl):
    options = parsedUrl[4]
    serviceInfo = self.server.service.getServiceInfo()
    users = serviceInfo.keys()
    users.sort()
    self.w('<html>')
    self.w('<body>')
    self.w('<head>')
    self.writeCSS()
    self.w('</head>')
    self.w('<font class="header2">HOD Service Registry Information</font>')
    if (serviceInfo == {}):
        self.w('<br><br><font class="header">&nbsp;&nbsp;No HOD clusters configured.</font>')
    elif (parsedUrl[2] == '/'):
        self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
        count = 0
        for user in users:
            self.writeUserData(user, options, serviceInfo, count)
            count = (count + 1)
    elif (parsedUrl[2][1:] in serviceInfo):
        self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
        self.writeUserData(parsedUrl[2][1:], options, serviceInfo, 0)
    elif re.match('^\\d+$', parsedUrl[2][1:]):
        jobInfo = self.getJobInfo(parsedUrl[2][1:], serviceInfo)
        if jobInfo.keys():
            self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
            for user in jobInfo.keys():
                self.writeUserData(user, options, jobInfo, 0)
        else:
            self.sendWrongPage(parsedUrl[2][1:])
            self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
            count = 0
            for user in users:
                self.writeUserData(user, options, serviceInfo, count)
                count = (count + 1)
    elif re.match('^\\w+$', parsedUrl[2][1:]):
        self.sendWrongPage(parsedUrl[2][1:])
        self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
        count = 0
        for user in users:
            self.writeUserData(user, options, serviceInfo, count)
            count = (count + 1)
    else:
        self.sendWrongPage(False)
        self.w('&nbsp;&nbsp;&nbsp;<table class="main">')
        count = 0
        for user in users:
            self.writeUserData(user, options, serviceInfo, count)
            count = (count + 1)
    self.w('</table>')
    self.w('</pre>')
    self.w('</body>')
    self.w('</html>')
