{
  JobsInfo allJobs=new JobsInfo();
  if (sBegin == null || sBegin < 0)   sBegin=0l;
  if (sEnd == null)   sEnd=Long.MAX_VALUE;
  if (fBegin == null || fBegin < 0)   fBegin=0l;
  if (fEnd == null)   fEnd=Long.MAX_VALUE;
  if (offset == null || offset < 0)   offset=0l;
  if (count == null)   count=Long.MAX_VALUE;
  if (offset > jobs.size()) {
    return allJobs;
  }
  long at=0;
  long end=offset + count - 1;
  if (end < 0) {
    end=Long.MAX_VALUE;
  }
  for (  Job job : jobs) {
    if (at > end) {
      break;
    }
    if (queue != null && !queue.isEmpty()) {
      if (!job.getQueueName().equals(queue)) {
        continue;
      }
    }
    if (user != null && !user.isEmpty()) {
      if (!job.getUserName().equals(user)) {
        continue;
      }
    }
    JobReport report=job.getReport();
    if (report.getStartTime() < sBegin || report.getStartTime() > sEnd) {
      continue;
    }
    if (report.getFinishTime() < fBegin || report.getFinishTime() > fEnd) {
      continue;
    }
    if (jobState != null && jobState != report.getJobState()) {
      continue;
    }
    at++;
    if ((at - 1) < offset) {
      continue;
    }
    JobInfo jobInfo=new JobInfo(job);
    allJobs.add(jobInfo);
  }
  return allJobs;
}
