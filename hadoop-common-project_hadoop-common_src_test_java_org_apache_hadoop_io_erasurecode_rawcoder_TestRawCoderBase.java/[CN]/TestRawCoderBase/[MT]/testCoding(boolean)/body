{
  this.usingDirectBuffer=usingDirectBuffer;
  ECChunk[] dataChunks=prepareDataChunksForEncoding();
  ECChunk[] parityChunks=prepareParityChunksForEncoding();
  RawErasureEncoder encoder=createEncoder();
  ECChunk[] clonedDataChunks=cloneChunksWithData(dataChunks);
  ECChunk[] toEraseDataChunks=copyDataChunksToErase(clonedDataChunks);
  try {
    encoder.encode(dataChunks,parityChunks);
  }
  finally {
    encoder.release();
  }
  eraseSomeDataBlocks(clonedDataChunks);
  ECChunk[] inputChunks=prepareInputChunksForDecoding(clonedDataChunks,parityChunks);
  ECChunk[] recoveredChunks=prepareOutputChunksForDecoding();
  RawErasureDecoder decoder=createDecoder();
  try {
    decoder.decode(inputChunks,getErasedIndexesForDecoding(),recoveredChunks);
  }
  finally {
    decoder.release();
  }
  compareAndVerify(toEraseDataChunks,recoveredChunks);
}
