{
  setChunkSize(chunkSize);
  ECChunk[] dataChunks=prepareDataChunksForEncoding();
  if (useBadInput) {
    corruptSomeChunk(dataChunks);
  }
  ECChunk[] parityChunks=prepareParityChunksForEncoding();
  ECChunk[] clonedDataChunks=cloneChunksWithData(dataChunks);
  encoder.encode(dataChunks,parityChunks);
  ECChunk[] backupChunks=backupAndEraseChunks(clonedDataChunks,parityChunks);
  ECChunk[] inputChunks=prepareInputChunksForDecoding(clonedDataChunks,parityChunks);
  ensureOnlyLeastRequiredChunks(inputChunks);
  ECChunk[] recoveredChunks=prepareOutputChunksForDecoding();
  if (useBadOutput) {
    corruptSomeChunk(recoveredChunks);
  }
  decoder.decode(inputChunks,getErasedIndexesForDecoding(),recoveredChunks);
  compareAndVerify(backupChunks,recoveredChunks);
}
