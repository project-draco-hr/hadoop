{
  rm=new MockRM(){
    @Override protected EventHandler<SchedulerEvent> createSchedulerEventDispatcher(){
      return new EventDispatcher<SchedulerEvent>(this.scheduler,this.scheduler.getClass().getName()){
        @Override public void handle(        SchedulerEvent event){
          scheduler.handle(event);
        }
      }
;
    }
  }
;
  rm.start();
  MockNM nm1=rm.registerNode("host1:1234",5120);
  MockNM nm2=rm.registerNode("host2:5678",5120);
  nm1.nodeHeartbeat(true);
  nm2.nodeHeartbeat(false);
  rm.drainEvents();
  checkUnealthyNMCount(rm,nm2,true,1);
  final int expectedNMs=ClusterMetrics.getMetrics().getNumActiveNMs();
  QueueMetrics metrics=rm.getResourceScheduler().getRootQueueMetrics();
  Assert.assertEquals(5120,metrics.getAvailableMB());
  nm1=rm.registerNode("host1:1234",5120);
  NodeHeartbeatResponse response=nm1.nodeHeartbeat(true);
  Assert.assertTrue(NodeAction.NORMAL.equals(response.getNodeAction()));
  rm.drainEvents();
  Assert.assertEquals(expectedNMs,ClusterMetrics.getMetrics().getNumActiveNMs());
  checkUnealthyNMCount(rm,nm2,true,1);
  nm2=rm.registerNode("host2:5678",5120);
  response=nm2.nodeHeartbeat(false);
  Assert.assertTrue(NodeAction.NORMAL.equals(response.getNodeAction()));
  rm.drainEvents();
  Assert.assertEquals(expectedNMs,ClusterMetrics.getMetrics().getNumActiveNMs());
  checkUnealthyNMCount(rm,nm2,true,1);
  nm2=rm.registerNode("host2:5678",5120);
  response=nm2.nodeHeartbeat(true);
  response=nm2.nodeHeartbeat(true);
  rm.drainEvents();
  Assert.assertEquals(5120 + 5120,metrics.getAvailableMB());
  nm1=rm.registerNode("host2:5678",10240);
  response=nm1.nodeHeartbeat(true);
  rm.drainEvents();
  Assert.assertTrue(NodeAction.NORMAL.equals(response.getNodeAction()));
  Assert.assertEquals(5120 + 10240,metrics.getAvailableMB());
  List<ApplicationId> runningApps=new ArrayList<ApplicationId>();
  runningApps.add(ApplicationId.newInstance(1,0));
  nm1=rm.registerNode("host2:5678",15360,2,runningApps);
  response=nm1.nodeHeartbeat(true);
  rm.drainEvents();
  Assert.assertTrue(NodeAction.NORMAL.equals(response.getNodeAction()));
  Assert.assertEquals(5120 + 15360,metrics.getAvailableMB());
  nm1=new MockNM("host1:1234",5120,rm.getResourceTrackerService());
  nm1.setHttpPort(3);
  nm1.registerNode();
  response=nm1.nodeHeartbeat(true);
  response=nm1.nodeHeartbeat(true);
  rm.drainEvents();
  RMNode rmNode=rm.getRMContext().getRMNodes().get(nm1.getNodeId());
  Assert.assertEquals(3,rmNode.getHttpPort());
  Assert.assertEquals(5120,rmNode.getTotalCapability().getMemory());
  Assert.assertEquals(5120 + 15360,metrics.getAvailableMB());
}
