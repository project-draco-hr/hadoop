{
  Configuration conf=new Configuration();
  conf.set(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,"2048");
  conf.set(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,"4");
  rm=new MockRM(conf);
  rm.start();
  ResourceTrackerService resourceTrackerService=rm.getResourceTrackerService();
  RegisterNodeManagerRequest req=Records.newRecord(RegisterNodeManagerRequest.class);
  NodeId nodeId=BuilderUtils.newNodeId("host",1234);
  req.setNodeId(nodeId);
  Resource capability=BuilderUtils.newResource(1024,1);
  req.setResource(capability);
  RegisterNodeManagerResponse response1=resourceTrackerService.registerNodeManager(req);
  Assert.assertEquals(NodeAction.SHUTDOWN,response1.getNodeAction());
  capability.setMemorySize(2048);
  capability.setVirtualCores(1);
  req.setResource(capability);
  RegisterNodeManagerResponse response2=resourceTrackerService.registerNodeManager(req);
  Assert.assertEquals(NodeAction.SHUTDOWN,response2.getNodeAction());
  capability.setMemorySize(1024);
  capability.setVirtualCores(4);
  req.setResource(capability);
  RegisterNodeManagerResponse response3=resourceTrackerService.registerNodeManager(req);
  Assert.assertEquals(NodeAction.SHUTDOWN,response3.getNodeAction());
  capability.setMemorySize(2048);
  capability.setVirtualCores(4);
  req.setResource(capability);
  RegisterNodeManagerResponse response4=resourceTrackerService.registerNodeManager(req);
  Assert.assertEquals(NodeAction.NORMAL,response4.getNodeAction());
}
