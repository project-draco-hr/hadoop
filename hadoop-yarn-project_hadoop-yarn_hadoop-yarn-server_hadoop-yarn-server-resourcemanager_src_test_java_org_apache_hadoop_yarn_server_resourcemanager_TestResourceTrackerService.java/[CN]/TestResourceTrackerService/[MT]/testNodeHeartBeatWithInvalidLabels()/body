{
  writeToHostsFile("host2");
  Configuration conf=new Configuration();
  conf.set(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,hostFile.getAbsolutePath());
  conf.set(YarnConfiguration.NODELABEL_CONFIGURATION_TYPE,YarnConfiguration.DISTRIBUTED_NODELABEL_CONFIGURATION_TYPE);
  final RMNodeLabelsManager nodeLabelsMgr=new NullRMNodeLabelsManager();
  rm=new MockRM(conf){
    @Override protected RMNodeLabelsManager createNodeLabelManager(){
      return nodeLabelsMgr;
    }
  }
;
  rm.start();
  try {
    nodeLabelsMgr.addToCluserNodeLabelsWithDefaultExclusivity(toSet("A","B","C"));
  }
 catch (  IOException e) {
    Assert.fail("Caught Exception while intializing");
    e.printStackTrace();
  }
  ResourceTrackerService resourceTrackerService=rm.getResourceTrackerService();
  RegisterNodeManagerRequest registerReq=Records.newRecord(RegisterNodeManagerRequest.class);
  NodeId nodeId=NodeId.newInstance("host2",1234);
  Resource capability=BuilderUtils.newResource(1024,1);
  registerReq.setResource(capability);
  registerReq.setNodeId(nodeId);
  registerReq.setHttpPort(1234);
  registerReq.setNMVersion(YarnVersionInfo.getVersion());
  registerReq.setNodeLabels(toSet("A"));
  RegisterNodeManagerResponse registerResponse=resourceTrackerService.registerNodeManager(registerReq);
  NodeHeartbeatRequest heartbeatReq=Records.newRecord(NodeHeartbeatRequest.class);
  heartbeatReq.setNodeLabels(toSet("B","#C"));
  heartbeatReq.setNodeStatus(getNodeStatusObject(nodeId));
  heartbeatReq.setLastKnownNMTokenMasterKey(registerResponse.getNMTokenMasterKey());
  heartbeatReq.setLastKnownContainerTokenMasterKey(registerResponse.getContainerTokenMasterKey());
  NodeHeartbeatResponse nodeHeartbeatResponse=resourceTrackerService.nodeHeartbeat(heartbeatReq);
  Assert.assertEquals("Response should be NORMAL when RM heartbeat labels" + " are rejected",NodeAction.NORMAL,nodeHeartbeatResponse.getNodeAction());
  Assert.assertFalse(nodeHeartbeatResponse.getAreNodeLabelsAcceptedByRM());
  Assert.assertNotNull(nodeHeartbeatResponse.getDiagnosticsMessage());
  rm.stop();
}
