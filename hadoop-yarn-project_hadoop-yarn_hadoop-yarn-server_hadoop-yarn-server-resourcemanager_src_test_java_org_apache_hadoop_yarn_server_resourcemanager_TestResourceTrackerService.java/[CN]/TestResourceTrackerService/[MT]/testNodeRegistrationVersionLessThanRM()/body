{
  writeToHostsFile("host2");
  Configuration conf=new Configuration();
  conf.set(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,hostFile.getAbsolutePath());
  conf.set(YarnConfiguration.RM_NODEMANAGER_MINIMUM_VERSION,"EqualToRM");
  rm=new MockRM(conf);
  rm.start();
  String nmVersion="1.9.9";
  ResourceTrackerService resourceTrackerService=rm.getResourceTrackerService();
  RegisterNodeManagerRequest req=Records.newRecord(RegisterNodeManagerRequest.class);
  NodeId nodeId=NodeId.newInstance("host2",1234);
  Resource capability=BuilderUtils.newResource(1024,1);
  req.setResource(capability);
  req.setNodeId(nodeId);
  req.setHttpPort(1234);
  req.setNMVersion(nmVersion);
  RegisterNodeManagerResponse response=resourceTrackerService.registerNodeManager(req);
  Assert.assertEquals(NodeAction.SHUTDOWN,response.getNodeAction());
  Assert.assertTrue("Diagnostic message did not contain: 'Disallowed NodeManager " + "Version " + nmVersion + ", is less than the minimum version'",response.getDiagnosticsMessage().contains("Disallowed NodeManager Version " + nmVersion + ", is less than the minimum version "));
}
