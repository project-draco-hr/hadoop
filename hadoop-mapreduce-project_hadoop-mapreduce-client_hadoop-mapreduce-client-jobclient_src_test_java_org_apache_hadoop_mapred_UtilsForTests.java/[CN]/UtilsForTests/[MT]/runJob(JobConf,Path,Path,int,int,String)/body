{
  FileSystem fs=FileSystem.get(conf);
  if (fs.exists(outDir)) {
    fs.delete(outDir,true);
  }
  if (!fs.exists(inDir)) {
    fs.mkdirs(inDir);
  }
  for (int i=0; i < numMaps; ++i) {
    DataOutputStream file=fs.create(new Path(inDir,"part-" + i));
    file.writeBytes(input);
    file.close();
  }
  conf.setInputFormat(TextInputFormat.class);
  conf.setOutputKeyClass(LongWritable.class);
  conf.setOutputValueClass(Text.class);
  FileInputFormat.setInputPaths(conf,inDir);
  FileOutputFormat.setOutputPath(conf,outDir);
  conf.setNumMapTasks(numMaps);
  conf.setNumReduceTasks(numReds);
  JobClient jobClient=new JobClient(conf);
  RunningJob job=jobClient.submitJob(conf);
  return job;
}
