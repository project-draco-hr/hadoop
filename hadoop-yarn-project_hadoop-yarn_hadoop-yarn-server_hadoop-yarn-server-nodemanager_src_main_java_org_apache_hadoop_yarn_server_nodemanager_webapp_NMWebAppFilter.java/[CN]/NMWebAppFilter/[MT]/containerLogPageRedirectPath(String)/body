{
  String redirectPath=null;
  if (!uri.contains("/ws/v1/node") && uri.contains("/containerlogs")) {
    String[] parts=uri.split("/");
    String containerIdStr=parts[3];
    String appOwner=parts[4];
    if (containerIdStr != null && !containerIdStr.isEmpty()) {
      ContainerId containerId=null;
      try {
        containerId=ContainerId.fromString(containerIdStr);
      }
 catch (      IllegalArgumentException ex) {
        return redirectPath;
      }
      ApplicationId appId=containerId.getApplicationAttemptId().getApplicationId();
      Application app=nmContext.getApplications().get(appId);
      Configuration nmConf=nmContext.getLocalDirsHandler().getConfig();
      if (app == null && nmConf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {
        String logServerUrl=nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);
        if (logServerUrl != null && !logServerUrl.isEmpty()) {
          StringBuilder sb=new StringBuilder();
          sb.append(logServerUrl);
          sb.append("/");
          sb.append(nmContext.getNodeId().toString());
          sb.append("/");
          sb.append(containerIdStr);
          sb.append("/");
          sb.append(containerIdStr);
          sb.append("/");
          sb.append(appOwner);
          redirectPath=sb.toString();
        }
 else {
          injector.getInstance(RequestContext.class).set(ContainerLogsPage.REDIRECT_URL,"false");
        }
      }
    }
  }
  return redirectPath;
}
