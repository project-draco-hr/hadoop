{
  List<ExtendedBlockProto> blocksProtos=new ArrayList<ExtendedBlockProto>(blocks.size());
  List<BlockTokenIdentifierProto> tokensProtos=new ArrayList<BlockTokenIdentifierProto>(tokens.size());
  for (  ExtendedBlock b : blocks) {
    blocksProtos.add(PBHelper.convert(b));
  }
  for (  Token<BlockTokenIdentifier> t : tokens) {
    tokensProtos.add(PBHelper.convert(t));
  }
  GetHdfsBlockLocationsRequestProto request=GetHdfsBlockLocationsRequestProto.newBuilder().addAllBlocks(blocksProtos).addAllTokens(tokensProtos).build();
  GetHdfsBlockLocationsResponseProto response;
  try {
    response=rpcProxy.getHdfsBlockLocations(NULL_CONTROLLER,request);
  }
 catch (  ServiceException e) {
    throw ProtobufHelper.getRemoteException(e);
  }
  List<ByteString> volumeIdsByteStrings=response.getVolumeIdsList();
  List<byte[]> volumeIds=new ArrayList<byte[]>(volumeIdsByteStrings.size());
  for (  ByteString bs : volumeIdsByteStrings) {
    volumeIds.add(bs.toByteArray());
  }
  List<Integer> volumeIndexes=response.getVolumeIndexesList();
  return new HdfsBlocksMetadata(blocks.toArray(new ExtendedBlock[]{}),volumeIds,volumeIndexes);
}
