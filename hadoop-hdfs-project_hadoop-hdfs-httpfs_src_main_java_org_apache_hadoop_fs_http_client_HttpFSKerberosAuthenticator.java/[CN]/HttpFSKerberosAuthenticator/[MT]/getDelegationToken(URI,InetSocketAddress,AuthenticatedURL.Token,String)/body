{
  DelegationTokenOperation op=DelegationTokenOperation.GETDELEGATIONTOKEN;
  Map<String,String> params=new HashMap<String,String>();
  params.put(OP_PARAM,op.toString());
  params.put(RENEWER_PARAM,renewer);
  URL url=HttpFSUtils.createHttpURL(new Path(fsURI),params);
  AuthenticatedURL aUrl=new AuthenticatedURL(new HttpFSKerberosAuthenticator());
  try {
    HttpURLConnection conn=aUrl.openConnection(url,token);
    conn.setRequestMethod(op.getHttpMethod());
    HttpFSUtils.validateResponse(conn,HttpURLConnection.HTTP_OK);
    JSONObject json=(JSONObject)((JSONObject)HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);
    String tokenStr=(String)json.get(DELEGATION_TOKEN_URL_STRING_JSON);
    Token<AbstractDelegationTokenIdentifier> dToken=new Token<AbstractDelegationTokenIdentifier>();
    dToken.decodeFromUrlString(tokenStr);
    SecurityUtil.setTokenService(dToken,httpFSAddr);
    return dToken;
  }
 catch (  AuthenticationException ex) {
    throw new IOException(ex.toString(),ex);
  }
}
