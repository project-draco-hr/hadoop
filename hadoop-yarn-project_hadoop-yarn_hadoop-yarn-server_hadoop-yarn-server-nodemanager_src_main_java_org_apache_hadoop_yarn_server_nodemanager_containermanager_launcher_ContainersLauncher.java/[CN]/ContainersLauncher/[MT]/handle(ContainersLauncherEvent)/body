{
  Container container=event.getContainer();
  ContainerId containerId=container.getContainerId();
switch (event.getType()) {
case LAUNCH_CONTAINER:
    Application app=context.getApplications().get(containerId.getApplicationAttemptId().getApplicationId());
  ContainerLaunch launch=new ContainerLaunch(context,getConfig(),dispatcher,exec,app,event.getContainer(),dirsHandler,containerManager);
containerLauncher.submit(launch);
running.put(containerId,launch);
break;
case RELAUNCH_CONTAINER:
app=context.getApplications().get(containerId.getApplicationAttemptId().getApplicationId());
ContainerRelaunch relaunch=new ContainerRelaunch(context,getConfig(),dispatcher,exec,app,event.getContainer(),dirsHandler,containerManager);
containerLauncher.submit(relaunch);
running.put(containerId,relaunch);
break;
case RECOVER_CONTAINER:
app=context.getApplications().get(containerId.getApplicationAttemptId().getApplicationId());
launch=new RecoveredContainerLaunch(context,getConfig(),dispatcher,exec,app,event.getContainer(),dirsHandler,containerManager);
containerLauncher.submit(launch);
running.put(containerId,launch);
break;
case CLEANUP_CONTAINER:
ContainerLaunch launcher=running.remove(containerId);
if (launcher == null) {
return;
}
try {
launcher.cleanupContainer();
}
 catch (IOException e) {
LOG.warn("Got exception while cleaning container " + containerId + ". Ignoring.");
}
break;
case SIGNAL_CONTAINER:
SignalContainersLauncherEvent signalEvent=(SignalContainersLauncherEvent)event;
ContainerLaunch runningContainer=running.get(containerId);
if (runningContainer == null) {
LOG.info("Container " + containerId + " not running, nothing to signal.");
return;
}
try {
runningContainer.signalContainer(signalEvent.getCommand());
}
 catch (IOException e) {
LOG.warn("Got exception while signaling container " + containerId + " with command "+ signalEvent.getCommand());
}
break;
}
}
