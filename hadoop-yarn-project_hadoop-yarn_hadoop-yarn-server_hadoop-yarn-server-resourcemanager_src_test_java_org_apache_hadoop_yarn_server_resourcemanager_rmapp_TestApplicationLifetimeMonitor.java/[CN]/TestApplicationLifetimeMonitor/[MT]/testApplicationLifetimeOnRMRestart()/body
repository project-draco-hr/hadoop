{
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  memStore.init(conf);
  MockRM rm1=new MockRM(conf,memStore);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",8192,rm1.getResourceTrackerService());
  nm1.registerNode();
  nm1.nodeHeartbeat(true);
  long appLifetime=60L;
  Map<ApplicationTimeoutType,Long> timeouts=new HashMap<ApplicationTimeoutType,Long>();
  timeouts.put(ApplicationTimeoutType.LIFETIME,appLifetime);
  RMApp app1=rm1.submitApp(200,Priority.newInstance(0),timeouts);
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  MockRM rm2=new MockRM(conf,memStore);
  rm2.start();
  nm1.setResourceTrackerService(rm2.getResourceTrackerService());
  RMApp recoveredApp1=rm2.getRMContext().getRMApps().get(app1.getApplicationId());
  NMContainerStatus amContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),1,ContainerState.RUNNING);
  NMContainerStatus runningContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),2,ContainerState.RUNNING);
  nm1.registerNode(Arrays.asList(amContainer,runningContainer),null);
  TestWorkPreservingRMRestart.waitForNumContainersToRecover(2,rm2,am1.getApplicationAttemptId());
  Set<ContainerId> launchedContainers=((RMNodeImpl)rm2.getRMContext().getRMNodes().get(nm1.getNodeId())).getLaunchedContainers();
  assertTrue(launchedContainers.contains(amContainer.getContainerId()));
  assertTrue(launchedContainers.contains(runningContainer.getContainerId()));
  rm2.waitForState(nm1,amContainer.getContainerId(),RMContainerState.RUNNING);
  rm2.waitForState(nm1,runningContainer.getContainerId(),RMContainerState.RUNNING);
  rm2.waitForState(recoveredApp1.getApplicationId(),RMAppState.ACCEPTED);
  am1.setAMRMProtocol(rm2.getApplicationMasterService(),rm2.getRMContext());
  am1.registerAppAttempt();
  rm2.waitForState(recoveredApp1.getApplicationId(),RMAppState.RUNNING);
  rm2.waitForState(recoveredApp1.getApplicationId(),RMAppState.KILLED);
  Assert.assertTrue("Applicaiton killed before lifetime value",(System.currentTimeMillis() - recoveredApp1.getSubmitTime()) > appLifetime);
}
