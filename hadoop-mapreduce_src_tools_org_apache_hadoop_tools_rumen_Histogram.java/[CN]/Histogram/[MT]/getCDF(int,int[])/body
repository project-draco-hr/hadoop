{
  if (totalCount == 0) {
    return null;
  }
  long[] result=new long[buckets.length + 2];
  result[0]=content.firstEntry().getKey();
  result[buckets.length + 1]=content.lastEntry().getKey();
  Iterator<Map.Entry<Long,Long>> iter=content.entrySet().iterator();
  long cumulativeCount=0;
  int bucketCursor=0;
  while (iter.hasNext()) {
    long targetCumulativeCount=buckets[bucketCursor] * totalCount / scale;
    Map.Entry<Long,Long> elt=iter.next();
    cumulativeCount+=elt.getValue();
    while (cumulativeCount >= targetCumulativeCount) {
      result[bucketCursor + 1]=elt.getKey();
      ++bucketCursor;
      if (bucketCursor < buckets.length) {
        targetCumulativeCount=buckets[bucketCursor] * totalCount / scale;
      }
 else {
        break;
      }
    }
    if (bucketCursor == buckets.length) {
      break;
    }
  }
  return result;
}
