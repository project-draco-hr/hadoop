{
  File absLogDir=new File("target",TestNMWebServer.class.getSimpleName() + "LogDir").getAbsoluteFile();
  String logdirwithFile=absLogDir.toURI().toString();
  Configuration conf=new Configuration();
  conf.set(YarnConfiguration.NM_LOG_DIRS,logdirwithFile);
  conf.setFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE,0.0f);
  LocalDirsHandlerService dirsHandler=new LocalDirsHandlerService();
  dirsHandler.init(conf);
  NMContext nmContext=new NodeManager.NMContext(null,null,dirsHandler,new ApplicationACLsManager(conf),new NMNullStateStoreService(),false);
  String user="nobody";
  long clusterTimeStamp=1234;
  ApplicationId appId=BuilderUtils.newApplicationId(clusterTimeStamp,1);
  Application app=mock(Application.class);
  when(app.getUser()).thenReturn(user);
  when(app.getAppId()).thenReturn(appId);
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(appId,1);
  ContainerId containerId=BuilderUtils.newContainerId(appAttemptId,1);
  nmContext.getApplications().put(appId,app);
  MockContainer container=new MockContainer(appAttemptId,new AsyncDispatcher(),conf,user,appId,1);
  container.setState(ContainerState.RUNNING);
  nmContext.getContainers().put(containerId,container);
  File containerLogDir=new File(absLogDir,ContainerLaunch.getRelativeContainerLogDir(appId.toString(),containerId.toString()));
  containerLogDir.mkdirs();
  String fileName="fileName";
  File containerLogFile=new File(containerLogDir,fileName);
  containerLogFile.createNewFile();
  File file=ContainerLogsUtils.getContainerLogFile(containerId,fileName,user,nmContext);
  Assert.assertEquals(containerLogFile.toURI().toString(),file.toURI().toString());
  FileUtil.fullyDelete(absLogDir);
}
