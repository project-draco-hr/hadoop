{
  assertEquals(EntityGroupPlugInForTest.class.getName(),store.getConfig().get(YarnConfiguration.TIMELINE_SERVICE_ENTITY_GROUP_PLUGIN_CLASSES));
  List<TimelineEntityGroupPlugin> currPlugins=store.getPlugins();
  for (  TimelineEntityGroupPlugin plugin : currPlugins) {
    ClassLoader pluginClassLoader=plugin.getClass().getClassLoader();
    assertTrue("Should set up ApplicationClassLoader",pluginClassLoader instanceof ApplicationClassLoader);
    URL[] paths=((URLClassLoader)pluginClassLoader).getURLs();
    boolean foundJAR=false;
    for (    URL path : paths) {
      if (path.toString().contains(testJar.getAbsolutePath())) {
        foundJAR=true;
      }
    }
    assertTrue("Not found path " + testJar.getAbsolutePath() + " for plugin "+ plugin.getClass().getName(),foundJAR);
  }
  EntityGroupFSTimelineStore.AppLogs appLogs=store.new AppLogs(mainTestAppId,mainTestAppDirPath,AppState.COMPLETED);
  EntityCacheItem cacheItem=new EntityCacheItem(EntityGroupPlugInForTest.getStandardTimelineGroupId(mainTestAppId),config);
  cacheItem.setAppLogs(appLogs);
  store.setCachedLogs(EntityGroupPlugInForTest.getStandardTimelineGroupId(mainTestAppId),cacheItem);
  MutableCounterLong detailLogEntityRead=store.metrics.getGetEntityToDetailOps();
  MutableStat cacheRefresh=store.metrics.getCacheRefresh();
  long numEntityReadBefore=detailLogEntityRead.value();
  long cacheRefreshBefore=cacheRefresh.lastStat().numSamples();
  TimelineDataManager tdm=PluginStoreTestUtils.getTdmWithStore(config,store);
  TimelineEntity entity3=tdm.getEntity("type_3",mainTestAppId.toString(),EnumSet.allOf(TimelineReader.Field.class),UserGroupInformation.getLoginUser());
  assertNotNull(entity3);
  assertEquals(entityNew.getStartTime(),entity3.getStartTime());
  NameValuePair primaryFilter=new NameValuePair(EntityGroupPlugInForTest.APP_ID_FILTER_NAME,mainTestAppId.toString());
  TimelineEntities entities=tdm.getEntities("type_3",primaryFilter,null,null,null,null,null,null,EnumSet.allOf(TimelineReader.Field.class),UserGroupInformation.getLoginUser());
  assertEquals(1,entities.getEntities().size());
  for (  TimelineEntity entity : entities.getEntities()) {
    assertEquals(entityNew.getStartTime(),entity.getStartTime());
  }
  assertEquals(numEntityReadBefore + 2L,detailLogEntityRead.value());
  assertEquals(cacheRefreshBefore + 1L,cacheRefresh.lastStat().numSamples());
}
