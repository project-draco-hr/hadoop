{
synchronized (call) {
    while (!call.done) {
      try {
        final long waitTimeout=AsyncGet.Util.asyncGetTimeout2WaitTimeout(timeout,unit);
        call.wait(waitTimeout);
        if (waitTimeout > 0 && !call.done) {
          return null;
        }
      }
 catch (      InterruptedException ie) {
        Thread.currentThread().interrupt();
        throw new InterruptedIOException("Call interrupted");
      }
    }
    if (call.error != null) {
      if (call.error instanceof RemoteException) {
        call.error.fillInStackTrace();
        throw call.error;
      }
 else {
        InetSocketAddress address=connection.getRemoteAddress();
        throw NetUtils.wrapException(address.getHostName(),address.getPort(),NetUtils.getHostname(),0,call.error);
      }
    }
 else {
      return call.getRpcResponse();
    }
  }
}
