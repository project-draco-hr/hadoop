{
  if (shouldCloseConnection.get()) {
    return;
  }
  DataOutputBuffer d=null;
  try {
synchronized (this.out) {
      if (LOG.isDebugEnabled())       LOG.debug(getName() + " sending #" + call.id);
      d=new DataOutputBuffer();
      RpcPayloadHeaderProto header=ProtoUtil.makeRpcPayloadHeader(call.rpcKind,RpcPayloadOperationProto.RPC_FINAL_PAYLOAD,call.id);
      header.writeDelimitedTo(d);
      call.rpcRequest.write(d);
      byte[] data=d.getData();
      int totalLength=d.getLength();
      out.writeInt(totalLength);
      out.write(data,0,totalLength);
      out.flush();
    }
  }
 catch (  IOException e) {
    markClosed(e);
  }
 finally {
    IOUtils.closeStream(d);
  }
}
