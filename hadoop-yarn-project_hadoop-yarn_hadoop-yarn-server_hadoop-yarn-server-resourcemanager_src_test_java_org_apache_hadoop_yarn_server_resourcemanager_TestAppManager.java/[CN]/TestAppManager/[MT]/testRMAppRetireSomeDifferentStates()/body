{
  long now=System.currentTimeMillis();
  RMContext rmContext=mockRMContext(10,now - 20000);
  Configuration conf=new YarnConfiguration();
  conf.setInt(YarnConfiguration.RM_STATE_STORE_MAX_COMPLETED_APPLICATIONS,2);
  conf.setInt(YarnConfiguration.RM_MAX_COMPLETED_APPLICATIONS,2);
  TestRMAppManager appMonitor=new TestRMAppManager(rmContext,conf);
  rmContext.getRMApps().clear();
  Assert.assertEquals("map isn't empty",0,rmContext.getRMApps().size());
  RMApp app=new MockRMApp(0,now - 20000,RMAppState.KILLED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(1,now - 200000,RMAppState.FAILED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(2,now - 30000,RMAppState.FINISHED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(3,now - 20000,RMAppState.RUNNING);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(4,now - 20000,RMAppState.NEW);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(5,now - 10001,RMAppState.KILLED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(6,now - 30000,RMAppState.ACCEPTED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(7,now - 20000,RMAppState.SUBMITTED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(8,now - 10001,RMAppState.FAILED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  app=new MockRMApp(9,now - 20000,RMAppState.FAILED);
  rmContext.getRMApps().put(app.getApplicationId(),app);
  Assert.assertEquals("Number of apps incorrect before",10,rmContext.getRMApps().size());
  addToCompletedApps(appMonitor,rmContext);
  appMonitor.checkAppNumCompletedLimit();
  Assert.assertEquals("Number of apps incorrect after # completed check",6,rmContext.getRMApps().size());
  Assert.assertEquals("Number of completed apps incorrect after check",2,appMonitor.getCompletedAppsListSize());
  verify(rmContext.getStateStore(),times(4)).removeApplication(isA(RMApp.class));
}
