{
  YarnConfiguration conf=new YarnConfiguration();
  conf.set(YarnConfiguration.RM_SCHEDULER,CapacityScheduler.class.getCanonicalName());
  conf.set("yarn.scheduler.capacity.root.acl_submit_applications"," ");
  conf.set("yarn.scheduler.capacity.root.acl_administer_queue"," ");
  conf.set("yarn.scheduler.capacity.root.default.acl_submit_applications"," ");
  conf.set("yarn.scheduler.capacity.root.default.acl_administer_queue"," ");
  conf.set(YarnConfiguration.YARN_ACL_ENABLE,"true");
  MockRM mockRM=new MockRM(conf);
  ClientRMService rmService=mockRM.getClientRMService();
  SubmitApplicationRequest req=Records.newRecord(SubmitApplicationRequest.class);
  ApplicationSubmissionContext sub=Records.newRecord(ApplicationSubmissionContext.class);
  sub.setApplicationId(appId);
  ResourceRequest resReg=ResourceRequest.newInstance(Priority.newInstance(0),ResourceRequest.ANY,Resource.newInstance(1024,1),1);
  sub.setAMContainerResourceRequest(resReg);
  req.setApplicationSubmissionContext(sub);
  try {
    rmService.submitApplication(req);
  }
 catch (  Exception e) {
    if (e instanceof YarnException) {
      Assert.assertTrue(e.getCause() instanceof AccessControlException);
    }
 else {
      Assert.fail("Yarn exception is expected");
    }
  }
 finally {
    mockRM.close();
  }
}
