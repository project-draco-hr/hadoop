{
  StringBuilder sb=new StringBuilder();
  Iterator<Token> i=ll.iterator();
  while (i.hasNext()) {
    Token t=i.next();
    if (TType.COMMA.equals(t.getType())) {
      try {
        inf=(InputFormat)ReflectionUtils.newInstance(job.getClassByName(sb.toString()),job);
      }
 catch (      ClassNotFoundException e) {
        throw (IOException)new IOException().initCause(e);
      }
catch (      IllegalArgumentException e) {
        throw (IOException)new IOException().initCause(e);
      }
      break;
    }
    sb.append(t.getStr());
  }
  if (!i.hasNext()) {
    throw new IOException("Parse error");
  }
  Token t=i.next();
  if (!TType.QUOT.equals(t.getType())) {
    throw new IOException("Expected quoted string");
  }
  indir=t.getStr();
}
