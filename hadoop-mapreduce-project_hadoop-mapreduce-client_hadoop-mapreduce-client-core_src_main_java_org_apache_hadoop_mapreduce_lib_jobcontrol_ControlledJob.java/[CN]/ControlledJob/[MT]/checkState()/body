{
  if (this.state == State.RUNNING) {
    checkRunningState();
  }
  if (this.state != State.WAITING) {
    return this.state;
  }
  if (this.dependingJobs == null || this.dependingJobs.size() == 0) {
    this.state=State.READY;
    return this.state;
  }
  ControlledJob pred=null;
  int n=this.dependingJobs.size();
  for (int i=0; i < n; i++) {
    pred=this.dependingJobs.get(i);
    State s=pred.checkState();
    if (s == State.WAITING || s == State.READY || s == State.RUNNING) {
      break;
    }
    if (s == State.FAILED || s == State.DEPENDENT_FAILED) {
      this.state=State.DEPENDENT_FAILED;
      this.message="depending job " + i + " with jobID "+ pred.getJobID()+ " failed. "+ pred.getMessage();
      break;
    }
    if (i == n - 1) {
      this.state=State.READY;
    }
  }
  return this.state;
}
