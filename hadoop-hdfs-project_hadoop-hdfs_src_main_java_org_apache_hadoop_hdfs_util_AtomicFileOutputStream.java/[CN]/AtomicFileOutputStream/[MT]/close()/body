{
  boolean triedToClose=false, success=false;
  try {
    flush();
    ((FileOutputStream)out).getChannel().force(true);
    triedToClose=true;
    super.close();
    success=true;
  }
  finally {
    if (success) {
      boolean renamed=tmpFile.renameTo(origFile);
      if (!renamed) {
        if (origFile.exists() && !origFile.delete()) {
          throw new IOException("Could not delete original file " + origFile);
        }
        try {
          NativeIO.renameTo(tmpFile,origFile);
        }
 catch (        NativeIOException e) {
          throw new IOException("Could not rename temporary file " + tmpFile + " to "+ origFile+ " due to failure in native rename. "+ e.toString());
        }
      }
    }
 else {
      if (!triedToClose) {
        IOUtils.closeStream(out);
      }
      if (!tmpFile.delete()) {
        LOG.warn("Unable to delete tmp file " + tmpFile);
      }
    }
  }
}
