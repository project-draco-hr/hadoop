{
  this.eventHandlingThread=new Thread(){
    @SuppressWarnings("unchecked") @Override public void run(){
      ContainerAllocatorEvent event;
      while (!stopped.get() && !Thread.currentThread().isInterrupted()) {
        try {
          event=RMContainerAllocator.this.eventQueue.take();
        }
 catch (        InterruptedException e) {
          if (!stopped.get()) {
            LOG.error("Returning, interrupted : " + e);
          }
          return;
        }
        try {
          handleEvent(event);
        }
 catch (        Throwable t) {
          LOG.error("Error in handling event type " + event.getType() + " to the ContainreAllocator",t);
          eventHandler.handle(new JobEvent(getJob().getID(),JobEventType.INTERNAL_ERROR));
          return;
        }
      }
    }
  }
;
  this.eventHandlingThread.start();
  super.start();
}
