{
  super.serviceInit(conf);
  reduceSlowStart=conf.getFloat(MRJobConfig.COMPLETED_MAPS_FOR_REDUCE_SLOWSTART,DEFAULT_COMPLETED_MAPS_PERCENT_FOR_REDUCE_SLOWSTART);
  maxReduceRampupLimit=conf.getFloat(MRJobConfig.MR_AM_JOB_REDUCE_RAMPUP_UP_LIMIT,MRJobConfig.DEFAULT_MR_AM_JOB_REDUCE_RAMP_UP_LIMIT);
  maxReducePreemptionLimit=conf.getFloat(MRJobConfig.MR_AM_JOB_REDUCE_PREEMPTION_LIMIT,MRJobConfig.DEFAULT_MR_AM_JOB_REDUCE_PREEMPTION_LIMIT);
  allocationDelayThresholdMs=conf.getInt(MRJobConfig.MR_JOB_REDUCER_PREEMPT_DELAY_SEC,MRJobConfig.DEFAULT_MR_JOB_REDUCER_PREEMPT_DELAY_SEC) * 1000;
  maxRunningMaps=conf.getInt(MRJobConfig.JOB_RUNNING_MAP_LIMIT,MRJobConfig.DEFAULT_JOB_RUNNING_MAP_LIMIT);
  maxRunningReduces=conf.getInt(MRJobConfig.JOB_RUNNING_REDUCE_LIMIT,MRJobConfig.DEFAULT_JOB_RUNNING_REDUCE_LIMIT);
  RackResolver.init(conf);
  retryInterval=getConfig().getLong(MRJobConfig.MR_AM_TO_RM_WAIT_INTERVAL_MS,MRJobConfig.DEFAULT_MR_AM_TO_RM_WAIT_INTERVAL_MS);
  mapNodeLabelExpression=conf.get(MRJobConfig.MAP_NODE_LABEL_EXP);
  reduceNodeLabelExpression=conf.get(MRJobConfig.REDUCE_NODE_LABEL_EXP);
  retrystartTime=System.currentTimeMillis();
}
