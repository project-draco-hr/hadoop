{
  int numScheduledMaps=scheduledRequests.maps.size();
  if (maxRunningMaps > 0 && numScheduledMaps > 0) {
    int maxRequestedMaps=Math.max(0,maxRunningMaps - assignedRequests.maps.size());
    int numScheduledFailMaps=scheduledRequests.earlierFailedMaps.size();
    int failedMapRequestLimit=Math.min(maxRequestedMaps,numScheduledFailMaps);
    int normalMapRequestLimit=Math.min(maxRequestedMaps - failedMapRequestLimit,numScheduledMaps - numScheduledFailMaps);
    setRequestLimit(PRIORITY_FAST_FAIL_MAP,mapResourceRequest,failedMapRequestLimit);
    setRequestLimit(PRIORITY_MAP,mapResourceRequest,normalMapRequestLimit);
    setRequestLimit(PRIORITY_OPPORTUNISTIC_MAP,mapResourceRequest,normalMapRequestLimit);
  }
  int numScheduledReduces=scheduledRequests.reduces.size();
  if (maxRunningReduces > 0 && numScheduledReduces > 0) {
    int maxRequestedReduces=Math.max(0,maxRunningReduces - assignedRequests.reduces.size());
    int reduceRequestLimit=Math.min(maxRequestedReduces,numScheduledReduces);
    setRequestLimit(PRIORITY_REDUCE,reduceResourceRequest,reduceRequestLimit);
  }
}
