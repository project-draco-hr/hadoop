{
  List<TaskAttemptId> reduceList=new ArrayList<TaskAttemptId>(reduces.keySet());
  Collections.sort(reduceList,new Comparator<TaskAttemptId>(){
    @Override public int compare(    TaskAttemptId o1,    TaskAttemptId o2){
      return Float.compare(getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress(),getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress());
    }
  }
);
  for (int i=0; i < toPreempt && reduceList.size() > 0; i++) {
    TaskAttemptId id=reduceList.remove(0);
    LOG.info("Preempting " + id);
    preemptionWaitingReduces.add(id);
    eventHandler.handle(new TaskAttemptEvent(id,TaskAttemptEventType.TA_KILL));
  }
}
