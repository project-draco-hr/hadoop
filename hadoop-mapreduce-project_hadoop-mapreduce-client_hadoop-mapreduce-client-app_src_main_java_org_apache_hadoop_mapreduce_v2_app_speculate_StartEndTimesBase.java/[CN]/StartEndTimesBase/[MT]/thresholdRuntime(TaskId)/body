{
  JobId jobID=taskID.getJobId();
  Job job=context.getJob(jobID);
  TaskType type=taskID.getTaskType();
  DataStatistics statistics=dataStatisticsForTask(taskID);
  int completedTasksOfType=type == TaskType.MAP ? job.getCompletedMaps() : job.getCompletedReduces();
  int totalTasksOfType=type == TaskType.MAP ? job.getTotalMaps() : job.getTotalReduces();
  if (completedTasksOfType < MINIMUM_COMPLETE_NUMBER_TO_SPECULATE || (((float)completedTasksOfType) / totalTasksOfType) < MINIMUM_COMPLETE_PROPORTION_TO_SPECULATE) {
    return Long.MAX_VALUE;
  }
  long result=statistics == null ? Long.MAX_VALUE : (long)statistics.outlier(slowTaskRelativeTresholds.get(job));
  return result;
}
