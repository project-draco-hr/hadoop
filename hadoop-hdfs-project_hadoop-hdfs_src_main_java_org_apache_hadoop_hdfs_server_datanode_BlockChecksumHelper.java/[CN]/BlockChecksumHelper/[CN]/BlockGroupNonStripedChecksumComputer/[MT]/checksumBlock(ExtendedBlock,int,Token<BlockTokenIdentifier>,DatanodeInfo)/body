{
  int timeout=3000;
  try (IOStreamPair pair=getDatanode().connectToDN(targetDatanode,timeout,block,blockToken)){
    LOG.debug("write to {}: {}, block={}",getDatanode(),Op.BLOCK_CHECKSUM,block);
    createSender(pair).blockChecksum(block,blockToken);
    final DataTransferProtos.BlockOpResponseProto reply=DataTransferProtos.BlockOpResponseProto.parseFrom(PBHelperClient.vintPrefixed(pair.in));
    String logInfo="for block " + block + " from datanode "+ targetDatanode;
    DataTransferProtoUtil.checkBlockOpStatus(reply,logInfo);
    DataTransferProtos.OpBlockChecksumResponseProto checksumData=reply.getChecksumResponse();
    final DataChecksum.Type ct;
    if (checksumData.hasCrcType()) {
      ct=PBHelperClient.convert(checksumData.getCrcType());
    }
 else {
      LOG.debug("Retrieving checksum from an earlier-version DataNode: " + "inferring checksum by reading first byte");
      ct=DataChecksum.Type.DEFAULT;
    }
    setOrVerifyChecksumProperties(blockIdx,checksumData.getBytesPerCrc(),checksumData.getCrcPerBlock(),ct);
    final MD5Hash md5=new MD5Hash(checksumData.getMd5().toByteArray());
    md5.write(md5writer);
    if (LOG.isDebugEnabled()) {
      LOG.debug("got reply from " + targetDatanode + ": md5="+ md5);
    }
  }
 }
