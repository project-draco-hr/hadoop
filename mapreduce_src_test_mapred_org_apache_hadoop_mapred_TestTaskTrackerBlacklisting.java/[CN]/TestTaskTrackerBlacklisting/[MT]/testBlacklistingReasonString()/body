{
  String error="ERROR";
  String error1="ERROR1";
  TaskTrackerHealthStatus status=getUnhealthyNodeStatus(error);
  sendHeartBeat(status,false);
  assertEquals("All trackers not blacklisted",3,jobTracker.getBlacklistedTrackerCount());
  checkReasonForBlackListing(hosts[0],nodeUnHealthyReasonSet);
  checkReasonForBlackListing(hosts[1],nodeUnHealthyReasonSet);
  checkReasonForBlackListing(hosts[2],nodeUnHealthyReasonSet);
  for (int i=0; i < hosts.length; i++) {
    assertEquals("Blacklisting reason string not correct for host " + i,error,jobTracker.getFaultReport(hosts[i]).replace("\n",""));
  }
  status.setNodeHealthy(false);
  status.setLastReported(System.currentTimeMillis());
  status.setHealthReport(error1);
  sendHeartBeat(status,false);
  checkReasonForBlackListing(hosts[0],nodeUnHealthyReasonSet);
  checkReasonForBlackListing(hosts[1],nodeUnHealthyReasonSet);
  checkReasonForBlackListing(hosts[2],nodeUnHealthyReasonSet);
  for (int i=0; i < hosts.length; i++) {
    assertEquals("Blacklisting reason string not correct for host " + i,error1,jobTracker.getFaultReport(hosts[i]).replace("\n",""));
  }
  sendHeartBeat(null,false);
}
