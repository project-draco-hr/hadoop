{
  return new Iterable<StorageAndBlockIndex>(){
    @Override public Iterator<StorageAndBlockIndex> iterator(){
      return new Iterator<StorageAndBlockIndex>(){
        private int index=0;
        @Override public boolean hasNext(){
          while (index < getCapacity() && getStorageInfo(index) == null) {
            index++;
          }
          return index < getCapacity();
        }
        @Override public StorageAndBlockIndex next(){
          if (!hasNext()) {
            throw new NoSuchElementException();
          }
          int i=index++;
          return new StorageAndBlockIndex(storages[i],indices[i]);
        }
        @Override public void remove(){
          throw new UnsupportedOperationException("Remove is not supported");
        }
      }
;
    }
  }
;
}
