{
  if (latestNameSD == null)   throw new IOException("Image file is not found in " + imageDirs);
  if (latestEditsSD == null)   throw new IOException("Edits file is not found in " + editsDirs);
  if (latestNameCheckpointTime > latestEditsCheckpointTime && latestNameSD != latestEditsSD && latestNameSD.getStorageDirType() == NameNodeDirType.IMAGE && latestEditsSD.getStorageDirType() == NameNodeDirType.EDITS) {
    LOG.error("This is a rare failure scenario!!!");
    LOG.error("Image checkpoint time " + latestNameCheckpointTime + " > edits checkpoint time "+ latestEditsCheckpointTime);
    LOG.error("Name-node will treat the image as the latest state of " + "the namespace. Old edits will be discarded.");
  }
 else   if (latestNameCheckpointTime != latestEditsCheckpointTime) {
    throw new IOException("Inconsistent storage detected, " + "image and edits checkpoint times do not match. " + "image checkpoint time = " + latestNameCheckpointTime + "edits checkpoint time = "+ latestEditsCheckpointTime);
  }
  needToSaveAfterRecovery=doRecovery();
  FSImageFile file=new FSImageFile(latestNameSD,NNStorage.getStorageFile(latestNameSD,NameNodeFile.IMAGE),HdfsConstants.INVALID_TXID);
  LinkedList<FSImageFile> ret=new LinkedList<FSImageFile>();
  ret.add(file);
  return ret;
}
