{
  for (int i=0; i < nodes.length; i++) {
    final int index=i;
    try {
      GenericTestUtils.waitFor(new Supplier<Boolean>(){
        @Override public Boolean get(){
          try {
            QuorumJournalManager qjm=new QuorumJournalManager(nodes[index].node.getConf(),getQuorumJournalURI(CLUSTER_WAITACTIVE_URI),FAKE_NSINFO);
            qjm.hasSomeData();
            qjm.close();
          }
 catch (          IOException e) {
            return false;
          }
          return true;
        }
      }
,50,3000);
    }
 catch (    TimeoutException e) {
      fail("Time out while waiting for journal node " + index + " to start.");
    }
catch (    InterruptedException ite) {
      LOG.warn("Thread interrupted when waiting for node start",ite);
    }
  }
}
