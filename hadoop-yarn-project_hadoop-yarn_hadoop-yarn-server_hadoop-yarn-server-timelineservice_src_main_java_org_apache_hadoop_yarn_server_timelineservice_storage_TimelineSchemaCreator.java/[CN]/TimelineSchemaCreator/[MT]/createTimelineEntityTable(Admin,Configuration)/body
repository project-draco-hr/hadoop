{
  TableName table=TableName.valueOf(hbaseConf.get(TimelineEntitySchemaConstants.ENTITY_TABLE_NAME,TimelineEntitySchemaConstants.DEFAULT_ENTITY_TABLE_NAME));
  if (admin.tableExists(table)) {
    throw new IOException("Table " + table.getNameAsString() + " already exists.");
  }
  HTableDescriptor entityTableDescp=new HTableDescriptor(table);
  HColumnDescriptor cf1=new HColumnDescriptor(EntityColumnFamily.INFO.getInBytes());
  cf1.setBloomFilterType(BloomType.ROWCOL);
  entityTableDescp.addFamily(cf1);
  HColumnDescriptor cf2=new HColumnDescriptor(EntityColumnFamily.CONFIG.getInBytes());
  cf2.setBloomFilterType(BloomType.ROWCOL);
  cf2.setBlockCacheEnabled(true);
  entityTableDescp.addFamily(cf2);
  HColumnDescriptor cf3=new HColumnDescriptor(EntityColumnFamily.METRICS.getInBytes());
  entityTableDescp.addFamily(cf3);
  cf3.setBlockCacheEnabled(true);
  cf3.setMinVersions(1);
  cf3.setMaxVersions(TimelineEntitySchemaConstants.ENTITY_TABLE_METRICS_MAX_VERSIONS_DEFAULT);
  cf3.setTimeToLive(hbaseConf.getInt(TimelineEntitySchemaConstants.ENTITY_TABLE_METRICS_TTL,TimelineEntitySchemaConstants.ENTITY_TABLE_METRICS_TTL_DEFAULT));
  entityTableDescp.setRegionSplitPolicyClassName("org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy");
  entityTableDescp.setValue("KeyPrefixRegionSplitPolicy.prefix_length",SPLIT_KEY_PREFIX_LENGTH);
  admin.createTable(entityTableDescp,splits);
  LOG.info("Status of table creation for " + table.getNameAsString() + "="+ admin.tableExists(table));
}
