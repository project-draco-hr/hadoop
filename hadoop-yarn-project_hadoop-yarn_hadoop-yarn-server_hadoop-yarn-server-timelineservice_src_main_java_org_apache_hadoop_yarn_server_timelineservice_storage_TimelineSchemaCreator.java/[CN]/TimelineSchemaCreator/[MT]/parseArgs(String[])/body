{
  Options options=new Options();
  Option o=new Option(ENTITY_TABLE_NAME_SHORT,"entityTableName",true,"entity table name");
  o.setArgName("entityTableName");
  o.setRequired(false);
  options.addOption(o);
  o=new Option(TTL_OPTION_SHORT,"metricsTTL",true,"TTL for metrics column family");
  o.setArgName("metricsTTL");
  o.setRequired(false);
  options.addOption(o);
  o=new Option(APP_TO_FLOW_TABLE_NAME_SHORT,"appToflowTableName",true,"app to flow table name");
  o.setArgName("appToflowTableName");
  o.setRequired(false);
  options.addOption(o);
  o=new Option(APP_TABLE_NAME_SHORT,"applicationTableName",true,"application table name");
  o.setArgName("applicationTableName");
  o.setRequired(false);
  options.addOption(o);
  o=new Option(PHOENIX_OPTION_SHORT,"usePhoenix",false,"create Phoenix offline aggregation tables");
  o.setRequired(false);
  options.addOption(o);
  o=new Option(SKIP_EXISTING_TABLE_OPTION_SHORT,"skipExistingTable",false,"skip existing Hbase tables and continue to create new tables");
  o.setRequired(false);
  options.addOption(o);
  CommandLineParser parser=new PosixParser();
  CommandLine commandLine=null;
  try {
    commandLine=parser.parse(options,args);
  }
 catch (  Exception e) {
    LOG.error("ERROR: " + e.getMessage() + "\n");
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp(NAME + " ",options,true);
    System.exit(-1);
  }
  return commandLine;
}
