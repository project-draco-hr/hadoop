{
  Configuration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
  try {
    FileSystem fs=cluster.getFileSystem();
    assertTrue(fs.mkdirs(dir));
{
      Path a=new Path(dir,"a");
      Path aa=new Path(dir,"aa");
      Path b=new Path(dir,"b");
      createFile(fs,a);
      assertEquals(0,countLease(cluster));
      DataOutputStream aa_out=fs.create(aa);
      aa_out.writeBytes("something");
      assertEquals(1,countLease(cluster));
      list(fs,"rename0");
      fs.rename(a,b);
      list(fs,"rename1");
      aa_out.writeBytes(" more");
      aa_out.close();
      list(fs,"rename2");
      assertEquals(0,countLease(cluster));
    }
{
      Path dstPath=new Path("/c/d");
      assertFalse(fs.exists(dstPath));
      assertFalse(fs.rename(dir,dstPath));
    }
{
      Path src=new Path("/a/b");
      Path dst=new Path("/a/b/c");
      createFile(fs,new Path(src,"foo"));
      assertFalse(fs.rename(src,dst));
      assertFalse(fs.rename(src.getParent(),dst.getParent()));
    }
{
      Path src=new Path("/testPrefix");
      Path dst=new Path("/testPrefixfile");
      createFile(fs,src);
      assertTrue(fs.rename(src,dst));
    }
{
      Path src=new Path("/a/b/c");
      createFile(fs,src);
      assertTrue(fs.rename(src,src));
      assertFalse(fs.rename(new Path("/a/b"),new Path("/a/b/")));
      assertTrue(fs.rename(src,new Path("/a/b/c/")));
    }
    fs.delete(dir,true);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
