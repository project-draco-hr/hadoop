{
  LOG.info("Starting reconfiguration task.");
  final Configuration oldConf=parent.getConf();
  final Configuration newConf=parent.getNewConf();
  final Collection<PropertyChange> changes=parent.getChangedProperties(newConf,oldConf);
  Map<PropertyChange,Optional<String>> results=Maps.newHashMap();
  for (  PropertyChange change : changes) {
    String errorMessage=null;
    if (!parent.isPropertyReconfigurable(change.prop)) {
      LOG.info(String.format("Property %s is not configurable: old value: %s, new value: %s",change.prop,change.oldVal,change.newVal));
      continue;
    }
    LOG.info("Change property: " + change.prop + " from \""+ ((change.oldVal == null) ? "<default>" : change.oldVal)+ "\" to \""+ ((change.newVal == null) ? "<default>" : change.newVal)+ "\".");
    try {
      String effectiveValue=parent.reconfigurePropertyImpl(change.prop,change.newVal);
      if (change.newVal != null) {
        oldConf.set(change.prop,effectiveValue);
      }
 else {
        oldConf.unset(change.prop);
      }
    }
 catch (    ReconfigurationException e) {
      errorMessage=e.getCause().getMessage();
    }
    results.put(change,Optional.fromNullable(errorMessage));
  }
synchronized (parent.reconfigLock) {
    parent.endTime=Time.now();
    parent.status=Collections.unmodifiableMap(results);
    parent.reconfigThread=null;
  }
}
