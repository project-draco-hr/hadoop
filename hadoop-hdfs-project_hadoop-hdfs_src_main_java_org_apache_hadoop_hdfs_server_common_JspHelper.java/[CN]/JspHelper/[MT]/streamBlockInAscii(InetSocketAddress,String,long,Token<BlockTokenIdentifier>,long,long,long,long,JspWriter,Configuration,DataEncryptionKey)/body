{
  if (chunkSizeToView == 0)   return;
  Socket s=NetUtils.getDefaultSocketFactory(conf).createSocket();
  s.connect(addr,HdfsServerConstants.READ_TIMEOUT);
  s.setSoTimeout(HdfsServerConstants.READ_TIMEOUT);
  int amtToRead=(int)Math.min(chunkSizeToView,blockSize - offsetIntoBlock);
  String file=BlockReaderFactory.getFileName(addr,poolId,blockId);
  BlockReader blockReader=BlockReaderFactory.newBlockReader(conf,file,new ExtendedBlock(poolId,blockId,0,genStamp),blockToken,offsetIntoBlock,amtToRead,true,"JspHelper",TcpPeerServer.peerFromSocketAndKey(s,encryptionKey),new DatanodeID(addr.getAddress().toString(),addr.getHostName(),poolId,addr.getPort(),0,0),null,false);
  byte[] buf=new byte[(int)amtToRead];
  int readOffset=0;
  int retries=2;
  while (amtToRead > 0) {
    int numRead=amtToRead;
    try {
      blockReader.readFully(buf,readOffset,amtToRead);
    }
 catch (    IOException e) {
      retries--;
      if (retries == 0)       throw new IOException("Could not read data from datanode");
      continue;
    }
    amtToRead-=numRead;
    readOffset+=numRead;
  }
  blockReader.close(null,null);
  out.print(HtmlQuoting.quoteHtmlChars(new String(buf)));
}
