{
  if (chunkSizeToView == 0)   return;
  Socket s=new Socket();
  s.connect(addr,HdfsServerConstants.READ_TIMEOUT);
  s.setSoTimeout(HdfsServerConstants.READ_TIMEOUT);
  long amtToRead=Math.min(chunkSizeToView,blockSize - offsetIntoBlock);
  int bufferSize=conf.getInt(DFSConfigKeys.IO_FILE_BUFFER_SIZE_KEY,DFSConfigKeys.IO_FILE_BUFFER_SIZE_DEFAULT);
  String file=BlockReaderFactory.getFileName(addr,poolId,blockId);
  BlockReader blockReader=BlockReaderFactory.newBlockReader(s,file,new ExtendedBlock(poolId,blockId,0,genStamp),blockToken,offsetIntoBlock,amtToRead,bufferSize);
  byte[] buf=new byte[(int)amtToRead];
  int readOffset=0;
  int retries=2;
  while (amtToRead > 0) {
    int numRead;
    try {
      numRead=blockReader.readAll(buf,readOffset,(int)amtToRead);
    }
 catch (    IOException e) {
      retries--;
      if (retries == 0)       throw new IOException("Could not read data from datanode");
      continue;
    }
    amtToRead-=numRead;
    readOffset+=numRead;
  }
  blockReader=null;
  s.close();
  out.print(HtmlQuoting.quoteHtmlChars(new String(buf)));
}
