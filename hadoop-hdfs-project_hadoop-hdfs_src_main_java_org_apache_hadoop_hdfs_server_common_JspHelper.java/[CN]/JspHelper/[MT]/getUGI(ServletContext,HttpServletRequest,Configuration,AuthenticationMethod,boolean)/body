{
  UserGroupInformation ugi=null;
  final String usernameFromQuery=getUsernameFromQuery(request,tryUgiParameter);
  final String doAsUserFromQuery=request.getParameter(DoAsParam.NAME);
  final String remoteUser;
  if (UserGroupInformation.isSecurityEnabled()) {
    remoteUser=request.getRemoteUser();
    final String tokenString=request.getParameter(DELEGATION_PARAMETER_NAME);
    if (tokenString != null) {
      ugi=getTokenUGI(context,request,tokenString,conf);
      checkUsername(ugi.getShortUserName(),usernameFromQuery);
      checkUsername(ugi.getShortUserName(),doAsUserFromQuery);
    }
 else     if (remoteUser == null) {
      throw new IOException("Security enabled but user not authenticated by filter");
    }
  }
 else {
    remoteUser=(usernameFromQuery == null) ? getDefaultWebUserName(conf) : usernameFromQuery;
  }
  if (ugi == null) {
    ugi=UserGroupInformation.createRemoteUser(remoteUser);
    checkUsername(ugi.getShortUserName(),usernameFromQuery);
    if (UserGroupInformation.isSecurityEnabled()) {
      ugi.setAuthenticationMethod(secureAuthMethod);
    }
    if (doAsUserFromQuery != null) {
      ugi=UserGroupInformation.createProxyUser(doAsUserFromQuery,ugi);
      ProxyUsers.authorize(ugi,getRemoteAddr(request));
    }
  }
  if (LOG.isDebugEnabled())   LOG.debug("getUGI is returning: " + ugi.getShortUserName());
  return ugi;
}
