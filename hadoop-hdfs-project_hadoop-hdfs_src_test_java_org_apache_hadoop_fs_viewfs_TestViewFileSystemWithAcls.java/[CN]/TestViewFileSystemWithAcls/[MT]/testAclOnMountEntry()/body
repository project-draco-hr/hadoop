{
  List<AclEntry> aclSpec=Lists.newArrayList(aclEntry(ACCESS,USER,READ_WRITE),aclEntry(ACCESS,USER,"foo",READ),aclEntry(ACCESS,GROUP,READ),aclEntry(ACCESS,OTHER,NONE));
  fsView.setAcl(mountOnNn1,aclSpec);
  AclEntry[] expected=new AclEntry[]{aclEntry(ACCESS,USER,"foo",READ),aclEntry(ACCESS,GROUP,READ)};
  assertArrayEquals(expected,aclEntryArray(fsView.getAclStatus(mountOnNn1)));
  assertArrayEquals(expected,aclEntryArray(fHdfs.getAclStatus(targetTestRoot)));
  aclSpec=Lists.newArrayList(aclEntry(DEFAULT,USER,"foo",READ));
  fsView.modifyAclEntries(mountOnNn1,aclSpec);
  expected=new AclEntry[]{aclEntry(ACCESS,USER,"foo",READ),aclEntry(ACCESS,GROUP,READ),aclEntry(DEFAULT,USER,READ_WRITE),aclEntry(DEFAULT,USER,"foo",READ),aclEntry(DEFAULT,GROUP,READ),aclEntry(DEFAULT,MASK,READ),aclEntry(DEFAULT,OTHER,NONE)};
  assertArrayEquals(expected,aclEntryArray(fsView.getAclStatus(mountOnNn1)));
  fsView.removeDefaultAcl(mountOnNn1);
  expected=new AclEntry[]{aclEntry(ACCESS,USER,"foo",READ),aclEntry(ACCESS,GROUP,READ)};
  assertArrayEquals(expected,aclEntryArray(fsView.getAclStatus(mountOnNn1)));
  assertArrayEquals(expected,aclEntryArray(fHdfs.getAclStatus(targetTestRoot)));
  assertEquals(0,fsView.getAclStatus(mountOnNn2).getEntries().size());
  assertEquals(0,fHdfs2.getAclStatus(targetTestRoot2).getEntries().size());
  fsView.removeAcl(mountOnNn1);
  assertEquals(0,fsView.getAclStatus(mountOnNn1).getEntries().size());
  assertEquals(0,fHdfs.getAclStatus(targetTestRoot).getEntries().size());
  aclSpec=Lists.newArrayList(aclEntry(ACCESS,USER,"bar",READ));
  fsView.modifyAclEntries(mountOnNn2,aclSpec);
  expected=new AclEntry[]{aclEntry(ACCESS,USER,"bar",READ),aclEntry(ACCESS,GROUP,READ_EXECUTE)};
  assertArrayEquals(expected,aclEntryArray(fsView.getAclStatus(mountOnNn2)));
  assertArrayEquals(expected,aclEntryArray(fHdfs2.getAclStatus(targetTestRoot2)));
  fsView.removeAclEntries(mountOnNn2,Lists.newArrayList(aclEntry(ACCESS,USER,"bar",READ)));
  expected=new AclEntry[]{aclEntry(ACCESS,GROUP,READ_EXECUTE)};
  assertArrayEquals(expected,aclEntryArray(fHdfs2.getAclStatus(targetTestRoot2)));
  fsView.removeAcl(mountOnNn2);
  assertEquals(0,fsView.getAclStatus(mountOnNn2).getEntries().size());
  assertEquals(0,fHdfs2.getAclStatus(targetTestRoot2).getEntries().size());
}
