{
  print("  check put .................. ");
  for (int i=0; i < test.data.size() / 2; i++) {
    test.put(test.data.get(i));
  }
  for (int i=0; i < test.data.size(); i++) {
    test.put(test.data.get(i));
  }
  println("DONE " + test.stat());
  print("  check remove & put ......... ");
  for (int j=0; j < 10; j++) {
    for (int i=0; i < test.data.size() / 2; i++) {
      final int r=ran.nextInt(test.data.size());
      test.remove(test.data.get(r));
    }
    for (int i=0; i < test.data.size() / 2; i++) {
      final int r=ran.nextInt(test.data.size());
      test.put(test.data.get(r));
    }
  }
  println("DONE " + test.stat());
  print("  check remove ............... ");
  for (int i=0; i < test.data.size(); i++) {
    test.remove(test.data.get(i));
  }
  Assert.assertEquals(0,test.cache.size());
  println("DONE " + test.stat());
  print("  check remove & put again ... ");
  for (int j=0; j < 10; j++) {
    for (int i=0; i < test.data.size() / 2; i++) {
      final int r=ran.nextInt(test.data.size());
      test.remove(test.data.get(r));
    }
    for (int i=0; i < test.data.size() / 2; i++) {
      final int r=ran.nextInt(test.data.size());
      test.put(test.data.get(r));
    }
  }
  println("DONE " + test.stat());
  final long s=(Time.now() - starttime) / 1000L;
  println("total time elapsed=" + s + "s\n");
}
