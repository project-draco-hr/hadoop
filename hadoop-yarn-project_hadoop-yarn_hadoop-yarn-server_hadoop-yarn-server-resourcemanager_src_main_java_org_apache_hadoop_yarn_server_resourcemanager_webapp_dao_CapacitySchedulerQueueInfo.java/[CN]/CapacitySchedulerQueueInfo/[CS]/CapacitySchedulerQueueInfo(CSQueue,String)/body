{
  QueueCapacities qCapacities=q.getQueueCapacities();
  ResourceUsage queueResourceUsage=q.getQueueResourceUsage();
  queuePath=q.getQueuePath();
  capacity=qCapacities.getCapacity(nodeLabel) * 100;
  usedCapacity=qCapacities.getUsedCapacity(nodeLabel) * 100;
  maxCapacity=qCapacities.getMaximumCapacity(nodeLabel);
  if (maxCapacity < EPSILON || maxCapacity > 1f)   maxCapacity=1f;
  maxCapacity*=100;
  absoluteCapacity=cap(qCapacities.getAbsoluteCapacity(nodeLabel),0f,1f) * 100;
  absoluteMaxCapacity=cap(qCapacities.getAbsoluteMaximumCapacity(nodeLabel),0f,1f) * 100;
  absoluteUsedCapacity=cap(qCapacities.getAbsoluteUsedCapacity(nodeLabel),0f,1f) * 100;
  numApplications=q.getNumApplications();
  queueName=q.getQueueName();
  state=q.getState();
  resourcesUsed=new ResourceInfo(queueResourceUsage.getUsed(nodeLabel));
  if (q instanceof PlanQueue && !((PlanQueue)q).showReservationsAsQueues()) {
    hideReservationQueues=true;
  }
  Set<String> labelSet=q.getAccessibleNodeLabels();
  if (labelSet != null) {
    nodeLabels.addAll(labelSet);
    Collections.sort(nodeLabels);
  }
}
