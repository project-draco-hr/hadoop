{
  GenericTestUtils.setLogLevel(NamenodeWebHdfsMethods.LOG,Level.ALL);
  final String uri=WebHdfsConstants.WEBHDFS_SCHEME + "://" + config.get(DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);
  final UserGroupInformation ugi=UserGroupInformation.createUserForTesting("JobTracker",new String[]{"user"});
  final WebHdfsFileSystem webhdfs=ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>(){
    @Override public WebHdfsFileSystem run() throws Exception {
      return (WebHdfsFileSystem)FileSystem.get(new URI(uri),config);
    }
  }
);
{
    Credentials creds=new Credentials();
    final Token<?> tokens[]=webhdfs.addDelegationTokens("JobTracker",creds);
    Assert.assertEquals(1,tokens.length);
    Assert.assertEquals(1,creds.numberOfTokens());
    Assert.assertSame(tokens[0],creds.getAllTokens().iterator().next());
    checkTokenIdentifier(ugi,tokens[0]);
    final Token<?> tokens2[]=webhdfs.addDelegationTokens("JobTracker",creds);
    Assert.assertEquals(0,tokens2.length);
  }
}
