{
  basePath=new Path(conf.getString(BASEPATH_KEY,BASEPATH_DEFAULT));
  source=conf.getString(SOURCE_KEY,SOURCE_DEFAULT);
  ignoreError=conf.getBoolean(IGNORE_ERROR_KEY,false);
  allowAppend=conf.getBoolean(ALLOW_APPEND_KEY,false);
  Configuration configuration=loadConf();
  UserGroupInformation.setConfiguration(configuration);
  if (UserGroupInformation.isSecurityEnabled()) {
    checkForProperty(conf,KEYTAB_PROPERTY_KEY);
    checkForProperty(conf,USERNAME_PROPERTY_KEY);
    try {
      SecurityUtil.login(configuration,conf.getString(KEYTAB_PROPERTY_KEY),conf.getString(USERNAME_PROPERTY_KEY));
    }
 catch (    IOException ex) {
      throw new MetricsException("Error logging in securely: [" + ex.toString() + "]",ex);
    }
  }
  fileSystem=getFileSystem(configuration);
  try {
    fileSystem.mkdirs(basePath);
  }
 catch (  Exception ex) {
    throw new MetricsException("Failed to create " + basePath + "["+ SOURCE_KEY+ "="+ source+ ", "+ IGNORE_ERROR_KEY+ "="+ ignoreError+ ", "+ ALLOW_APPEND_KEY+ "="+ allowAppend+ ", "+ KEYTAB_PROPERTY_KEY+ "="+ conf.getString(KEYTAB_PROPERTY_KEY)+ ", "+ conf.getString(KEYTAB_PROPERTY_KEY)+ "="+ configuration.get(conf.getString(KEYTAB_PROPERTY_KEY))+ ", "+ USERNAME_PROPERTY_KEY+ "="+ conf.getString(USERNAME_PROPERTY_KEY)+ ", "+ conf.getString(USERNAME_PROPERTY_KEY)+ "="+ configuration.get(conf.getString(USERNAME_PROPERTY_KEY))+ "] -- "+ ex.toString(),ex);
  }
  if (allowAppend) {
    allowAppend=checkAppend(fileSystem);
  }
  flushTimer=new Timer("RollingFileSystemSink Flusher",true);
}
