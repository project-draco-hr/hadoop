{
  properties=metrics2Properties;
  basePath=new Path(properties.getString(BASEPATH_KEY,BASEPATH_DEFAULT));
  source=properties.getString(SOURCE_KEY,SOURCE_DEFAULT);
  ignoreError=properties.getBoolean(IGNORE_ERROR_KEY,DEFAULT_IGNORE_ERROR);
  allowAppend=properties.getBoolean(ALLOW_APPEND_KEY,DEFAULT_ALLOW_APPEND);
  rollOffsetIntervalMillis=getNonNegative(ROLL_OFFSET_INTERVAL_MILLIS_KEY,DEFAULT_ROLL_OFFSET_INTERVAL_MILLIS);
  rollIntervalMillis=getRollInterval();
  conf=loadConf();
  UserGroupInformation.setConfiguration(conf);
  if (UserGroupInformation.isSecurityEnabled()) {
    checkIfPropertyExists(KEYTAB_PROPERTY_KEY);
    checkIfPropertyExists(USERNAME_PROPERTY_KEY);
    try {
      SecurityUtil.login(conf,properties.getString(KEYTAB_PROPERTY_KEY),properties.getString(USERNAME_PROPERTY_KEY));
    }
 catch (    IOException ex) {
      throw new MetricsException("Error logging in securely: [" + ex.toString() + "]",ex);
    }
  }
}
