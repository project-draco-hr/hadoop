{
  Path inDir=new Path("testing/wc/input");
  Path outDir=new Path("testing/wc/output");
  if (isLocalFS()) {
    String localPathRoot=System.getProperty("test.build.data","/tmp").toString().replace(' ','+');
    ;
    inDir=new Path(localPathRoot,inDir);
    outDir=new Path(localPathRoot,outDir);
  }
  FileSystem fs=FileSystem.get(conf);
  fs.delete(outDir,true);
  if (!fs.mkdirs(inDir)) {
    throw new IOException("Mkdirs failed to create " + inDir.toString());
  }
{
    DataOutputStream file=fs.create(new Path(inDir,"part-0"));
    file.writeBytes(input);
    file.close();
  }
  conf.setJobName("wordcount");
  conf.setInputFormat(TextInputFormat.class);
  conf.setOutputKeyClass(Text.class);
  conf.setOutputValueClass(IntWritable.class);
  conf.setMapperClass(WordCount.MapClass.class);
  conf.setCombinerClass(WordCount.Reduce.class);
  conf.setReducerClass(WordCount.Reduce.class);
  FileInputFormat.setInputPaths(conf,inDir);
  FileOutputFormat.setOutputPath(conf,outDir);
  conf.setNumMapTasks(numMaps);
  conf.setNumReduceTasks(numReduces);
  JobClient.runJob(conf);
  return MapReduceTestUtil.readOutput(outDir,conf);
}
