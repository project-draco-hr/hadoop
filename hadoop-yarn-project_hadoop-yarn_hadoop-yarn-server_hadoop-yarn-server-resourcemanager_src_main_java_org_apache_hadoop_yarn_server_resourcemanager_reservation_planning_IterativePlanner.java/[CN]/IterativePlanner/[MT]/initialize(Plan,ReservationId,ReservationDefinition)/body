{
  capacity=plan.getTotalCapacity();
  step=plan.getStep();
  jobType=reservation.getReservationRequests().getInterpreter();
  jobArrival=stepRoundUp(reservation.getArrival(),step);
  jobDeadline=stepRoundDown(reservation.getDeadline(),step);
  planModifications=new RLESparseResourceAllocation(plan.getResourceCalculator());
  if (this.algStageAllocator instanceof StageAllocatorLowCostAligned) {
    planLoads=getAllLoadsInInterval(plan,jobArrival,jobDeadline);
    ReservationAllocation oldRes=plan.getReservationById(reservationId);
    if (oldRes != null) {
      planModifications=RLESparseResourceAllocation.merge(plan.getResourceCalculator(),plan.getTotalCapacity(),planModifications,oldRes.getResourcesOverTime(),RLEOperator.subtract,jobArrival,jobDeadline);
    }
  }
}
