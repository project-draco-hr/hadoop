{
  AsyncDispatcher dispatcher=new InlineDispatcher();
  FifoScheduler scheduler=new FifoScheduler();
  RMApplicationHistoryWriter writer=mock(RMApplicationHistoryWriter.class);
  RMContext rmContext=new RMContextImpl(dispatcher,null,null,null,null,null,null,null,null,scheduler);
  ((RMContextImpl)rmContext).setSystemMetricsPublisher(mock(SystemMetricsPublisher.class));
  Configuration conf=new Configuration();
  ((RMContextImpl)rmContext).setScheduler(scheduler);
  scheduler.setRMContext(rmContext);
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,rmContext);
  QueueMetrics metrics=scheduler.getRootQueueMetrics();
  int beforeAppsSubmitted=metrics.getAppsSubmitted();
  ApplicationId appId=BuilderUtils.newApplicationId(200,1);
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(appId,1);
  SchedulerEvent appEvent=new AppAddedSchedulerEvent(appId,"queue","user");
  scheduler.handle(appEvent);
  SchedulerEvent attemptEvent=new AppAttemptAddedSchedulerEvent(appAttemptId,false);
  scheduler.handle(attemptEvent);
  appAttemptId=BuilderUtils.newApplicationAttemptId(appId,2);
  SchedulerEvent attemptEvent2=new AppAttemptAddedSchedulerEvent(appAttemptId,false);
  scheduler.handle(attemptEvent2);
  int afterAppsSubmitted=metrics.getAppsSubmitted();
  Assert.assertEquals(1,afterAppsSubmitted - beforeAppsSubmitted);
  scheduler.stop();
}
