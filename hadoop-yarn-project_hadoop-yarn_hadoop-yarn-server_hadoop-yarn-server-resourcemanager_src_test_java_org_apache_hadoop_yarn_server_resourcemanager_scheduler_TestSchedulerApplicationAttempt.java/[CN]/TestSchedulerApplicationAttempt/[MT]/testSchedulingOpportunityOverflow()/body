{
  ApplicationAttemptId attemptId=createAppAttemptId(0,0);
  Queue queue=createQueue("test",null);
  RMContext rmContext=mock(RMContext.class);
  when(rmContext.getEpoch()).thenReturn(3L);
  SchedulerApplicationAttempt app=new SchedulerApplicationAttempt(attemptId,"user",queue,queue.getActiveUsersManager(),rmContext);
  Priority priority=Priority.newInstance(1);
  SchedulerRequestKey schedulerKey=toSchedulerKey(priority);
  assertEquals(0,app.getSchedulingOpportunities(schedulerKey));
  app.addSchedulingOpportunity(schedulerKey);
  assertEquals(1,app.getSchedulingOpportunities(schedulerKey));
  app.setSchedulingOpportunities(schedulerKey,Integer.MAX_VALUE - 1);
  assertEquals(Integer.MAX_VALUE - 1,app.getSchedulingOpportunities(schedulerKey));
  app.addSchedulingOpportunity(schedulerKey);
  assertEquals(Integer.MAX_VALUE,app.getSchedulingOpportunities(schedulerKey));
  app.addSchedulingOpportunity(schedulerKey);
  assertEquals(Integer.MAX_VALUE,app.getSchedulingOpportunities(schedulerKey));
}
