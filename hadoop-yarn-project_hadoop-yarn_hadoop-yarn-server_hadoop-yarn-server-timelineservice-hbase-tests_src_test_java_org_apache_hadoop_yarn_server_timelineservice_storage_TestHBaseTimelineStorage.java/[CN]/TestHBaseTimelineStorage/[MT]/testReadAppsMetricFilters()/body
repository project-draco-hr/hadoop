{
  TimelineFilterList list1=new TimelineFilterList();
  list1.addFilter(new TimelineCompareFilter(TimelineCompareOp.GREATER_OR_EQUAL,"MAP1_SLOT_MILLIS",50000000900L));
  TimelineFilterList list2=new TimelineFilterList();
  list2.addFilter(new TimelineCompareFilter(TimelineCompareOp.LESS_THAN,"MAP_SLOT_MILLIS",80000000000L));
  list2.addFilter(new TimelineCompareFilter(TimelineCompareOp.EQUAL,"MAP1_BYTES",50));
  TimelineFilterList metricFilterList=new TimelineFilterList(Operator.OR,list1,list2);
  Set<TimelineEntity> entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(2,entities.size());
  int metricCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
  }
  assertEquals(3,metricCnt);
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.ALL)));
  assertEquals(2,entities.size());
  metricCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
  }
  assertEquals(3,metricCnt);
  TimelineFilterList metricFilterList1=new TimelineFilterList(new TimelineCompareFilter(TimelineCompareOp.LESS_OR_EQUAL,"MAP_SLOT_MILLIS",80000000000L),new TimelineCompareFilter(TimelineCompareOp.NOT_EQUAL,"MAP1_BYTES",30));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList1,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(1,entities.size());
  metricCnt=0;
  for (  TimelineEntity entity : entities) {
    metricCnt+=entity.getMetrics().size();
  }
  assertEquals(2,metricCnt);
  TimelineFilterList metricFilterList2=new TimelineFilterList(new TimelineCompareFilter(TimelineCompareOp.LESS_THAN,"MAP_SLOT_MILLIS",40000000000L),new TimelineCompareFilter(TimelineCompareOp.NOT_EQUAL,"MAP1_BYTES",30));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList2,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(0,entities.size());
  TimelineFilterList metricFilterList3=new TimelineFilterList(new TimelineCompareFilter(TimelineCompareOp.EQUAL,"dummy_metric",5));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList3,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(0,entities.size());
  TimelineFilterList metricFilterList4=new TimelineFilterList(new TimelineCompareFilter(TimelineCompareOp.NOT_EQUAL,"dummy_metric",5));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList4,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(0,entities.size());
  TimelineFilterList metricFilterList5=new TimelineFilterList(new TimelineCompareFilter(TimelineCompareOp.NOT_EQUAL,"dummy_metric",5,false));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,null,TimelineEntityType.YARN_APPLICATION.toString(),null),new TimelineEntityFilters(null,null,null,null,null,null,null,metricFilterList5,null),new TimelineDataToRetrieve(null,null,EnumSet.of(Field.METRICS)));
  assertEquals(3,entities.size());
}
