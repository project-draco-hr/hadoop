{
  TimelineFilterList confFilterList=new TimelineFilterList();
  confFilterList.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,"cfg_param1","value1"));
  TimelineFilterList list=new TimelineFilterList(Operator.OR,new TimelinePrefixFilter(TimelineCompareOp.EQUAL,"cfg_"));
  Set<TimelineEntity> entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,confFilterList,null,null),new TimelineDataToRetrieve(list,null,null,null));
  assertEquals(1,entities.size());
  int cfgCnt=0;
  for (  TimelineEntity entity : entities) {
    cfgCnt+=entity.getConfigs().size();
    for (    String confKey : entity.getConfigs().keySet()) {
      assertTrue("Config key returned should start with cfg_",confKey.startsWith("cfg_"));
    }
  }
  assertEquals(2,cfgCnt);
  TimelineFilterList list1=new TimelineFilterList();
  list1.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,"cfg_param1","value1"));
  list1.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,"cfg_param2","value2"));
  TimelineFilterList list2=new TimelineFilterList();
  list2.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,"cfg_param1","value3"));
  list2.addFilter(new TimelineKeyValueFilter(TimelineCompareOp.EQUAL,"config_param2","value2"));
  TimelineFilterList confFilterList1=new TimelineFilterList(Operator.OR,list1,list2);
  TimelineFilterList confsToRetrieve=new TimelineFilterList(Operator.OR,new TimelinePrefixFilter(TimelineCompareOp.EQUAL,"config_"));
  entities=reader.getEntities(new TimelineReaderContext("cluster1","user1","some_flow_name",1002345678919L,"application_1231111111_1111","world",null),new TimelineEntityFilters(null,null,null,null,null,null,confFilterList1,null,null),new TimelineDataToRetrieve(confsToRetrieve,null,null,null));
  assertEquals(2,entities.size());
  cfgCnt=0;
  for (  TimelineEntity entity : entities) {
    cfgCnt+=entity.getConfigs().size();
    for (    String confKey : entity.getConfigs().keySet()) {
      assertTrue("Config key returned should start with config_",confKey.startsWith("config_"));
    }
  }
  assertEquals(2,cfgCnt);
}
