{
  SchedulerHealth sh=new SchedulerHealth();
  int value=1;
  for (int i=0; i < 2; ++i) {
    sh.updateSchedulerPreemptionCounts(value);
    sh.updateSchedulerAllocationCounts(value);
    sh.updateSchedulerReservationCounts(value);
    sh.updateSchedulerReleaseCounts(value);
    Assert.assertEquals(value,sh.getAllocationCount().longValue());
    Assert.assertEquals(value,sh.getReleaseCount().longValue());
    Assert.assertEquals(value,sh.getReservationCount().longValue());
    Assert.assertEquals(value,sh.getPreemptionCount().longValue());
    Assert.assertEquals(value * (i + 1),sh.getAggregateAllocationCount().longValue());
    Assert.assertEquals(value * (i + 1),sh.getAggregateReleaseCount().longValue());
    Assert.assertEquals(value * (i + 1),sh.getAggregateReservationCount().longValue());
    Assert.assertEquals(value * (i + 1),sh.getAggregatePreemptionCount().longValue());
  }
}
