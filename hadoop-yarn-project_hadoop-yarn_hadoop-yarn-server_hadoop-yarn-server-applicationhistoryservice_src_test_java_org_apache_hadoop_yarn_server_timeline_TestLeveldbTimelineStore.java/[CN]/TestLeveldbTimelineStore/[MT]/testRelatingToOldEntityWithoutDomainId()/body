{
  TimelineEntity entityToStore=new TimelineEntity();
  entityToStore.setEntityType("NEW_ENTITY_TYPE_1");
  entityToStore.setEntityId("NEW_ENTITY_ID_1");
  entityToStore.setDomainId(TimelineDataManager.DEFAULT_DOMAIN_ID);
  entityToStore.addRelatedEntity("OLD_ENTITY_TYPE_1","OLD_ENTITY_ID_1");
  TimelineEntities entities=new TimelineEntities();
  entities.addEntity(entityToStore);
  store.put(entities);
  TimelineEntity entityToGet=store.getEntity("OLD_ENTITY_ID_1","OLD_ENTITY_TYPE_1",null);
  Assert.assertNotNull(entityToGet);
  Assert.assertNull(entityToGet.getDomainId());
  Assert.assertEquals("NEW_ENTITY_TYPE_1",entityToGet.getRelatedEntities().keySet().iterator().next());
  Assert.assertEquals("NEW_ENTITY_ID_1",entityToGet.getRelatedEntities().values().iterator().next().iterator().next());
  entityToStore=new TimelineEntity();
  entityToStore.setEntityType("NEW_ENTITY_TYPE_2");
  entityToStore.setEntityId("NEW_ENTITY_ID_2");
  entityToStore.setDomainId("NON_DEFAULT");
  entityToStore.addRelatedEntity("OLD_ENTITY_TYPE_1","OLD_ENTITY_ID_1");
  entities=new TimelineEntities();
  entities.addEntity(entityToStore);
  TimelinePutResponse response=store.put(entities);
  Assert.assertEquals(1,response.getErrors().size());
  Assert.assertEquals(TimelinePutError.FORBIDDEN_RELATION,response.getErrors().get(0).getErrorCode());
  entityToGet=store.getEntity("OLD_ENTITY_ID_1","OLD_ENTITY_TYPE_1",null);
  Assert.assertNotNull(entityToGet);
  Assert.assertNull(entityToGet.getDomainId());
  Assert.assertEquals(1,entityToGet.getRelatedEntities().keySet().size());
  Assert.assertEquals(1,entityToGet.getRelatedEntities().values().iterator().next().size());
}
