{
  assertEquals(2,getEntities("type_1").size());
  assertEquals(1,getEntities("type_2").size());
  assertEquals(false,deleteNextEntity(entityType1,writeReverseOrderedLong(122l)));
  assertEquals(2,getEntities("type_1").size());
  assertEquals(1,getEntities("type_2").size());
  assertEquals(true,deleteNextEntity(entityType1,writeReverseOrderedLong(123l)));
  List<TimelineEntity> entities=getEntities("type_2");
  assertEquals(1,entities.size());
  verifyEntityInfo(entityId2,entityType2,events2,Collections.singletonMap(entityType1,Collections.singleton(entityId1b)),EMPTY_PRIMARY_FILTERS,EMPTY_MAP,entities.get(0));
  entities=getEntitiesWithPrimaryFilter("type_1",userFilter);
  assertEquals(1,entities.size());
  verifyEntityInfo(entityId1b,entityType1,events1,EMPTY_REL_ENTITIES,primaryFilters,otherInfo,entities.get(0));
  ((LeveldbTimelineStore)store).discardOldEntities(-123l);
  assertEquals(1,getEntities("type_1").size());
  assertEquals(0,getEntities("type_2").size());
  assertEquals(3,((LeveldbTimelineStore)store).getEntityTypes().size());
  ((LeveldbTimelineStore)store).discardOldEntities(123l);
  assertEquals(0,getEntities("type_1").size());
  assertEquals(0,getEntities("type_2").size());
  assertEquals(0,((LeveldbTimelineStore)store).getEntityTypes().size());
  assertEquals(0,getEntitiesWithPrimaryFilter("type_1",userFilter).size());
}
