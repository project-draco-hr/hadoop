{
  beforeTs=System.currentTimeMillis() - 1;
  TimelineEntities entities=new TimelineEntities();
  Map<String,Set<Object>> primaryFilters=new HashMap<String,Set<Object>>();
  Set<Object> l1=new HashSet<Object>();
  l1.add("username");
  Set<Object> l2=new HashSet<Object>();
  l2.add((long)Integer.MAX_VALUE);
  Set<Object> l3=new HashSet<Object>();
  l3.add("123abc");
  Set<Object> l4=new HashSet<Object>();
  l4.add((long)Integer.MAX_VALUE + 1l);
  primaryFilters.put("user",l1);
  primaryFilters.put("appname",l2);
  primaryFilters.put("other",l3);
  primaryFilters.put("long",l4);
  Map<String,Object> secondaryFilters=new HashMap<String,Object>();
  secondaryFilters.put("startTime",123456l);
  secondaryFilters.put("status","RUNNING");
  Map<String,Object> otherInfo1=new HashMap<String,Object>();
  otherInfo1.put("info1","val1");
  otherInfo1.putAll(secondaryFilters);
  String entityId1="id_1";
  String entityType1="type_1";
  String entityId1b="id_2";
  String entityId2="id_2";
  String entityType2="type_2";
  String entityId4="id_4";
  String entityType4="type_4";
  String entityId5="id_5";
  String entityType5="type_5";
  Map<String,Set<String>> relatedEntities=new HashMap<String,Set<String>>();
  relatedEntities.put(entityType2,Collections.singleton(entityId2));
  TimelineEvent ev3=createEvent(789l,"launch_event",null);
  TimelineEvent ev4=createEvent(-123l,"init_event",null);
  List<TimelineEvent> events=new ArrayList<TimelineEvent>();
  events.add(ev3);
  events.add(ev4);
  entities.setEntities(Collections.singletonList(createEntity(entityId2,entityType2,null,events,null,null,null)));
  TimelinePutResponse response=store.put(entities);
  assertEquals(0,response.getErrors().size());
  TimelineEvent ev1=createEvent(123l,"start_event",null);
  entities.setEntities(Collections.singletonList(createEntity(entityId1,entityType1,123l,Collections.singletonList(ev1),relatedEntities,primaryFilters,otherInfo1)));
  response=store.put(entities);
  assertEquals(0,response.getErrors().size());
  entities.setEntities(Collections.singletonList(createEntity(entityId1b,entityType1,null,Collections.singletonList(ev1),relatedEntities,primaryFilters,otherInfo1)));
  response=store.put(entities);
  assertEquals(0,response.getErrors().size());
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put("event info 1","val1");
  TimelineEvent ev2=createEvent(456l,"end_event",eventInfo);
  Map<String,Object> otherInfo2=new HashMap<String,Object>();
  otherInfo2.put("info2","val2");
  entities.setEntities(Collections.singletonList(createEntity(entityId1,entityType1,null,Collections.singletonList(ev2),null,primaryFilters,otherInfo2)));
  response=store.put(entities);
  assertEquals(0,response.getErrors().size());
  entities.setEntities(Collections.singletonList(createEntity(entityId1b,entityType1,789l,Collections.singletonList(ev2),null,primaryFilters,otherInfo2)));
  response=store.put(entities);
  assertEquals(0,response.getErrors().size());
  entities.setEntities(Collections.singletonList(createEntity("badentityid","badentity",null,null,null,null,otherInfo1)));
  response=store.put(entities);
  assertEquals(1,response.getErrors().size());
  TimelinePutError error=response.getErrors().get(0);
  assertEquals("badentityid",error.getEntityId());
  assertEquals("badentity",error.getEntityType());
  assertEquals(TimelinePutError.NO_START_TIME,error.getErrorCode());
  relatedEntities.clear();
  relatedEntities.put(entityType5,Collections.singleton(entityId5));
  entities.setEntities(Collections.singletonList(createEntity(entityId4,entityType4,42l,null,relatedEntities,null,null)));
  response=store.put(entities);
  assertEquals(0,response.getErrors().size());
}
