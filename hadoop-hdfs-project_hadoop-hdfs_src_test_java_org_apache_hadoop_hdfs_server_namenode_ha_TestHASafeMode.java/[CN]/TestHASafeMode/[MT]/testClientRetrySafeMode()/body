{
  final Map<Path,Boolean> results=Collections.synchronizedMap(new HashMap<Path,Boolean>());
  final Path test=new Path("/test");
  cluster.getConfiguration(0).setInt(DFSConfigKeys.DFS_NAMENODE_SAFEMODE_MIN_DATANODES_KEY,3);
  NameNodeAdapter.enterSafeMode(nn0,false);
  Whitebox.setInternalState(nn0.getNamesystem(),"manualSafeMode",false);
  BlockManagerTestUtil.setStartupSafeModeForTest(nn0.getNamesystem().getBlockManager());
  assertTrue(nn0.getNamesystem().isInStartupSafeMode());
  LOG.info("enter safemode");
  new Thread(){
    @Override public void run(){
      try {
        boolean mkdir=fs.mkdirs(test);
        LOG.info("mkdir finished, result is " + mkdir);
synchronized (TestHASafeMode.this) {
          results.put(test,mkdir);
          TestHASafeMode.this.notifyAll();
        }
      }
 catch (      Exception e) {
        LOG.info("Got Exception while calling mkdir",e);
      }
    }
  }
.start();
  assertFalse("The directory should not be created while NN in safemode",fs.exists(test));
  Thread.sleep(1000);
  NameNodeAdapter.leaveSafeMode(nn0);
  LOG.info("leave safemode");
synchronized (this) {
    while (!results.containsKey(test)) {
      this.wait();
    }
    assertTrue(results.get(test));
  }
}
