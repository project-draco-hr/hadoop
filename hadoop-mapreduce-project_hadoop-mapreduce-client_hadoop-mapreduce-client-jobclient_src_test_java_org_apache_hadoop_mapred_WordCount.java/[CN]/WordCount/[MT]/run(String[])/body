{
  JobConf conf=new JobConf(getConf(),WordCount.class);
  conf.setJobName("wordcount");
  conf.setOutputKeyClass(Text.class);
  conf.setOutputValueClass(IntWritable.class);
  conf.setMapperClass(MapClass.class);
  conf.setCombinerClass(Reduce.class);
  conf.setReducerClass(Reduce.class);
  List<String> other_args=new ArrayList<String>();
  for (int i=0; i < args.length; ++i) {
    try {
      if ("-m".equals(args[i])) {
        conf.setNumMapTasks(Integer.parseInt(args[++i]));
      }
 else       if ("-r".equals(args[i])) {
        conf.setNumReduceTasks(Integer.parseInt(args[++i]));
      }
 else {
        other_args.add(args[i]);
      }
    }
 catch (    NumberFormatException except) {
      System.out.println("ERROR: Integer expected instead of " + args[i]);
      return printUsage();
    }
catch (    ArrayIndexOutOfBoundsException except) {
      System.out.println("ERROR: Required parameter missing from " + args[i - 1]);
      return printUsage();
    }
  }
  if (other_args.size() != 2) {
    System.out.println("ERROR: Wrong number of parameters: " + other_args.size() + " instead of 2.");
    return printUsage();
  }
  FileInputFormat.setInputPaths(conf,other_args.get(0));
  FileOutputFormat.setOutputPath(conf,new Path(other_args.get(1)));
  JobClient.runJob(conf);
  return 0;
}
