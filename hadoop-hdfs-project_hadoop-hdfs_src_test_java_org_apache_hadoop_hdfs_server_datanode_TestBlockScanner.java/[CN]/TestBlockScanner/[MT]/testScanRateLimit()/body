{
  Configuration conf=new Configuration();
  conf.setLong(DFS_BLOCK_SCANNER_VOLUME_BYTES_PER_SECOND,4096L);
  conf.setLong(INTERNAL_DFS_DATANODE_SCAN_PERIOD_MS,1L);
  conf.set(INTERNAL_VOLUME_SCANNER_SCAN_RESULT_HANDLER,TestScanResultHandler.class.getName());
  final TestContext ctx=new TestContext(conf,1);
  final int NUM_EXPECTED_BLOCKS=5;
  ctx.createFiles(0,NUM_EXPECTED_BLOCKS,4096);
  final TestScanResultHandler.Info info=TestScanResultHandler.getInfo(ctx.volumes.get(0));
  long startMs=Time.monotonicNow();
synchronized (info) {
    info.shouldRun=true;
    info.notify();
  }
  GenericTestUtils.waitFor(new Supplier<Boolean>(){
    @Override public Boolean get(){
synchronized (info) {
        return info.blocksScanned > 0;
      }
    }
  }
,1,30000);
  Thread.sleep(2000);
synchronized (info) {
    long endMs=Time.monotonicNow();
    long seconds=((endMs + 999 - startMs) / 1000);
    long maxBlocksScanned=seconds * 1;
    assertTrue("The number of blocks scanned is too large.  Scanned " + info.blocksScanned + " blocks; only expected to scan at most "+ maxBlocksScanned+ " in "+ seconds+ " seconds.",info.blocksScanned <= maxBlocksScanned);
  }
  ctx.close();
}
