{
  initBuffer(bufferSize);
  FileSystem fs=p.getFileSystem(conf);
  FSDataOutputStream stm=createFile(fs,p,replication);
  System.out.println("Created file simpleFlush.dat");
  stm.hflush();
  stm.hflush();
  stm.write(1);
  stm.hflush();
  stm.hflush();
  CountDownLatch countdown=new CountDownLatch(1);
  ArrayList<Thread> threads=new ArrayList<Thread>();
  AtomicReference<Throwable> thrown=new AtomicReference<Throwable>();
  for (int i=0; i < numThreads; i++) {
    Thread t=new WriterThread(stm,thrown,countdown,numWrites);
    threads.add(t);
    t.start();
  }
  countdown.countDown();
  for (  Thread t : threads) {
    t.join();
  }
  if (thrown.get() != null) {
    throw new RuntimeException("Deferred",thrown.get());
  }
  stm.close();
  System.out.println("Closed file.");
}
