{
  if (args.length != 1) {
    System.err.println("usage: " + TestMultiThreadedHflush.class.getSimpleName() + " <path to test file> ");
    System.err.println("Configurations settable by -D options:\n" + "  num.threads [default 10] - how many threads to run\n" + "  write.size [default 511] - bytes per write\n"+ "  num.writes [default 50000] - how many writes to perform");
    System.exit(1);
  }
  TestMultiThreadedHflush test=new TestMultiThreadedHflush();
  Configuration conf=getConf();
  Path p=new Path(args[0]);
  int numThreads=conf.getInt("num.threads",10);
  int writeSize=conf.getInt("write.size",511);
  int numWrites=conf.getInt("num.writes",50000);
  int replication=conf.getInt(DFSConfigKeys.DFS_REPLICATION_KEY,DFSConfigKeys.DFS_REPLICATION_DEFAULT);
  Stopwatch sw=new Stopwatch().start();
  test.doMultithreadedWrites(conf,p,numThreads,writeSize,numWrites,replication);
  sw.stop();
  System.out.println("Finished in " + sw.elapsedMillis() + "ms");
  System.out.println("Latency quantiles (in microseconds):\n" + test.quantiles);
  return 0;
}
