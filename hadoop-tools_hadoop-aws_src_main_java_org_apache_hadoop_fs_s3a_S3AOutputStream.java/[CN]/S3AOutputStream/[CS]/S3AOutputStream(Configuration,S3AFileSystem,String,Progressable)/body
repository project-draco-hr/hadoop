{
  this.key=key;
  this.progress=progress;
  this.fs=fs;
  partSize=fs.getPartitionSize();
  partSizeThreshold=fs.getMultiPartThreshold();
  if (conf.get(BUFFER_DIR,null) != null) {
    lDirAlloc=new LocalDirAllocator(BUFFER_DIR);
  }
 else {
    lDirAlloc=new LocalDirAllocator("${hadoop.tmp.dir}/s3a");
  }
  backupFile=lDirAlloc.createTmpFileForWrite("output-",LocalDirAllocator.SIZE_UNKNOWN,conf);
  closed=false;
  LOG.debug("OutputStream for key '{}' writing to tempfile: {}",key,backupFile);
  this.backupStream=new BufferedOutputStream(new FileOutputStream(backupFile));
}
