{
  try (Connection conn=getConnection();Statement stmt=conn.createStatement()){
    String sql="CREATE TABLE IF NOT EXISTS " + ENTITY_TABLE_NAME + "(user VARCHAR NOT NULL, cluster VARCHAR NOT NULL, "+ "flow_name VARCHAR NOT NULL, flow_version VARCHAR NOT NULL, "+ "flow_run UNSIGNED_LONG NOT NULL, "+ "app_id VARCHAR NOT NULL, type VARCHAR NOT NULL, "+ "entity_id VARCHAR NOT NULL, "+ "creation_time UNSIGNED_LONG, modified_time UNSIGNED_LONG, "+ "configs VARCHAR, "+ CONFIG_COLUMN_FAMILY+ PHOENIX_COL_FAMILY_PLACE_HOLDER+ " VARCHAR, "+ INFO_COLUMN_FAMILY+ PHOENIX_COL_FAMILY_PLACE_HOLDER+ " VARBINARY, "+ IS_RELATED_TO_FAMILY+ PHOENIX_COL_FAMILY_PLACE_HOLDER+ " VARCHAR, "+ RELATES_TO_FAMILY+ PHOENIX_COL_FAMILY_PLACE_HOLDER+ " VARCHAR "+ "CONSTRAINT pk PRIMARY KEY("+ "user, cluster, flow_name, flow_version, flow_run DESC, app_id, "+ "type, entity_id))";
    stmt.executeUpdate(sql);
    sql="CREATE TABLE IF NOT EXISTS " + EVENT_TABLE_NAME + "(user VARCHAR NOT NULL, cluster VARCHAR NOT NULL, "+ "flow_name VARCHAR NOT NULL, flow_version VARCHAR NOT NULL, "+ "flow_run UNSIGNED_LONG NOT NULL, "+ "app_id VARCHAR NOT NULL, type VARCHAR NOT NULL, "+ "entity_id VARCHAR NOT NULL, "+ "timestamp UNSIGNED_LONG NOT NULL, event_id VARCHAR NOT NULL, "+ EVENT_INFO_COLUMN_FAMILY+ PHOENIX_COL_FAMILY_PLACE_HOLDER+ " VARBINARY "+ "CONSTRAINT pk PRIMARY KEY("+ "user, cluster, flow_name, flow_version, flow_run DESC, app_id, "+ "type, entity_id, timestamp DESC, event_id))";
    stmt.executeUpdate(sql);
    sql="CREATE TABLE IF NOT EXISTS " + METRIC_TABLE_NAME + "(user VARCHAR NOT NULL, cluster VARCHAR NOT NULL, "+ "flow_name VARCHAR NOT NULL, flow_version VARCHAR NOT NULL, "+ "flow_run UNSIGNED_LONG NOT NULL, "+ "app_id VARCHAR NOT NULL, type VARCHAR NOT NULL, "+ "entity_id VARCHAR NOT NULL, "+ "metric_id VARCHAR NOT NULL, "+ "singledata VARBINARY, "+ "time UNSIGNED_LONG "+ "CONSTRAINT pk PRIMARY KEY("+ "user, cluster, flow_name, flow_version, flow_run DESC, app_id, "+ "type, entity_id, metric_id))";
    stmt.executeUpdate(sql);
    conn.commit();
  }
 catch (  SQLException se) {
    LOG.error("Failed in init data " + se.getLocalizedMessage());
    throw se;
  }
  return;
}
