{
  final Configuration conf=new HdfsConfiguration();
  conf.set(DFSConfigKeys.DFS_DATANODE_FSDATASET_FACTORY_KEY,DelayedSimulatedFSDataset.Factory.class.getName());
  final MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
  final DistributedFileSystem fs=cluster.getFileSystem();
  try {
    cluster.waitActive();
    final Path file=new Path("/foo");
    DFSTestUtil.createFile(fs,file,1024,(short)1,0L);
    final FSDataInputStream in=fs.open(file);
    AtomicBoolean readInterrupted=new AtomicBoolean(false);
    final Thread reader=new Thread(new Runnable(){
      @Override public void run(){
        try {
          in.read(new byte[1024],0,1024);
        }
 catch (        IOException e) {
          if (e instanceof ClosedByInterruptException || e instanceof InterruptedIOException) {
            readInterrupted.set(true);
          }
        }
      }
    }
);
    reader.start();
    Thread.sleep(1000);
    reader.interrupt();
    reader.join();
    Assert.assertTrue(readInterrupted.get());
  }
  finally {
    cluster.shutdown();
  }
}
