{
  List<ContainerResourceIncrease> incContainers=new ArrayList<ContainerResourceIncrease>();
  List<ContainerResourceDecrease> decContainers=new ArrayList<ContainerResourceDecrease>();
  for (int i=0; i < 3; i++) {
    incContainers.add(ContainerResourceIncrease.newInstance(null,Resource.newInstance(1024,i),null));
  }
  for (int i=0; i < 5; i++) {
    decContainers.add(ContainerResourceDecrease.newInstance(null,Resource.newInstance(1024,i)));
  }
  AllocateResponse r=AllocateResponse.newInstance(3,new ArrayList<ContainerStatus>(),new ArrayList<Container>(),new ArrayList<NodeReport>(),null,AMCommand.AM_RESYNC,3,null,new ArrayList<NMToken>(),incContainers,decContainers);
  AllocateResponseProto p=((AllocateResponsePBImpl)r).getProto();
  r=new AllocateResponsePBImpl(p);
  Assert.assertEquals(incContainers.size(),r.getIncreasedContainers().size());
  Assert.assertEquals(decContainers.size(),r.getDecreasedContainers().size());
  for (int i=0; i < incContainers.size(); i++) {
    Assert.assertEquals(i,r.getIncreasedContainers().get(i).getCapability().getVirtualCores());
  }
  for (int i=0; i < decContainers.size(); i++) {
    Assert.assertEquals(i,r.getDecreasedContainers().get(i).getCapability().getVirtualCores());
  }
}
