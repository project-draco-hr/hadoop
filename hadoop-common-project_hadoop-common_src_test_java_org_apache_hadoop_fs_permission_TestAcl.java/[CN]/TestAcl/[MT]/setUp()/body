{
  AclEntry.Builder aclEntryBuilder=new AclEntry.Builder().setType(AclEntryType.USER).setName("user1").setPermission(FsAction.ALL);
  ENTRY1=aclEntryBuilder.build();
  ENTRY2=aclEntryBuilder.build();
  ENTRY3=new AclEntry.Builder().setType(AclEntryType.GROUP).setName("group2").setPermission(FsAction.READ_WRITE).build();
  ENTRY4=new AclEntry.Builder().setType(AclEntryType.OTHER).setPermission(FsAction.NONE).setScope(AclEntryScope.DEFAULT).build();
  ENTRY5=new AclEntry.Builder().setType(AclEntryType.USER).setPermission(FsAction.ALL).build();
  ENTRY6=new AclEntry.Builder().setType(AclEntryType.GROUP).setName("group3").setPermission(FsAction.READ_WRITE).setScope(AclEntryScope.DEFAULT).build();
  ENTRY7=new AclEntry.Builder().setType(AclEntryType.OTHER).setPermission(FsAction.NONE).build();
  ENTRY8=new AclEntry.Builder().setType(AclEntryType.USER).setName("user3").setPermission(FsAction.ALL).setScope(AclEntryScope.DEFAULT).build();
  ENTRY9=new AclEntry.Builder().setType(AclEntryType.MASK).setPermission(FsAction.READ).build();
  ENTRY10=new AclEntry.Builder().setType(AclEntryType.MASK).setPermission(FsAction.READ_EXECUTE).setScope(AclEntryScope.DEFAULT).build();
  ENTRY11=new AclEntry.Builder().setType(AclEntryType.GROUP).setPermission(FsAction.READ).build();
  ENTRY12=new AclEntry.Builder().setType(AclEntryType.GROUP).setPermission(FsAction.READ).setScope(AclEntryScope.DEFAULT).build();
  ENTRY13=new AclEntry.Builder().setType(AclEntryType.USER).setPermission(FsAction.ALL).setScope(AclEntryScope.DEFAULT).build();
  AclStatus.Builder aclStatusBuilder=new AclStatus.Builder().owner("owner1").group("group1").addEntry(ENTRY1).addEntry(ENTRY3).addEntry(ENTRY4);
  STATUS1=aclStatusBuilder.build();
  STATUS2=aclStatusBuilder.build();
  STATUS3=new AclStatus.Builder().owner("owner2").group("group2").stickyBit(true).build();
  STATUS4=new AclStatus.Builder().addEntry(ENTRY1).addEntry(ENTRY3).addEntry(ENTRY4).addEntry(ENTRY5).addEntry(ENTRY6).addEntry(ENTRY7).addEntry(ENTRY8).addEntry(ENTRY9).addEntry(ENTRY10).addEntry(ENTRY11).addEntry(ENTRY12).addEntry(ENTRY13).build();
}
