{
  Configuration config=getConf();
  FileSystem fs=pathToListFile.getFileSystem(config);
  Path sortedList=DistCpUtils.sortListing(fs,config,pathToListFile);
  SequenceFile.Reader reader=new SequenceFile.Reader(config,SequenceFile.Reader.file(sortedList));
  try {
    Text lastKey=new Text("*");
    CopyListingFileStatus lastFileStatus=new CopyListingFileStatus();
    Text currentKey=new Text();
    Set<URI> aclSupportCheckFsSet=Sets.newHashSet();
    Set<URI> xAttrSupportCheckFsSet=Sets.newHashSet();
    long idx=0;
    while (reader.next(currentKey)) {
      if (currentKey.equals(lastKey)) {
        CopyListingFileStatus currentFileStatus=new CopyListingFileStatus();
        reader.getCurrentValue(currentFileStatus);
        throw new DuplicateFileException("File " + lastFileStatus.getPath() + " and "+ currentFileStatus.getPath()+ " would cause duplicates. Aborting");
      }
      reader.getCurrentValue(lastFileStatus);
      if (options.shouldPreserve(DistCpOptions.FileAttribute.ACL)) {
        FileSystem lastFs=lastFileStatus.getPath().getFileSystem(config);
        URI lastFsUri=lastFs.getUri();
        if (!aclSupportCheckFsSet.contains(lastFsUri)) {
          DistCpUtils.checkFileSystemAclSupport(lastFs);
          aclSupportCheckFsSet.add(lastFsUri);
        }
      }
      if (options.shouldPreserve(DistCpOptions.FileAttribute.XATTR)) {
        FileSystem lastFs=lastFileStatus.getPath().getFileSystem(config);
        URI lastFsUri=lastFs.getUri();
        if (!xAttrSupportCheckFsSet.contains(lastFsUri)) {
          DistCpUtils.checkFileSystemXAttrSupport(lastFs);
          xAttrSupportCheckFsSet.add(lastFsUri);
        }
      }
      lastKey.set(currentKey);
      if (options.shouldUseDiff() && LOG.isDebugEnabled()) {
        LOG.debug("Copy list entry " + idx + ": "+ lastFileStatus.getPath().toUri().getPath());
        idx++;
      }
    }
  }
  finally {
    IOUtils.closeStream(reader);
  }
}
