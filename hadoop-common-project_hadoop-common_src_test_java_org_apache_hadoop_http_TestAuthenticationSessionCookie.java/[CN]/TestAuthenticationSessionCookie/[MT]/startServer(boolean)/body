{
  Configuration conf=new Configuration();
  if (isTestSessionCookie) {
    conf.set(HttpServer2.FILTER_INITIALIZER_PROPERTY,DummyFilterInitializer.class.getName());
  }
 else {
    conf.set(HttpServer2.FILTER_INITIALIZER_PROPERTY,Dummy2FilterInitializer.class.getName());
  }
  File base=new File(BASEDIR);
  FileUtil.fullyDelete(base);
  base.mkdirs();
  keystoresDir=new File(BASEDIR).getAbsolutePath();
  sslConfDir=KeyStoreTestUtil.getClasspathDir(TestSSLHttpServer.class);
  KeyStoreTestUtil.setupSSLConfig(keystoresDir,sslConfDir,conf,false);
  Configuration sslConf=new Configuration(false);
  sslConf.addResource("ssl-server.xml");
  sslConf.addResource("ssl-client.xml");
  server=new HttpServer2.Builder().setName("test").addEndpoint(new URI("http://localhost")).addEndpoint(new URI("https://localhost")).setConf(conf).keyPassword(sslConf.get("ssl.server.keystore.keypassword")).keyStore(sslConf.get("ssl.server.keystore.location"),sslConf.get("ssl.server.keystore.password"),sslConf.get("ssl.server.keystore.type","jks")).trustStore(sslConf.get("ssl.server.truststore.location"),sslConf.get("ssl.server.truststore.password"),sslConf.get("ssl.server.truststore.type","jks")).build();
  server.addServlet("echo","/echo",TestHttpServer.EchoServlet.class);
  server.start();
}
