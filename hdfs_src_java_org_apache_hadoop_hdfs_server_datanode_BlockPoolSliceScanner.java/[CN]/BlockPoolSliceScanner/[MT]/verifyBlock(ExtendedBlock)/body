{
  BlockSender blockSender=null;
  for (int i=0; i < 2; i++) {
    boolean second=(i > 0);
    try {
      adjustThrottler();
      blockSender=new BlockSender(block,0,-1,false,false,true,datanode);
      DataOutputStream out=new DataOutputStream(new IOUtils.NullOutputStream());
      blockSender.sendBlock(out,null,throttler);
      LOG.info((second ? "Second " : "") + "Verification succeeded for " + block);
      if (second) {
        totalTransientErrors++;
      }
      updateScanStatus(block.getLocalBlock(),ScanType.VERIFICATION_SCAN,true);
      return;
    }
 catch (    IOException e) {
      updateScanStatus(block.getLocalBlock(),ScanType.VERIFICATION_SCAN,false);
      if (dataset.getFile(block.getBlockPoolId(),block.getLocalBlock()) == null) {
        LOG.info("Verification failed for " + block + ". Its ok since "+ "it not in datanode dataset anymore.");
        deleteBlock(block.getLocalBlock());
        return;
      }
      LOG.warn((second ? "Second " : "First ") + "Verification failed for " + block+ ". Exception : "+ StringUtils.stringifyException(e));
      if (second) {
        totalScanErrors++;
        datanode.getMetrics().incrBlockVerificationFailures();
        handleScanFailure(block);
        return;
      }
    }
 finally {
      IOUtils.closeStream(blockSender);
      datanode.getMetrics().incrBlocksVerified();
      totalScans++;
    }
  }
}
