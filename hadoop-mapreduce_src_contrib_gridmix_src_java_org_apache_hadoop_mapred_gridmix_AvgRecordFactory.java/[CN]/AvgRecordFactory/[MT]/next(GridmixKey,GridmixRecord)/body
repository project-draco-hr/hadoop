{
  if (accBytes >= targetBytes) {
    return false;
  }
  final int reclen=accRecords++ >= step ? avgrec - 1 : avgrec;
  final int len=(int)Math.min(targetBytes - accBytes,reclen);
  unspilledBytes+=len;
  if (key != null) {
    if (unspilledBytes < minSpilledBytes && accRecords < targetRecords) {
      key.setSize(1);
      val.setSize(1);
      accBytes+=key.getSize() + val.getSize();
      unspilledBytes-=(key.getSize() + val.getSize());
    }
 else {
      key.setSize(keyLen);
      val.setSize(unspilledBytes - key.getSize());
      accBytes+=unspilledBytes;
      unspilledBytes=0;
    }
  }
 else {
    if (unspilledBytes < minSpilledBytes && accRecords < targetRecords) {
      val.setSize(1);
      accBytes+=val.getSize();
      unspilledBytes-=val.getSize();
    }
 else {
      val.setSize(unspilledBytes);
      accBytes+=unspilledBytes;
      unspilledBytes=0;
    }
  }
  return true;
}
