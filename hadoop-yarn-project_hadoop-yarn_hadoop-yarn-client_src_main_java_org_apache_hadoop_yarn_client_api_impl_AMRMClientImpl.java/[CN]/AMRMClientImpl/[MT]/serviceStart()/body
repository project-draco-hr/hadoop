{
  final YarnConfiguration conf=new YarnConfiguration(getConfig());
  final YarnRPC rpc=YarnRPC.create(conf);
  final InetSocketAddress rmAddress=conf.getSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);
  UserGroupInformation currentUser;
  try {
    currentUser=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException e) {
    throw new YarnRuntimeException(e);
  }
  rmClient=currentUser.doAs(new PrivilegedAction<ApplicationMasterProtocol>(){
    @Override public ApplicationMasterProtocol run(){
      return (ApplicationMasterProtocol)rpc.getProxy(ApplicationMasterProtocol.class,rmAddress,conf);
    }
  }
);
  LOG.debug("Connecting to ResourceManager at " + rmAddress);
  super.serviceStart();
}
