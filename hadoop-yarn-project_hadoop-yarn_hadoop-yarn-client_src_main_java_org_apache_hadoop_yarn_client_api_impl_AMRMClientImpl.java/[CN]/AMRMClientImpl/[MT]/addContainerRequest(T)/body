{
  Set<String> allRacks=new HashSet<String>();
  if (req.getRacks() != null) {
    allRacks.addAll(req.getRacks());
    if (req.getRacks().size() != allRacks.size()) {
      Joiner joiner=Joiner.on(',');
      LOG.warn("ContainerRequest has duplicate racks: " + joiner.join(req.getRacks()));
    }
  }
  allRacks.addAll(resolveRacks(req.getNodes()));
  if (req.getNodes() != null) {
    HashSet<String> dedupedNodes=new HashSet<String>(req.getNodes());
    if (dedupedNodes.size() != req.getNodes().size()) {
      Joiner joiner=Joiner.on(',');
      LOG.warn("ContainerRequest has duplicate nodes: " + joiner.join(req.getNodes()));
    }
    for (    String node : dedupedNodes) {
      addResourceRequest(req.getPriority(),node,req.getCapability(),req.getContainerCount(),req);
    }
  }
  for (  String rack : allRacks) {
    addResourceRequest(req.getPriority(),rack,req.getCapability(),req.getContainerCount(),req);
  }
  addResourceRequest(req.getPriority(),ResourceRequest.ANY,req.getCapability(),req.getContainerCount(),req);
}
