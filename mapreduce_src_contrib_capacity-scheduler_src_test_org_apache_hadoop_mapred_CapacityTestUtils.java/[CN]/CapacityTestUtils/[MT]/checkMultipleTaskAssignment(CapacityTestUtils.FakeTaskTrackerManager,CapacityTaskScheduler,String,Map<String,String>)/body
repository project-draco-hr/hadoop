{
  List<Task> tasks=scheduler.assignTasks(taskTrackerManager.getTaskTracker(taskTrackerName));
  if (tasks == null || tasks.isEmpty()) {
    if (expectedTaskStrings.size() > 0) {
      fail("Expected some tasks to be assigned, but got none.");
    }
 else {
      return null;
    }
  }
  if (expectedTaskStrings.size() > tasks.size()) {
    StringBuffer sb=new StringBuffer();
    sb.append("Expected strings different from actual strings.");
    sb.append(" Expected string count=").append(expectedTaskStrings.size());
    sb.append(" Actual string count=").append(tasks.size());
    sb.append(" Expected strings=");
    for (    String expectedTask : expectedTaskStrings.values()) {
      sb.append(expectedTask).append(",");
    }
    sb.append("Actual strings=");
    for (    Task actualTask : tasks) {
      sb.append(actualTask.toString()).append(",");
    }
    fail(sb.toString());
  }
  for (  Task task : tasks) {
    LOG.info("tasks are : " + tasks.toString());
    if (task.isMapTask()) {
      if (expectedTaskStrings.get(MAP) != null) {
        assertEquals(expectedTaskStrings.get(MAP),task.toString());
      }
 else {
        fail("No map task is expected, but got " + task.toString());
      }
    }
 else {
      if (expectedTaskStrings.get(REDUCE) != null) {
        assertEquals(expectedTaskStrings.get(REDUCE),task.toString());
      }
 else {
        fail("No reduce task is expected, but got " + task.toString());
      }
    }
  }
  return tasks;
}
