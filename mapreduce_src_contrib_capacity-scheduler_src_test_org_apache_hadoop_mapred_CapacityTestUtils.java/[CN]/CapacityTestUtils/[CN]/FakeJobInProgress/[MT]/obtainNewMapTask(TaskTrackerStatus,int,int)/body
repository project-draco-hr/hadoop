{
  boolean areAllMapsRunning=(mapTaskCtr == numMapTasks);
  if (areAllMapsRunning) {
    if (!getJobConf().getMapSpeculativeExecution() || speculativeMapTasks > 0) {
      return null;
    }
  }
  TaskAttemptID attemptId=getTaskAttemptID(true,areAllMapsRunning);
  JobSplit.TaskSplitMetaInfo split=JobSplit.EMPTY_TASK_SPLIT;
  Task task=new MapTask("",attemptId,0,split.getSplitIndex(),super.numSlotsPerMap){
    @Override public String toString(){
      return String.format("%s on %s",getTaskID(),tts.getTrackerName());
    }
  }
;
  taskTrackerManager.startTask(tts.getTrackerName(),task);
  runningMapTasks++;
  FakeTaskInProgress mapTip=new FakeTaskInProgress(getJobID(),getJobConf(),task,true,this,split);
  mapTip.taskStatus.setRunState(TaskStatus.State.RUNNING);
  if (areAllMapsRunning) {
    speculativeMapTasks++;
    for (    TaskInProgress t : mapTips) {
      if (t instanceof FakeTaskInProgress) {
        FakeTaskInProgress mt=(FakeTaskInProgress)t;
        mt.hasSpeculativeMap=false;
      }
    }
  }
 else {
    mapTips.add(mapTip);
    maps=mapTips.toArray(new TaskInProgress[mapTips.size()]);
  }
  return task;
}
