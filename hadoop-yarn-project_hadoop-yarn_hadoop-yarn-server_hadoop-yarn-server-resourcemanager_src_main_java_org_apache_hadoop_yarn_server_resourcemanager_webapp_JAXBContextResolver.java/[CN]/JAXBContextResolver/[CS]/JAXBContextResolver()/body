{
  JAXBContext context;
  JAXBContext unWrappedRootContext;
  final Class[] cTypes={AppInfo.class,AppAttemptInfo.class,AppAttemptsInfo.class,ClusterInfo.class,CapacitySchedulerQueueInfo.class,FifoSchedulerInfo.class,SchedulerTypeInfo.class,NodeInfo.class,UserMetricsInfo.class,CapacitySchedulerInfo.class,ClusterMetricsInfo.class,SchedulerInfo.class,AppsInfo.class,NodesInfo.class,RemoteExceptionData.class,CapacitySchedulerQueueInfoList.class,ResourceInfo.class,UsersInfo.class,UserInfo.class,ApplicationStatisticsInfo.class,StatisticsItemInfo.class,CapacitySchedulerHealthInfo.class};
  final Class[] rootUnwrappedTypes={NewApplication.class,ApplicationSubmissionContextInfo.class,ContainerLaunchContextInfo.class,LocalResourceInfo.class,DelegationToken.class,AppQueue.class};
  this.typesContextMap=new HashMap<Class,JAXBContext>();
  context=new JSONJAXBContext(JSONConfiguration.natural().rootUnwrapping(false).build(),cTypes);
  unWrappedRootContext=new JSONJAXBContext(JSONConfiguration.natural().rootUnwrapping(true).build(),rootUnwrappedTypes);
  for (  Class type : cTypes) {
    typesContextMap.put(type,context);
  }
  for (  Class type : rootUnwrappedTypes) {
    typesContextMap.put(type,unWrappedRootContext);
  }
}
