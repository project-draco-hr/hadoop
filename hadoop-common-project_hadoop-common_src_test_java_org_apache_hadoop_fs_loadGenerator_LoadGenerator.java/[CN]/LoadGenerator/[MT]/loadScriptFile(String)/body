{
  FileReader fr=new FileReader(new File(filename));
  BufferedReader br=new BufferedReader(fr);
  ArrayList<Long> duration=new ArrayList<Long>();
  ArrayList<Double> readProb=new ArrayList<Double>();
  ArrayList<Double> writeProb=new ArrayList<Double>();
  int lineNum=0;
  String line;
  while ((line=br.readLine()) != null) {
    lineNum++;
    if (line.startsWith("#") || line.isEmpty())     continue;
    String[] a=line.split("\\s");
    if (a.length != 3) {
      System.err.println("Line " + lineNum + ": Incorrect number of parameters: "+ line);
    }
    try {
      long d=Long.parseLong(a[0]);
      if (d < 0) {
        System.err.println("Line " + lineNum + ": Invalid duration: "+ d);
        return -1;
      }
      double r=Double.parseDouble(a[1]);
      if (r < 0.0 || r > 1.0) {
        System.err.println("Line " + lineNum + ": The read probability must be [0, 1]: "+ r);
        return -1;
      }
      double w=Double.parseDouble(a[2]);
      if (w < 0.0 || w > 1.0) {
        System.err.println("Line " + lineNum + ": The read probability must be [0, 1]: "+ r);
        return -1;
      }
      readProb.add(r);
      duration.add(d);
      writeProb.add(w);
    }
 catch (    NumberFormatException nfe) {
      System.err.println(lineNum + ": Can't parse: " + line);
      return -1;
    }
 finally {
      IOUtils.cleanup(LOG,br);
    }
  }
  durations=new long[duration.size()];
  readProbs=new double[readProb.size()];
  writeProbs=new double[writeProb.size()];
  for (int i=0; i < durations.length; i++) {
    durations[i]=duration.get(i);
    readProbs[i]=readProb.get(i);
    writeProbs[i]=writeProb.get(i);
  }
  if (durations[0] == 0)   System.err.println("Initial duration set to 0.  " + "Will loop until stopped manually.");
  return 0;
}
