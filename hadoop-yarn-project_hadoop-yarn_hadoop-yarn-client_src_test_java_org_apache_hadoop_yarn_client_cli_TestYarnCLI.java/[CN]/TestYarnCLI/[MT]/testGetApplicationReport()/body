{
  ApplicationCLI cli=createAndGetAppCLI();
  ApplicationId applicationId=ApplicationId.newInstance(1234,5);
  ApplicationReport newApplicationReport=ApplicationReport.newInstance(applicationId,ApplicationAttemptId.newInstance(applicationId,1),"user","queue","appname","host",124,null,YarnApplicationState.FINISHED,"diagnostics","url",0,0,FinalApplicationStatus.SUCCEEDED,null,"N/A",0.53789f,"YARN",null);
  when(client.getApplicationReport(any(ApplicationId.class))).thenReturn(newApplicationReport);
  int result=cli.run(new String[]{"-status",applicationId.toString()});
  assertEquals(0,result);
  verify(client).getApplicationReport(applicationId);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PrintWriter pw=new PrintWriter(baos);
  pw.println("Application Report : ");
  pw.println("\tApplication-Id : application_1234_0005");
  pw.println("\tApplication-Name : appname");
  pw.println("\tApplication-Type : YARN");
  pw.println("\tUser : user");
  pw.println("\tQueue : queue");
  pw.println("\tStart-Time : 0");
  pw.println("\tFinish-Time : 0");
  pw.println("\tProgress : 53.79%");
  pw.println("\tState : FINISHED");
  pw.println("\tFinal-State : SUCCEEDED");
  pw.println("\tTracking-URL : N/A");
  pw.println("\tRPC Port : 124");
  pw.println("\tAM Host : host");
  pw.println("\tDiagnostics : diagnostics");
  pw.close();
  String appReportStr=baos.toString("UTF-8");
  Assert.assertEquals(appReportStr,sysOutStream.toString());
  verify(sysOut,times(1)).println(isA(String.class));
}
