{
  NodeId nodeId=NodeId.newInstance("host0",0);
  NodeCLI cli=new NodeCLI();
  when(client.getNodeReports()).thenReturn(getNodeReports(3,NodeState.RUNNING,false));
  cli.setClient(client);
  cli.setSysOutPrintStream(sysOut);
  cli.setSysErrPrintStream(sysErr);
  int result=cli.run(new String[]{"-status",nodeId.toString()});
  assertEquals(0,result);
  verify(client).getNodeReports();
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PrintWriter pw=new PrintWriter(baos);
  pw.println("Node Report : ");
  pw.println("\tNode-Id : host0:0");
  pw.println("\tRack : rack1");
  pw.println("\tNode-State : RUNNING");
  pw.println("\tNode-Http-Address : host1:8888");
  pw.println("\tLast-Health-Update : " + DateFormatUtils.format(new Date(0),"E dd/MMM/yy hh:mm:ss:SSzz"));
  pw.println("\tHealth-Report : ");
  pw.println("\tContainers : 0");
  pw.println("\tMemory-Used : 0MB");
  pw.println("\tMemory-Capacity : 0MB");
  pw.println("\tCPU-Used : 0 vcores");
  pw.println("\tCPU-Capacity : 0 vcores");
  pw.println("\tNode-Labels : a,b,c,x,y,z");
  pw.println("\tResource Utilization by Node : PMem:2048 MB, VMem:4096 MB, VCores:8.0");
  pw.println("\tResource Utilization by Containers : PMem:1024 MB, VMem:2048 MB, VCores:4.0");
  pw.close();
  String nodeStatusStr=baos.toString("UTF-8");
  verify(sysOut,times(1)).println(isA(String.class));
  verify(sysOut).println(nodeStatusStr);
}
