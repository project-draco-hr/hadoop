{
  ApplicationCLI cli=createAndGetAppCLI();
  ApplicationId applicationId=ApplicationId.newInstance(1234,5);
  ApplicationAttemptId attemptId=ApplicationAttemptId.newInstance(applicationId,1);
  ContainerId containerId=ContainerId.newContainerId(attemptId,1);
  ContainerId containerId1=ContainerId.newContainerId(attemptId,2);
  ContainerId containerId2=ContainerId.newContainerId(attemptId,3);
  long time1=1234, time2=5678;
  ContainerReport container=ContainerReport.newInstance(containerId,null,NodeId.newInstance("host",1234),Priority.UNDEFINED,time1,time2,"diagnosticInfo","logURL",0,ContainerState.COMPLETE,"http://" + NodeId.newInstance("host",2345).toString());
  ContainerReport container1=ContainerReport.newInstance(containerId1,null,NodeId.newInstance("host",1234),Priority.UNDEFINED,time1,time2,"diagnosticInfo","logURL",0,ContainerState.COMPLETE,"http://" + NodeId.newInstance("host",2345).toString());
  ContainerReport container2=ContainerReport.newInstance(containerId2,null,NodeId.newInstance("host",1234),Priority.UNDEFINED,time1,0,"diagnosticInfo","",0,ContainerState.RUNNING,"http://" + NodeId.newInstance("host",2345).toString());
  List<ContainerReport> reports=new ArrayList<ContainerReport>();
  reports.add(container);
  reports.add(container1);
  reports.add(container2);
  DateFormat dateFormat=new SimpleDateFormat("EEE MMM dd HH:mm:ss Z yyyy");
  when(client.getContainers(any(ApplicationAttemptId.class))).thenReturn(reports);
  sysOutStream.reset();
  int result=cli.run(new String[]{"container","-list",attemptId.toString()});
  assertEquals(0,result);
  verify(client).getContainers(attemptId);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  OutputStreamWriter stream=new OutputStreamWriter(baos,"UTF-8");
  PrintWriter pw=new PrintWriter(stream);
  pw.println("Total number of containers :3");
  pw.print("                  Container-Id");
  pw.print("\t          Start Time");
  pw.print("\t         Finish Time");
  pw.print("\t               State");
  pw.print("\t                Host");
  pw.print("\t   Node Http Address");
  pw.println("\t                            LOG-URL");
  pw.print(" container_1234_0005_01_000001");
  pw.print("\t" + dateFormat.format(new Date(time1)));
  pw.print("\t" + dateFormat.format(new Date(time2)));
  pw.print("\t            COMPLETE");
  pw.print("\t           host:1234");
  pw.print("\t    http://host:2345");
  pw.println("\t                             logURL");
  pw.print(" container_1234_0005_01_000002");
  pw.print("\t" + dateFormat.format(new Date(time1)));
  pw.print("\t" + dateFormat.format(new Date(time2)));
  pw.print("\t            COMPLETE");
  pw.print("\t           host:1234");
  pw.print("\t    http://host:2345");
  pw.println("\t                             logURL");
  pw.print(" container_1234_0005_01_000003");
  pw.print("\t" + dateFormat.format(new Date(time1)));
  pw.print("\t                 N/A");
  pw.print("\t             RUNNING");
  pw.print("\t           host:1234");
  pw.print("\t    http://host:2345");
  pw.println("\t                                   ");
  pw.close();
  String appReportStr=baos.toString("UTF-8");
  Log.info("ExpectedOutput");
  Log.info("[" + appReportStr + "]");
  Log.info("OutputFrom command");
  String actualOutput=sysOutStream.toString("UTF-8");
  Log.info("[" + actualOutput + "]");
  Assert.assertEquals(appReportStr,actualOutput);
}
