{
  MetricsRecordBuilder mb=mockMetricsRecordBuilder();
  MetricsRegistry registry=new MetricsRegistry("test");
  MutableQuantiles quantiles=registry.newQuantiles("foo","stat","Ops","Latency",5);
  Quantile[] quants=MutableQuantiles.quantiles;
  String name="Foo%dthPercentileLatency";
  String desc="%d percentile latency with 5 second interval for stat";
  long start=System.nanoTime() / 1000000;
  for (int i=1; i <= 3; i++) {
    for (long j=1; j <= 1000; j++) {
      quantiles.add(i);
    }
    long sleep=(start + (5000 * i) + 1000) - (System.nanoTime() / 1000000);
    Thread.sleep(sleep);
    registry.snapshot(mb,false);
    for (    Quantile q : quants) {
      int percentile=(int)(100 * q.quantile);
      String n=String.format(name,percentile);
      String d=String.format(desc,percentile);
      verify(mb).addGauge(info(n,d),(long)i);
    }
  }
  verify(mb,times(3)).addGauge(info("FooNumOps","Number of ops for stat with 5s interval"),(long)1000);
  for (  Quantile q : quants) {
    int percentile=(int)(100 * q.quantile);
    String n=String.format(name,percentile);
    String d=String.format(desc,percentile);
    verify(mb,times(3)).addGauge(eq(info(n,d)),anyLong());
  }
}
