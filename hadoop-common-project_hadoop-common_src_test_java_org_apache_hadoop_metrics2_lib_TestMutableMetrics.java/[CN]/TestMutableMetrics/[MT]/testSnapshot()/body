{
  MetricsRecordBuilder mb=mockMetricsRecordBuilder();
  MetricsRegistry registry=new MetricsRegistry("test");
  registry.newCounter("c1","int counter",1);
  registry.newCounter("c2","long counter",2L);
  registry.newGauge("g1","int gauge",3);
  registry.newGauge("g2","long gauge",4L);
  registry.newStat("s1","stat","Ops","Time",true).add(0);
  registry.newRate("s2","stat",false).add(0);
  registry.snapshot(mb,true);
  MutableStat s2=(MutableStat)registry.get("s2");
  s2.snapshot(mb,true);
  s2.add(1);
  s2.snapshot(mb,true);
  verify(mb).addCounter(info("c1","int counter"),1);
  verify(mb).addCounter(info("c2","long counter"),2L);
  verify(mb).addGauge(info("g1","int gauge"),3);
  verify(mb).addGauge(info("g2","long gauge"),4L);
  verify(mb).addCounter(info("S1NumOps","Number of ops for stat"),1L);
  verify(mb).addGauge(eq(info("S1AvgTime","Average time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1StdevTime","Standard deviation of time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1IMinTime","Interval min time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1IMaxTime","Interval max time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1MinTime","Min time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1MaxTime","Max time for stat")),eq(0.0,EPSILON));
  verify(mb).addGauge(eq(info("S1INumOps","Interval number of ops for stat")),eq(1L));
  verify(mb,times(2)).addCounter(info("S2NumOps","Number of ops for stat"),1L);
  verify(mb,times(2)).addGauge(eq(info("S2AvgTime","Average time for stat")),eq(0.0,EPSILON));
  verify(mb).addCounter(info("S2NumOps","Number of ops for stat"),2L);
  verify(mb).addGauge(eq(info("S2AvgTime","Average time for stat")),eq(1.0,EPSILON));
  MutableStat s1=(MutableStat)registry.get("s1");
  s1.add(0);
  registry.snapshot(mb,true);
  verify(mb).addCounter(info("S1NumOps","Number of ops for stat"),2L);
  verify(mb,times(2)).addGauge(eq(info("S1INumOps","Interval number of ops for stat")),eq(1L));
}
