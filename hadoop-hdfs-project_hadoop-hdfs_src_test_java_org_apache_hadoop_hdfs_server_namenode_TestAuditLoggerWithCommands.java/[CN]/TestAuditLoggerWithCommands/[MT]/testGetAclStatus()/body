{
  Path path=new Path("/test");
  fs.mkdirs(path);
  fileSys=DFSTestUtil.getFileSystemAs(user1,conf);
  fs.setOwner(path,user1.getUserName(),user1.getPrimaryGroupName());
  final FSDirectory dir=cluster.getNamesystem().getFSDirectory();
  final FSDirectory mockedDir=Mockito.spy(dir);
  AccessControlException ex=new AccessControlException();
  doThrow(ex).when(mockedDir).getPermissionChecker();
  cluster.getNamesystem().setFSDirectory(mockedDir);
  String aceGetAclStatus=".*allowed=false.*ugi=theDoctor.*cmd=getAclStatus.*";
  try {
    fileSys.getAclStatus(path);
    fail("The operation should have failed with AccessControlException");
  }
 catch (  AccessControlException ace) {
  }
  int length=verifyAuditLogs(aceGetAclStatus);
  fileSys.close();
  try {
    fileSys.getAclStatus(path);
    verifyAuditLogs(aceGetAclStatus);
    fail("The operation should have failed with IOException");
  }
 catch (  IOException ace) {
  }
  assertTrue("Unexpected log!",length == auditlog.getOutput().split("\n").length);
  cluster.getNamesystem().setFSDirectory(dir);
}
