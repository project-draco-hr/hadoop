{
  ApplicationId appId=ApplicationId.newInstance(12345,67);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,3);
  JobId jobId=MRBuilderUtils.newJobId(appId,8);
  TaskId taskId=MRBuilderUtils.newTaskId(jobId,9,TaskType.MAP);
  TaskAttemptId taskAttemptId=MRBuilderUtils.newTaskAttemptId(taskId,0);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,10);
  AppContext context=mock(AppContext.class);
  CustomContainerLauncher containerLauncher=new CustomContainerLauncher(context);
  Configuration conf=new Configuration();
  conf.setInt(MRJobConfig.MR_AM_CONTAINERLAUNCHER_THREAD_COUNT_LIMIT,12);
  containerLauncher.init(conf);
  containerLauncher.start();
  ThreadPoolExecutor threadPool=containerLauncher.getThreadPool();
  containerLauncher.expectedCorePoolSize=containerLauncher.initialPoolSize;
  for (int i=0; i < 10; i++) {
    containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId,containerId,"host" + i + ":1234",null,ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH));
  }
  waitForEvents(containerLauncher,10);
  Assert.assertEquals(10,threadPool.getPoolSize());
  Assert.assertNull(containerLauncher.foundErrors);
  containerLauncher.expectedCorePoolSize=12;
  for (int i=1; i <= 4; i++) {
    containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId,containerId,"host1" + i + ":1234",null,ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH));
  }
  waitForEvents(containerLauncher,12);
  Assert.assertEquals(12,threadPool.getPoolSize());
  Assert.assertNull(containerLauncher.foundErrors);
  containerLauncher.finishEventHandling=true;
  waitForEvents(containerLauncher,14);
  Assert.assertEquals(12,threadPool.getPoolSize());
  Assert.assertNull(containerLauncher.foundErrors);
  containerLauncher.stop();
}
