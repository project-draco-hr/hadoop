{
  long fileSize=4096;
  Path file=new Path("/testFile");
  short replFactor=(short)numDataNodes;
  Configuration conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_REPLICATION_KEY,numDataNodes);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build();
  try {
    cluster.waitActive();
    FileSystem fs=cluster.getFileSystem();
    DFSTestUtil.createFile(fs,file,fileSize,replFactor,12345L);
    DFSTestUtil.waitReplication(fs,file,replFactor);
    ExtendedBlock block=DFSTestUtil.getFirstBlock(fs,file);
    int blockFilesCorrupted=cluster.corruptBlockOnDataNodes(block);
    assertEquals("All replicas not corrupted",replFactor,blockFilesCorrupted);
    try {
      IOUtils.copyBytes(fs.open(file),new IOUtils.NullOutputStream(),conf,true);
      fail("Didn't get exception");
    }
 catch (    IOException ioe) {
      DFSClient.LOG.info("Got expected exception",ioe);
    }
  }
  finally {
    cluster.shutdown();
  }
}
