{
  while (!qAlloc.isEmpty() && Resources.greaterThan(rc,tot_guarant,unassigned,Resources.none())) {
    Resource wQassigned=Resource.newInstance(0,0);
    resetCapacity(rc,unassigned,qAlloc,ignoreGuarantee);
    for (Iterator<TempQueue> i=qAlloc.iterator(); i.hasNext(); ) {
      TempQueue sub=i.next();
      Resource wQavail=Resources.multiply(unassigned,sub.normalizedGuarantee);
      Resource wQidle=sub.offer(wQavail,rc,tot_guarant);
      Resource wQdone=Resources.subtract(wQavail,wQidle);
      if (!Resources.greaterThan(rc,tot_guarant,wQdone,Resources.none())) {
        i.remove();
      }
      Resources.addTo(wQassigned,wQdone);
    }
    Resources.subtractFrom(unassigned,wQassigned);
  }
}
