{
  DataNodeDiskChecker diskChecker=mock(DataNodeDiskChecker.class);
  doThrow(new IOException()).doThrow(new IOException()).doNothing().when(diskChecker).checkDir(any(LocalFileSystem.class),any(Path.class));
  LocalFileSystem fs=mock(LocalFileSystem.class);
  AbstractList<StorageLocation> locations=new ArrayList<StorageLocation>();
  locations.add(new StorageLocation(new URI("file:/p1/")));
  locations.add(new StorageLocation(new URI("file:/p2/")));
  locations.add(new StorageLocation(new URI("file:/p3/")));
  ArrayList<StorageLocation> checkedLocations=DataNode.checkStorageLocations(locations,fs,diskChecker);
  assertEquals("number of valid data dirs",1,checkedLocations.size());
  String validDir=checkedLocations.iterator().next().getFile().getPath();
  assertThat("p3 should be valid",new File("/p3/").getPath(),is(validDir));
}
