{
  numActiveTrackers=in.readInt();
  int numTrackerNames=in.readInt();
  if (numTrackerNames > 0) {
    for (int i=0; i < numTrackerNames; i++) {
      String name=StringInterner.weakIntern(Text.readString(in));
      activeTrackers.add(name);
    }
  }
  numBlacklistedTrackers=in.readInt();
  int blackListTrackerInfoSize=in.readInt();
  if (blackListTrackerInfoSize > 0) {
    for (int i=0; i < blackListTrackerInfoSize; i++) {
      BlackListInfo info=new BlackListInfo();
      info.readFields(in);
      blacklistedTrackersInfo.add(info);
    }
  }
  numExcludedNodes=in.readInt();
  ttExpiryInterval=in.readLong();
  map_tasks=in.readInt();
  reduce_tasks=in.readInt();
  max_map_tasks=in.readInt();
  max_reduce_tasks=in.readInt();
  status=WritableUtils.readEnum(in,JobTrackerStatus.class);
  grayListedTrackers=in.readInt();
}
