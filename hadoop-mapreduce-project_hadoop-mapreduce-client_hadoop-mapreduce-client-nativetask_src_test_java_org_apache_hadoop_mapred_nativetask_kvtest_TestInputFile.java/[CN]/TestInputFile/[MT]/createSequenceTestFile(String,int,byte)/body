{
  LOG.info("creating file " + filepath + "("+ filesize+ " bytes)");
  LOG.info(keyClsName + " " + valueClsName);
  Class<?> tmpkeycls, tmpvaluecls;
  try {
    tmpkeycls=Class.forName(keyClsName);
  }
 catch (  final ClassNotFoundException e) {
    throw new Exception("key class not found: ",e);
  }
  try {
    tmpvaluecls=Class.forName(valueClsName);
  }
 catch (  final ClassNotFoundException e) {
    throw new Exception("key class not found: ",e);
  }
  try {
    final Path outputfilepath=new Path(filepath);
    final ScenarioConfiguration conf=new ScenarioConfiguration();
    writer=SequenceFile.createWriter(conf,SequenceFile.Writer.file(outputfilepath),SequenceFile.Writer.keyClass(tmpkeycls),SequenceFile.Writer.valueClass(tmpvaluecls));
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
  int tmpfilesize=this.filesize;
  while (tmpfilesize > DATABUFSIZE) {
    nextRandomBytes(databuf,base,start);
    final int size=flushBuf(DATABUFSIZE);
    tmpfilesize-=size;
  }
  nextRandomBytes(databuf,base,start);
  flushBuf(tmpfilesize);
  if (writer != null) {
    IOUtils.closeStream(writer);
  }
 else {
    throw new Exception("no writer to create sequenceTestFile!");
  }
}
