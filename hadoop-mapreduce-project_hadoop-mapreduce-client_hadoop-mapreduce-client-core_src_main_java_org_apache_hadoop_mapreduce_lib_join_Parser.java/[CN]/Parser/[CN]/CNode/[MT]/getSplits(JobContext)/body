{
  List<List<InputSplit>> splits=new ArrayList<List<InputSplit>>(kids.size());
  for (int i=0; i < kids.size(); ++i) {
    List<InputSplit> tmp=kids.get(i).getSplits(job);
    if (null == tmp) {
      throw new IOException("Error gathering splits from child RReader");
    }
    if (i > 0 && splits.get(i - 1).size() != tmp.size()) {
      throw new IOException("Inconsistent split cardinality from child " + i + " ("+ splits.get(i - 1).size()+ "/"+ tmp.size()+ ")");
    }
    splits.add(i,tmp);
  }
  final int size=splits.get(0).size();
  List<InputSplit> ret=new ArrayList<InputSplit>();
  for (int i=0; i < size; ++i) {
    CompositeInputSplit split=new CompositeInputSplit(splits.size());
    for (int j=0; j < splits.size(); ++j) {
      split.add(splits.get(j).get(i));
    }
    ret.add(split);
  }
  return ret;
}
