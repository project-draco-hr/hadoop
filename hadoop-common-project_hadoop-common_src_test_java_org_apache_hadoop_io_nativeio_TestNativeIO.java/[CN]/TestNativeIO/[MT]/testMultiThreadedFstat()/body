{
  final FileOutputStream fos=new FileOutputStream(new File(TEST_DIR,"testfstat"));
  final AtomicReference<Throwable> thrown=new AtomicReference<Throwable>();
  List<Thread> statters=new ArrayList<Thread>();
  for (int i=0; i < 10; i++) {
    Thread statter=new Thread(){
      public void run(){
        long et=Time.now() + 5000;
        while (Time.now() < et) {
          try {
            NativeIO.Stat stat=NativeIO.fstat(fos.getFD());
            assertEquals(System.getProperty("user.name"),stat.getOwner());
            assertNotNull(stat.getGroup());
            assertTrue(!"".equals(stat.getGroup()));
            assertEquals("Stat mode field should indicate a regular file",NativeIO.Stat.S_IFREG,stat.getMode() & NativeIO.Stat.S_IFMT);
          }
 catch (          Throwable t) {
            thrown.set(t);
          }
        }
      }
    }
;
    statters.add(statter);
    statter.start();
  }
  for (  Thread t : statters) {
    t.join();
  }
  fos.close();
  if (thrown.get() != null) {
    throw new RuntimeException(thrown.get());
  }
}
