{
  String jid=$(JOB_ID);
  if (jid.isEmpty()) {
    html.p()._("Sorry, can't do anything without a JobID.")._();
    return;
  }
  JobId jobID=MRApps.toJobID(jid);
  Job job=appContext.getJob(jobID);
  if (job == null) {
    html.p()._("Sorry, ",jid," not found.")._();
    return;
  }
  List<AMInfo> amInfos=job.getAMInfos();
  String amString=amInfos.size() == 1 ? "ApplicationMaster" : "ApplicationMasters";
  JobInfo jinfo=new JobInfo(job,true);
  info("Job Overview")._("Job Name:",jinfo.getName())._("State:",jinfo.getState())._("Uberized:",jinfo.isUberized())._("Started:",new Date(jinfo.getStartTime()))._("Elapsed:",StringUtils.formatTime(jinfo.getElapsedTime()));
  DIV<Hamlet> div=html._(InfoBlock.class).div(_INFO_WRAP);
  TABLE<DIV<Hamlet>> table=div.table("#job");
  table.tr().th(amString)._().tr().th(_TH,"Attempt Number").th(_TH,"Start Time").th(_TH,"Node").th(_TH,"Logs")._();
  for (  AMInfo amInfo : amInfos) {
    AMAttemptInfo attempt=new AMAttemptInfo(amInfo,jinfo.getId(),jinfo.getUserName());
    table.tr().td(String.valueOf(attempt.getAttemptId())).td(new Date(attempt.getStartTime()).toString()).td().a(".nodelink",url(HttpConfig.getSchemePrefix(),attempt.getNodeHttpAddress()),attempt.getNodeHttpAddress())._().td().a(".logslink",url(attempt.getLogsLink()),"logs")._()._();
  }
  table._();
  div._();
  html.div(_INFO_WRAP).table("#job").tr().th(_TH,"Task Type").th(_TH,"Progress").th(_TH,"Total").th(_TH,"Pending").th(_TH,"Running").th(_TH,"Complete")._().tr(_ODD).th().a(url("tasks",jid,"m"),"Map")._().td().div(_PROGRESSBAR).$title(join(jinfo.getMapProgressPercent(),'%')).div(_PROGRESSBAR_VALUE).$style(join("width:",jinfo.getMapProgressPercent(),'%'))._()._()._().td(String.valueOf(jinfo.getMapsTotal())).td(String.valueOf(jinfo.getMapsPending())).td(String.valueOf(jinfo.getMapsRunning())).td(String.valueOf(jinfo.getMapsCompleted()))._().tr(_EVEN).th().a(url("tasks",jid,"r"),"Reduce")._().td().div(_PROGRESSBAR).$title(join(jinfo.getReduceProgressPercent(),'%')).div(_PROGRESSBAR_VALUE).$style(join("width:",jinfo.getReduceProgressPercent(),'%'))._()._()._().td(String.valueOf(jinfo.getReducesTotal())).td(String.valueOf(jinfo.getReducesPending())).td(String.valueOf(jinfo.getReducesRunning())).td(String.valueOf(jinfo.getReducesCompleted()))._()._().table("#job").tr().th(_TH,"Attempt Type").th(_TH,"New").th(_TH,"Running").th(_TH,"Failed").th(_TH,"Killed").th(_TH,"Successful")._().tr(_ODD).th("Maps").td().a(url("attempts",jid,"m",TaskAttemptStateUI.NEW.toString()),String.valueOf(jinfo.getNewMapAttempts()))._().td().a(url("attempts",jid,"m",TaskAttemptStateUI.RUNNING.toString()),String.valueOf(jinfo.getRunningMapAttempts()))._().td().a(url("attempts",jid,"m",TaskAttemptStateUI.FAILED.toString()),String.valueOf(jinfo.getFailedMapAttempts()))._().td().a(url("attempts",jid,"m",TaskAttemptStateUI.KILLED.toString()),String.valueOf(jinfo.getKilledMapAttempts()))._().td().a(url("attempts",jid,"m",TaskAttemptStateUI.SUCCESSFUL.toString()),String.valueOf(jinfo.getSuccessfulMapAttempts()))._()._().tr(_EVEN).th("Reduces").td().a(url("attempts",jid,"r",TaskAttemptStateUI.NEW.toString()),String.valueOf(jinfo.getNewReduceAttempts()))._().td().a(url("attempts",jid,"r",TaskAttemptStateUI.RUNNING.toString()),String.valueOf(jinfo.getRunningReduceAttempts()))._().td().a(url("attempts",jid,"r",TaskAttemptStateUI.FAILED.toString()),String.valueOf(jinfo.getFailedReduceAttempts()))._().td().a(url("attempts",jid,"r",TaskAttemptStateUI.KILLED.toString()),String.valueOf(jinfo.getKilledReduceAttempts()))._().td().a(url("attempts",jid,"r",TaskAttemptStateUI.SUCCESSFUL.toString()),String.valueOf(jinfo.getSuccessfulReduceAttempts()))._()._()._()._();
}
