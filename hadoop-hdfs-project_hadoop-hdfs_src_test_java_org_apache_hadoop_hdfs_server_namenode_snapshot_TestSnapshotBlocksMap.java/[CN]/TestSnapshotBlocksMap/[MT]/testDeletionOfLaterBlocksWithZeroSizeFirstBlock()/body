{
  final Path foo=new Path("/foo");
  final Path bar=new Path(foo,"bar");
  final byte[] testData="foo bar baz".getBytes();
  DFSTestUtil.createFile(hdfs,bar,0,REPLICATION,0L);
  assertEquals(0,fsdir.getINode4Write(bar.toString()).asFile().getBlocks().length);
  SnapshotTestHelper.createSnapshot(hdfs,foo,"s0");
  FSDataOutputStream out=hdfs.append(bar);
  out.write(testData);
  out.close();
  INodeFile barNode=fsdir.getINode4Write(bar.toString()).asFile();
  BlockInfoContiguous[] blks=barNode.getBlocks();
  assertEquals(1,blks.length);
  assertEquals(testData.length,blks[0].getNumBytes());
  hdfs.delete(bar,true);
  cluster.getNameNode().getRpcServer().setSafeMode(SafeModeAction.SAFEMODE_ENTER,false);
  cluster.getNameNode().getRpcServer().saveNamespace(0,0);
}
