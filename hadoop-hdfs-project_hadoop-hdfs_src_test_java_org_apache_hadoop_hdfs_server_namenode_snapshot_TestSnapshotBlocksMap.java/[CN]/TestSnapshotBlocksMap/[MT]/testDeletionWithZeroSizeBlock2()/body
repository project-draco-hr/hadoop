{
  final Path foo=new Path("/foo");
  final Path subDir=new Path(foo,"sub");
  final Path bar=new Path(subDir,"bar");
  DFSTestUtil.createFile(hdfs,bar,BLOCKSIZE,REPLICATION,0L);
  hdfs.append(bar);
  INodeFile barNode=fsdir.getINode4Write(bar.toString()).asFile();
  BlockInfo[] blks=barNode.getBlocks();
  assertEquals(1,blks.length);
  ExtendedBlock previous=new ExtendedBlock(fsn.getBlockPoolId(),blks[0]);
  cluster.getNameNodeRpc().addBlock(bar.toString(),hdfs.getClient().getClientName(),previous,null,barNode.getId(),null);
  SnapshotTestHelper.createSnapshot(hdfs,foo,"s1");
  barNode=fsdir.getINode4Write(bar.toString()).asFile();
  blks=barNode.getBlocks();
  assertEquals(2,blks.length);
  assertEquals(BLOCKSIZE,blks[0].getNumBytes());
  assertEquals(0,blks[1].getNumBytes());
  hdfs.delete(subDir,true);
  final Path sbar=SnapshotTestHelper.getSnapshotPath(foo,"s1","sub/bar");
  barNode=fsdir.getINode(sbar.toString()).asFile();
  blks=barNode.getBlocks();
  assertEquals(1,blks.length);
  assertEquals(BLOCKSIZE,blks[0].getNumBytes());
}
