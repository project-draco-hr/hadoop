{
  byte[][] all=new byte[outputs.length + inputs.length][];
  int[] allOffsets=new int[outputOffsets.length + inputOffsets.length];
  if (isAllowingChangeInputs()) {
    System.arraycopy(outputs,0,all,0,outputs.length);
    System.arraycopy(inputs,0,all,outputs.length,inputs.length);
    System.arraycopy(outputOffsets,0,allOffsets,0,outputOffsets.length);
    System.arraycopy(inputOffsets,0,allOffsets,outputOffsets.length,inputOffsets.length);
  }
 else {
    System.arraycopy(outputs,0,all,0,outputs.length);
    System.arraycopy(outputOffsets,0,allOffsets,0,outputOffsets.length);
    for (int i=0; i < inputs.length; i++) {
      all[outputs.length + i]=Arrays.copyOfRange(inputs[i],inputOffsets[i],inputOffsets[i] + dataLen);
    }
  }
  RSUtil.GF.remainder(all,allOffsets,dataLen,generatingPolynomial);
}
