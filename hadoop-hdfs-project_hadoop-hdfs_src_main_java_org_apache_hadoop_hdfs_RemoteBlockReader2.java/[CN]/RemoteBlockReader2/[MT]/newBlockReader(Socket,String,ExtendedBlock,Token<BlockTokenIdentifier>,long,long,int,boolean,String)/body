{
  final DataOutputStream out=new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(sock,HdfsServerConstants.WRITE_TIMEOUT)));
  new Sender(out).readBlock(block,blockToken,clientName,startOffset,len);
  Preconditions.checkArgument(sock.getChannel() != null,"Socket %s does not have an associated Channel.",sock);
  SocketInputStream sin=(SocketInputStream)NetUtils.getInputStream(sock);
  DataInputStream in=new DataInputStream(sin);
  BlockOpResponseProto status=BlockOpResponseProto.parseFrom(vintPrefixed(in));
  checkSuccess(status,sock,block,file);
  ReadOpChecksumInfoProto checksumInfo=status.getReadOpChecksumInfo();
  DataChecksum checksum=DataTransferProtoUtil.fromProto(checksumInfo.getChecksum());
  long firstChunkOffset=checksumInfo.getChunkOffset();
  if (firstChunkOffset < 0 || firstChunkOffset > startOffset || firstChunkOffset >= (startOffset + checksum.getBytesPerChecksum())) {
    throw new IOException("BlockReader: error in first chunk offset (" + firstChunkOffset + ") startOffset is "+ startOffset+ " for file "+ file);
  }
  return new RemoteBlockReader2(file,block.getBlockPoolId(),block.getBlockId(),sin,checksum,verifyChecksum,startOffset,firstChunkOffset,len,sock);
}
