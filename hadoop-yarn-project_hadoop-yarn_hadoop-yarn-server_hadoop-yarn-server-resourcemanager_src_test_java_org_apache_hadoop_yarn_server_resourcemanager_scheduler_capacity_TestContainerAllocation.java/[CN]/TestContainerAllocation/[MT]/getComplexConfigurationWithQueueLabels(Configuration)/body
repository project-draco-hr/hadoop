{
  CapacitySchedulerConfiguration conf=new CapacitySchedulerConfiguration(config);
  conf.setQueues(CapacitySchedulerConfiguration.ROOT,new String[]{"a","b"});
  final String A=CapacitySchedulerConfiguration.ROOT + ".a";
  conf.setCapacity(A,10);
  conf.setMaximumCapacity(A,10);
  conf.setAccessibleNodeLabels(A,toSet("x","y"));
  conf.setCapacityByLabel(A,"x",100);
  conf.setCapacityByLabel(A,"y",50);
  final String B=CapacitySchedulerConfiguration.ROOT + ".b";
  conf.setCapacity(B,90);
  conf.setMaximumCapacity(B,100);
  conf.setAccessibleNodeLabels(B,toSet("y","z"));
  conf.setCapacityByLabel(B,"y",50);
  conf.setCapacityByLabel(B,"z",100);
  final String A1=A + ".a1";
  conf.setQueues(A,new String[]{"a1"});
  conf.setCapacity(A1,100);
  conf.setMaximumCapacity(A1,100);
  conf.setAccessibleNodeLabels(A1,toSet("x","y"));
  conf.setDefaultNodeLabelExpression(A1,"x");
  conf.setCapacityByLabel(A1,"x",100);
  conf.setCapacityByLabel(A1,"y",100);
  conf.setQueues(B,new String[]{"b1","b2"});
  final String B1=B + ".b1";
  conf.setCapacity(B1,50);
  conf.setMaximumCapacity(B1,50);
  conf.setAccessibleNodeLabels(B1,RMNodeLabelsManager.EMPTY_STRING_SET);
  final String B2=B + ".b2";
  conf.setCapacity(B2,50);
  conf.setMaximumCapacity(B2,50);
  conf.setAccessibleNodeLabels(B2,toSet("y","z"));
  conf.setCapacityByLabel(B2,"y",100);
  conf.setCapacityByLabel(B2,"z",100);
  return conf;
}
