{
  String tcClassesStr=state.substring(state.indexOf("class"));
  String[] tcClasses=Pattern.compile("$",Pattern.MULTILINE).split(tcClassesStr);
  Pattern tcClassPattern=Pattern.compile(String.format("class htb %d:(\\d+) .*",ROOT_QDISC_HANDLE));
synchronized (classIdSet) {
    for (    String tcClassSplit : tcClasses) {
      String tcClass=tcClassSplit.trim();
      if (!tcClass.isEmpty()) {
        Matcher classMatcher=tcClassPattern.matcher(tcClass);
        if (classMatcher.matches()) {
          int classId=Integer.parseInt(classMatcher.group(1));
          if (classId >= MIN_CONTAINER_CLASS_ID) {
            classIdSet.set(classId - MIN_CONTAINER_CLASS_ID);
            LOG.info("Reacquired container classid: " + classId);
          }
        }
 else {
          LOG.warn("Unable to match classid in string:" + tcClass);
        }
      }
    }
  }
}
