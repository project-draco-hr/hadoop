{
  List<String> regexes=new ArrayList<>();
  regexes.add(String.format("^qdisc htb %d: root(.)*$",ROOT_QDISC_HANDLE));
  regexes.add(String.format("^filter parent %d: protocol ip " + "(.)*cgroup(.)*$",ROOT_QDISC_HANDLE));
  regexes.add(String.format("^class htb %d:%d root(.)*$",ROOT_QDISC_HANDLE,ROOT_CLASS_ID));
  regexes.add(String.format("^class htb %d:%d parent %d:%d(.)*$",ROOT_QDISC_HANDLE,DEFAULT_CLASS_ID,ROOT_QDISC_HANDLE,ROOT_CLASS_ID));
  regexes.add(String.format("^class htb %d:%d parent %d:%d(.)*$",ROOT_QDISC_HANDLE,YARN_ROOT_CLASS_ID,ROOT_QDISC_HANDLE,ROOT_CLASS_ID));
  for (  String regex : regexes) {
    Pattern pattern=Pattern.compile(regex,Pattern.MULTILINE);
    if (pattern.matcher(state).find()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Matched regex: " + regex);
      }
    }
 else {
      String logLine=new StringBuffer("Failed to match regex: ").append(regex).append(" Current state: ").append(state).toString();
      LOG.warn(logLine);
      return false;
    }
  }
  LOG.info("Bootstrap check succeeded");
  return true;
}
