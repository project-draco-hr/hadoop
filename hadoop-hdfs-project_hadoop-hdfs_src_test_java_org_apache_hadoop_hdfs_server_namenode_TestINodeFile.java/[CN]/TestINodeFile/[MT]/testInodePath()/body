{
  String path="/a/b/c";
  INode inode=createTreeOfInodes(path);
  FSDirectory fsd=Mockito.mock(FSDirectory.class);
  Mockito.doReturn(inode).when(fsd).getInode(Mockito.anyLong());
  assertEquals("/test",FSDirectory.resolvePath("/test",null,fsd));
  byte[][] components=INode.getPathComponents(path);
  String resolvedPath=FSDirectory.resolvePath(path,components,fsd);
  assertEquals(path,resolvedPath);
  components=INode.getPathComponents("/.reserved/.inodes/1");
  resolvedPath=FSDirectory.resolvePath(path,components,fsd);
  assertEquals(path,resolvedPath);
  components=INode.getPathComponents("/.reserved/.inodes/1/");
  assertEquals(path,resolvedPath);
  components=INode.getPathComponents("/.reserved/.inodes/1/d/e/f");
  resolvedPath=FSDirectory.resolvePath(path,components,fsd);
  assertEquals("/a/b/c/d/e/f",resolvedPath);
  String testPath="/.reserved/.inodes";
  components=INode.getPathComponents(testPath);
  resolvedPath=FSDirectory.resolvePath(testPath,components,fsd);
  assertEquals(testPath,resolvedPath);
  testPath="/.reserved/.inodes/" + INodeId.ROOT_INODE_ID;
  components=INode.getPathComponents(testPath);
  resolvedPath=FSDirectory.resolvePath(testPath,components,fsd);
  assertEquals("/",resolvedPath);
  testPath="/.invalid/.inodes/1";
  components=INode.getPathComponents(testPath);
  resolvedPath=FSDirectory.resolvePath(testPath,components,fsd);
  assertEquals(testPath,resolvedPath);
}
