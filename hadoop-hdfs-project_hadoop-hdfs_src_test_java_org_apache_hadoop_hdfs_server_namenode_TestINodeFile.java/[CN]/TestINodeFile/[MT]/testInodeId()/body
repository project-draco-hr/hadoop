{
  Configuration conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT);
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
    cluster.waitActive();
    FSNamesystem fsn=cluster.getNamesystem();
    long lastId=fsn.getLastInodeId();
    assertTrue(lastId == 1001);
    FileSystem fs=cluster.getFileSystem();
    Path path=new Path("/test1");
    assertTrue(fs.mkdirs(path));
    assertTrue(fsn.getLastInodeId() == 1002);
    NamenodeProtocols nnrpc=cluster.getNameNodeRpc();
    HdfsFileStatus fileStatus=nnrpc.create("/test1/file",new FsPermission((short)0755),"client",new EnumSetWritable<CreateFlag>(EnumSet.of(CreateFlag.CREATE)),true,(short)1,128 * 1024 * 1024L);
    assertTrue(fsn.getLastInodeId() == 1003);
    assertTrue(fileStatus.getFileId() == 1003);
    Path renamedPath=new Path("/test2");
    fs.rename(path,renamedPath);
    assertTrue(fsn.getLastInodeId() == 1003);
    cluster.restartNameNode();
    cluster.waitActive();
    cluster.restartNameNode();
    cluster.waitActive();
    assertTrue(fsn.getLastInodeId() == 1003);
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
