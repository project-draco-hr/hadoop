{
  Logger rootLogger=LogManager.getRootLogger();
  boolean thrown=false;
  rootLogger.setLevel(Level.DEBUG);
  MockRM rm=new MockRM();
  rm.start();
  MockNM nm1=rm.registerNode("h1:1234",5000);
  RMApp app=rm.submitApp(2000);
  nm1.nodeHeartbeat(true);
  RMAppAttempt attempt=app.getCurrentAppAttempt();
  MockAM am=rm.sendAMLaunched(attempt.getAppAttemptId());
  int request=2;
  AllocateResponse ar=null;
  try {
    ar=am.allocate("h1",1000,request,new ArrayList<ContainerId>());
    Assert.fail();
  }
 catch (  ApplicationMasterNotRegisteredException e) {
  }
  nm1.nodeHeartbeat(true);
  AllocateResponse amrs=null;
  try {
    amrs=am.allocate(new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>());
    Assert.fail();
  }
 catch (  ApplicationMasterNotRegisteredException e) {
  }
  am.registerAppAttempt();
  try {
    am.registerAppAttempt(false);
    Assert.fail();
  }
 catch (  Exception e) {
    Assert.assertEquals("Application Master is already registered : " + attempt.getAppAttemptId().getApplicationId(),e.getMessage());
  }
  am.unregisterAppAttempt();
  nm1.nodeHeartbeat(attempt.getAppAttemptId(),1,ContainerState.COMPLETE);
  am.waitForState(RMAppAttemptState.FINISHED);
  try {
    amrs=am.allocate(new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>());
    Assert.fail();
  }
 catch (  ApplicationAttemptNotFoundException e) {
  }
}
