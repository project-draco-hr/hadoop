{
  INodeFile file=createMockFile(BLOCKSIZE * 2 + BLOCKSIZE / 2,REPLICATION);
  BlockInfoContiguous[] blocks=new BlockInfoContiguous[file.getBlocks().length];
  System.arraycopy(file.getBlocks(),0,blocks,0,blocks.length);
  addSnapshotFeature(file,blocks);
  file.getBlocks()[1]=newBlock(BLOCKSIZE,REPLICATION);
  file.getBlocks()[2]=newBlock(BLOCKSIZE / 2,REPLICATION);
  QuotaCounts count=new QuotaCounts.Builder().build();
  file.computeQuotaDeltaForTruncate(BLOCKSIZE + BLOCKSIZE / 2,null,count);
  Assert.assertEquals(-BLOCKSIZE / 2 * REPLICATION,count.getStorageSpace());
  count=new QuotaCounts.Builder().build();
  file.computeQuotaDeltaForTruncate(BLOCKSIZE + BLOCKSIZE / 2,null,count);
  Assert.assertEquals(-BLOCKSIZE / 2 * REPLICATION,count.getStorageSpace());
  count=new QuotaCounts.Builder().build();
  file.computeQuotaDeltaForTruncate(0,null,count);
  Assert.assertEquals(-(BLOCKSIZE + BLOCKSIZE / 2) * REPLICATION,count.getStorageSpace());
}
