{
  final Iterator<E> createdIterator=posterior.getList(ListType.CREATED).iterator();
  final Iterator<E> deletedIterator=posterior.getList(ListType.DELETED).iterator();
  E c=createdIterator.hasNext() ? createdIterator.next() : null;
  E d=deletedIterator.hasNext() ? deletedIterator.next() : null;
  for (; c != null || d != null; ) {
    final int cmp=c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey());
    if (cmp < 0) {
      create(c);
      c=createdIterator.hasNext() ? createdIterator.next() : null;
    }
 else     if (cmp > 0) {
      final UndoInfo<E> ui=delete(d);
      if (deletedProcesser != null) {
        deletedProcesser.process(ui.trashed);
      }
      d=deletedIterator.hasNext() ? deletedIterator.next() : null;
    }
 else {
      final UndoInfo<E> ui=modify(d,c);
      if (deletedProcesser != null) {
        deletedProcesser.process(ui.trashed);
      }
      c=createdIterator.hasNext() ? createdIterator.next() : null;
      d=deletedIterator.hasNext() ? deletedIterator.next() : null;
    }
  }
}
