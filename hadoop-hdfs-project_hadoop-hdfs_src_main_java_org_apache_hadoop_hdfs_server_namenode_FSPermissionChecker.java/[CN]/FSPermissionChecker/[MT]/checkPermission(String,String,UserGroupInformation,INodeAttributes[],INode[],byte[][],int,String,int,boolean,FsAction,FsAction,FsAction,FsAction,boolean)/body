{
  for (; ancestorIndex >= 0 && inodes[ancestorIndex] == null; ancestorIndex--)   ;
  try {
    checkTraverse(inodeAttrs,path,ancestorIndex);
  }
 catch (  AccessControlException e) {
    checkAncestorType(inodes,ancestorIndex,e);
  }
  final INodeAttributes last=inodeAttrs[inodeAttrs.length - 1];
  if (parentAccess != null && parentAccess.implies(FsAction.WRITE) && inodeAttrs.length > 1 && last != null) {
    checkStickyBit(inodeAttrs[inodeAttrs.length - 2],last,path);
  }
  if (ancestorAccess != null && inodeAttrs.length > 1) {
    check(inodeAttrs,path,ancestorIndex,ancestorAccess);
  }
  if (parentAccess != null && inodeAttrs.length > 1) {
    check(inodeAttrs,path,inodeAttrs.length - 2,parentAccess);
  }
  if (access != null) {
    check(last,path,access);
  }
  if (subAccess != null) {
    INode rawLast=inodes[inodeAttrs.length - 1];
    checkSubAccess(pathByNameArr,inodeAttrs.length - 1,rawLast,snapshotId,subAccess,ignoreEmptyDir);
  }
  if (doCheckOwner) {
    checkOwner(last);
  }
}
