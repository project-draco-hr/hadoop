{
  if (opts.serverThreads <= 0) {
    return null;
  }
  conf.setInt(CommonConfigurationKeys.IPC_SERVER_RPC_READ_THREADS_KEY,opts.serverReaderThreads);
  RPC.Server server;
  if (opts.rpcEngine == ProtobufRpcEngine.class) {
    PBServerImpl serverImpl=new PBServerImpl();
    BlockingService service=TestProtobufRpcProto.newReflectiveBlockingService(serverImpl);
    server=RPC.getServer(TestRpcService.class,service,opts.host,opts.port,opts.serverThreads,false,conf,null);
  }
 else   if (opts.rpcEngine == WritableRpcEngine.class) {
    server=RPC.getServer(TestProtocol.class,new TestRPC.TestImpl(),opts.host,opts.port,opts.serverThreads,false,conf,null);
  }
 else {
    throw new RuntimeException("Bad engine: " + opts.rpcEngine);
  }
  server.start();
  return server;
}
