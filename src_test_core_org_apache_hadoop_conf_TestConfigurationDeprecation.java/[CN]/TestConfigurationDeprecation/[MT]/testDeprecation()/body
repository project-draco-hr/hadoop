{
  addDeprecationToConfiguration();
  out=new BufferedWriter(new FileWriter(CONFIG));
  startConfig();
  appendProperty("A","a");
  appendProperty("D","d");
  appendProperty("P","p");
  endConfig();
  Path fileResource=new Path(CONFIG);
  conf.addResource(fileResource);
  assertEquals("p",conf.get("P"));
  assertEquals("p",conf.get("Q"));
  assertEquals("p",conf.get("R"));
  assertEquals("a",conf.get("A"));
  assertEquals("a",conf.get("B"));
  assertEquals("d",conf.get("C"));
  assertEquals("d",conf.get("D"));
  out=new BufferedWriter(new FileWriter(CONFIG2));
  startConfig();
  appendProperty("B","b");
  appendProperty("C","c");
  endConfig();
  Path fileResource1=new Path(CONFIG2);
  conf.addResource(fileResource1);
  assertEquals("b",conf.get("A"));
  assertEquals("b",conf.get("B"));
  assertEquals("c",conf.get("C"));
  assertEquals("c",conf.get("D"));
  conf.set("N","n");
  assertEquals("n",conf.get("M"));
  assertEquals(conf.get("M"),conf.get("N"));
  conf.set("M","m");
  assertEquals("m",conf.get("N"));
  conf.set("X","x");
  assertEquals("x",conf.get("X"));
  assertEquals("x",conf.get("Y"));
  assertEquals("x",conf.get("Z"));
  conf.set("Y","y");
  conf.set("Z","z");
  assertEquals("y",conf.get("X"));
}
