{
  out=new BufferedWriter(new FileWriter(CONFIG));
  startConfig();
  appendProperty("new.key1","default.value1",true);
  appendProperty("new.key2","default.value2");
  appendProperty("new.key3","default.value3",true);
  appendProperty("new.key4","default.value4");
  appendProperty("new.key5","default.value5",true);
  appendProperty("new.key6","default.value6");
  appendProperty("new.key7","default.value7",true);
  appendProperty("new.key8","default.value8");
  appendProperty("new.key9","default.value9");
  appendProperty("new.key10","default.value10");
  appendProperty("new.key11","default.value11");
  appendProperty("new.key12","default.value12");
  appendProperty("new.key13","default.value13");
  appendProperty("new.key14","default.value14");
  appendProperty("new.key15","default.value15");
  appendProperty("new.key16","default.value16");
  endConfig();
  Path fileResource=new Path(CONFIG);
  addDeprecationToConfiguration();
  conf.addResource(fileResource);
  out=new BufferedWriter(new FileWriter(CONFIG2));
  startConfig();
  appendProperty("old.key1","old.value1",true);
  appendProperty("old.key2","old.value2",true);
  appendProperty("old.key3","old.value3");
  appendProperty("old.key4","old.value4");
  appendProperty("new.key5","new.value5",true);
  appendProperty("new.key6","new.value6",true);
  appendProperty("new.key7","new.value7");
  appendProperty("new.key8","new.value8");
  appendProperty("new.key9","new.value9",true);
  appendProperty("new.key10","new.value10");
  appendProperty("new.key11","new.value11",true);
  appendProperty("new.key12","new.value12");
  appendProperty("old.key13","old.value13",true);
  appendProperty("old.key14","old.value14");
  appendProperty("old.key15","old.value15",true);
  appendProperty("old.key16","old.value16");
  endConfig();
  Path fileResource1=new Path(CONFIG2);
  conf.addResource(fileResource1);
  out=new BufferedWriter(new FileWriter(CONFIG3));
  startConfig();
  appendProperty("old.key9","old.value9",true);
  appendProperty("old.key10","old.value10",true);
  appendProperty("old.key11","old.value11");
  appendProperty("old.key12","old.value12");
  appendProperty("new.key13","new.value13",true);
  appendProperty("new.key14","new.value14",true);
  appendProperty("new.key15","new.value15");
  appendProperty("new.key16","new.value16");
  appendProperty("B","valueB");
  endConfig();
  Path fileResource2=new Path(CONFIG3);
  conf.addResource(fileResource2);
  assertEquals("old.value1",conf.get("new.key1"));
  assertEquals(conf.get("old.key1"),conf.get("new.key1"));
  assertEquals("old.value2",conf.get("new.key2"));
  assertEquals(conf.get("old.key2"),conf.get("new.key2"));
  assertEquals("default.value3",conf.get("new.key3"));
  assertEquals(conf.get("old.key3"),conf.get("new.key3"));
  assertEquals("old.value4",conf.get("new.key4"));
  assertEquals(conf.get("old.key4"),conf.get("new.key4"));
  assertEquals("default.value5",conf.get("new.key5"));
  assertEquals(conf.get("old.key5"),conf.get("new.key5"));
  assertEquals("new.value6",conf.get("new.key6"));
  assertEquals(conf.get("old.key6"),conf.get("new.key6"));
  assertEquals("default.value7",conf.get("new.key7"));
  assertEquals(conf.get("old.key7"),conf.get("new.key7"));
  assertEquals("new.value8",conf.get("new.key8"));
  assertEquals(conf.get("old.key8"),conf.get("new.key8"));
  assertEquals("old.value9",conf.get("new.key9"));
  assertEquals(conf.get("old.key9"),conf.get("new.key9"));
  assertEquals("old.value10",conf.get("new.key10"));
  assertEquals(conf.get("old.key10"),conf.get("new.key10"));
  assertEquals("new.value11",conf.get("new.key11"));
  assertEquals(conf.get("old.key11"),conf.get("new.key11"));
  assertEquals("old.value12",conf.get("new.key12"));
  assertEquals(conf.get("old.key12"),conf.get("new.key12"));
  assertEquals("old.value13",conf.get("new.key13"));
  assertEquals(conf.get("old.key13"),conf.get("new.key13"));
  assertEquals("new.value14",conf.get("new.key14"));
  assertEquals(conf.get("old.key14"),conf.get("new.key14"));
  assertEquals("old.value15",conf.get("new.key15"));
  assertEquals(conf.get("old.key15"),conf.get("new.key15"));
  assertEquals("old.value16",conf.get("new.key16"));
  assertEquals(conf.get("old.key16"),conf.get("new.key16"));
  conf.reloadConfiguration();
  assertEquals(conf.get("A"),"valueB");
  assertEquals(conf.get("A"),conf.get("B"));
  conf.set("C","valueC");
  assertEquals("valueC",conf.get("D"));
  assertEquals(conf.get("C"),conf.get("D"));
  conf.set("F","valueF");
  assertEquals("valueF",conf.get("E"));
  assertEquals(conf.get("E"),conf.get("F"));
  conf.set("G","valueG");
  assertEquals("valueG",conf.get("G"));
  assertEquals("valueG",conf.get("H"));
  assertEquals("valueG",conf.get("I"));
}
