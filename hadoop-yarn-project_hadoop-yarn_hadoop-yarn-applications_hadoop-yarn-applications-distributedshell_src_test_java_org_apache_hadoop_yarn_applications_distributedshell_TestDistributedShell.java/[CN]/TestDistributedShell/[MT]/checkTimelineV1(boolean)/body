{
  TimelineDomain domain=null;
  if (haveDomain) {
    domain=yarnCluster.getApplicationHistoryServer().getTimelineStore().getDomain("TEST_DOMAIN");
    Assert.assertNotNull(domain);
    Assert.assertEquals("reader_user reader_group",domain.getReaders());
    Assert.assertEquals("writer_user writer_group",domain.getWriters());
  }
  TimelineEntities entitiesAttempts=yarnCluster.getApplicationHistoryServer().getTimelineStore().getEntities(ApplicationMaster.DSEntity.DS_APP_ATTEMPT.toString(),null,null,null,null,null,null,null,null,null);
  Assert.assertNotNull(entitiesAttempts);
  Assert.assertEquals(1,entitiesAttempts.getEntities().size());
  Assert.assertEquals(2,entitiesAttempts.getEntities().get(0).getEvents().size());
  Assert.assertEquals(entitiesAttempts.getEntities().get(0).getEntityType().toString(),ApplicationMaster.DSEntity.DS_APP_ATTEMPT.toString());
  if (haveDomain) {
    Assert.assertEquals(domain.getId(),entitiesAttempts.getEntities().get(0).getDomainId());
  }
 else {
    Assert.assertEquals("DEFAULT",entitiesAttempts.getEntities().get(0).getDomainId());
  }
  String currAttemptEntityId=entitiesAttempts.getEntities().get(0).getEntityId();
  ApplicationAttemptId attemptId=ApplicationAttemptId.fromString(currAttemptEntityId);
  NameValuePair primaryFilter=new NameValuePair(ApplicationMaster.APPID_TIMELINE_FILTER_NAME,attemptId.getApplicationId().toString());
  TimelineEntities entities=yarnCluster.getApplicationHistoryServer().getTimelineStore().getEntities(ApplicationMaster.DSEntity.DS_CONTAINER.toString(),null,null,null,null,null,primaryFilter,null,null,null);
  Assert.assertNotNull(entities);
  Assert.assertEquals(2,entities.getEntities().size());
  Assert.assertEquals(entities.getEntities().get(0).getEntityType().toString(),ApplicationMaster.DSEntity.DS_CONTAINER.toString());
  if (haveDomain) {
    Assert.assertEquals(domain.getId(),entities.getEntities().get(0).getDomainId());
  }
 else {
    Assert.assertEquals("DEFAULT",entities.getEntities().get(0).getDomainId());
  }
}
