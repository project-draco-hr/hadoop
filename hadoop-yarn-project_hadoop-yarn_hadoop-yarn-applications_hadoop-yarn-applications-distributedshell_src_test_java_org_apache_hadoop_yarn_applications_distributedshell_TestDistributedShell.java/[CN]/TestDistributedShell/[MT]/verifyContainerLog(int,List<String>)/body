{
  File logFolder=new File(yarnCluster.getNodeManager(0).getConfig().get(YarnConfiguration.NM_LOG_DIRS,YarnConfiguration.DEFAULT_NM_LOG_DIRS));
  File[] listOfFiles=logFolder.listFiles();
  int currentContainerLogFileIndex=-1;
  for (int i=listOfFiles.length - 1; i >= 0; i--) {
    if (listOfFiles[i].listFiles().length == containerNum + 1) {
      currentContainerLogFileIndex=i;
      break;
    }
  }
  Assert.assertTrue(currentContainerLogFileIndex != -1);
  File[] containerFiles=listOfFiles[currentContainerLogFileIndex].listFiles();
  for (int i=0; i < containerFiles.length; i++) {
    for (    File output : containerFiles[i].listFiles()) {
      if (output.getName().trim().equalsIgnoreCase("stdout")) {
        BufferedReader br=null;
        try {
          String sCurrentLine;
          br=new BufferedReader(new FileReader(output));
          int numOfline=0;
          while ((sCurrentLine=br.readLine()) != null) {
            Assert.assertEquals("The current is" + sCurrentLine,expectedContent.get(numOfline),sCurrentLine.trim());
            numOfline++;
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
 finally {
          try {
            if (br != null)             br.close();
          }
 catch (          IOException ex) {
            ex.printStackTrace();
          }
        }
      }
    }
  }
}
