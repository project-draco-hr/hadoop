{
  String tmpRoot=FileSystemTimelineWriterImpl.DEFAULT_TIMELINE_SERVICE_STORAGE_DIR_ROOT + "/entities/";
  File tmpRootFolder=new File(tmpRoot);
  try {
    Assert.assertTrue(tmpRootFolder.isDirectory());
    String basePath=tmpRoot + YarnConfiguration.DEFAULT_RM_CLUSTER_ID + "/"+ UserGroupInformation.getCurrentUser().getShortUserName()+ (defaultFlow ? "/" + TimelineUtils.generateDefaultFlowIdBasedOnAppId(appId) + "/1/1/" : "/test_flow_name/test_flow_version/12345678/")+ appId.toString();
    String appTimestampFileName="appattempt_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_000001"+ FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
    verifyEntityTypeFileExists(basePath,"DS_APP_ATTEMPT",appTimestampFileName);
    String containerTimestampFileName="container_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_01_000002.thist";
    verifyEntityTypeFileExists(basePath,"DS_CONTAINER",containerTimestampFileName);
    String containerMetricsTimestampFileName="container_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_01_000001"+ FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
    verifyEntityTypeFileExists(basePath,TimelineEntityType.YARN_CONTAINER.toString(),containerMetricsTimestampFileName);
    String appMetricsTimestampFileName="application_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
    File appEntityFile=verifyEntityTypeFileExists(basePath,TimelineEntityType.YARN_APPLICATION.toString(),appMetricsTimestampFileName);
    verifyStringExistsSpecifiedTimes(appEntityFile,ApplicationMetricsConstants.CREATED_EVENT_TYPE,1,"Application created event should be published atleast once");
    verifyStringExistsSpecifiedTimes(appEntityFile,ApplicationMetricsConstants.FINISHED_EVENT_TYPE,1,"Application finished event should be published atleast once");
    String appAttemptMetricsTimestampFileName="appattempt_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_000001"+ FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
    File appAttemptEntityFile=verifyEntityTypeFileExists(basePath,TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString(),appAttemptMetricsTimestampFileName);
    verifyStringExistsSpecifiedTimes(appAttemptEntityFile,AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE,1,"AppAttempt register event should be published atleast once");
    verifyStringExistsSpecifiedTimes(appAttemptEntityFile,AppAttemptMetricsConstants.FINISHED_EVENT_TYPE,1,"AppAttempt finished event should be published atleast once");
  }
  finally {
    FileUtils.deleteDirectory(tmpRootFolder.getParentFile());
  }
}
