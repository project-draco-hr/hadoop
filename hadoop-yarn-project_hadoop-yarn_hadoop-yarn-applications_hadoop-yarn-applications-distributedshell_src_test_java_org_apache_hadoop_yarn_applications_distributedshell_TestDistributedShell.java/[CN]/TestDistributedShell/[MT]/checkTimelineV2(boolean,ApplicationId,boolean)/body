{
  String tmpRoot=FileSystemTimelineWriterImpl.DEFAULT_TIMELINE_SERVICE_STORAGE_DIR_ROOT + "/entities/";
  File tmpRootFolder=new File(tmpRoot);
  try {
    Assert.assertTrue(tmpRootFolder.isDirectory());
    String outputDirApp=tmpRoot + YarnConfiguration.DEFAULT_RM_CLUSTER_ID + "/"+ UserGroupInformation.getCurrentUser().getShortUserName()+ (defaultFlow ? "/" + TimelineUtils.generateDefaultFlowIdBasedOnAppId(appId) + "/0/" : "/test_flow_id/12345678/")+ appId.toString()+ "/DS_APP_ATTEMPT/";
    File entityFolder=new File(outputDirApp);
    Assert.assertTrue(entityFolder.isDirectory());
    String appTimestampFileName="appattempt_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_000001"+ FileSystemTimelineWriterImpl.TIMELINE_SERVICE_STORAGE_EXTENSION;
    String appAttemptFileName=outputDirApp + appTimestampFileName;
    File appAttemptFile=new File(appAttemptFileName);
    Assert.assertTrue(appAttemptFile.exists());
    String outputDirContainer=tmpRoot + YarnConfiguration.DEFAULT_RM_CLUSTER_ID + "/"+ UserGroupInformation.getCurrentUser().getShortUserName()+ (defaultFlow ? "/" + TimelineUtils.generateDefaultFlowIdBasedOnAppId(appId) + "/0/" : "/test_flow_id/12345678/")+ appId.toString()+ "/DS_CONTAINER/";
    File containerFolder=new File(outputDirContainer);
    Assert.assertTrue(containerFolder.isDirectory());
    String containerTimestampFileName="container_" + appId.getClusterTimestamp() + "_000"+ appId.getId()+ "_01_000002.thist";
    String containerFileName=outputDirContainer + containerTimestampFileName;
    File containerFile=new File(containerFileName);
    Assert.assertTrue(containerFile.exists());
    String appTimeStamp=appId.getClusterTimestamp() + "_" + appId.getId()+ "_";
  }
  finally {
    FileUtils.deleteDirectory(tmpRootFolder.getParentFile());
  }
}
