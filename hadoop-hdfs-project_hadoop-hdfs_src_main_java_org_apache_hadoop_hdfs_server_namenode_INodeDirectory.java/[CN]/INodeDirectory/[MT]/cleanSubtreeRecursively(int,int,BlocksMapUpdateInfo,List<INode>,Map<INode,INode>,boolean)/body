{
  Quota.Counts counts=Quota.Counts.newInstance();
  int s=snapshot != Snapshot.CURRENT_STATE_ID && prior != Snapshot.NO_SNAPSHOT_ID ? prior : snapshot;
  for (  INode child : getChildrenList(s)) {
    if (snapshot != Snapshot.CURRENT_STATE_ID && excludedNodes != null && excludedNodes.containsKey(child)) {
      continue;
    }
 else {
      Quota.Counts childCounts=child.cleanSubtree(snapshot,prior,collectedBlocks,removedINodes,countDiffChange);
      counts.add(childCounts);
    }
  }
  return counts;
}
