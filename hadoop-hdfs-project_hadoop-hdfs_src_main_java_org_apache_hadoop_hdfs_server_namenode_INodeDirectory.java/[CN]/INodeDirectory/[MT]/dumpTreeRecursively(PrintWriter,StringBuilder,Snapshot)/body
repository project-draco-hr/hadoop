{
  super.dumpTreeRecursively(out,prefix,snapshot);
  if (prefix.length() >= 2) {
    prefix.setLength(prefix.length() - 2);
    prefix.append("  ");
  }
  dumpTreeRecursively(out,prefix,new Iterable<Pair<? extends INode,Snapshot>>(){
    final Iterator<INode> i=getChildrenList(snapshot).iterator();
    @Override public Iterator<Pair<? extends INode,Snapshot>> iterator(){
      return new Iterator<Pair<? extends INode,Snapshot>>(){
        @Override public boolean hasNext(){
          return i.hasNext();
        }
        @Override public Pair<INode,Snapshot> next(){
          return new Pair<INode,Snapshot>(i.next(),snapshot);
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
);
}
