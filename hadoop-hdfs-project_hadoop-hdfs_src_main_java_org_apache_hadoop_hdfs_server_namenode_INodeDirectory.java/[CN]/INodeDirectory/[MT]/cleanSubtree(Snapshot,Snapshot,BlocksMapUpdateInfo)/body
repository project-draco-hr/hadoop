{
  if (prior == null && snapshot == null) {
    Quota.Counts counts=Quota.Counts.newInstance();
    this.computeQuotaUsage(counts,true);
    destroyAndCollectBlocks(collectedBlocks);
    return counts;
  }
 else {
    Quota.Counts counts=cleanSubtreeRecursively(snapshot,prior,collectedBlocks);
    if (isQuotaSet()) {
      ((INodeDirectoryWithQuota)this).addSpaceConsumed2Cache(-counts.get(Quota.NAMESPACE),-counts.get(Quota.DISKSPACE));
    }
    return counts;
  }
}
