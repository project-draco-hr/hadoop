{
  File tmpfile, tmpRTIfile;
  try {
    tmpfile=File.createTempFile("hadooprec",".dat");
    tmpRTIfile=File.createTempFile("hadooprti",".dat");
    FileOutputStream ostream=new FileOutputStream(tmpfile);
    BinaryRecordOutput out=new BinaryRecordOutput(ostream);
    FileOutputStream oRTIstream=new FileOutputStream(tmpRTIfile);
    BinaryRecordOutput outRTI=new BinaryRecordOutput(oRTIstream);
    RecRecord1 r1=new RecRecord1();
    r1.setBoolVal(true);
    r1.setByteVal((byte)0x66);
    r1.setFloatVal(3.145F);
    r1.setDoubleVal(1.5234);
    r1.setIntVal(-4567);
    r1.setLongVal(-2367L);
    r1.setStringVal("random text");
    r1.setBufferVal(new Buffer());
    r1.setVectorVal(new ArrayList<String>());
    r1.setMapVal(new TreeMap<String,String>());
    RecRecord0 r0=new RecRecord0();
    r0.setStringVal("other random text");
    r1.setRecordVal(r0);
    r1.serialize(out,"");
    ostream.close();
    RecRecord1.getTypeInfo().serialize(outRTI);
    oRTIstream.close();
    FileInputStream istream=new FileInputStream(tmpfile);
    BinaryRecordInput in=new BinaryRecordInput(istream);
    FileInputStream iRTIstream=new FileInputStream(tmpRTIfile);
    BinaryRecordInput inRTI=new BinaryRecordInput(iRTIstream);
    RecordTypeInfo rti=new RecordTypeInfo();
    rti.deserialize(inRTI);
    iRTIstream.close();
    RecRecord1.setTypeFilter(rti);
    RecRecord1 r2=new RecRecord1();
    r2.deserialize(in,"");
    istream.close();
    tmpfile.delete();
    tmpRTIfile.delete();
    assertTrue("Serialized and deserialized versioned records do not match.",r1.equals(r2));
  }
 catch (  IOException ex) {
    ex.printStackTrace();
  }
}
