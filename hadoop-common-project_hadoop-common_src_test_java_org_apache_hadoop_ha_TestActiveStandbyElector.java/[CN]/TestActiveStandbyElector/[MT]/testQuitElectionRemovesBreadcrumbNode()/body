{
  mockNoPriorActive();
  elector.joinElection(data);
  elector.processResult(Code.OK.intValue(),ZK_LOCK_NAME,null,ZK_LOCK_NAME);
  Mockito.verify(mockZK,Mockito.times(1)).create(Mockito.eq(ZK_BREADCRUMB_NAME),Mockito.eq(data),Mockito.eq(Ids.OPEN_ACL_UNSAFE),Mockito.eq(CreateMode.PERSISTENT));
  mockPriorActive(data);
  elector.quitElection(false);
  Mockito.verify(mockZK,Mockito.times(1)).delete(Mockito.eq(ZK_BREADCRUMB_NAME),Mockito.eq(0));
}
