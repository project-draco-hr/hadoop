{
  elector.joinElection(data);
  elector.processResult(Code.OK.intValue(),zkLockPathName,null,zkLockPathName);
  Mockito.verify(mockApp,Mockito.times(1)).becomeActive();
  Mockito.verify(mockZK,Mockito.times(1)).exists(zkLockPathName,true,elector,null);
  Stat stat=new Stat();
  stat.setEphemeralOwner(1L);
  Mockito.when(mockZK.getSessionId()).thenReturn(1L);
  elector.processResult(Code.OK.intValue(),zkLockPathName,null,stat);
  Mockito.verify(mockApp,Mockito.times(0)).enterNeutralMode();
  Mockito.verify(mockApp,Mockito.times(0)).becomeStandby();
  Mockito.verify(mockApp,Mockito.times(1)).becomeActive();
  Mockito.verify(mockZK,Mockito.times(1)).create(zkLockPathName,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,null);
  Mockito.verify(mockZK,Mockito.times(1)).exists(zkLockPathName,true,elector,null);
}
