{
  elector.joinElection(data);
  elector.processResult(Code.NODEEXISTS.intValue(),ZK_LOCK_NAME,null,ZK_LOCK_NAME);
  Mockito.verify(mockApp,Mockito.times(1)).becomeStandby();
  verifyExistCall(1);
  WatchedEvent mockEvent=Mockito.mock(WatchedEvent.class);
  Mockito.when(mockEvent.getPath()).thenReturn(ZK_LOCK_NAME);
  Mockito.when(mockEvent.getType()).thenReturn(Event.EventType.NodeDeleted);
  elector.process(mockEvent);
  Mockito.verify(mockApp,Mockito.times(0)).enterNeutralMode();
  Mockito.verify(mockZK,Mockito.times(2)).create(ZK_LOCK_NAME,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,null);
  elector.processResult(Code.NODEEXISTS.intValue(),ZK_LOCK_NAME,null,ZK_LOCK_NAME);
  Mockito.verify(mockApp,Mockito.times(1)).becomeStandby();
  verifyExistCall(2);
}
