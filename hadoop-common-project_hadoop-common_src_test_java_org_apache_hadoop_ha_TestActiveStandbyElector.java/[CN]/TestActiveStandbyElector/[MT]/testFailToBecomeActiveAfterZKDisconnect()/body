{
  mockNoPriorActive();
  elector.joinElection(data);
  Assert.assertEquals(0,elector.sleptFor);
  elector.processResult(Code.CONNECTIONLOSS.intValue(),ZK_LOCK_NAME,mockZK,ZK_LOCK_NAME);
  Mockito.verify(mockZK,Mockito.times(2)).create(ZK_LOCK_NAME,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,mockZK);
  elector.processResult(Code.NODEEXISTS.intValue(),ZK_LOCK_NAME,mockZK,ZK_LOCK_NAME);
  verifyExistCall(1);
  Stat stat=new Stat();
  stat.setEphemeralOwner(1L);
  Mockito.when(mockZK.getSessionId()).thenReturn(1L);
  Mockito.doThrow(new ServiceFailedException("fail to become active")).when(mockApp).becomeActive();
  elector.processResult(Code.OK.intValue(),ZK_LOCK_NAME,mockZK,stat);
  Mockito.verify(mockApp,Mockito.times(1)).becomeActive();
  Mockito.verify(mockZK,Mockito.times(3)).create(ZK_LOCK_NAME,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,mockZK);
  Assert.assertEquals(2,count);
  Assert.assertTrue(elector.sleptFor > 0);
}
