{
  elector.joinElection(data);
  elector.processResult(Code.NODEEXISTS.intValue(),zkLockPathName,null,zkLockPathName);
  Mockito.verify(mockApp,Mockito.times(1)).becomeStandby();
  Mockito.verify(mockZK,Mockito.times(1)).exists(zkLockPathName,true,elector,null);
  WatchedEvent mockEvent=Mockito.mock(WatchedEvent.class);
  Mockito.when(mockEvent.getPath()).thenReturn(zkLockPathName);
  Mockito.when(mockEvent.getType()).thenReturn(Event.EventType.NodeDataChanged);
  elector.process(mockEvent);
  Mockito.verify(mockZK,Mockito.times(2)).exists(zkLockPathName,true,elector,null);
  Mockito.when(mockEvent.getType()).thenReturn(Event.EventType.NodeChildrenChanged);
  elector.process(mockEvent);
  Mockito.verify(mockZK,Mockito.times(3)).exists(zkLockPathName,true,elector,null);
  Mockito.when(mockEvent.getType()).thenReturn(Event.EventType.NodeDeleted);
  elector.process(mockEvent);
  Mockito.verify(mockApp,Mockito.times(0)).enterNeutralMode();
  Mockito.verify(mockZK,Mockito.times(2)).create(zkLockPathName,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,null);
  elector.processResult(Code.OK.intValue(),zkLockPathName,null,zkLockPathName);
  Mockito.verify(mockApp,Mockito.times(1)).becomeActive();
  Mockito.verify(mockZK,Mockito.times(4)).exists(zkLockPathName,true,elector,null);
  Mockito.when(mockEvent.getType()).thenReturn(Event.EventType.NodeDeleted);
  elector.process(mockEvent);
  Mockito.verify(mockApp,Mockito.times(1)).enterNeutralMode();
  Mockito.verify(mockZK,Mockito.times(3)).create(zkLockPathName,data,Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL,elector,null);
  elector.processResult(Code.OK.intValue(),zkLockPathName,null,zkLockPathName);
  Mockito.verify(mockApp,Mockito.times(2)).becomeActive();
  Mockito.verify(mockZK,Mockito.times(5)).exists(zkLockPathName,true,elector,null);
  Mockito.when(mockEvent.getPath()).thenReturn(null);
  elector.process(mockEvent);
  Mockito.verify(mockApp,Mockito.times(1)).notifyFatalError("Unexpected watch error from Zookeeper");
  Assert.assertEquals(1,TestActiveStandbyElector.count);
  Mockito.verify(mockZK,Mockito.times(5)).exists(zkLockPathName,true,elector,null);
}
