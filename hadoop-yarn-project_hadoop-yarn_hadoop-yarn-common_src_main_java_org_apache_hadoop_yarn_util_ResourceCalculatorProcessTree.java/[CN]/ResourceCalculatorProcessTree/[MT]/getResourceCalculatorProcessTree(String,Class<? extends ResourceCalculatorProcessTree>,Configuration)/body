{
  if (clazz != null) {
    try {
      Constructor<? extends ResourceCalculatorProcessTree> c=clazz.getConstructor(String.class);
      ResourceCalculatorProcessTree rctree=c.newInstance(pid);
      rctree.setConf(conf);
      return rctree;
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  if (ProcfsBasedProcessTree.isAvailable()) {
    return new ProcfsBasedProcessTree(pid);
  }
  if (WindowsBasedProcessTree.isAvailable()) {
    return new WindowsBasedProcessTree(pid);
  }
  return null;
}
