{
  Resource capability=request.getCapability();
  Resource available=node.getUnallocatedResource();
  Container reservedContainer=null;
  if (reserved) {
    reservedContainer=node.getReservedContainer().getContainer();
  }
  if (Resources.fitsIn(capability,available)) {
    RMContainer allocatedContainer=allocate(type,node,request.getPriority(),request,reservedContainer);
    if (allocatedContainer == null) {
      if (reserved) {
        unreserve(request.getPriority(),node);
      }
      return Resources.none();
    }
    if (reserved) {
      unreserve(request.getPriority(),node);
    }
    node.allocateContainer(allocatedContainer);
    if (!isAmRunning() && !getUnmanagedAM()) {
      setAMResource(capability);
      getQueue().addAMResourceUsage(capability);
      setAmRunning(true);
    }
    return capability;
  }
  if (isReservable(capability) && reserve(request,node,reservedContainer,type)) {
    return FairScheduler.CONTAINER_RESERVED;
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Couldn't creating reservation for " + getName() + ",at priority "+ request.getPriority());
    }
    return Resources.none();
  }
}
