{
  NodeType allowed=allowedLocalityLevel.get(priority);
  if (allowed != null) {
    if (allowed.equals(NodeType.OFF_SWITCH) && (type.equals(NodeType.NODE_LOCAL) || type.equals(NodeType.RACK_LOCAL))) {
      this.resetAllowedLocalityLevel(priority,type);
    }
 else     if (allowed.equals(NodeType.RACK_LOCAL) && type.equals(NodeType.NODE_LOCAL)) {
      this.resetAllowedLocalityLevel(priority,type);
    }
  }
  if (getTotalRequiredResources(priority) <= 0) {
    return null;
  }
  RMContainer rmContainer=new RMContainerImpl(container,getApplicationAttemptId(),node.getNodeID(),appSchedulingInfo.getUser(),rmContext);
  ((RMContainerImpl)rmContainer).setQueueName(this.getQueueName());
  newlyAllocatedContainers.add(rmContainer);
  liveContainers.put(container.getId(),rmContainer);
  List<ResourceRequest> resourceRequestList=appSchedulingInfo.allocate(type,node,priority,request,container);
  this.attemptResourceUsage.incUsed(container.getResource());
  ((RMContainerImpl)rmContainer).setResourceRequests(resourceRequestList);
  rmContainer.handle(new RMContainerEvent(container.getId(),RMContainerEventType.START));
  if (LOG.isDebugEnabled()) {
    LOG.debug("allocate: applicationAttemptId=" + container.getId().getApplicationAttemptId() + " container="+ container.getId()+ " host="+ container.getNodeId().getHost()+ " type="+ type);
  }
  RMAuditLogger.logSuccess(getUser(),AuditConstants.ALLOC_CONTAINER,"SchedulerApp",getApplicationId(),container.getId(),container.getResource());
  return rmContainer;
}
