{
  LOG.info("Stopping JobHistoryEventHandler. " + "Size of the outstanding queue size is " + eventQueue.size());
  stopped=true;
synchronized (lock) {
    eventHandlingThread.interrupt();
  }
  try {
    eventHandlingThread.join();
  }
 catch (  InterruptedException ie) {
    LOG.info("Interruped Exception while stopping",ie);
  }
  Iterator<JobHistoryEvent> it=eventQueue.iterator();
  while (it.hasNext()) {
    JobHistoryEvent ev=it.next();
    LOG.info("In stop, writing event " + ev.getType());
    handleEvent(ev);
  }
  for (  MetaInfo mi : fileMap.values()) {
    try {
      mi.closeWriter();
    }
 catch (    IOException e) {
      LOG.info("Exception while closing file " + e.getMessage());
    }
  }
  LOG.info("Stopped JobHistoryEventHandler. super.stop()");
  super.stop();
}
