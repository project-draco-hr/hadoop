{
  TestableAdlFileSystem fs=new TestableAdlFileSystem();
  Configuration conf=new Configuration();
  conf.set(OAUTH_REFRESH_URL_KEY,"http://localhost:1111/refresh");
  conf.set(OAUTH_CREDENTIAL_KEY,"credential");
  conf.set(OAUTH_CLIENT_ID_KEY,"MY_CLIENTID");
  conf.setClass(ACCESS_TOKEN_PROVIDER_KEY,ConfCredentialBasedAccessTokenProvider.class,AccessTokenProvider.class);
  conf.setBoolean(DFS_WEBHDFS_OAUTH_ENABLED_KEY,true);
  URI uri=new URI("adl://localhost:1234");
  fs.initialize(uri,conf);
  Assert.assertEquals(true,fs.isFeatureRedirectOff());
  Assert.assertEquals(true,fs.isFeatureGetBlockLocationLocallyBundled());
  Assert.assertEquals(true,fs.isFeatureConcurrentReadWithReadAhead());
  Assert.assertEquals(false,fs.isOverrideOwnerFeatureOn());
  Assert.assertEquals(8 * 1024 * 1024,fs.getMaxBufferSize());
  Assert.assertEquals(2,fs.getMaxConcurrentConnection());
  fs.close();
  conf.set("adl.feature.override.redirection.off","false");
  fs.initialize(uri,conf);
  Assert.assertEquals(false,fs.isFeatureRedirectOff());
  fs.close();
  conf.set("adl.feature.override.redirection.off","true");
  fs.initialize(uri,conf);
  Assert.assertEquals(true,fs.isFeatureRedirectOff());
  fs.close();
  conf.set("adl.feature.override.getblocklocation.locally.bundled","false");
  fs.initialize(uri,conf);
  Assert.assertEquals(false,fs.isFeatureGetBlockLocationLocallyBundled());
  fs.close();
  conf.set("adl.feature.override.getblocklocation.locally.bundled","true");
  fs.initialize(uri,conf);
  Assert.assertEquals(true,fs.isFeatureGetBlockLocationLocallyBundled());
  fs.close();
  conf.set("adl.feature.override.readahead","false");
  fs.initialize(uri,conf);
  Assert.assertEquals(false,fs.isFeatureConcurrentReadWithReadAhead());
  fs.close();
  conf.set("adl.feature.override.readahead","true");
  fs.initialize(uri,conf);
  Assert.assertEquals(true,fs.isFeatureConcurrentReadWithReadAhead());
  fs.close();
  conf.set("adl.feature.override.readahead.max.buffersize","101");
  fs.initialize(uri,conf);
  Assert.assertEquals(101,fs.getMaxBufferSize());
  fs.close();
  conf.set("adl.feature.override.readahead.max.buffersize","12134565");
  fs.initialize(uri,conf);
  Assert.assertEquals(12134565,fs.getMaxBufferSize());
  fs.close();
  conf.set("adl.debug.override.localuserasfileowner","true");
  fs.initialize(uri,conf);
  Assert.assertEquals(true,fs.isOverrideOwnerFeatureOn());
  fs.close();
  conf.set("adl.debug.override.localuserasfileowner","false");
  fs.initialize(uri,conf);
  Assert.assertEquals(false,fs.isOverrideOwnerFeatureOn());
  fs.close();
}
