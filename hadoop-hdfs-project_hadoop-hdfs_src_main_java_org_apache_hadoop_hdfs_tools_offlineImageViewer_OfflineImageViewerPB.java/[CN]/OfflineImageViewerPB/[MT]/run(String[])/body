{
  Options options=buildOptions();
  if (args.length == 0) {
    printUsage();
    return 0;
  }
  if (args.length == 1 && isHelpOption(args[0])) {
    printUsage();
    return 0;
  }
  CommandLineParser parser=new PosixParser();
  CommandLine cmd;
  try {
    cmd=parser.parse(options,args);
  }
 catch (  ParseException e) {
    System.out.println("Error parsing command-line options: ");
    printUsage();
    return -1;
  }
  if (cmd.hasOption("h")) {
    printUsage();
    return -1;
  }
  String inputFile=cmd.getOptionValue("i");
  String processor=cmd.getOptionValue("p","Web");
  String outputFile=cmd.getOptionValue("o","-");
  String delimiter=cmd.getOptionValue("delimiter",PBImageDelimitedTextWriter.DEFAULT_DELIMITER);
  String tempPath=cmd.getOptionValue("t","");
  Configuration conf=new Configuration();
  try (PrintStream out=outputFile.equals("-") ? System.out : new PrintStream(outputFile,"UTF-8")){
switch (processor) {
case "FileDistribution":
      long maxSize=Long.parseLong(cmd.getOptionValue("maxSize","0"));
    int step=Integer.parseInt(cmd.getOptionValue("step","0"));
  new FileDistributionCalculator(conf,maxSize,step,out).visit(new RandomAccessFile(inputFile,"r"));
break;
case "XML":
new PBImageXmlWriter(conf,out).visit(new RandomAccessFile(inputFile,"r"));
break;
case "Web":
String addr=cmd.getOptionValue("addr","localhost:5978");
try (WebImageViewer viewer=new WebImageViewer(NetUtils.createSocketAddr(addr))){
viewer.start(inputFile);
}
 break;
case "Delimited":
try (PBImageDelimitedTextWriter writer=new PBImageDelimitedTextWriter(out,delimiter,tempPath)){
writer.visit(new RandomAccessFile(inputFile,"r"));
}
 break;
default :
System.err.println("Invalid processor specified : " + processor);
printUsage();
return -1;
}
return 0;
}
 catch (EOFException e) {
System.err.println("Input file ended unexpectedly. Exiting");
}
catch (IOException e) {
System.err.println("Encountered exception.  Exiting: " + e.getMessage());
}
return -1;
}
