{
  ResourceUtilization u1=ResourceUtilization.newInstance(10,20,0.5f);
  ResourceUtilization u2=ResourceUtilization.newInstance(u1);
  ResourceUtilization u3=ResourceUtilization.newInstance(10,20,0.5f);
  ResourceUtilization u4=ResourceUtilization.newInstance(20,20,0.5f);
  ResourceUtilization u5=ResourceUtilization.newInstance(30,40,0.8f);
  Assert.assertEquals(u1,u2);
  Assert.assertEquals(u1,u3);
  Assert.assertNotEquals(u1,u4);
  Assert.assertNotEquals(u2,u5);
  Assert.assertNotEquals(u4,u5);
  Assert.assertTrue(u1.hashCode() == u2.hashCode());
  Assert.assertTrue(u1.hashCode() == u3.hashCode());
  Assert.assertFalse(u1.hashCode() == u4.hashCode());
  Assert.assertFalse(u2.hashCode() == u5.hashCode());
  Assert.assertFalse(u4.hashCode() == u5.hashCode());
  Assert.assertTrue(u1.getPhysicalMemory() == 10);
  Assert.assertFalse(u1.getVirtualMemory() == 10);
  Assert.assertTrue(u1.getCPU() == 0.5f);
  Assert.assertEquals("<pmem:10, vmem:" + u1.getVirtualMemory() + ", vCores:0.5>",u1.toString());
  u1.addTo(10,0,0.0f);
  Assert.assertNotEquals(u1,u2);
  Assert.assertEquals(u1,u4);
  u1.addTo(10,20,0.3f);
  Assert.assertEquals(u1,u5);
  u1.subtractFrom(10,20,0.3f);
  Assert.assertEquals(u1,u4);
  u1.subtractFrom(10,0,0.0f);
  Assert.assertEquals(u1,u3);
}
