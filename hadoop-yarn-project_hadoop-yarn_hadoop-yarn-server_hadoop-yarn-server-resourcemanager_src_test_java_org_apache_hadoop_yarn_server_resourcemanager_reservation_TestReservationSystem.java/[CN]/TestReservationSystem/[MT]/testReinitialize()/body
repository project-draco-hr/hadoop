{
  conf=scheduler.getConfig();
  try {
    reservationSystem.reinitialize(conf,rmContext);
  }
 catch (  YarnException e) {
    Assert.fail(e.getMessage());
  }
  if (getSchedulerType().equals(SchedulerType.CAPACITY)) {
    ReservationSystemTestUtil.validateReservationQueue(reservationSystem,ReservationSystemTestUtil.getReservationQueueName());
  }
 else {
    ReservationSystemTestUtil.validateReservationQueue(reservationSystem,ReservationSystemTestUtil.getFullReservationQueueName());
  }
  String newQ="reservation";
  Assert.assertNull(reservationSystem.getPlan(newQ));
  updateSchedulerConf(conf,newQ);
  try {
    scheduler.reinitialize(conf,rmContext);
  }
 catch (  IOException e) {
    Assert.fail(e.getMessage());
  }
  try {
    reservationSystem.reinitialize(conf,rmContext);
  }
 catch (  YarnException e) {
    Assert.fail(e.getMessage());
  }
  if (getSchedulerType().equals(SchedulerType.CAPACITY)) {
    ReservationSystemTestUtil.validateReservationQueue(reservationSystem,newQ);
  }
 else {
    ReservationSystemTestUtil.validateReservationQueue(reservationSystem,"root." + newQ);
  }
}
