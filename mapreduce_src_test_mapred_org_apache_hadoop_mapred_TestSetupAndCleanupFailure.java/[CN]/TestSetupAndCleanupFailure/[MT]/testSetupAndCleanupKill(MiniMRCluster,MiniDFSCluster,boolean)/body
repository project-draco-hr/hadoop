{
  RunningJob job=launchJobWithWaitingSetupAndCleanup(mr);
  JobTracker jt=mr.getJobTrackerRunner().getJobTracker();
  JobInProgress jip=jt.getJob(job.getID());
  TaskAttemptID setupID=getRunningTaskID(jip.getTasks(TaskType.JOB_SETUP));
  if (commandLineKill) {
    killTaskFromCommandLine(job,setupID,jt);
  }
 else {
    killTaskWithLostTracker(mr,setupID);
  }
  UtilsForTests.writeFile(dfs.getNameNode(),dfs.getFileSystem().getConf(),setupSignalFile,(short)3);
  while (job.reduceProgress() != 1.0f) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException ie) {
    }
  }
  TaskAttemptID cleanupID=getRunningTaskID(jip.getTasks(TaskType.JOB_CLEANUP));
  if (commandLineKill) {
    killTaskFromCommandLine(job,cleanupID,jt);
  }
 else {
    killTaskWithLostTracker(mr,cleanupID);
  }
  UtilsForTests.writeFile(dfs.getNameNode(),dfs.getFileSystem().getConf(),cleanupSignalFile,(short)3);
  job.waitForCompletion();
  assertEquals(JobStatus.SUCCEEDED,job.getJobState());
  assertEquals(TaskStatus.State.KILLED,jt.getTaskStatus(setupID).getRunState());
  assertEquals(TaskStatus.State.KILLED,jt.getTaskStatus(cleanupID).getRunState());
}
