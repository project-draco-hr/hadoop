def setUp(self):
    self.originalDir = os.getcwd()
    self.validator = typeValidator(self.originalDir)
    self.tempDir = tempfile.mkdtemp(dir=('/tmp/hod-%s' % getpass.getuser()), prefix='test_Types_typeValidator_tempDir')
    self.tempFile = tempfile.NamedTemporaryFile(dir=self.tempDir)
    self.errorStringsForVerify = {'pos_int': 0, 'uri': '%s is an invalid uri', 'directory': 0, 'file': 0, }
    self.verifyValidVals = [('pos_int', 0), ('pos_int', 1), ('directory', self.tempDir), ('directory', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir))), ('file', self.tempFile.name), ('file', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempFile.name))), ('uri', ('file://localhost/' + self.tempDir)), ('uri', ('file:///' + self.tempDir)), ('uri', ('file:///tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir))), ('uri', ('file://localhost/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir))), ('uri', 'http://hadoop.apache.org/core/'), ('uri', self.tempDir), ('uri', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir)))]
    randomNum = random.random()
    while os.path.exists(('/%s' % randomNum)):
        randomNum = random.random()
    invalidUri = ('file://localhost/%s' % randomNum)
    self.verifyInvalidVals = [('pos_int', (-1)), ('uri', invalidUri), ('directory', self.tempFile.name), ('file', self.tempDir)]
    self.normalizeVals = [('pos_int', 1, 1), ('pos_int', '1', 1), ('directory', self.tempDir, self.tempDir), ('directory', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir)), self.tempDir), ('file', self.tempFile.name, self.tempFile.name), ('file', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempFile.name)), self.tempFile.name), ('uri', ('file://localhost' + self.tempDir), ('file://' + self.tempDir)), ('uri', ('file://127.0.0.1' + self.tempDir), ('file://' + self.tempDir)), ('uri', 'http://hadoop.apache.org/core', 'http://hadoop.apache.org/core'), ('uri', self.tempDir, self.tempDir), ('uri', ('/tmp/hod-%s/../../%s' % (getpass.getuser(), self.tempDir)), self.tempDir)]
    pass
