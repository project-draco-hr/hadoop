{
  UserGroupInformation ugi;
  try {
    if (UserGroupInformation.isSecurityEnabled()) {
      final Token<DelegationTokenIdentifier> token=params.delegationToken();
      ugi=ugiCache.get(buildTokenCacheKey(token),new Callable<UserGroupInformation>(){
        @Override public UserGroupInformation call() throws Exception {
          return tokenUGI(token);
        }
      }
);
    }
 else {
      final String usernameFromQuery=params.userName();
      final String doAsUserFromQuery=params.doAsUser();
      final String remoteUser=usernameFromQuery == null ? JspHelper.getDefaultWebUserName(params.conf()) : usernameFromQuery;
      ugi=ugiCache.get(buildNonTokenCacheKey(doAsUserFromQuery,remoteUser),new Callable<UserGroupInformation>(){
        @Override public UserGroupInformation call() throws Exception {
          return nonTokenUGI(usernameFromQuery,doAsUserFromQuery,remoteUser);
        }
      }
);
    }
  }
 catch (  ExecutionException e) {
    Throwable cause=e.getCause();
    if (cause instanceof IOException) {
      throw (IOException)cause;
    }
 else {
      throw new IOException(cause);
    }
  }
  return ugi;
}
