{
  List<INode> dlist=new ArrayList<INode>(refNum + deletedNodes.size());
  for (  long deletedId : deletedNodes) {
    INode deleted=fsDir.getInode(deletedId);
    dlist.add(deleted);
    addToDeletedList(deleted,dir);
  }
  for (int r=0; r < refNum; r++) {
    INodeSection.INodeReference ref=INodeSection.INodeReference.parseDelimitedFrom(in);
    INodeReference refNode=loadINodeReference(ref,fsDir);
    dlist.add(refNode);
    addToDeletedList(refNode,dir);
  }
  Collections.sort(dlist,new Comparator<INode>(){
    @Override public int compare(    INode n1,    INode n2){
      return n1.compareTo(n2.getLocalNameBytes());
    }
  }
);
  return dlist;
}
