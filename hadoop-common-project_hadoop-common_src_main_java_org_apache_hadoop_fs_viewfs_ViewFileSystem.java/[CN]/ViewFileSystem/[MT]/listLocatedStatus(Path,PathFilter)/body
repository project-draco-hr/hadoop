{
  final InodeTree.ResolveResult<FileSystem> res=fsState.resolve(getUriPath(f),true);
  final RemoteIterator<LocatedFileStatus> statusIter=res.targetFileSystem.listLocatedStatus(res.remainingPath);
  if (res.isInternalDir()) {
    return statusIter;
  }
  return new RemoteIterator<LocatedFileStatus>(){
    @Override public boolean hasNext() throws IOException {
      return statusIter.hasNext();
    }
    @Override public LocatedFileStatus next() throws IOException {
      final LocatedFileStatus status=statusIter.next();
      return (LocatedFileStatus)fixFileStatus(status,getChrootedPath(res,status,f));
    }
  }
;
}
