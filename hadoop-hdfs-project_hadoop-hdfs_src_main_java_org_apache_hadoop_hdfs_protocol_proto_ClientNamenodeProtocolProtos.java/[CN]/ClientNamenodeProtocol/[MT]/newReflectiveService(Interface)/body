{
  return new ClientNamenodeProtocol(){
    @java.lang.Override public void getBlockLocations(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetBlockLocationsRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetBlockLocationsResponseProto> done){
      impl.getBlockLocations(controller,request,done);
    }
    @java.lang.Override public void getServerDefaults(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetServerDefaultsRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetServerDefaultsResponseProto> done){
      impl.getServerDefaults(controller,request,done);
    }
    @java.lang.Override public void create(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CreateRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CreateResponseProto> done){
      impl.create(controller,request,done);
    }
    @java.lang.Override public void append(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AppendRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AppendResponseProto> done){
      impl.append(controller,request,done);
    }
    @java.lang.Override public void setReplication(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetReplicationRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetReplicationResponseProto> done){
      impl.setReplication(controller,request,done);
    }
    @java.lang.Override public void setPermission(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetPermissionRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetPermissionResponseProto> done){
      impl.setPermission(controller,request,done);
    }
    @java.lang.Override public void setOwner(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetOwnerRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetOwnerResponseProto> done){
      impl.setOwner(controller,request,done);
    }
    @java.lang.Override public void abandonBlock(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AbandonBlockRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AbandonBlockResponseProto> done){
      impl.abandonBlock(controller,request,done);
    }
    @java.lang.Override public void addBlock(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AddBlockRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AddBlockResponseProto> done){
      impl.addBlock(controller,request,done);
    }
    @java.lang.Override public void getAdditionalDatanode(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetAdditionalDatanodeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetAdditionalDatanodeResponseProto> done){
      impl.getAdditionalDatanode(controller,request,done);
    }
    @java.lang.Override public void complete(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CompleteRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CompleteResponseProto> done){
      impl.complete(controller,request,done);
    }
    @java.lang.Override public void reportBadBlocks(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ReportBadBlocksRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ReportBadBlocksResponseProto> done){
      impl.reportBadBlocks(controller,request,done);
    }
    @java.lang.Override public void concat(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ConcatRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ConcatResponseProto> done){
      impl.concat(controller,request,done);
    }
    @java.lang.Override public void rename(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenameRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenameResponseProto> done){
      impl.rename(controller,request,done);
    }
    @java.lang.Override public void rename2(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.Rename2RequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.Rename2ResponseProto> done){
      impl.rename2(controller,request,done);
    }
    @java.lang.Override public void delete(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.DeleteRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.DeleteResponseProto> done){
      impl.delete(controller,request,done);
    }
    @java.lang.Override public void mkdirs(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.MkdirsRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.MkdirsResponseProto> done){
      impl.mkdirs(controller,request,done);
    }
    @java.lang.Override public void getListing(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetListingRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetListingResponseProto> done){
      impl.getListing(controller,request,done);
    }
    @java.lang.Override public void renewLease(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenewLeaseRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenewLeaseResponseProto> done){
      impl.renewLease(controller,request,done);
    }
    @java.lang.Override public void recoverLease(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RecoverLeaseRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RecoverLeaseResponseProto> done){
      impl.recoverLease(controller,request,done);
    }
    @java.lang.Override public void getFsStats(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFsStatusRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFsStatsResponseProto> done){
      impl.getFsStats(controller,request,done);
    }
    @java.lang.Override public void getDatanodeReport(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetDatanodeReportRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetDatanodeReportResponseProto> done){
      impl.getDatanodeReport(controller,request,done);
    }
    @java.lang.Override public void getPreferredBlockSize(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetPreferredBlockSizeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetPreferredBlockSizeResponseProto> done){
      impl.getPreferredBlockSize(controller,request,done);
    }
    @java.lang.Override public void setSafeMode(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetSafeModeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetSafeModeResponseProto> done){
      impl.setSafeMode(controller,request,done);
    }
    @java.lang.Override public void saveNamespace(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SaveNamespaceRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SaveNamespaceResponseProto> done){
      impl.saveNamespace(controller,request,done);
    }
    @java.lang.Override public void restoreFailedStorage(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RestoreFailedStorageRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RestoreFailedStorageResponseProto> done){
      impl.restoreFailedStorage(controller,request,done);
    }
    @java.lang.Override public void refreshNodes(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RefreshNodesRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RefreshNodesResponseProto> done){
      impl.refreshNodes(controller,request,done);
    }
    @java.lang.Override public void finalizeUpgrade(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.FinalizeUpgradeRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.FinalizeUpgradeResponseProto> done){
      impl.finalizeUpgrade(controller,request,done);
    }
    @java.lang.Override public void distributedUpgradeProgress(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.DistributedUpgradeProgressRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.DistributedUpgradeProgressResponseProto> done){
      impl.distributedUpgradeProgress(controller,request,done);
    }
    @java.lang.Override public void listCorruptFileBlocks(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListCorruptFileBlocksRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListCorruptFileBlocksResponseProto> done){
      impl.listCorruptFileBlocks(controller,request,done);
    }
    @java.lang.Override public void metaSave(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.MetaSaveRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.MetaSaveResponseProto> done){
      impl.metaSave(controller,request,done);
    }
    @java.lang.Override public void getFileInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFileInfoRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFileInfoResponseProto> done){
      impl.getFileInfo(controller,request,done);
    }
    @java.lang.Override public void getFileLinkInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFileLinkInfoRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetFileLinkInfoResponseProto> done){
      impl.getFileLinkInfo(controller,request,done);
    }
    @java.lang.Override public void getContentSummary(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetContentSummaryRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetContentSummaryResponseProto> done){
      impl.getContentSummary(controller,request,done);
    }
    @java.lang.Override public void setQuota(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetQuotaRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetQuotaResponseProto> done){
      impl.setQuota(controller,request,done);
    }
    @java.lang.Override public void fsync(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.FsyncRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.FsyncResponseProto> done){
      impl.fsync(controller,request,done);
    }
    @java.lang.Override public void setTimes(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetTimesRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetTimesResponseProto> done){
      impl.setTimes(controller,request,done);
    }
    @java.lang.Override public void createSymlink(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CreateSymlinkRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CreateSymlinkResponseProto> done){
      impl.createSymlink(controller,request,done);
    }
    @java.lang.Override public void getLinkTarget(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetLinkTargetRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetLinkTargetResponseProto> done){
      impl.getLinkTarget(controller,request,done);
    }
    @java.lang.Override public void updateBlockForPipeline(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.UpdateBlockForPipelineRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.UpdateBlockForPipelineResponseProto> done){
      impl.updateBlockForPipeline(controller,request,done);
    }
    @java.lang.Override public void updatePipeline(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.UpdatePipelineRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.UpdatePipelineResponseProto> done){
      impl.updatePipeline(controller,request,done);
    }
    @java.lang.Override public void getDelegationToken(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetDelegationTokenRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetDelegationTokenResponseProto> done){
      impl.getDelegationToken(controller,request,done);
    }
    @java.lang.Override public void renewDelegationToken(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenewDelegationTokenRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RenewDelegationTokenResponseProto> done){
      impl.renewDelegationToken(controller,request,done);
    }
    @java.lang.Override public void cancelDelegationToken(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CancelDelegationTokenRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CancelDelegationTokenResponseProto> done){
      impl.cancelDelegationToken(controller,request,done);
    }
    @java.lang.Override public void setBalancerBandwidth(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetBalancerBandwidthRequestProto request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.SetBalancerBandwidthResponseProto> done){
      impl.setBalancerBandwidth(controller,request,done);
    }
  }
;
}
