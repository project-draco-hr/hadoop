{
  LOG.info("Node offered to app: " + getName() + " reserved: "+ reserved);
  if (reserved) {
    RMContainer rmContainer=node.getReservedContainer();
    Priority priority=rmContainer.getReservedPriority();
    if (app.getTotalRequiredResources(priority) == 0) {
      unreserve(app,priority,node);
      return Resources.none();
    }
  }
 else {
    if (!(getRunnable())) {
      return Resources.none();
    }
  }
  for (  Priority priority : app.getPriorities()) {
    app.addSchedulingOpportunity(priority);
    NodeType allowedLocality=app.getAllowedLocalityLevel(priority,scheduler.getNumClusterNodes(),scheduler.getNodeLocalityThreshold(),scheduler.getRackLocalityThreshold());
    ResourceRequest localRequest=app.getResourceRequest(priority,node.getHostName());
    if (localRequest != null && localRequest.getNumContainers() != 0) {
      return assignContainer(node,app,priority,localRequest,NodeType.NODE_LOCAL,reserved);
    }
    ResourceRequest rackLocalRequest=app.getResourceRequest(priority,node.getRackName());
    if (rackLocalRequest != null && rackLocalRequest.getNumContainers() != 0 && (allowedLocality.equals(NodeType.RACK_LOCAL) || allowedLocality.equals(NodeType.OFF_SWITCH))) {
      return assignContainer(node,app,priority,rackLocalRequest,NodeType.RACK_LOCAL,reserved);
    }
    ResourceRequest offSwitchRequest=app.getResourceRequest(priority,RMNode.ANY);
    if (offSwitchRequest != null && offSwitchRequest.getNumContainers() != 0 && allowedLocality.equals(NodeType.OFF_SWITCH)) {
      return assignContainer(node,app,priority,offSwitchRequest,NodeType.OFF_SWITCH,reserved);
    }
  }
  return Resources.none();
}
