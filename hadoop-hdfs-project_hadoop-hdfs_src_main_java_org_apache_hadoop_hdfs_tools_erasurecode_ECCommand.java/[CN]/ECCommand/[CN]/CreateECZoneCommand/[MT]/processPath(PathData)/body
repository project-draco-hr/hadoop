{
  super.processPath(item);
  DistributedFileSystem dfs=(DistributedFileSystem)item.fs;
  try {
    if (schemaName != null) {
      ECSchema[] ecSchemas=dfs.getClient().getECSchemas();
      for (      ECSchema ecSchema : ecSchemas) {
        if (schemaName.equals(ecSchema.getSchemaName())) {
          schema=ecSchema;
          break;
        }
      }
      if (schema == null) {
        StringBuilder sb=new StringBuilder();
        sb.append("Schema '");
        sb.append(schemaName);
        sb.append("' does not match any of the supported schemas.");
        sb.append(" Please select any one of ");
        List<String> schemaNames=new ArrayList<String>();
        for (        ECSchema ecSchema : ecSchemas) {
          schemaNames.add(ecSchema.getSchemaName());
        }
        sb.append(schemaNames);
        throw new HadoopIllegalArgumentException(sb.toString());
      }
    }
    dfs.createErasureCodingZone(item.path,schema,cellSize);
    out.println("EC Zone created successfully at " + item.path);
  }
 catch (  IOException e) {
    throw new IOException("Unable to create EC zone for the path " + item.path + ". "+ e.getMessage());
  }
}
