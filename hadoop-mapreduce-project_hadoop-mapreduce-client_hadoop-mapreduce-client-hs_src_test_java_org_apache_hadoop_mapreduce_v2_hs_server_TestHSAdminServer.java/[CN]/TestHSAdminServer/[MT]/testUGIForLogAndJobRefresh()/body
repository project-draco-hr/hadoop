{
  UserGroupInformation ugi=UserGroupInformation.createUserForTesting("test",new String[]{"grp"});
  UserGroupInformation loginUGI=spy(hsAdminServer.getLoginUGI());
  hsAdminServer.setLoginUGI(loginUGI);
  ugi.doAs(new PrivilegedAction<Void>(){
    @Override public Void run(){
      String[] args=new String[1];
      args[0]="-refreshLogRetentionSettings";
      try {
        hsAdminClient.run(args);
      }
 catch (      Exception e) {
        fail("refreshLogRetentionSettings should have been successful");
      }
      return null;
    }
  }
);
  verify(loginUGI).doAs(any(PrivilegedExceptionAction.class));
  verify(alds).refreshLogRetentionSettings();
  reset(loginUGI);
  ugi.doAs(new PrivilegedAction<Void>(){
    @Override public Void run(){
      String[] args=new String[1];
      args[0]="-refreshJobRetentionSettings";
      try {
        hsAdminClient.run(args);
      }
 catch (      Exception e) {
        fail("refreshJobRetentionSettings should have been successful");
      }
      return null;
    }
  }
);
  verify(loginUGI).doAs(any(PrivilegedExceptionAction.class));
  verify(jobHistoryService).refreshJobRetentionSettings();
}
