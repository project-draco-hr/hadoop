{
  MiniMRClientCluster mr=null;
  FileSystem fileSys=null;
  try {
    mr=createMiniClusterWithCapacityScheduler();
    JobConf job=new JobConf(mr.getConfig());
    fileSys=FileSystem.get(job);
    fileSys.delete(testDir,true);
    FSDataOutputStream out=fileSys.create(inFile,true);
    out.writeBytes("This is a test file");
    out.close();
    FileInputFormat.setInputPaths(job,inFile);
    FileOutputFormat.setOutputPath(job,outDir);
    job.setInputFormat(TextInputFormat.class);
    job.setOutputFormat(TextOutputFormat.class);
    job.setMapperClass(IdentityMapper.class);
    job.setReducerClass(IdentityReducer.class);
    job.setNumReduceTasks(0);
    JobClient client=new JobClient(mr.getConfig());
    RunningJob rj=client.submitJob(job);
    JobID jobId=rj.getID();
    assertEquals("Expected matching JobIDs",jobId,client.getJob(jobId).getJobStatus().getJobID());
    assertEquals("Expected matching startTimes",rj.getJobStatus().getStartTime(),client.getJob(jobId).getJobStatus().getStartTime());
  }
  finally {
    if (fileSys != null) {
      fileSys.delete(testDir,true);
    }
    if (mr != null) {
      mr.stop();
    }
  }
}
