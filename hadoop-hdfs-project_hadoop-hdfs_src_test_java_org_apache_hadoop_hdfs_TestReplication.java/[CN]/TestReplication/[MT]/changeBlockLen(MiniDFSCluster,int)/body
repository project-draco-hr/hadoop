{
  final Path fileName=new Path("/file1");
  final short REPLICATION_FACTOR=(short)1;
  final FileSystem fs=cluster.getFileSystem();
  final int fileLen=fs.getConf().getInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY,512);
  DFSTestUtil.createFile(fs,fileName,fileLen,REPLICATION_FACTOR,0);
  DFSTestUtil.waitReplication(fs,fileName,REPLICATION_FACTOR);
  ExtendedBlock block=DFSTestUtil.getFirstBlock(fs,fileName);
  for (int i=0; i < cluster.getDataNodes().size(); i++) {
    if (TestDatanodeBlockScanner.changeReplicaLength(cluster,block,i,lenDelta)) {
      break;
    }
  }
  fs.setReplication(fileName,(short)(REPLICATION_FACTOR + 1));
  DFSClient dfsClient=new DFSClient(new InetSocketAddress("localhost",cluster.getNameNodePort()),fs.getConf());
  LocatedBlocks blocks=dfsClient.getNamenode().getBlockLocations(fileName.toString(),0,fileLen);
  if (lenDelta < 0) {
    while (!blocks.get(0).isCorrupt() || REPLICATION_FACTOR != blocks.get(0).getLocations().length) {
      Thread.sleep(100);
      blocks=dfsClient.getNamenode().getBlockLocations(fileName.toString(),0,fileLen);
    }
  }
 else {
    while (REPLICATION_FACTOR + 1 != blocks.get(0).getLocations().length) {
      Thread.sleep(100);
      blocks=dfsClient.getNamenode().getBlockLocations(fileName.toString(),0,fileLen);
    }
  }
  fs.delete(fileName,true);
}
