{
  final int index=getCurrentIndex();
  final int pos=cellBuffers.addTo(index,bytes,offset,len);
  final boolean cellFull=pos == cellSize;
  if (currentBlockGroup == null || shouldEndBlockGroup()) {
    allocateNewBlock();
  }
  currentBlockGroup.setNumBytes(currentBlockGroup.getNumBytes() + len);
  final StripedDataStreamer current=getCurrentStreamer();
  if (current.isHealthy()) {
    try {
      super.writeChunk(bytes,offset,len,checksum,ckoff,cklen);
    }
 catch (    Exception e) {
      handleCurrentStreamerFailure("offset=" + offset + ", length="+ len,e);
    }
  }
  if (cellFull) {
    int next=index + 1;
    if (next == numDataBlocks) {
      cellBuffers.flipDataBuffers();
      writeParityCells();
      next=0;
      if (shouldEndBlockGroup()) {
        flushAllInternals();
        checkStreamerFailures();
        for (int i=0; i < numAllBlocks; i++) {
          final StripedDataStreamer s=setCurrentStreamer(i);
          if (s.isHealthy()) {
            try {
              endBlock();
            }
 catch (            IOException ignored) {
            }
          }
        }
      }
 else {
        checkStreamerFailures();
      }
    }
    setCurrentStreamer(next);
  }
}
