{
  for (  JobInfo info : infos.values()) {
    info.runnable=false;
  }
  List<JobInProgress> jobs=new ArrayList<JobInProgress>(infos.keySet());
  Collections.sort(jobs,new FifoJobComparator());
  Map<String,Integer> userJobs=new HashMap<String,Integer>();
  Map<String,Integer> poolJobs=new HashMap<String,Integer>();
  for (  JobInProgress job : jobs) {
    String user=job.getJobConf().getUser();
    String pool=poolMgr.getPoolName(job);
    int userCount=userJobs.containsKey(user) ? userJobs.get(user) : 0;
    int poolCount=poolJobs.containsKey(pool) ? poolJobs.get(pool) : 0;
    if (userCount < poolMgr.getUserMaxJobs(user) && poolCount < poolMgr.getPoolMaxJobs(pool)) {
      if (job.getStatus().getRunState() == JobStatus.RUNNING || job.getStatus().getRunState() == JobStatus.PREP) {
        userJobs.put(user,userCount + 1);
        poolJobs.put(pool,poolCount + 1);
        JobInfo jobInfo=infos.get(job);
        if (job.getStatus().getRunState() == JobStatus.RUNNING) {
          jobInfo.runnable=true;
        }
 else {
          if (jobInfo.needsInitializing) {
            jobInfo.needsInitializing=false;
            jobInitializer.initJob(jobInfo,job);
          }
        }
      }
    }
  }
}
