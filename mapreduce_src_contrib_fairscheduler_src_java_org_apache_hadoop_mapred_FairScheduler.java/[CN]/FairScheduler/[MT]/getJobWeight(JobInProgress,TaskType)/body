{
  if (!isRunnable(job)) {
    return 1.0;
  }
 else {
    double weight=1.0;
    if (sizeBasedWeight) {
      JobInfo info=infos.get(job);
      int runnableTasks=(taskType == TaskType.MAP) ? info.mapSchedulable.getDemand() : info.reduceSchedulable.getDemand();
      weight=Math.log1p(runnableTasks) / Math.log(2);
    }
    weight*=getPriorityFactor(job.getPriority());
    if (weightAdjuster != null) {
      weight=weightAdjuster.adjustWeight(job,taskType,weight);
    }
    return weight;
  }
}
