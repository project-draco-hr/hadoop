{
  Path path=new Path("/p");
  DistributedFileSystem fs=cluster.getFileSystem();
  fs.create(path).close();
  fs.setXAttr(path,name1,value1,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name2,value2,EnumSet.of(XAttrSetFlag.CREATE));
  fs.setXAttr(path,name3,null,EnumSet.of(XAttrSetFlag.CREATE));
  restart(fs,persistNamespace);
  Map<String,byte[]> xattrs=fs.getXAttrs(path);
  Assert.assertEquals(xattrs.size(),3);
  Assert.assertArrayEquals(value1,xattrs.get(name1));
  Assert.assertArrayEquals(value2,xattrs.get(name2));
  Assert.assertArrayEquals(value3,xattrs.get(name3));
  fs.setXAttr(path,name1,newValue1,EnumSet.of(XAttrSetFlag.REPLACE));
  restart(fs,persistNamespace);
  xattrs=fs.getXAttrs(path);
  Assert.assertEquals(xattrs.size(),3);
  Assert.assertArrayEquals(newValue1,xattrs.get(name1));
  Assert.assertArrayEquals(value2,xattrs.get(name2));
  Assert.assertArrayEquals(value3,xattrs.get(name3));
  fs.removeXAttr(path,name1);
  fs.removeXAttr(path,name2);
  fs.removeXAttr(path,name3);
  restart(fs,persistNamespace);
  xattrs=fs.getXAttrs(path);
  Assert.assertEquals(xattrs.size(),0);
}
