{
  boolean error=true;
  boolean done=false;
  int numElements=0;
  Call call=null;
  try {
synchronized (responseQueue) {
      numElements=responseQueue.size();
      if (numElements == 0) {
        error=false;
        return true;
      }
      call=responseQueue.removeFirst();
      SocketChannel channel=call.connection.channel;
      if (LOG.isDebugEnabled()) {
        LOG.debug(getName() + ": responding to " + call);
      }
      int numBytes=channelWrite(channel,call.rpcResponse);
      if (numBytes < 0) {
        return true;
      }
      if (!call.rpcResponse.hasRemaining()) {
        call.rpcResponse=null;
        call.connection.decRpcCount();
        if (numElements == 1) {
          done=true;
        }
 else {
          done=false;
        }
        if (LOG.isDebugEnabled()) {
          LOG.debug(getName() + ": responding to " + call+ " Wrote "+ numBytes+ " bytes.");
        }
      }
 else {
        call.connection.responseQueue.addFirst(call);
        if (inHandler) {
          call.timestamp=Time.now();
          incPending();
          try {
            writeSelector.wakeup();
            channel.register(writeSelector,SelectionKey.OP_WRITE,call);
          }
 catch (          ClosedChannelException e) {
            done=true;
          }
 finally {
            decPending();
          }
        }
        if (LOG.isDebugEnabled()) {
          LOG.debug(getName() + ": responding to " + call+ " Wrote partial "+ numBytes+ " bytes.");
        }
      }
      error=false;
    }
  }
  finally {
    if (error && call != null) {
      LOG.warn(getName() + ", call " + call+ ": output error");
      done=true;
      closeConnection(call.connection);
    }
  }
  return done;
}
