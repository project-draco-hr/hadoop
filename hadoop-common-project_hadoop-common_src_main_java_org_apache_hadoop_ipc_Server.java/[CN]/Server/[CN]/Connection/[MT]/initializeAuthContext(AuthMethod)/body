{
  try {
    if (enabledAuthMethods.contains(authMethod)) {
      saslServer=createSaslServer(authMethod);
    }
 else     if (enabledAuthMethods.contains(AuthMethod.SIMPLE)) {
      doSaslReply(SaslStatus.SUCCESS,new IntWritable(SaslRpcServer.SWITCH_TO_SIMPLE_AUTH),null,null);
      authMethod=AuthMethod.SIMPLE;
      skipInitialSaslHandshake=true;
    }
 else {
      throw new AccessControlException(authMethod + " authentication is not enabled." + "  Available:"+ enabledAuthMethods);
    }
  }
 catch (  IOException ioe) {
    final String ioeClass=ioe.getClass().getName();
    final String ioeMessage=ioe.getLocalizedMessage();
    if (authMethod == AuthMethod.SIMPLE) {
      setupResponse(authFailedResponse,authFailedCall,RpcStatusProto.FATAL,RpcErrorCodeProto.FATAL_UNAUTHORIZED,null,ioeClass,ioeMessage);
      responder.doRespond(authFailedCall);
    }
 else {
      doSaslReply(SaslStatus.ERROR,null,ioeClass,ioeMessage);
    }
    throw ioe;
  }
  return authMethod;
}
