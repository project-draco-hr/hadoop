{
  SaslServer saslServer=UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<SaslServer>(){
    @Override public SaslServer run() throws SaslException {
      return Sasl.createSaslServer(mechanism,protocol,hostname,SaslRpcServer.SASL_PROPS,callback);
    }
  }
);
  if (saslServer == null) {
    throw new AccessControlException("Unable to find SASL server implementation for " + mechanism);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Created SASL server with mechanism = " + mechanism);
  }
  return saslServer;
}
