{
  RpcSaslProto.Builder negotiateBuilder=RpcSaslProto.newBuilder();
  if (authMethods.contains(AuthMethod.SIMPLE) && authMethods.size() == 1) {
    negotiateBuilder.setState(SaslState.SUCCESS);
  }
 else {
    negotiateBuilder.setState(SaslState.NEGOTIATE);
    for (    AuthMethod authMethod : authMethods) {
      SaslRpcServer saslRpcServer=new SaslRpcServer(authMethod);
      SaslAuth.Builder builder=negotiateBuilder.addAuthsBuilder().setMethod(authMethod.toString()).setMechanism(saslRpcServer.mechanism);
      if (saslRpcServer.protocol != null) {
        builder.setProtocol(saslRpcServer.protocol);
      }
      if (saslRpcServer.serverId != null) {
        builder.setServerId(saslRpcServer.serverId);
      }
    }
  }
  return negotiateBuilder.build();
}
