{
  final RpcSaslProto saslMessage=decodeProtobufFromStream(RpcSaslProto.newBuilder(),dis);
switch (saslMessage.getState()) {
case WRAP:
{
      if (!saslContextEstablished || !useWrap) {
        throw new WrappedRpcServerException(RpcErrorCodeProto.FATAL_INVALID_RPC_HEADER,new SaslException("Server is not wrapping data"));
      }
      unwrapPacketAndProcessRpcs(saslMessage.getToken().toByteArray());
      break;
    }
default :
  saslProcess(saslMessage);
}
}
