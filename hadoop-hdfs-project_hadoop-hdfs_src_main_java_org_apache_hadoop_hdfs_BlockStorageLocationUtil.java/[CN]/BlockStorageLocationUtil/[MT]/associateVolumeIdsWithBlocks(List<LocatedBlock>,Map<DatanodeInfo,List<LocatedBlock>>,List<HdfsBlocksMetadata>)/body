{
  Map<ExtendedBlock,LocatedBlock> extBlockToLocBlock=new HashMap<ExtendedBlock,LocatedBlock>();
  for (  LocatedBlock b : blocks) {
    extBlockToLocBlock.put(b.getBlock(),b);
  }
  Map<LocatedBlock,List<VolumeId>> blockVolumeIds=new HashMap<LocatedBlock,List<VolumeId>>();
  for (  LocatedBlock b : blocks) {
    ArrayList<VolumeId> l=new ArrayList<VolumeId>(b.getLocations().length);
    for (int i=0; i < b.getLocations().length; i++) {
      l.add(new HdfsVolumeId((byte)-1,false));
    }
    blockVolumeIds.put(b,l);
  }
  Iterator<HdfsBlocksMetadata> metadatasIter=metadatas.iterator();
  Iterator<DatanodeInfo> datanodeIter=datanodeBlocks.keySet().iterator();
  while (metadatasIter.hasNext()) {
    HdfsBlocksMetadata metadata=metadatasIter.next();
    DatanodeInfo datanode=datanodeIter.next();
    if (metadata == null) {
      continue;
    }
    ExtendedBlock[] metaBlocks=metadata.getBlocks();
    List<byte[]> metaVolumeIds=metadata.getVolumeIds();
    List<Integer> metaVolumeIndexes=metadata.getVolumeIndexes();
    for (int j=0; j < metaBlocks.length; j++) {
      int volumeIndex=metaVolumeIndexes.get(j);
      ExtendedBlock extBlock=metaBlocks[j];
      if (volumeIndex == Integer.MAX_VALUE || volumeIndex >= metaVolumeIds.size() || !extBlockToLocBlock.containsKey(extBlock)) {
        continue;
      }
      HdfsVolumeId id=new HdfsVolumeId(metaVolumeIds.get(volumeIndex)[0],true);
      LocatedBlock locBlock=extBlockToLocBlock.get(extBlock);
      DatanodeInfo[] dnInfos=locBlock.getLocations();
      int index=-1;
      for (int k=0; k < dnInfos.length; k++) {
        if (dnInfos[k].equals(datanode)) {
          index=k;
          break;
        }
      }
      if (index < 0) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Datanode responded with a block volume id we did" + " not request, omitting.");
        }
        continue;
      }
      List<VolumeId> VolumeIds=blockVolumeIds.get(locBlock);
      VolumeIds.set(index,id);
    }
  }
  return blockVolumeIds;
}
