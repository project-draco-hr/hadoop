{
  LinkedBlockingQueue<E> keyQueue=keyQueues.get(keyName);
  LinkedList<E> ekvs=new LinkedList<E>();
  try {
    for (int i=0; i < num; i++) {
      E val=keyQueue.poll();
      if (val == null) {
        int numToFill=0;
switch (policy) {
case ATLEAST_ONE:
          numToFill=(ekvs.size() < 1) ? 1 : 0;
        break;
case LOW_WATERMARK:
      numToFill=Math.min(num,(int)(lowWatermark * numValues)) - ekvs.size();
    break;
case ALL:
  numToFill=num - ekvs.size();
break;
}
if (numToFill > 0) {
refiller.fillQueueForKey(keyName,ekvs,numToFill);
}
if (i <= (int)(lowWatermark * numValues)) {
submitRefillTask(keyName,keyQueue);
}
return ekvs;
}
ekvs.add(val);
}
}
 catch (Exception e) {
throw new IOException("Exeption while contacting value generator ",e);
}
return ekvs;
}
