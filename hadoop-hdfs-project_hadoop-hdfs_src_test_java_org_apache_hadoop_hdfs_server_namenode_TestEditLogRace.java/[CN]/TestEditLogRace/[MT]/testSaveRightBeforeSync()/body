{
  Configuration conf=getConf();
  NameNode.initMetrics(conf,NamenodeRole.NAMENODE);
  DFSTestUtil.formatNameNode(conf);
  final FSNamesystem namesystem=FSNamesystem.loadFromDisk(conf);
  try {
    FSImage fsimage=namesystem.getFSImage();
    FSEditLog editLog=spy(fsimage.getEditLog());
    fsimage.editLog=editLog;
    final AtomicReference<Throwable> deferredException=new AtomicReference<Throwable>();
    final CountDownLatch waitToEnterSync=new CountDownLatch(1);
    final Thread doAnEditThread=new Thread(){
      public void run(){
        try {
          LOG.info("Starting mkdirs");
          namesystem.mkdirs("/test",new PermissionStatus("test","test",new FsPermission((short)00755)),true);
          LOG.info("mkdirs complete");
        }
 catch (        Throwable ioe) {
          deferredException.set(ioe);
          waitToEnterSync.countDown();
        }
      }
    }
;
    Answer<Void> blockingSync=new Answer<Void>(){
      @Override public Void answer(      InvocationOnMock invocation) throws Throwable {
        LOG.info("logSync called");
        if (Thread.currentThread() == doAnEditThread) {
          LOG.info("edit thread: Telling main thread we made it just before logSync...");
          waitToEnterSync.countDown();
          LOG.info("edit thread: sleeping for " + BLOCK_TIME + "secs");
          Thread.sleep(BLOCK_TIME * 1000);
          LOG.info("Going through to logSync. This will allow the main thread to continue.");
        }
        invocation.callRealMethod();
        LOG.info("logSync complete");
        return null;
      }
    }
;
    doAnswer(blockingSync).when(editLog).logSync();
    doAnEditThread.start();
    LOG.info("Main thread: waiting to just before logSync...");
    waitToEnterSync.await();
    assertNull(deferredException.get());
    LOG.info("Main thread: detected that logSync about to be called.");
    LOG.info("Trying to enter safe mode.");
    LOG.info("This should block for " + BLOCK_TIME + "sec, since we have pending edits");
    long st=System.currentTimeMillis();
    namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);
    long et=System.currentTimeMillis();
    LOG.info("Entered safe mode");
    assertTrue(et - st > (BLOCK_TIME - 1) * 1000);
    namesystem.saveNamespace();
    LOG.info("Joining on edit thread...");
    doAnEditThread.join();
    assertNull(deferredException.get());
    assertEquals(3,verifyEditLogs(namesystem,fsimage,NNStorage.getFinalizedEditsFileName(1,3),1));
    assertEquals(1,verifyEditLogs(namesystem,fsimage,NNStorage.getInProgressEditsFileName(4),4));
  }
  finally {
    LOG.info("Closing namesystem");
    if (namesystem != null)     namesystem.close();
  }
}
