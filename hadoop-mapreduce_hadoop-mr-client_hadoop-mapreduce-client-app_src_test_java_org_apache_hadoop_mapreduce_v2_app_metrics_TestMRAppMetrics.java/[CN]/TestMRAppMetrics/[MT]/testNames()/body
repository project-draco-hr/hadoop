{
  Job job=mock(Job.class);
  Task mapTask=make(stub(Task.class).returning(TaskType.MAP).from.getType());
  Task reduceTask=make(stub(Task.class).returning(TaskType.REDUCE).from.getType());
  MRAppMetrics metrics=MRAppMetrics.create();
  metrics.submittedJob(job);
  metrics.waitingTask(mapTask);
  metrics.waitingTask(reduceTask);
  metrics.preparingJob(job);
  metrics.submittedJob(job);
  metrics.waitingTask(mapTask);
  metrics.waitingTask(reduceTask);
  metrics.preparingJob(job);
  metrics.submittedJob(job);
  metrics.waitingTask(mapTask);
  metrics.waitingTask(reduceTask);
  metrics.preparingJob(job);
  metrics.endPreparingJob(job);
  metrics.endPreparingJob(job);
  metrics.endPreparingJob(job);
  metrics.runningJob(job);
  metrics.launchedTask(mapTask);
  metrics.runningTask(mapTask);
  metrics.failedTask(mapTask);
  metrics.endWaitingTask(reduceTask);
  metrics.endRunningTask(mapTask);
  metrics.endRunningJob(job);
  metrics.failedJob(job);
  metrics.runningJob(job);
  metrics.launchedTask(mapTask);
  metrics.runningTask(mapTask);
  metrics.killedTask(mapTask);
  metrics.endWaitingTask(reduceTask);
  metrics.endRunningTask(mapTask);
  metrics.endRunningJob(job);
  metrics.killedJob(job);
  metrics.runningJob(job);
  metrics.launchedTask(mapTask);
  metrics.runningTask(mapTask);
  metrics.completedTask(mapTask);
  metrics.endRunningTask(mapTask);
  metrics.launchedTask(reduceTask);
  metrics.runningTask(reduceTask);
  metrics.completedTask(reduceTask);
  metrics.endRunningTask(reduceTask);
  metrics.endRunningJob(job);
  metrics.completedJob(job);
  checkMetrics(3,1,1,1,0,0,3,1,1,1,0,0,1,1,0,0,0,0);
}
