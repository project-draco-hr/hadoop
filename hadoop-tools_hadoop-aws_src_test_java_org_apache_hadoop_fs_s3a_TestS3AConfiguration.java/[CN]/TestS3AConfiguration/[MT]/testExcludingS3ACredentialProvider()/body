{
  final Configuration conf=new Configuration();
  final File file=tempDir.newFile("test.jks");
  final URI jks=ProviderUtils.nestURIForLocalJavaKeyStoreProvider(file.toURI());
  conf.set(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH,"jceks://s3a/foobar," + jks.toString());
  Configuration c=ProviderUtils.excludeIncompatibleCredentialProviders(conf,S3AFileSystem.class);
  String newPath=conf.get(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH);
  assertFalse("Provider Path incorrect",newPath.contains("s3a://"));
  provisionAccessKeys(c);
  S3AFileSystem s3afs=new S3AFileSystem();
  conf.set(Constants.ACCESS_KEY,EXAMPLE_ID + "LJM");
  URI uriWithUserInfo=new URI("s3a://123:456@foobar");
  S3AFileSystem.AWSAccessKeys creds=s3afs.getAWSAccessKeys(uriWithUserInfo,conf);
  assertEquals("AccessKey incorrect.","123",creds.getAccessKey());
  assertEquals("SecretKey incorrect.","456",creds.getAccessSecret());
}
