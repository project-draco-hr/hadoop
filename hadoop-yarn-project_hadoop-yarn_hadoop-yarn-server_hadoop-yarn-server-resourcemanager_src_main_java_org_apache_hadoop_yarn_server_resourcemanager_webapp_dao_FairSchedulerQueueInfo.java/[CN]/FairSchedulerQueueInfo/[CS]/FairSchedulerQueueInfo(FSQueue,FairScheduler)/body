{
  QueueManager manager=scheduler.getQueueManager();
  queueName=queue.getName();
  Resource clusterMax=scheduler.getClusterCapacity();
  clusterMaxMem=clusterMax.getMemory();
  usedResources=queue.getResourceUsage();
  fractionUsed=(float)usedResources.getMemory() / clusterMaxMem;
  fairShare=queue.getFairShare().getMemory();
  minResources=queue.getMinShare();
  minShare=minResources.getMemory();
  maxResources=scheduler.getQueueManager().getMaxResources(queueName);
  if (maxResources.getMemory() > clusterMaxMem) {
    maxResources=Resources.createResource(clusterMaxMem);
  }
  maxShare=maxResources.getMemory();
  fractionFairShare=(float)fairShare / clusterMaxMem;
  fractionMinShare=(float)minShare / clusterMaxMem;
  maxApps=manager.getQueueMaxApps(queueName);
  Collection<FSQueue> childQueues=queue.getChildQueues();
  childInfos=new ArrayList<FairSchedulerQueueInfo>();
  for (  FSQueue child : childQueues) {
    if (child instanceof FSLeafQueue) {
      childInfos.add(new FairSchedulerLeafQueueInfo((FSLeafQueue)child,scheduler));
    }
 else {
      childInfos.add(new FairSchedulerQueueInfo(child,scheduler));
    }
  }
}
