{
  int[] message=new int[stripeSize];
  int[] parity=new int[paritySize];
  Set<Integer> errorLocations=new HashSet<Integer>();
  for (int i=0; i < message.length; ++i) {
    message[i]=RAND.nextInt(256);
  }
  while (errorLocations.size() < errors) {
    int loc=RAND.nextInt(stripeSize + paritySize);
    errorLocations.add(loc);
  }
  ReedSolomonCode codec=new ReedSolomonCode(stripeSize,paritySize);
  codec.encode(message,parity);
  int[] data=combineArrays(parity,message);
  for (  Integer i : errorLocations) {
    data[i]=randError(data[i]);
  }
  Set<Integer> recoveredLocations=new HashSet<Integer>();
  boolean resolved=codec.computeErrorLocations(data,recoveredLocations);
  if (resolved) {
    assertEquals(errorLocations,recoveredLocations);
  }
}
