{
  java.util.Random RAND=new java.util.Random();
  int stripeSize=10;
  byte[][] message=new byte[stripeSize][];
  int bufsize=1024 * 1024 * 10;
  for (int i=0; i < stripeSize; i++) {
    message[i]=new byte[bufsize];
    for (int j=0; j < bufsize; j++) {
      message[i][j]=(byte)RAND.nextInt(256);
    }
  }
  byte[] parity=new byte[bufsize];
  long encodeStart=Time.now();
  for (int i=0; i < bufsize; i++) {
    for (int j=0; j < stripeSize; j++)     parity[i]^=message[j][i];
  }
  long encodeEnd=Time.now();
  float encodeMSecs=encodeEnd - encodeStart;
  System.out.println("Time to encode xor = " + encodeMSecs + " msec ("+ message[0].length / (1000 * encodeMSecs) + "MB/s)");
  byte[] copy=new byte[bufsize];
  for (int j=0; j < bufsize; j++) {
    copy[j]=message[0][j];
    message[0][j]=0;
  }
  long decodeStart=Time.now();
  for (int i=0; i < bufsize; i++) {
    for (int j=1; j < stripeSize; j++)     message[0][i]^=message[j][i];
    message[0][i]^=parity[i];
  }
  long decodeEnd=Time.now();
  float decodeMSecs=decodeEnd - decodeStart;
  System.out.println("Time to decode xor = " + decodeMSecs + " msec ("+ message[0].length / (1000 * decodeMSecs) + "MB/s)");
  assertTrue("Decode failed",java.util.Arrays.equals(copy,message[0]));
}
