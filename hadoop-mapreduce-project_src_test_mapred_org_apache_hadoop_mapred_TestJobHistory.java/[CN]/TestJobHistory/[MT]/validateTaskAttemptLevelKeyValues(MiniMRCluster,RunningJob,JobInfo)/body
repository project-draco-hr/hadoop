{
  JobTracker jt=mr.getJobTrackerRunner().getJobTracker();
  JobInProgress jip=jt.getJob(job.getID());
  Map<TaskID,TaskInfo> tasks=jobInfo.getAllTasks();
  for (  TaskInfo task : tasks.values()) {
    for (    TaskAttemptInfo attempt : task.getAllTaskAttempts().values()) {
      TaskAttemptID attemptId=attempt.getAttemptId();
      TaskID tid=attemptId.getTaskID();
      TaskInProgress tip=jip.getTaskInProgress(org.apache.hadoop.mapred.TaskID.downgrade(tid));
      TaskStatus ts=tip.getTaskStatus(org.apache.hadoop.mapred.TaskAttemptID.downgrade(attemptId));
      assertTrue("START_TIME of Task attempt " + attemptId + " obtained from "+ "history file did not match the expected value",ts.getStartTime() == attempt.getStartTime());
      assertTrue("FINISH_TIME of Task attempt " + attemptId + " obtained from "+ "history file "+ ts.getFinishTime()+ " did not match the expected value, "+ attempt.getFinishTime(),ts.getFinishTime() == attempt.getFinishTime());
      TaskTrackerStatus ttStatus=jt.getTaskTrackerStatus(ts.getTaskTracker());
      if (ttStatus != null) {
        assertTrue("http port of task attempt " + attemptId + " obtained from "+ "history file did not match the expected value",ttStatus.getHttpPort() == attempt.getHttpPort());
        if (attempt.getTaskStatus().equals("SUCCEEDED")) {
          Node node=jt.getNode(ttStatus.getHost());
          String ttHostname=node.getName();
          assertTrue("Host name : " + attempt.getHostname() + " of task attempt "+ attemptId+ " obtained from"+ " history file did not match the expected value "+ ttHostname,ttHostname.equals(attempt.getHostname()));
        }
      }
      if (attempt.getTaskStatus().equals("SUCCEEDED")) {
        if (attempt.getTaskType().equals("REDUCE")) {
          assertTrue("SHUFFLE_FINISHED time of task attempt " + attemptId + " obtained from history file did not match the expected"+ " value",ts.getShuffleFinishTime() == attempt.getShuffleFinishTime());
          assertTrue("SORT_FINISHED time of task attempt " + attemptId + " obtained from history file did not match the expected"+ " value",ts.getSortFinishTime() == attempt.getSortFinishTime());
        }
        Counters c=new Counters(ts.getCounters());
        assertTrue("Counters of Task Attempt " + attemptId + " obtained from "+ "history file did not match the expected value",c.equals(attempt.getCounters()));
      }
      assertTrue("Tracker name of task attempt " + attemptId + " obtained from "+ "history file did not match the expected value",ts.getTaskTracker().equals(attempt.getTrackerName()));
    }
  }
}
