{
  Configuration conf=new Configuration();
  File nameDir1=new File(BASE_DIR,"name-dir1");
  File nameDir2=new File(BASE_DIR,"name-dir2");
  nameDir1.mkdirs();
  nameDir2.mkdirs();
  conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,nameDir1.getAbsolutePath() + "," + nameDir2.getAbsolutePath());
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKED_VOLUMES_MINIMUM_KEY,2);
  NameNodeResourceChecker nnrc=new NameNodeResourceChecker(conf);
  Map<String,CheckedVolume> volumes=new HashMap<String,CheckedVolume>();
  CheckedVolume volume1=Mockito.mock(CheckedVolume.class);
  CheckedVolume volume2=Mockito.mock(CheckedVolume.class);
  CheckedVolume volume3=Mockito.mock(CheckedVolume.class);
  CheckedVolume volume4=Mockito.mock(CheckedVolume.class);
  CheckedVolume volume5=Mockito.mock(CheckedVolume.class);
  Mockito.when(volume1.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume2.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume3.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume4.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume5.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume4.isRequired()).thenReturn(true);
  Mockito.when(volume5.isRequired()).thenReturn(true);
  volumes.put("volume1",volume1);
  volumes.put("volume2",volume2);
  volumes.put("volume3",volume3);
  volumes.put("volume4",volume4);
  volumes.put("volume5",volume5);
  nnrc.setVolumes(volumes);
  assertTrue(nnrc.hasAvailableDiskSpace());
  Mockito.when(volume1.isResourceAvailable()).thenReturn(false);
  assertTrue(nnrc.hasAvailableDiskSpace());
  Mockito.when(volume2.isResourceAvailable()).thenReturn(false);
  assertFalse(nnrc.hasAvailableDiskSpace());
  nnrc.setMinimumReduntdantVolumes(1);
  assertTrue(nnrc.hasAvailableDiskSpace());
  Mockito.when(volume3.isResourceAvailable()).thenReturn(false);
  assertFalse(nnrc.hasAvailableDiskSpace());
  Mockito.when(volume3.isResourceAvailable()).thenReturn(true);
  Mockito.when(volume4.isResourceAvailable()).thenReturn(false);
  assertFalse(nnrc.hasAvailableDiskSpace());
}
