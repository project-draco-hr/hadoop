{
  super.initialize(theUri,conf);
  setConf(conf);
  config=conf;
  final String authority=theUri.getAuthority();
  try {
    myUri=new URI(FsConstants.VIEWFS_SCHEME,authority,"/",null,null);
    workingDir=this.makeQualified(new Path("/user/" + ugi.getShortUserName()));
    fsState=new InodeTree<FileSystem>(conf,authority){
      @Override protected FileSystem getTargetFileSystem(      final URI uri) throws URISyntaxException, IOException {
        return new ChRootedFileSystem(FileSystem.get(uri,config),new Path(uri.getPath()));
      }
      @Override protected FileSystem getTargetFileSystem(      final INodeDir<FileSystem> dir) throws URISyntaxException {
        return new InternalDirOfViewFs(dir,creationTime,ugi,myUri);
      }
      @Override protected FileSystem getTargetFileSystem(      URI[] mergeFsURIList) throws URISyntaxException, UnsupportedFileSystemException {
        throw new UnsupportedFileSystemException("mergefs not implemented");
      }
    }
;
  }
 catch (  URISyntaxException e) {
    throw new IOException("URISyntax exception: " + theUri);
  }
}
