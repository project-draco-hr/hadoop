{
  Configuration conf=context.getConfiguration();
  Path[] localFiles=context.getLocalCacheFiles();
  URI[] files=context.getCacheFiles();
  Path[] localArchives=context.getLocalCacheArchives();
  URI[] archives=context.getCacheArchives();
  Assert.assertEquals(4,localFiles.length);
  Assert.assertEquals(4,files.length);
  Assert.assertEquals(2,localArchives.length);
  Assert.assertEquals(2,archives.length);
  Map<String,Path> filesMap=pathsToMap(localFiles);
  Assert.assertTrue(filesMap.containsKey("distributed.first.symlink"));
  Assert.assertEquals(1,localFs.getFileStatus(filesMap.get("distributed.first.symlink")).getLen());
  Assert.assertTrue(filesMap.containsKey("distributed.second.jar"));
  Assert.assertTrue(localFs.getFileStatus(filesMap.get("distributed.second.jar")).getLen() > 1);
  Map<String,Path> archivesMap=pathsToMap(localArchives);
  Assert.assertTrue(archivesMap.containsKey("distributed.third.jar"));
  Assert.assertTrue(localFs.exists(new Path(archivesMap.get("distributed.third.jar"),"distributed.jar.inside3")));
  Assert.assertTrue(archivesMap.containsKey("distributed.fourth.jar"));
  Assert.assertTrue(localFs.exists(new Path(archivesMap.get("distributed.fourth.jar"),"distributed.jar.inside4")));
  LOG.info("Java Classpath: " + System.getProperty("java.class.path"));
  ClassLoader cl=Thread.currentThread().getContextClassLoader();
  Assert.assertNotNull(cl.getResource("distributed.jar.inside2"));
  Assert.assertNotNull(cl.getResource("distributed.jar.inside3"));
  Assert.assertNotNull(cl.getResource("distributed.jar.inside4"));
  Assert.assertNotNull(cl.getResource("job.jar/"));
  Assert.assertNotNull(cl.getResource("job.jar/lib/lib1.jar"));
  Assert.assertNotNull(cl.getResource("job.jar/lib/lib2.jar"));
  File symlinkFile=new File("distributed.first.symlink");
  Assert.assertTrue(symlinkFile.exists());
  Assert.assertEquals(1,symlinkFile.length());
  File jobJarDir=new File("job.jar");
  if (Shell.WINDOWS) {
    Assert.assertTrue(isWindowsSymlinkedDirectory(jobJarDir));
  }
 else {
    Assert.assertTrue(FileUtils.isSymlink(jobJarDir));
    Assert.assertTrue(jobJarDir.isDirectory());
  }
}
