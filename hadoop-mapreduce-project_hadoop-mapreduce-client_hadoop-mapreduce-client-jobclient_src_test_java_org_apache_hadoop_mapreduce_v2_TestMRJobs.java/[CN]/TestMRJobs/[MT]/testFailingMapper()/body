{
  LOG.info("\n\n\nStarting testFailingMapper().");
  if (!(new File(MiniMRYarnCluster.APPJAR)).exists()) {
    LOG.info("MRAppJar " + MiniMRYarnCluster.APPJAR + " not found. Not running test.");
    return;
  }
  Job job=runFailingMapperJob();
  TaskID taskID=new TaskID(job.getJobID(),TaskType.MAP,0);
  TaskAttemptID aId=new TaskAttemptID(taskID,0);
  System.out.println("Diagnostics for " + aId + " :");
  for (  String diag : job.getTaskDiagnostics(aId)) {
    System.out.println(diag);
  }
  aId=new TaskAttemptID(taskID,1);
  System.out.println("Diagnostics for " + aId + " :");
  for (  String diag : job.getTaskDiagnostics(aId)) {
    System.out.println(diag);
  }
  TaskCompletionEvent[] events=job.getTaskCompletionEvents(0,2);
  Assert.assertEquals(TaskCompletionEvent.Status.FAILED,events[0].getStatus());
  Assert.assertEquals(TaskCompletionEvent.Status.TIPFAILED,events[1].getStatus());
  Assert.assertEquals(JobStatus.State.FAILED,job.getJobState());
  verifyFailingMapperCounters(job);
}
