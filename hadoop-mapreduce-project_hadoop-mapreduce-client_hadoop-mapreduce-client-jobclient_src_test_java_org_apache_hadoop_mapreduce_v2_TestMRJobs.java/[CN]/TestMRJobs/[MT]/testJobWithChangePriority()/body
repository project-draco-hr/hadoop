{
  if (!(new File(MiniMRYarnCluster.APPJAR)).exists()) {
    LOG.info("MRAppJar " + MiniMRYarnCluster.APPJAR + " not found. Not running test.");
    return;
  }
  Configuration sleepConf=new Configuration(mrCluster.getConfig());
  sleepConf.set(MRConfig.MASTER_ADDRESS,"local");
  sleepConf.setInt("yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms",5);
  SleepJob sleepJob=new SleepJob();
  sleepJob.setConf(sleepConf);
  Job job=sleepJob.createJob(1,1,1000,20,50,1);
  job.addFileToClassPath(APP_JAR);
  job.setJarByClass(SleepJob.class);
  job.setMaxMapAttempts(1);
  job.submit();
  job.setPriority(JobPriority.HIGH);
  waitForPriorityToUpdate(job,JobPriority.HIGH);
  Assert.assertEquals(job.getPriority(),JobPriority.HIGH);
  job.setPriorityAsInteger(3);
  waitForPriorityToUpdate(job,JobPriority.NORMAL);
  Assert.assertEquals(job.getPriority(),JobPriority.NORMAL);
  job.setPriorityAsInteger(89);
  waitForPriorityToUpdate(job,JobPriority.UNDEFINED_PRIORITY);
  Assert.assertEquals(job.getPriority(),JobPriority.UNDEFINED_PRIORITY);
  boolean succeeded=job.waitForCompletion(true);
  Assert.assertTrue(succeeded);
  Assert.assertEquals(JobStatus.State.SUCCEEDED,job.getJobState());
}
