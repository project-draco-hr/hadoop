{
  outContent.reset();
  String[] args1={"create","credential1","-value","p@ssw0rd","-provider",jceksProvider};
  int rc=0;
  CredentialShell cs=new CredentialShell();
  cs.setConf(new Configuration());
  rc=cs.run(args1);
  assertEquals(outContent.toString(),0,rc);
  assertTrue(outContent.toString().contains("credential1 has been successfully " + "created."));
  assertTrue(outContent.toString().contains(ProviderUtils.NO_PASSWORD_WARN));
  assertTrue(outContent.toString().contains(ProviderUtils.NO_PASSWORD_INSTRUCTIONS_DOC));
  assertTrue(outContent.toString().contains(ProviderUtils.NO_PASSWORD_CONT));
  outContent.reset();
  String[] args2={"list","-provider",jceksProvider};
  rc=cs.run(args2);
  assertEquals(0,rc);
  assertTrue(outContent.toString().contains("credential1"));
  outContent.reset();
  String[] args4={"delete","credential1","-f","-provider",jceksProvider};
  rc=cs.run(args4);
  assertEquals(0,rc);
  assertTrue(outContent.toString().contains("credential1 has been successfully " + "deleted."));
  outContent.reset();
  String[] args5={"list","-provider",jceksProvider};
  rc=cs.run(args5);
  assertEquals(0,rc);
  assertFalse(outContent.toString(),outContent.toString().contains("credential1"));
}
