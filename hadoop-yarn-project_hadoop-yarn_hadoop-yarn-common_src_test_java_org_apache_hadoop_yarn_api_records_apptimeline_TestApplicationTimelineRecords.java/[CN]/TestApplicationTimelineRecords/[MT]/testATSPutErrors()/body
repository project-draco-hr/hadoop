{
  ATSPutErrors atsPutErrors=new ATSPutErrors();
  ATSPutError error1=new ATSPutError();
  error1.setEntityId("entity id 1");
  error1.setEntityId("entity type 1");
  error1.setErrorCode(ATSPutError.NO_START_TIME);
  atsPutErrors.addError(error1);
  List<ATSPutError> errors=new ArrayList<ATSPutError>();
  errors.add(error1);
  ATSPutError error2=new ATSPutError();
  error2.setEntityId("entity id 2");
  error2.setEntityId("entity type 2");
  error2.setErrorCode(ATSPutError.IO_EXCEPTION);
  errors.add(error2);
  atsPutErrors.addErrors(errors);
  Assert.assertEquals(3,atsPutErrors.getErrors().size());
  ATSPutError e=atsPutErrors.getErrors().get(0);
  Assert.assertEquals(error1.getEntityId(),e.getEntityId());
  Assert.assertEquals(error1.getEntityType(),e.getEntityType());
  Assert.assertEquals(error1.getErrorCode(),e.getErrorCode());
  e=atsPutErrors.getErrors().get(1);
  Assert.assertEquals(error1.getEntityId(),e.getEntityId());
  Assert.assertEquals(error1.getEntityType(),e.getEntityType());
  Assert.assertEquals(error1.getErrorCode(),e.getErrorCode());
  e=atsPutErrors.getErrors().get(2);
  Assert.assertEquals(error2.getEntityId(),e.getEntityId());
  Assert.assertEquals(error2.getEntityType(),e.getEntityType());
  Assert.assertEquals(error2.getErrorCode(),e.getErrorCode());
}
