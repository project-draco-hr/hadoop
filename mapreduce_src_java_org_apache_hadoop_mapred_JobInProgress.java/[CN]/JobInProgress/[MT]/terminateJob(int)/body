{
  if ((status.getRunState() == JobStatus.RUNNING) || (status.getRunState() == JobStatus.PREP)) {
    this.finishTime=JobTracker.getClock().getTime();
    this.status.setMapProgress(1.0f);
    this.status.setReduceProgress(1.0f);
    this.status.setCleanupProgress(1.0f);
    this.status.setFinishTime(this.finishTime);
    if (jobTerminationState == JobStatus.FAILED) {
      changeStateTo(JobStatus.FAILED);
    }
 else {
      changeStateTo(JobStatus.KILLED);
    }
    JobSummary.logJobSummary(this,jobtracker.getClusterStatus(false));
    JobUnsuccessfulCompletionEvent failedEvent=new JobUnsuccessfulCompletionEvent(this.status.getJobID(),finishTime,this.finishedMapTasks,this.finishedReduceTasks,JobStatus.getJobRunState(jobTerminationState));
    jobHistory.logEvent(failedEvent,this.status.getJobID());
    jobHistory.closeWriter(this.status.getJobID());
    garbageCollect();
    jobtracker.getInstrumentation().terminateJob(this.conf,this.status.getJobID());
    if (jobTerminationState == JobStatus.FAILED) {
      jobtracker.getInstrumentation().failedJob(this.conf,this.status.getJobID());
    }
 else {
      jobtracker.getInstrumentation().killedJob(this.conf,this.status.getJobID());
    }
  }
}
