{
  Map<Node,List<TaskInProgress>> cache=new IdentityHashMap<Node,List<TaskInProgress>>(maxLevel);
  for (int i=0; i < splits.length; i++) {
    String[] splitLocations=splits[i].getLocations();
    if (splitLocations.length == 0) {
      nonLocalMaps.add(maps[i]);
      continue;
    }
    for (    String host : splitLocations) {
      Node node=jobtracker.resolveAndAddToTopology(host);
      LOG.info("tip:" + maps[i].getTIPId() + " has split on node:"+ node);
      for (int j=0; j < maxLevel; j++) {
        List<TaskInProgress> hostMaps=cache.get(node);
        if (hostMaps == null) {
          hostMaps=new ArrayList<TaskInProgress>();
          cache.put(node,hostMaps);
          hostMaps.add(maps[i]);
        }
        if (hostMaps.get(hostMaps.size() - 1) != maps[i]) {
          hostMaps.add(maps[i]);
        }
        node=node.getParent();
      }
    }
  }
  return cache;
}
