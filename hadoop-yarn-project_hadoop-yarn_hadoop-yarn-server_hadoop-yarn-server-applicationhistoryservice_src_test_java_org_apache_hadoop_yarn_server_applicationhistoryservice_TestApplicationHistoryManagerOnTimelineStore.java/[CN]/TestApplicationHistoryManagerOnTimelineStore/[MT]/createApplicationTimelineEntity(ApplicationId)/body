{
  TimelineEntity entity=new TimelineEntity();
  entity.setEntityType(ApplicationMetricsConstants.ENTITY_TYPE);
  entity.setEntityId(appId.toString());
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO,"test app");
  entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,"test app type");
  entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO,"test user");
  entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,"test queue");
  entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,Integer.MAX_VALUE + 1L);
  entity.setOtherInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 2L);
  entity.addEvent(tEvent);
  tEvent=new TimelineEvent();
  tEvent.setEventType(ApplicationMetricsConstants.FINISHED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 3L);
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put(ApplicationMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,"test diagnostics info");
  eventInfo.put(ApplicationMetricsConstants.FINAL_STATUS_EVENT_INFO,FinalApplicationStatus.UNDEFINED.toString());
  eventInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,YarnApplicationState.FINISHED.toString());
  eventInfo.put(ApplicationMetricsConstants.LATEST_APP_ATTEMPT_EVENT_INFO,ApplicationAttemptId.newInstance(appId,1));
  tEvent.setEventInfo(eventInfo);
  entity.addEvent(tEvent);
  return entity;
}
