{
  TimelineEntity entity=new TimelineEntity();
  entity.setEntityType(ApplicationMetricsConstants.ENTITY_TYPE);
  if (wrongAppId) {
    entity.setEntityId("wrong_app_id");
  }
 else {
    entity.setEntityId(appId.toString());
  }
  entity.setDomainId(TimelineDataManager.DEFAULT_DOMAIN_ID);
  entity.addPrimaryFilter(TimelineStore.SystemFilter.ENTITY_OWNER.toString(),"yarn");
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ApplicationMetricsConstants.NAME_ENTITY_INFO,"test app");
  entityInfo.put(ApplicationMetricsConstants.TYPE_ENTITY_INFO,"test app type");
  entityInfo.put(ApplicationMetricsConstants.USER_ENTITY_INFO,"user1");
  entityInfo.put(ApplicationMetricsConstants.QUEUE_ENTITY_INFO,"test queue");
  entityInfo.put(ApplicationMetricsConstants.UNMANAGED_APPLICATION_ENTITY_INFO,"false");
  entityInfo.put(ApplicationMetricsConstants.APPLICATION_PRIORITY_INFO,Priority.newInstance(0));
  entityInfo.put(ApplicationMetricsConstants.SUBMITTED_TIME_ENTITY_INFO,Integer.MAX_VALUE + 1L);
  entityInfo.put(ApplicationMetricsConstants.APP_MEM_METRICS,123);
  entityInfo.put(ApplicationMetricsConstants.APP_CPU_METRICS,345);
  if (emptyACLs) {
    entityInfo.put(ApplicationMetricsConstants.APP_VIEW_ACLS_ENTITY_INFO,"");
  }
 else {
    entityInfo.put(ApplicationMetricsConstants.APP_VIEW_ACLS_ENTITY_INFO,"user2");
  }
  Set<String> appTags=new HashSet<String>();
  appTags.add("Test_APP_TAGS_1");
  appTags.add("Test_APP_TAGS_2");
  entityInfo.put(ApplicationMetricsConstants.APP_TAGS_INFO,appTags);
  entity.setOtherInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setEventType(ApplicationMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 2L + appId.getId());
  entity.addEvent(tEvent);
  tEvent=new TimelineEvent();
  tEvent.setEventType(ApplicationMetricsConstants.FINISHED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 3L + appId.getId());
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put(ApplicationMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,"test diagnostics info");
  eventInfo.put(ApplicationMetricsConstants.FINAL_STATUS_EVENT_INFO,FinalApplicationStatus.UNDEFINED.toString());
  eventInfo.put(ApplicationMetricsConstants.STATE_EVENT_INFO,YarnApplicationState.FINISHED.toString());
  if (!noAttemptId) {
    eventInfo.put(ApplicationMetricsConstants.LATEST_APP_ATTEMPT_EVENT_INFO,ApplicationAttemptId.newInstance(appId,1));
  }
  tEvent.setEventInfo(eventInfo);
  entity.addEvent(tEvent);
  return entity;
}
