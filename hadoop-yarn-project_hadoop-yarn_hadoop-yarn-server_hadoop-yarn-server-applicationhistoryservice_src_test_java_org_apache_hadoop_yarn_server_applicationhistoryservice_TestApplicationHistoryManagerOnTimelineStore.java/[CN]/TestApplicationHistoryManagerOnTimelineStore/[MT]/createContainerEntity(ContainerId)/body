{
  TimelineEntity entity=new TimelineEntity();
  entity.setEntityType(ContainerMetricsConstants.ENTITY_TYPE);
  entity.setEntityId(containerId.toString());
  entity.addPrimaryFilter(ContainerMetricsConstants.PARENT_PRIMARIY_FILTER,containerId.getApplicationAttemptId().toString());
  Map<String,Object> entityInfo=new HashMap<String,Object>();
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,-1);
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,-1);
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,"test host");
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,-100);
  entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,-1);
  entity.setOtherInfo(entityInfo);
  TimelineEvent tEvent=new TimelineEvent();
  tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 1L);
  entity.addEvent(tEvent);
  ;
  tEvent=new TimelineEvent();
  tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);
  tEvent.setTimestamp(Integer.MAX_VALUE + 2L);
  Map<String,Object> eventInfo=new HashMap<String,Object>();
  eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,"test diagnostics info");
  eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,-1);
  eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,ContainerState.COMPLETE.toString());
  tEvent.setEventInfo(eventInfo);
  entity.addEvent(tEvent);
  return entity;
}
