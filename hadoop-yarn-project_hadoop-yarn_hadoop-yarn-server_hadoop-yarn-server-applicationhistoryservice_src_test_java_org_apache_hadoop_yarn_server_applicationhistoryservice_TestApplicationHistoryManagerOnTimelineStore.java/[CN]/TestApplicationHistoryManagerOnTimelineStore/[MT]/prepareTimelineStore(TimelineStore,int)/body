{
  for (int i=1; i <= scale; ++i) {
    TimelineEntities entities=new TimelineEntities();
    ApplicationId appId=ApplicationId.newInstance(0,i);
    if (i == 2) {
      entities.addEntity(createApplicationTimelineEntity(appId,true,false,false,true,YarnApplicationState.FINISHED));
    }
 else {
      entities.addEntity(createApplicationTimelineEntity(appId,false,false,false,false,YarnApplicationState.FINISHED));
    }
    store.put(entities);
    for (int j=1; j <= scale; ++j) {
      entities=new TimelineEntities();
      ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,j);
      entities.addEntity(createAppAttemptTimelineEntity(appAttemptId));
      store.put(entities);
      for (int k=1; k <= scale; ++k) {
        entities=new TimelineEntities();
        ContainerId containerId=ContainerId.newContainerId(appAttemptId,k);
        entities.addEntity(createContainerEntity(containerId));
        store.put(entities);
      }
    }
  }
  TimelineEntities entities=new TimelineEntities();
  ApplicationId appId=ApplicationId.newInstance(1234,1);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  ContainerId containerId=ContainerId.newContainerId(appAttemptId,1);
  entities.addEntity(createApplicationTimelineEntity(appId,true,false,false,false,YarnApplicationState.RUNNING));
  entities.addEntity(createAppAttemptTimelineEntity(appAttemptId));
  entities.addEntity(createContainerEntity(containerId));
  store.put(entities);
}
