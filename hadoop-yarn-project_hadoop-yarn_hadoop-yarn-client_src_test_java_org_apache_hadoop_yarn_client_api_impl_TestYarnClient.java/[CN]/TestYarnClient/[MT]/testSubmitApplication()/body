{
  Configuration conf=new Configuration();
  conf.setLong(YarnConfiguration.YARN_CLIENT_APP_SUBMISSION_POLL_INTERVAL_MS,100);
  final YarnClient client=new MockYarnClient();
  client.init(conf);
  client.start();
  YarnApplicationState[] exitStates=new YarnApplicationState[]{YarnApplicationState.ACCEPTED,YarnApplicationState.RUNNING,YarnApplicationState.FINISHED};
  ApplicationSubmissionContext contextWithoutApplicationId=mock(ApplicationSubmissionContext.class);
  try {
    client.submitApplication(contextWithoutApplicationId);
    Assert.fail("Should throw the ApplicationIdNotProvidedException");
  }
 catch (  YarnException e) {
    Assert.assertTrue(e instanceof ApplicationIdNotProvidedException);
    Assert.assertTrue(e.getMessage().contains("ApplicationId is not provided in ApplicationSubmissionContext"));
  }
  for (int i=0; i < exitStates.length; ++i) {
    ApplicationSubmissionContext context=mock(ApplicationSubmissionContext.class);
    ApplicationId applicationId=ApplicationId.newInstance(System.currentTimeMillis(),i);
    when(context.getApplicationId()).thenReturn(applicationId);
    ((MockYarnClient)client).setYarnApplicationState(exitStates[i]);
    client.submitApplication(context);
    verify(((MockYarnClient)client).mockReport,times(4 * i + 4)).getYarnApplicationState();
  }
  client.stop();
}
