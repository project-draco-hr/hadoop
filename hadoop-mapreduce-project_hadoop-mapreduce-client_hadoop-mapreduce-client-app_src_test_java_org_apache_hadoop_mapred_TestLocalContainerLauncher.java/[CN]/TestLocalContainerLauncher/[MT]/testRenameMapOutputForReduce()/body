{
  final JobConf conf=new JobConf();
  final MROutputFiles mrOutputFiles=new MROutputFiles();
  mrOutputFiles.setConf(conf);
  conf.set(MRConfig.LOCAL_DIR,localDirs[0].toString());
  final Path mapOut=mrOutputFiles.getOutputFileForWrite(1);
  conf.set(MRConfig.LOCAL_DIR,localDirs[1].toString());
  final Path mapOutIdx=mrOutputFiles.getOutputIndexFileForWrite(1);
  Assert.assertNotEquals("Paths must be different!",mapOut.getParent(),mapOutIdx.getParent());
  conf.setStrings(MRConfig.LOCAL_DIR,localDirs);
  final FileContext lfc=FileContext.getLocalFSFileContext(conf);
  lfc.create(mapOut,EnumSet.of(CREATE)).close();
  lfc.create(mapOutIdx,EnumSet.of(CREATE)).close();
  final JobId jobId=MRBuilderUtils.newJobId(12345L,1,2);
  final TaskId tid=MRBuilderUtils.newTaskId(jobId,0,TaskType.MAP);
  final TaskAttemptId taid=MRBuilderUtils.newTaskAttemptId(tid,0);
  LocalContainerLauncher.renameMapOutputForReduce(conf,taid,mrOutputFiles);
}
