{
  IntWritable index=new IntWritable(0);
  String groupString=getBlock(compactString,GROUP_OPEN,GROUP_CLOSE,index);
  while (groupString != null) {
    IntWritable groupIndex=new IntWritable(0);
    String groupName=StringInterner.weakIntern(getBlock(groupString,UNIT_OPEN,UNIT_CLOSE,groupIndex));
    groupName=StringInterner.weakIntern(unescape(groupName));
    String groupDisplayName=StringInterner.weakIntern(getBlock(groupString,UNIT_OPEN,UNIT_CLOSE,groupIndex));
    groupDisplayName=StringInterner.weakIntern(unescape(groupDisplayName));
    G group=counters.getGroup(groupName);
    group.setDisplayName(groupDisplayName);
    String counterString=getBlock(groupString,COUNTER_OPEN,COUNTER_CLOSE,groupIndex);
    while (counterString != null) {
      IntWritable counterIndex=new IntWritable(0);
      String counterName=StringInterner.weakIntern(getBlock(counterString,UNIT_OPEN,UNIT_CLOSE,counterIndex));
      counterName=StringInterner.weakIntern(unescape(counterName));
      String counterDisplayName=StringInterner.weakIntern(getBlock(counterString,UNIT_OPEN,UNIT_CLOSE,counterIndex));
      counterDisplayName=StringInterner.weakIntern(unescape(counterDisplayName));
      long value=Long.parseLong(getBlock(counterString,UNIT_OPEN,UNIT_CLOSE,counterIndex));
      Counter counter=group.findCounter(counterName);
      counter.setDisplayName(counterDisplayName);
      counter.increment(value);
      counterString=getBlock(groupString,COUNTER_OPEN,COUNTER_CLOSE,groupIndex);
    }
    groupString=getBlock(compactString,GROUP_OPEN,GROUP_CLOSE,index);
  }
  return counters;
}
