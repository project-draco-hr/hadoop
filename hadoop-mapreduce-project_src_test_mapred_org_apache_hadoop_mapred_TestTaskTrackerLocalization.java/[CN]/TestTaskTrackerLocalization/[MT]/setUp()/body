{
  if (!canRun()) {
    return;
  }
  TEST_ROOT_DIR=new File(System.getProperty("test.build.data","/tmp"),getClass().getSimpleName());
  if (!TEST_ROOT_DIR.exists()) {
    TEST_ROOT_DIR.mkdirs();
  }
  ROOT_MAPRED_LOCAL_DIR=new File(TEST_ROOT_DIR,"mapred/local");
  ROOT_MAPRED_LOCAL_DIR.mkdirs();
  HADOOP_LOG_DIR=new File(TEST_ROOT_DIR,"logs");
  HADOOP_LOG_DIR.mkdir();
  System.setProperty("hadoop.log.dir",HADOOP_LOG_DIR.getAbsolutePath());
  trackerFConf=new JobConf();
  trackerFConf.set(FileSystem.FS_DEFAULT_NAME_KEY,"file:///");
  localDirs=new String[numLocalDirs];
  for (int i=0; i < numLocalDirs; i++) {
    localDirs[i]=new File(ROOT_MAPRED_LOCAL_DIR,"0_" + i).getPath();
  }
  trackerFConf.setStrings(MRConfig.LOCAL_DIR,localDirs);
  trackerFConf.setBoolean(MRConfig.MR_ACLS_ENABLED,true);
  jobConf=new JobConf(trackerFConf);
  String jobViewACLs="user1,user2, group1,group2";
  jobConf.set(MRJobConfig.JOB_ACL_VIEW_JOB,jobViewACLs);
  jobConf.setInt(MRJobConfig.USER_LOG_RETAIN_HOURS,0);
  jobConf.setUser(getJobOwner().getShortUserName());
  String queue="default";
  jobConf.setQueueName(queue);
  jobConf.set(toFullPropertyName(queue,QueueACL.ADMINISTER_JOBS.getAclName()),"qAdmin1,qAdmin2 qAdminsGroup1,qAdminsGroup2");
  Job job=Job.getInstance(jobConf);
  String jtIdentifier="200907202331";
  jobId=new JobID(jtIdentifier,1);
  uploadJobJar(job);
  jobConfFile=uploadJobConf(job.getConfiguration());
  uploadJobTokensFile();
  taskTrackerUGI=UserGroupInformation.getCurrentUser();
  startTracker();
  taskId=new TaskAttemptID(jtIdentifier,jobId.getId(),TaskType.MAP,1,0);
  createTask();
  tip=tracker.new TaskInProgress(task,trackerFConf);
}
