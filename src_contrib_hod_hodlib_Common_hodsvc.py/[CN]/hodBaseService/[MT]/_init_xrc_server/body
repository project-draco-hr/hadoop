def _init_xrc_server(self):
    host = None
    ports = None
    if self._cfg.has_key('xrs-address'):
        (host, port) = (self._cfg['xrs-address'][0], self._cfg['xrs-address'][1])
        ports = (port,)
    elif self._cfg.has_key('xrs-port-range'):
        host = ''
        ports = self._cfg['xrs-port-range']
    if (host != None):
        if (self.__xrtype == 'threaded'):
            self._xrc = hodXMLRPCServer(host, ports)
        elif (self.__xrtype == 'twisted'):
            try:
                from socketServers import twistedXMLRPCServer
                self._xrc = twistedXMLRPCServer(host, ports, self.logs['main'])
            except ImportError:
                self.logs['main'].error(('Twisted XML-RPC server not available, ' + 'falling back on threaded server.'))
                self._xrc = hodXMLRPCServer(host, ports)
        for attr in dir(self):
            if attr.startswith('_xr_method_'):
                self._xrc.register_function(getattr(self, attr), attr[11:])
        self._xrc.register_introspection_functions()
