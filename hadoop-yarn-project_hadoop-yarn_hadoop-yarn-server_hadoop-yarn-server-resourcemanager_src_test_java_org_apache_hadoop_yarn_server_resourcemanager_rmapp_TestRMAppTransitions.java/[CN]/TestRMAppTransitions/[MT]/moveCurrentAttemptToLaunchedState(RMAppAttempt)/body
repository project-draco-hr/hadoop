{
  attempt.handle(new RMAppAttemptEvent(attempt.getAppAttemptId(),RMAppAttemptEventType.APP_ACCEPTED));
  Container container=mock(Container.class);
  Resource resource=BuilderUtils.newResource(2048,1);
  when(container.getId()).thenReturn(BuilderUtils.newContainerId(attempt.getAppAttemptId(),1));
  when(container.getResource()).thenReturn(resource);
  Allocation allocation=mock(Allocation.class);
  when(allocation.getContainers()).thenReturn(Collections.singletonList(container));
  when(allocation.getContainers()).thenReturn(Collections.singletonList(container));
  when(scheduler.allocate(any(ApplicationAttemptId.class),any(List.class),any(List.class),any(List.class),any(List.class))).thenReturn(allocation);
  attempt.handle(new RMAppAttemptContainerAllocatedEvent(attempt.getAppAttemptId(),container));
  attempt.handle(new RMAppAttemptStoredEvent(attempt.getAppAttemptId(),null));
  attempt.handle(new RMAppAttemptEvent(attempt.getAppAttemptId(),RMAppAttemptEventType.LAUNCHED));
  assertEquals(RMAppAttemptState.LAUNCHED,attempt.getAppAttemptState());
}
