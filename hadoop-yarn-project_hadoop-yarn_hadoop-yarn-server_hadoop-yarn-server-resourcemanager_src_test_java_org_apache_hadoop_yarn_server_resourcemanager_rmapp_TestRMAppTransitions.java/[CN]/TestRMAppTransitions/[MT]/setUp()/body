{
  conf=new YarnConfiguration();
  AuthenticationMethod authMethod=AuthenticationMethod.SIMPLE;
  if (isSecurityEnabled) {
    authMethod=AuthenticationMethod.KERBEROS;
  }
  SecurityUtil.setAuthenticationMethod(authMethod,conf);
  UserGroupInformation.setConfiguration(conf);
  rmDispatcher=new DrainDispatcher();
  ContainerAllocationExpirer containerAllocationExpirer=mock(ContainerAllocationExpirer.class);
  AMLivelinessMonitor amLivelinessMonitor=mock(AMLivelinessMonitor.class);
  AMLivelinessMonitor amFinishingMonitor=mock(AMLivelinessMonitor.class);
  store=mock(RMStateStore.class);
  writer=mock(RMApplicationHistoryWriter.class);
  DelegationTokenRenewer renewer=mock(DelegationTokenRenewer.class);
  RMContext realRMContext=new RMContextImpl(rmDispatcher,containerAllocationExpirer,amLivelinessMonitor,amFinishingMonitor,renewer,new AMRMTokenSecretManager(conf,this.rmContext),new RMContainerTokenSecretManager(conf),new NMTokenSecretManagerInRM(conf),new ClientToAMTokenSecretManagerInRM());
  ((RMContextImpl)realRMContext).setStateStore(store);
  publisher=mock(SystemMetricsPublisher.class);
  realRMContext.setSystemMetricsPublisher(publisher);
  realRMContext.setRMApplicationHistoryWriter(writer);
  this.rmContext=spy(realRMContext);
  ResourceScheduler resourceScheduler=mock(ResourceScheduler.class);
  doReturn(null).when(resourceScheduler).getAppResourceUsageReport((ApplicationAttemptId)Matchers.any());
  doReturn(resourceScheduler).when(rmContext).getScheduler();
  doReturn(mock(RMTimelineCollectorManager.class)).when(rmContext).getRMTimelineCollectorManager();
  rmDispatcher.register(RMAppAttemptEventType.class,new TestApplicationAttemptEventDispatcher(this.rmContext));
  rmDispatcher.register(RMAppEventType.class,new TestApplicationEventDispatcher(rmContext));
  rmDispatcher.register(RMAppManagerEventType.class,new TestApplicationManagerEventDispatcher());
  schedulerDispatcher=new TestSchedulerEventDispatcher();
  rmDispatcher.register(SchedulerEventType.class,schedulerDispatcher);
  rmDispatcher.init(conf);
  rmDispatcher.start();
}
