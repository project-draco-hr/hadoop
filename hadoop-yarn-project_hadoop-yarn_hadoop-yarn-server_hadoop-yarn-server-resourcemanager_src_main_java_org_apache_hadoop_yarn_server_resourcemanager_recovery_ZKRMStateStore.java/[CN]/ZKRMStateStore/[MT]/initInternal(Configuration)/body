{
  zkHostPort=conf.get(YarnConfiguration.RM_ZK_ADDRESS);
  if (zkHostPort == null) {
    throw new YarnRuntimeException("No server address specified for " + "zookeeper state store for Resource Manager recovery. " + YarnConfiguration.RM_ZK_ADDRESS + " is not configured.");
  }
  numRetries=conf.getInt(YarnConfiguration.RM_ZK_NUM_RETRIES,YarnConfiguration.DEFAULT_ZK_RM_NUM_RETRIES);
  znodeWorkingPath=conf.get(YarnConfiguration.ZK_RM_STATE_STORE_PARENT_PATH,YarnConfiguration.DEFAULT_ZK_RM_STATE_STORE_PARENT_PATH);
  zkSessionTimeout=conf.getInt(YarnConfiguration.RM_ZK_TIMEOUT_MS,YarnConfiguration.DEFAULT_RM_ZK_TIMEOUT_MS);
  if (HAUtil.isHAEnabled(conf)) {
    zkRetryInterval=zkSessionTimeout / numRetries;
  }
 else {
    zkRetryInterval=conf.getInt(YarnConfiguration.RM_ZK_RETRY_INTERVAL_MS,YarnConfiguration.DEFAULT_RM_ZK_RETRY_INTERVAL_MS);
  }
  zkAcl=RMZKUtils.getZKAcls(conf);
  zkAuths=RMZKUtils.getZKAuths(conf);
  zkRootNodePath=getNodePath(znodeWorkingPath,ROOT_ZNODE_NAME);
  rmAppRoot=getNodePath(zkRootNodePath,RM_APP_ROOT);
  fencingNodePath=getNodePath(zkRootNodePath,FENCING_LOCK);
  if (HAUtil.isHAEnabled(conf)) {
    String zkRootNodeAclConf=HAUtil.getConfValueForRMInstance(YarnConfiguration.ZK_RM_STATE_STORE_ROOT_NODE_ACL,conf);
    if (zkRootNodeAclConf != null) {
      zkRootNodeAclConf=ZKUtil.resolveConfIndirection(zkRootNodeAclConf);
      try {
        zkRootNodeAcl=ZKUtil.parseACLs(zkRootNodeAclConf);
      }
 catch (      ZKUtil.BadAclFormatException bafe) {
        LOG.error("Invalid format for " + YarnConfiguration.ZK_RM_STATE_STORE_ROOT_NODE_ACL);
        throw bafe;
      }
    }
 else {
      useDefaultFencingScheme=true;
      zkRootNodeAcl=constructZkRootNodeACL(conf,zkAcl);
    }
  }
  rmDTSecretManagerRoot=getNodePath(zkRootNodePath,RM_DT_SECRET_MANAGER_ROOT);
  dtMasterKeysRootPath=getNodePath(rmDTSecretManagerRoot,RM_DT_MASTER_KEYS_ROOT_ZNODE_NAME);
  delegationTokensRootPath=getNodePath(rmDTSecretManagerRoot,RM_DELEGATION_TOKENS_ROOT_ZNODE_NAME);
  dtSequenceNumberPath=getNodePath(rmDTSecretManagerRoot,RM_DT_SEQUENTIAL_NUMBER_ZNODE_NAME);
  amrmTokenSecretManagerRoot=getNodePath(zkRootNodePath,AMRMTOKEN_SECRET_MANAGER_ROOT);
}
