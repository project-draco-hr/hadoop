{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DatanodeInfoProto)) {
    return super.equals(obj);
  }
  org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DatanodeInfoProto other=(org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DatanodeInfoProto)obj;
  boolean result=true;
  result=result && (hasId() == other.hasId());
  if (hasId()) {
    result=result && getId().equals(other.getId());
  }
  result=result && (hasCapacity() == other.hasCapacity());
  if (hasCapacity()) {
    result=result && (getCapacity() == other.getCapacity());
  }
  result=result && (hasDfsUsed() == other.hasDfsUsed());
  if (hasDfsUsed()) {
    result=result && (getDfsUsed() == other.getDfsUsed());
  }
  result=result && (hasRemaining() == other.hasRemaining());
  if (hasRemaining()) {
    result=result && (getRemaining() == other.getRemaining());
  }
  result=result && (hasBlockPoolUsed() == other.hasBlockPoolUsed());
  if (hasBlockPoolUsed()) {
    result=result && (getBlockPoolUsed() == other.getBlockPoolUsed());
  }
  result=result && (hasLastUpdate() == other.hasLastUpdate());
  if (hasLastUpdate()) {
    result=result && (getLastUpdate() == other.getLastUpdate());
  }
  result=result && (hasXceiverCount() == other.hasXceiverCount());
  if (hasXceiverCount()) {
    result=result && (getXceiverCount() == other.getXceiverCount());
  }
  result=result && (hasLocation() == other.hasLocation());
  if (hasLocation()) {
    result=result && getLocation().equals(other.getLocation());
  }
  result=result && (hasHostName() == other.hasHostName());
  if (hasHostName()) {
    result=result && getHostName().equals(other.getHostName());
  }
  result=result && (hasAdminState() == other.hasAdminState());
  if (hasAdminState()) {
    result=result && (getAdminState() == other.getAdminState());
  }
  result=result && getUnknownFields().equals(other.getUnknownFields());
  return result;
}
