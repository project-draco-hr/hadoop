{
  this.daemonConf=conf;
  this.dispatcher=dispatcher;
  this.stateStore=context.getNMStateStore();
  this.launchContext=launchContext;
  if (launchContext != null && launchContext.getContainerRetryContext() != null) {
    this.containerRetryContext=launchContext.getContainerRetryContext();
  }
 else {
    this.containerRetryContext=ContainerRetryContext.NEVER_RETRY_CONTEXT;
  }
  this.remainingRetryAttempts=containerRetryContext.getMaxRetries();
  this.diagnosticsMaxSize=conf.getInt(YarnConfiguration.NM_CONTAINER_DIAGNOSTICS_MAXIMUM_SIZE,YarnConfiguration.DEFAULT_NM_CONTAINER_DIAGNOSTICS_MAXIMUM_SIZE);
  this.containerTokenIdentifier=containerTokenIdentifier;
  this.containerId=containerTokenIdentifier.getContainerID();
  this.resource=containerTokenIdentifier.getResource();
  this.diagnostics=new StringBuilder();
  this.credentials=creds;
  this.metrics=metrics;
  user=containerTokenIdentifier.getApplicationSubmitter();
  ReadWriteLock readWriteLock=new ReentrantReadWriteLock();
  this.readLock=readWriteLock.readLock();
  this.writeLock=readWriteLock.writeLock();
  this.context=context;
  boolean containerMetricsEnabled=conf.getBoolean(YarnConfiguration.NM_CONTAINER_METRICS_ENABLE,YarnConfiguration.DEFAULT_NM_CONTAINER_METRICS_ENABLE);
  if (containerMetricsEnabled) {
    long flushPeriod=conf.getLong(YarnConfiguration.NM_CONTAINER_METRICS_PERIOD_MS,YarnConfiguration.DEFAULT_NM_CONTAINER_METRICS_PERIOD_MS);
    long unregisterDelay=conf.getLong(YarnConfiguration.NM_CONTAINER_METRICS_UNREGISTER_DELAY_MS,YarnConfiguration.DEFAULT_NM_CONTAINER_METRICS_UNREGISTER_DELAY_MS);
    containerMetrics=ContainerMetrics.forContainer(containerId,flushPeriod,unregisterDelay);
    containerMetrics.recordStartTime(clock.getTime());
  }
  stateMachine=stateMachineFactory.make(this);
}
