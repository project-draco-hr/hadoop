{
  this.containerManagerAddress=hostName + ":" + containerManagerPort;
  this.nodeHttpAddress=hostName + ":" + httpPort;
  this.rackName=rackName;
  this.resourceTrackerService=resourceTrackerService;
  this.capability=capability;
  Resources.addTo(available,capability);
  this.nodeId=NodeId.newInstance(hostName,containerManagerPort);
  RegisterNodeManagerRequest request=recordFactory.newRecordInstance(RegisterNodeManagerRequest.class);
  request.setHttpPort(httpPort);
  request.setNodeId(this.nodeId);
  request.setResource(capability);
  request.setNodeId(this.nodeId);
  resourceTrackerService.registerNodeManager(request);
  this.schedulerNode=new FiCaSchedulerNode(rmContext.getRMNodes().get(this.nodeId),false);
  Assert.assertEquals(capability.getMemory(),schedulerNode.getAvailableResource().getMemory());
  Assert.assertEquals(capability.getVirtualCores(),schedulerNode.getAvailableResource().getVirtualCores());
}
