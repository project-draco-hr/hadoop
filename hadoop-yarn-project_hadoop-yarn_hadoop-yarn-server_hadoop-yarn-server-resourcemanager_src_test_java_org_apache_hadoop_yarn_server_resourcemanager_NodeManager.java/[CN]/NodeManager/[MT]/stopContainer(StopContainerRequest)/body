{
  ContainerId containerID=request.getContainerId();
  String applicationId=String.valueOf(containerID.getApplicationAttemptId().getApplicationId().getId());
  List<Container> applicationContainers=containers.get(applicationId);
  for (  Container c : applicationContainers) {
    if (c.getId().compareTo(containerID) == 0) {
      c.setState(ContainerState.COMPLETE);
    }
  }
  try {
    heartbeat();
  }
 catch (  IOException ioe) {
    throw RPCUtil.getRemoteException(ioe);
  }
  int ctr=0;
  Container container=null;
  for (Iterator<Container> i=applicationContainers.iterator(); i.hasNext(); ) {
    container=i.next();
    if (container.getId().compareTo(containerID) == 0) {
      i.remove();
      ++ctr;
    }
  }
  if (ctr != 1) {
    throw new IllegalStateException("Container " + containerID + " stopped "+ ctr+ " times!");
  }
  Resources.addTo(available,container.getResource());
  Resources.subtractFrom(used,container.getResource());
  if (LOG.isDebugEnabled()) {
    LOG.debug("stopContainer:" + " node=" + containerManagerAddress + " application="+ applicationId+ " container="+ containerID+ " available="+ available+ " used="+ used);
  }
  StopContainerResponse response=recordFactory.newRecordInstance(StopContainerResponse.class);
  return response;
}
