{
  Options lsOption=new Options();
  CommandLineParser parser=new GnuParser();
  try {
    CommandLine line=parser.parse(lsOption,args);
    List<String> argsList=line.getArgList();
    if (argsList.size() != 2) {
      return usageError("ls requires exactly one path argument",LS_USAGE);
    }
    if (!validatePath(argsList.get(1))) {
      return -1;
    }
    try {
      List<String> children=registry.list(argsList.get(1));
      for (      String child : children) {
        sysout.println(child);
      }
      return 0;
    }
 catch (    Exception e) {
      syserr.println(analyzeException("ls",e,argsList));
    }
    return -1;
  }
 catch (  ParseException exp) {
    return usageError("Invalid syntax " + exp,LS_USAGE);
  }
}
