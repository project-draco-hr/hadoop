{
  Configuration conf=new Configuration();
  conf.setBoolean(CommonConfigurationKeys.IO_NATIVE_LIB_AVAILABLE_KEY,true);
  CompressionCodec codec=null;
  if ("lzo".equals(compress)) {
    codec=Compression.Algorithm.LZO.getCodec();
  }
 else   if ("gz".equals(compress)) {
    codec=Compression.Algorithm.GZ.getCodec();
  }
 else   if (!"none".equals(compress))   throw new IOException("Codec not supported.");
  this.fsdos=fs.create(path,true,osBufferSize);
  if (!"none".equals(compress)) {
    writer=SequenceFile.createWriter(conf,fsdos,BytesWritable.class,BytesWritable.class,SequenceFile.CompressionType.BLOCK,codec);
  }
 else {
    writer=SequenceFile.createWriter(conf,fsdos,BytesWritable.class,BytesWritable.class,SequenceFile.CompressionType.NONE,null);
  }
}
