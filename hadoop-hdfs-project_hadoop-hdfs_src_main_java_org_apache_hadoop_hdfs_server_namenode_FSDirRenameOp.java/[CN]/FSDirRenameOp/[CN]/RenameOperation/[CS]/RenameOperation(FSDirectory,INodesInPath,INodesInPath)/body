{
  this.fsd=fsd;
  this.srcIIP=srcIIP;
  this.dstIIP=dstIIP;
  this.srcParentIIP=srcIIP.getParentINodesInPath();
  this.dstParentIIP=dstIIP.getParentINodesInPath();
  BlockStoragePolicySuite bsps=fsd.getBlockStoragePolicySuite();
  srcChild=this.srcIIP.getLastINode();
  srcChildName=srcChild.getLocalNameBytes();
  final int srcLatestSnapshotId=srcIIP.getLatestSnapshotId();
  isSrcInSnapshot=srcChild.isInLatestSnapshot(srcLatestSnapshotId);
  srcChildIsReference=srcChild.isReference();
  srcParent=this.srcIIP.getINode(-2).asDirectory();
  if (isSrcInSnapshot) {
    srcChild.recordModification(srcLatestSnapshotId);
  }
  srcRefDstSnapshot=srcChildIsReference ? srcChild.asReference().getDstSnapshotId() : Snapshot.CURRENT_STATE_ID;
  oldSrcCounts=new QuotaCounts.Builder().build();
  if (isSrcInSnapshot) {
    final INodeReference.WithName withName=srcParent.replaceChild4ReferenceWithName(srcChild,srcLatestSnapshotId);
    withCount=(INodeReference.WithCount)withName.getReferredINode();
    srcChild=withName;
    this.srcIIP=INodesInPath.replace(srcIIP,srcIIP.length() - 1,srcChild);
    oldSrcCounts.add(withCount.getReferredINode().computeQuotaUsage(bsps));
  }
 else   if (srcChildIsReference) {
    withCount=(INodeReference.WithCount)srcChild.asReference().getReferredINode();
  }
 else {
    withCount=null;
  }
}
