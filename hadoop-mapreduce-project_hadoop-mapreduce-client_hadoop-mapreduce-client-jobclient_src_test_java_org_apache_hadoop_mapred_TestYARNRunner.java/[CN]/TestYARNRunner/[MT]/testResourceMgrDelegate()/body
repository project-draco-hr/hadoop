{
  final ClientRMProtocol clientRMProtocol=mock(ClientRMProtocol.class);
  ResourceMgrDelegate delegate=new ResourceMgrDelegate(conf){
    @Override public synchronized void start(){
      this.rmClient=clientRMProtocol;
    }
  }
;
  when(clientRMProtocol.forceKillApplication(any(KillApplicationRequest.class))).thenReturn(null);
  delegate.killApplication(appId);
  verify(clientRMProtocol).forceKillApplication(any(KillApplicationRequest.class));
  when(clientRMProtocol.getAllApplications(any(GetAllApplicationsRequest.class))).thenReturn(recordFactory.newRecordInstance(GetAllApplicationsResponse.class));
  delegate.getAllJobs();
  verify(clientRMProtocol).getAllApplications(any(GetAllApplicationsRequest.class));
  when(clientRMProtocol.getApplicationReport(any(GetApplicationReportRequest.class))).thenReturn(recordFactory.newRecordInstance(GetApplicationReportResponse.class));
  delegate.getApplicationReport(appId);
  verify(clientRMProtocol).getApplicationReport(any(GetApplicationReportRequest.class));
  GetClusterMetricsResponse clusterMetricsResponse=recordFactory.newRecordInstance(GetClusterMetricsResponse.class);
  clusterMetricsResponse.setClusterMetrics(recordFactory.newRecordInstance(YarnClusterMetrics.class));
  when(clientRMProtocol.getClusterMetrics(any(GetClusterMetricsRequest.class))).thenReturn(clusterMetricsResponse);
  delegate.getClusterMetrics();
  verify(clientRMProtocol).getClusterMetrics(any(GetClusterMetricsRequest.class));
  when(clientRMProtocol.getClusterNodes(any(GetClusterNodesRequest.class))).thenReturn(recordFactory.newRecordInstance(GetClusterNodesResponse.class));
  delegate.getActiveTrackers();
  verify(clientRMProtocol).getClusterNodes(any(GetClusterNodesRequest.class));
  GetNewApplicationResponse newAppResponse=recordFactory.newRecordInstance(GetNewApplicationResponse.class);
  newAppResponse.setApplicationId(appId);
  when(clientRMProtocol.getNewApplication(any(GetNewApplicationRequest.class))).thenReturn(newAppResponse);
  delegate.getNewJobID();
  verify(clientRMProtocol).getNewApplication(any(GetNewApplicationRequest.class));
  GetQueueInfoResponse queueInfoResponse=recordFactory.newRecordInstance(GetQueueInfoResponse.class);
  queueInfoResponse.setQueueInfo(recordFactory.newRecordInstance(QueueInfo.class));
  when(clientRMProtocol.getQueueInfo(any(GetQueueInfoRequest.class))).thenReturn(queueInfoResponse);
  delegate.getQueues();
  verify(clientRMProtocol).getQueueInfo(any(GetQueueInfoRequest.class));
  GetQueueUserAclsInfoResponse aclResponse=recordFactory.newRecordInstance(GetQueueUserAclsInfoResponse.class);
  when(clientRMProtocol.getQueueUserAcls(any(GetQueueUserAclsInfoRequest.class))).thenReturn(aclResponse);
  delegate.getQueueAclsForCurrentUser();
  verify(clientRMProtocol).getQueueUserAcls(any(GetQueueUserAclsInfoRequest.class));
}
