{
  final String ADMIN_LIB_PATH="foo";
  final String USER_LIB_PATH="bar";
  final String USER_SHELL="shell";
  JobConf jobConf=new JobConf();
  jobConf.set(MRJobConfig.MR_AM_ADMIN_USER_ENV,"LD_LIBRARY_PATH=" + ADMIN_LIB_PATH);
  jobConf.set(MRJobConfig.MR_AM_ENV,"LD_LIBRARY_PATH=" + USER_LIB_PATH);
  jobConf.set(MRJobConfig.MAPRED_ADMIN_USER_SHELL,USER_SHELL);
  YARNRunner yarnRunner=new YARNRunner(jobConf);
  ApplicationSubmissionContext appSubCtx=buildSubmitContext(yarnRunner,jobConf);
  ContainerLaunchContext clc=appSubCtx.getAMContainerSpec();
  Map<String,String> env=clc.getEnvironment();
  String libPath=env.get(Environment.LD_LIBRARY_PATH.name());
  assertNotNull("LD_LIBRARY_PATH not set",libPath);
  String cps=jobConf.getBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM,MRConfig.DEFAULT_MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM) ? ApplicationConstants.CLASS_PATH_SEPARATOR : File.pathSeparator;
  assertEquals("Bad AM LD_LIBRARY_PATH setting",MRApps.crossPlatformifyMREnv(conf,Environment.PWD) + cps + ADMIN_LIB_PATH+ cps+ USER_LIB_PATH,libPath);
  String shell=env.get(Environment.SHELL.name());
  assertNotNull("SHELL not set",shell);
  assertEquals("Bad SHELL setting",USER_SHELL,shell);
}
