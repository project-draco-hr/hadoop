{
  fConf=conf;
  maxMapSlots=conf.getInt(TT_MAP_SLOTS,2);
  maxReduceSlots=conf.getInt(TT_REDUCE_SLOTS,2);
  aclsManager=new ACLsManager(fConf,new JobACLsManager(fConf),null);
  this.jobTrackAddr=JobTracker.getAddress(conf);
  InetSocketAddress infoSocAddr=NetUtils.createSocketAddr(conf.get(TT_HTTP_ADDRESS,"0.0.0.0:50060"));
  String httpBindAddress=infoSocAddr.getHostName();
  int httpPort=infoSocAddr.getPort();
  this.server=new HttpServer("task",httpBindAddress,httpPort,httpPort == 0,conf,aclsManager.getAdminsAcl());
  workerThreads=conf.getInt(TT_HTTP_THREADS,40);
  this.shuffleServerMetrics=new ShuffleServerMetrics(conf);
  server.setThreads(1,workerThreads);
  FileSystem local=FileSystem.getLocal(conf);
  this.localDirAllocator=new LocalDirAllocator(MRConfig.LOCAL_DIR);
  server.setAttribute("task.tracker",this);
  server.setAttribute("local.file.system",local);
  server.setAttribute("conf",conf);
  server.setAttribute("log",LOG);
  server.setAttribute("localDirAllocator",localDirAllocator);
  server.setAttribute("shuffleServerMetrics",shuffleServerMetrics);
  String exceptionStackRegex=conf.get(JTConfig.SHUFFLE_EXCEPTION_STACK_REGEX);
  String exceptionMsgRegex=conf.get(JTConfig.SHUFFLE_EXCEPTION_MSG_REGEX);
  server.setAttribute("exceptionStackRegex",exceptionStackRegex);
  server.setAttribute("exceptionMsgRegex",exceptionMsgRegex);
  server.addInternalServlet("mapOutput","/mapOutput",MapOutputServlet.class);
  server.addServlet("taskLog","/tasklog",TaskLogServlet.class);
  server.start();
  this.httpPort=server.getPort();
  checkJettyPort(httpPort);
  setTaskLogCleanupThread(new UserLogCleaner(fConf));
  UserGroupInformation.setConfiguration(fConf);
  SecurityUtil.login(fConf,TTConfig.TT_KEYTAB_FILE,TTConfig.TT_USER_NAME);
  initialize();
}
