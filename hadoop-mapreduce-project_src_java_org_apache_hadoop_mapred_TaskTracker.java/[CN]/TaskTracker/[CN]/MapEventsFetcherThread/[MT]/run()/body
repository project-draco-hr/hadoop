{
  LOG.info("Starting thread: " + this.getName());
  while (running) {
    try {
      List<FetchStatus> fList=null;
synchronized (runningJobs) {
        while (((fList=reducesInShuffle()).size()) == 0) {
          try {
            runningJobs.wait();
          }
 catch (          InterruptedException e) {
            LOG.info("Shutting down: " + this.getName());
            return;
          }
        }
      }
      boolean fetchAgain=false;
      for (      FetchStatus f : fList) {
        long currentTime=System.currentTimeMillis();
        try {
          if (f.fetchMapCompletionEvents(currentTime)) {
            fetchAgain=true;
          }
        }
 catch (        Exception e) {
          LOG.warn("Ignoring exception that fetch for map completion" + " events threw for " + f.jobId + " threw: "+ StringUtils.stringifyException(e));
        }
        if (!running) {
          break;
        }
      }
synchronized (waitingOn) {
        try {
          if (!fetchAgain) {
            waitingOn.wait(heartbeatInterval);
          }
        }
 catch (        InterruptedException ie) {
          LOG.info("Shutting down: " + this.getName());
          return;
        }
      }
    }
 catch (    Exception e) {
      LOG.info("Ignoring exception " + e.getMessage());
    }
  }
}
