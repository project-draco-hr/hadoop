{
  if (prefix.length() > 0 && !prefix.endsWith(PATH_DELIMITER)) {
    prefix+=PATH_DELIMITER;
  }
  List<FileMetadata> metadata=new ArrayList<FileMetadata>();
  SortedSet<String> commonPrefixes=new TreeSet<String>();
  for (  String key : dataMap.keySet()) {
    if (key.startsWith(prefix)) {
      if (delimiter == null) {
        metadata.add(retrieveMetadata(key));
      }
 else {
        int delimIndex=key.indexOf(delimiter,prefix.length());
        if (delimIndex == -1) {
          metadata.add(retrieveMetadata(key));
        }
 else {
          String commonPrefix=key.substring(0,delimIndex);
          commonPrefixes.add(commonPrefix);
        }
      }
    }
    if (metadata.size() + commonPrefixes.size() == maxListingLength) {
      new PartialListing(key,metadata.toArray(new FileMetadata[0]),commonPrefixes.toArray(new String[0]));
    }
  }
  return new PartialListing(null,metadata.toArray(new FileMetadata[0]),commonPrefixes.toArray(new String[0]));
}
