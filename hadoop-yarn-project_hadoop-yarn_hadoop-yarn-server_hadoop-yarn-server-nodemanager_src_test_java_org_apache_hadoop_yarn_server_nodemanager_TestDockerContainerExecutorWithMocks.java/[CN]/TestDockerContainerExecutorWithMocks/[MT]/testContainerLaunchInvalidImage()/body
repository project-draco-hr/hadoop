{
  String appSubmitter="nobody";
  String appId="APP_ID";
  String containerId="CONTAINER_ID";
  String testImage="testrepo.com/test-image rm -rf $HADOOP_HOME/*";
  Container container=mock(Container.class,RETURNS_DEEP_STUBS);
  ContainerId cId=mock(ContainerId.class,RETURNS_DEEP_STUBS);
  ContainerLaunchContext context=mock(ContainerLaunchContext.class);
  HashMap<String,String> env=new HashMap<String,String>();
  when(container.getContainerId()).thenReturn(cId);
  when(container.getLaunchContext()).thenReturn(context);
  when(cId.getApplicationAttemptId().getApplicationId().toString()).thenReturn(appId);
  when(cId.toString()).thenReturn(containerId);
  when(context.getEnvironment()).thenReturn(env);
  env.put(YarnConfiguration.NM_DOCKER_CONTAINER_EXECUTOR_IMAGE_NAME,testImage);
  dockerContainerExecutor.getConf().set(YarnConfiguration.NM_DOCKER_CONTAINER_EXECUTOR_IMAGE_NAME,testImage);
  Path scriptPath=new Path("file:///bin/echo");
  Path tokensPath=new Path("file:///dev/null");
  Path pidFile=new Path(workDir,"pid.txt");
  dockerContainerExecutor.activateContainer(cId,pidFile);
  dockerContainerExecutor.launchContainer(new ContainerStartContext.Builder().setContainer(container).setNmPrivateContainerScriptPath(scriptPath).setNmPrivateTokensPath(tokensPath).setUser(appSubmitter).setAppId(appId).setContainerWorkDir(workDir).setLocalDirs(dirsHandler.getLocalDirs()).setLogDirs(dirsHandler.getLogDirs()).build());
}
