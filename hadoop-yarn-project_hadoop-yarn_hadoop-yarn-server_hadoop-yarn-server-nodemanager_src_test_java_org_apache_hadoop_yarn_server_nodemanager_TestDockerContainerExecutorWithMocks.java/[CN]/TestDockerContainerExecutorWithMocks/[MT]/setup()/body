{
  assumeTrue(!Path.WINDOWS);
  File f=new File("./src/test/resources/mock-container-executor");
  if (!FileUtil.canExecute(f)) {
    FileUtil.setExecutable(f,true);
  }
  String executorPath=f.getAbsolutePath();
  Configuration conf=new Configuration();
  yarnImage="yarnImage";
  long time=System.currentTimeMillis();
  conf.set(YarnConfiguration.NM_LINUX_CONTAINER_EXECUTOR_PATH,executorPath);
  conf.set(YarnConfiguration.NM_LOCAL_DIRS,"/tmp/nm-local-dir" + time);
  conf.set(YarnConfiguration.NM_LOG_DIRS,"/tmp/userlogs" + time);
  conf.set(YarnConfiguration.NM_DOCKER_CONTAINER_EXECUTOR_IMAGE_NAME,yarnImage);
  conf.set(YarnConfiguration.NM_DOCKER_CONTAINER_EXECUTOR_EXEC_NAME,DOCKER_LAUNCH_COMMAND);
  dockerContainerExecutor=new DockerContainerExecutor();
  dirsHandler=new LocalDirsHandlerService();
  dirsHandler.init(conf);
  dockerContainerExecutor.setConf(conf);
  lfs=null;
  try {
    lfs=FileContext.getLocalFSFileContext();
    workDir=new Path("/tmp/temp-" + System.currentTimeMillis());
    lfs.mkdir(workDir,FsPermission.getDirDefault(),true);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
