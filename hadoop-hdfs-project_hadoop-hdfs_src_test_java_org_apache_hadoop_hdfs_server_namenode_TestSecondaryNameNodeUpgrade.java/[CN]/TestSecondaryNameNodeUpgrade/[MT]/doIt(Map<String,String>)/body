{
  MiniDFSCluster cluster=null;
  FileSystem fs=null;
  SecondaryNameNode snn=null;
  try {
    Configuration conf=new HdfsConfiguration();
    cluster=new MiniDFSCluster.Builder(conf).build();
    cluster.waitActive();
    conf.set(DFSConfigKeys.DFS_NAMENODE_SECONDARY_HTTP_ADDRESS_KEY,"0.0.0.0:0");
    snn=new SecondaryNameNode(conf);
    fs=cluster.getFileSystem();
    fs.mkdirs(new Path("/test/foo"));
    snn.doCheckpoint();
    List<File> versionFiles=snn.getFSImage().getStorage().getFiles(null,"VERSION");
    snn.shutdown();
    for (    File versionFile : versionFiles) {
      for (      Map.Entry<String,String> paramToCorrupt : paramsToCorrupt.entrySet()) {
        String param=paramToCorrupt.getKey();
        String val=paramToCorrupt.getValue();
        System.out.println("Changing '" + param + "' to '"+ val+ "' in "+ versionFile);
        FSImageTestUtil.corruptVersionFile(versionFile,param,val);
      }
    }
    snn=new SecondaryNameNode(conf);
    fs.mkdirs(new Path("/test/bar"));
    snn.doCheckpoint();
  }
  finally {
    if (fs != null)     fs.close();
    if (cluster != null)     cluster.shutdown();
    if (snn != null)     snn.shutdown();
  }
}
