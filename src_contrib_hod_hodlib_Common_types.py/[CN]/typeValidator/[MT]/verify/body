def verify(self, type, value, allowNone=False):
    "Verifies a value based on its type.\n\n           type      - supported configValidator type\n           value     - data to be validated\n           allowNone - don't freak out if None or '' is supplied\n\n           returns a valueInfo dictionary:\n\n            valueInfo = { 'isValid' : 1, 'normalized' : 5, 'errorData' : 0 }\n\n           where:\n\n            isValid    - true or false (0/1)\n            normalized - the normalized value\n            errorData  - if invalid an error string\n\n           supported types:\n\n            see top level"
    result = None
    if allowNone:
        if ((value == '') or (value == None)):
            result = self.__verify_nothing(None, None)
            result['normalized'] = None
        else:
            result = self.verifyFunctions[type](type, value)
    else:
        result = self.verifyFunctions[type](type, value)
    return result
