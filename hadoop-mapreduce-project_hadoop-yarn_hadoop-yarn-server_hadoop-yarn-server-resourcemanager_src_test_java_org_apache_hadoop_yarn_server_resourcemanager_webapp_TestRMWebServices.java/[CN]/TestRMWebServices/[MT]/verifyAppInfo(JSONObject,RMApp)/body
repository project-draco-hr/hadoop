{
  assertEquals("correct number of elements",15,info.length());
  String id=info.getString("id");
  String expectedId=app.getApplicationId().toString();
  checkStringMatch("id",expectedId,id);
  String user=info.getString("user");
  String expectedUser=app.getUser();
  checkStringMatch("user",expectedUser,user);
  checkStringMatch("name","",info.getString("name"));
  checkStringMatch("queue","default",info.getString("queue"));
  checkStringMatch("state",RMAppState.ACCEPTED.toString(),info.getString("state"));
  checkStringMatch("finalStatus",FinalApplicationStatus.UNDEFINED.toString(),info.getString("finalStatus"));
  assertEquals("progress doesn't match",0,info.getDouble("progress"),0.0);
  checkStringMatch("trackingUI","UNASSIGNED",info.getString("trackingUI"));
  checkStringMatch("diagnostics","",info.getString("diagnostics"));
  assertEquals("clusterId doesn't match",ResourceManager.clusterTimeStamp,info.getLong("clusterId"));
  assertEquals("startedTime doesn't match",app.getStartTime(),info.getLong("startedTime"));
  assertEquals("finishedTime doesn't match",app.getFinishTime(),info.getLong("finishedTime"));
  assertTrue("elapsed time not greater than 0",info.getLong("elapsedTime") > 0);
  checkStringMatch("amHostHttpAddress",app.getCurrentAppAttempt().getMasterContainer().getNodeHttpAddress(),info.getString("amHostHttpAddress"));
  assertTrue("amContainerLogs doesn't match",info.getString("amContainerLogs").startsWith("http://"));
}
