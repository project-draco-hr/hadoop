{
  assertEquals("correct number of elements",1,json.length());
  JSONObject clusterinfo=json.getJSONObject("clusterInfo");
  assertEquals("correct number of elements",9,clusterinfo.length());
  String clusterid=clusterinfo.get("id").toString();
  assertTrue("clusterId doesn't match: " + clusterid,clusterid.toString().matches("^\\d+"));
  String startedon=clusterinfo.get("startedOn").toString();
  assertTrue("startedOn doesn't match: " + startedon,startedon.matches("^\\d+"));
  String state=clusterinfo.get("state").toString();
  assertTrue("stated doesn't match: " + state,state.matches("INITED"));
  String rmVersion=clusterinfo.get("resourceManagerVersion").toString();
  assertTrue("rm version doesn't match: " + rmVersion,rmVersion.matches(".*"));
  String rmBuildVersion=clusterinfo.get("resourceManagerBuildVersion").toString();
  assertTrue("rm Build version doesn't match: " + rmBuildVersion,rmBuildVersion.matches(".*"));
  String rmVersionBuiltOn=clusterinfo.get("resourceManagerVersionBuiltOn").toString();
  assertTrue("rm version built on doesn't match: " + rmVersionBuiltOn,rmVersionBuiltOn.matches("^\\w+\\s+\\w+\\s+\\d+\\s+\\d\\d:\\d\\d:\\d\\d\\s+\\w+\\s+\\d\\d\\d\\d"));
  String hadoopVersion=clusterinfo.get("hadoopVersion").toString();
  assertTrue("hadoop version doesn't match: " + hadoopVersion,hadoopVersion.matches(".*"));
  String hadoopBuildVersion=clusterinfo.get("hadoopBuildVersion").toString();
  assertTrue("hadoop Build version doesn't match: " + hadoopBuildVersion,hadoopBuildVersion.matches(".*"));
  String hadoopVersionBuiltOn=clusterinfo.get("hadoopVersionBuiltOn").toString();
  assertTrue("hadoop version built on doesn't match: " + hadoopVersionBuiltOn,hadoopVersionBuiltOn.matches("^\\w+\\s+\\w+\\s+\\d+\\s+\\d\\d:\\d\\d:\\d\\d\\s+\\w+\\s+\\d\\d\\d\\d"));
}
