{
  int numberOfRequests=3;
  for (int index=0; index < numberOfRequests; index++) {
    RegisterApplicationMasterResponse registerResponse=registerApplicationMaster(index);
    Assert.assertNotNull(registerResponse);
    Assert.assertEquals(Integer.toString(index),registerResponse.getQueue());
  }
  for (int index=numberOfRequests - 1; index >= 0; index--) {
    FinishApplicationMasterResponse finshResponse=finishApplicationMaster(index,FinalApplicationStatus.SUCCEEDED);
    Assert.assertNotNull(finshResponse);
    Assert.assertEquals(true,finshResponse.getIsUnregistered());
    Assert.assertTrue(this.getAMRMProxyService().getPipelines().size() == index);
  }
  try {
    finishApplicationMaster(1,FinalApplicationStatus.SUCCEEDED);
    Assert.fail("The request to finish application master should have failed");
  }
 catch (  Throwable ex) {
    LOG.info("Finish registration failed as expected because it was not registered");
  }
  try {
    finishApplicationMaster(4,FinalApplicationStatus.SUCCEEDED);
    Assert.fail("The request to finish application master should have failed");
  }
 catch (  Throwable ex) {
    LOG.info("Finish registration failed as expected because it was not registered");
  }
}
