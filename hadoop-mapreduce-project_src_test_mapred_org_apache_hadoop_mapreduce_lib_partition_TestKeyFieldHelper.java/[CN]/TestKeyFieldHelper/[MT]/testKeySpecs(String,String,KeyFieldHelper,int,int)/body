{
  LOG.info("input : " + input);
  String keySpecs=helper.keySpecs().get(0).toString();
  LOG.info("keyspecs : " + keySpecs);
  byte[] inputBytes=input.getBytes();
  if (e1 == -1) {
    e1=inputBytes.length;
  }
  LOG.info("length : " + e1);
  int[] indices=helper.getWordLengths(inputBytes,s1,e1);
  int start=helper.getStartOffset(inputBytes,s1,e1,indices,helper.keySpecs().get(0));
  LOG.info("start : " + start);
  if (expectedOutput == null) {
    assertEquals("Expected -1 when the start index is invalid",-1,start);
    return;
  }
  int end=helper.getEndOffset(inputBytes,s1,e1,indices,helper.keySpecs().get(0));
  LOG.info("end : " + end);
  end=(end >= inputBytes.length) ? inputBytes.length - 1 : end;
  int length=end + 1 - start;
  LOG.info("length : " + length);
  byte[] outputBytes=new byte[length];
  System.arraycopy(inputBytes,start,outputBytes,0,length);
  String output=new String(outputBytes);
  LOG.info("output : " + output);
  LOG.info("expected-output : " + expectedOutput);
  assertEquals(keySpecs + " failed on input '" + input+ "'",expectedOutput,output);
}
