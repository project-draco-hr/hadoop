{
  int tempIndex=0;
  int localRackNode=-1;
  if (reader != null) {
    for (int i=0; i < nodes.length; i++) {
      if (tempIndex == 0 && reader == nodes[i]) {
        if (i != 0) {
          swap(nodes,tempIndex,i);
        }
        tempIndex=1;
        if (localRackNode != -1) {
          if (localRackNode == 0) {
            localRackNode=i;
          }
          break;
        }
      }
 else       if (localRackNode == -1 && isOnSameRack(reader,nodes[i])) {
        localRackNode=i;
        if (tempIndex != 0)         break;
      }
    }
    if (localRackNode != -1 && localRackNode != tempIndex) {
      swap(nodes,tempIndex,localRackNode);
      tempIndex++;
    }
  }
  if (tempIndex == 0 && localRackNode == -1 && nodes.length != 0) {
    swap(nodes,0,r.nextInt(nodes.length));
  }
}
