{
  boolean isExcluded=false;
  if (scope.startsWith("~")) {
    isExcluded=true;
    scope=scope.substring(1);
  }
  scope=NodeBase.normalize(scope);
  int excludedCountInScope=0;
  int excludedCountOffScope=0;
  netlock.readLock().lock();
  try {
    if (excludedNodes != null) {
      for (      Node node : excludedNodes) {
        node=getNode(NodeBase.getPath(node));
        if (node == null) {
          continue;
        }
        if ((NodeBase.getPath(node) + NodeBase.PATH_SEPARATOR_STR).startsWith(scope + NodeBase.PATH_SEPARATOR_STR)) {
          excludedCountInScope++;
        }
 else {
          excludedCountOffScope++;
        }
      }
    }
    Node n=getNode(scope);
    int scopeNodeCount=0;
    if (n != null) {
      scopeNodeCount++;
    }
    if (n instanceof InnerNode) {
      scopeNodeCount=((InnerNode)n).getNumOfLeaves();
    }
    if (isExcluded) {
      return clusterMap.getNumOfLeaves() - scopeNodeCount - excludedCountOffScope;
    }
 else {
      return scopeNodeCount - excludedCountInScope;
    }
  }
  finally {
    netlock.readLock().unlock();
  }
}
