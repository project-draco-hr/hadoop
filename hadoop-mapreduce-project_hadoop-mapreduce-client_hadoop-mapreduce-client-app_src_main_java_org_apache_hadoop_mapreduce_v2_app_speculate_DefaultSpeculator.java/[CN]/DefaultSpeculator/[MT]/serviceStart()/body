{
  Runnable speculationBackgroundCore=new Runnable(){
    @Override public void run(){
      while (!stopped && !Thread.currentThread().isInterrupted()) {
        long backgroundRunStartTime=clock.getTime();
        try {
          int speculations=computeSpeculations();
          long mininumRecomp=speculations > 0 ? soonestRetryAfterSpeculate : soonestRetryAfterNoSpeculate;
          long wait=Math.max(mininumRecomp,clock.getTime() - backgroundRunStartTime);
          if (speculations > 0) {
            LOG.info("We launched " + speculations + " speculations.  Sleeping "+ wait+ " milliseconds.");
          }
          Object pollResult=scanControl.poll(wait,TimeUnit.MILLISECONDS);
        }
 catch (        InterruptedException e) {
          if (!stopped) {
            LOG.error("Background thread returning, interrupted",e);
          }
          return;
        }
      }
    }
  }
;
  speculationBackgroundThread=new Thread(speculationBackgroundCore,"DefaultSpeculator background processing");
  speculationBackgroundThread.start();
  super.serviceStart();
}
