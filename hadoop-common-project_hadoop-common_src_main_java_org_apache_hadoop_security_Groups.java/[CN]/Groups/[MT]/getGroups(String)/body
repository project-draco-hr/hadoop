{
  List<String> staticMapping=staticUserToGroupsMap.get(user);
  if (staticMapping != null) {
    return staticMapping;
  }
  CachedGroups groups=userToGroupsMap.get(user);
  long startMs=Time.monotonicNow();
  if (groups != null && (groups.getTimestamp() + cacheTimeout > startMs)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Returning cached groups for '" + user + "'");
    }
    return groups.getGroups();
  }
  List<String> groupList=impl.getGroups(user);
  long endMs=Time.monotonicNow();
  long deltaMs=endMs - startMs;
  UserGroupInformation.metrics.addGetGroups(deltaMs);
  if (deltaMs > warningDeltaMs) {
    LOG.warn("Potential performance problem: getGroups(user=" + user + ") "+ "took "+ deltaMs+ " milliseconds.");
  }
  groups=new CachedGroups(groupList,endMs);
  if (groups.getGroups().isEmpty()) {
    throw new IOException("No groups found for user " + user);
  }
  userToGroupsMap.put(user,groups);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Returning fetched groups for '" + user + "'");
  }
  return groups.getGroups();
}
