{
  RMNodeImpl node1=getRunningNode(null,10001);
  RMNodeImpl node2=getRunningNode(null,10002);
  ClusterMetrics cm=ClusterMetrics.getMetrics();
  int initialActive=cm.getNumActiveNMs();
  int initialLost=cm.getNumLostNMs();
  int initialUnhealthy=cm.getUnhealthyNMs();
  int initialDecommissioned=cm.getNumDecommisionedNMs();
  int initialRebooted=cm.getNumRebootedNMs();
  node1.handle(new RMNodeEvent(node1.getNodeID(),RMNodeEventType.EXPIRE));
  Assert.assertEquals("Active Nodes",initialActive - 1,cm.getNumActiveNMs());
  Assert.assertEquals("Lost Nodes",initialLost + 1,cm.getNumLostNMs());
  Assert.assertEquals("Unhealthy Nodes",initialUnhealthy,cm.getUnhealthyNMs());
  Assert.assertEquals("Decommissioned Nodes",initialDecommissioned,cm.getNumDecommisionedNMs());
  Assert.assertEquals("Rebooted Nodes",initialRebooted,cm.getNumRebootedNMs());
  Assert.assertEquals(NodeState.LOST,node1.getState());
  Assert.assertTrue("Node " + node1.toString() + " should be inactive",rmContext.getInactiveRMNodes().containsKey(node1.getNodeID()));
  Assert.assertFalse("Node " + node2.toString() + " should not be inactive",rmContext.getInactiveRMNodes().containsKey(node2.getNodeID()));
  node2.handle(new RMNodeEvent(node1.getNodeID(),RMNodeEventType.EXPIRE));
  Assert.assertEquals("Active Nodes",initialActive - 2,cm.getNumActiveNMs());
  Assert.assertEquals("Lost Nodes",initialLost + 2,cm.getNumLostNMs());
  Assert.assertEquals("Unhealthy Nodes",initialUnhealthy,cm.getUnhealthyNMs());
  Assert.assertEquals("Decommissioned Nodes",initialDecommissioned,cm.getNumDecommisionedNMs());
  Assert.assertEquals("Rebooted Nodes",initialRebooted,cm.getNumRebootedNMs());
  Assert.assertEquals(NodeState.LOST,node2.getState());
  Assert.assertTrue("Node " + node1.toString() + " should be inactive",rmContext.getInactiveRMNodes().containsKey(node1.getNodeID()));
  Assert.assertTrue("Node " + node2.toString() + " should be inactive",rmContext.getInactiveRMNodes().containsKey(node2.getNodeID()));
}
