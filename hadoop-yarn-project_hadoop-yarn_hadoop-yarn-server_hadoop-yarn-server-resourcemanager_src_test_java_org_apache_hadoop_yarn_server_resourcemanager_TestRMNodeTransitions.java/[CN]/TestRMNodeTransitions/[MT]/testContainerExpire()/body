{
  ContainerAllocationExpirer mockExpirer=mock(ContainerAllocationExpirer.class);
  ApplicationId appId=ApplicationId.newInstance(System.currentTimeMillis(),1);
  ApplicationAttemptId appAttemptId=ApplicationAttemptId.newInstance(appId,1);
  rmContext.getRMApps().put(appId,Mockito.mock(RMApp.class));
  ContainerId containerId1=ContainerId.newContainerId(appAttemptId,1L);
  ContainerId containerId2=ContainerId.newContainerId(appAttemptId,2L);
  AllocationExpirationInfo expirationInfo1=new AllocationExpirationInfo(containerId1);
  AllocationExpirationInfo expirationInfo2=new AllocationExpirationInfo(containerId2);
  mockExpirer.register(expirationInfo1);
  mockExpirer.register(expirationInfo2);
  verify(mockExpirer).register(expirationInfo1);
  verify(mockExpirer).register(expirationInfo2);
  ((RMContextImpl)rmContext).setContainerAllocationExpirer(mockExpirer);
  RMNodeImpl rmNode=getRunningNode();
  ContainerStatus status1=ContainerStatus.newInstance(containerId1,ContainerState.RUNNING,"",0);
  ContainerStatus status2=ContainerStatus.newInstance(containerId2,ContainerState.COMPLETE,"",0);
  List<ContainerStatus> statusList=new ArrayList<ContainerStatus>();
  statusList.add(status1);
  statusList.add(status2);
  RMNodeStatusEvent statusEvent=getMockRMNodeStatusEvent(statusList);
  rmNode.handle(statusEvent);
  verify(mockExpirer).unregister(expirationInfo1);
  verify(mockExpirer).unregister(expirationInfo2);
}
