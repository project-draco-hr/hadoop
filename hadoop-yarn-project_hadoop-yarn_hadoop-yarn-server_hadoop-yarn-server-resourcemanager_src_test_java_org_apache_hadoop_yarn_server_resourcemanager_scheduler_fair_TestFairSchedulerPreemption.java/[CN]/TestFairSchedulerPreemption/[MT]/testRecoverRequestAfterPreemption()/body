{
  startResourceManagerWithRealFairScheduler();
  conf.setLong(FairSchedulerConfiguration.WAIT_TIME_BEFORE_KILL,10);
  ControlledClock clock=new ControlledClock();
  scheduler.setClock(clock);
  scheduler.init(conf);
  scheduler.start();
  scheduler.reinitialize(conf,resourceManager.getRMContext());
  Priority priority=Priority.newInstance(20);
  String host="127.0.0.1";
  int GB=1024;
  RMNode node=MockNodes.newNodeInfo(1,Resources.createResource(16 * 1024,4),0,host);
  NodeAddedSchedulerEvent nodeEvent=new NodeAddedSchedulerEvent(node);
  scheduler.handle(nodeEvent);
  List<ResourceRequest> ask=new ArrayList<ResourceRequest>();
  ResourceRequest nodeLocalRequest=createResourceRequest(GB,1,host,priority.getPriority(),1,true);
  ResourceRequest rackLocalRequest=createResourceRequest(GB,1,node.getRackName(),priority.getPriority(),1,true);
  ResourceRequest offRackRequest=createResourceRequest(GB,1,ResourceRequest.ANY,priority.getPriority(),1,true);
  ask.add(nodeLocalRequest);
  ask.add(rackLocalRequest);
  ask.add(offRackRequest);
  ApplicationAttemptId appAttemptId=createSchedulingRequest("queueA","user1",ask);
  scheduler.update();
  NodeUpdateSchedulerEvent nodeUpdate=new NodeUpdateSchedulerEvent(node);
  scheduler.handle(nodeUpdate);
  assertEquals(1,scheduler.getSchedulerApp(appAttemptId).getLiveContainers().size());
  SchedulerApplicationAttempt app=scheduler.getSchedulerApp(appAttemptId);
  Assert.assertNull(app.getResourceRequest(priority,host));
  ContainerId containerId1=ContainerId.newContainerId(appAttemptId,1);
  RMContainer rmContainer=app.getRMContainer(containerId1);
  scheduler.warnOrKillContainer(rmContainer);
  clock.tickSec(5);
  scheduler.warnOrKillContainer(rmContainer);
  scheduler.handle(new ContainerPreemptEvent(appAttemptId,rmContainer,SchedulerEventType.MARK_CONTAINER_FOR_KILLABLE));
  List<ResourceRequest> requests=rmContainer.getResourceRequests();
  Assert.assertEquals(3,requests.size());
  for (  ResourceRequest request : requests) {
    Assert.assertEquals(1,app.getResourceRequest(priority,request.getResourceName()).getNumContainers());
  }
  scheduler.update();
  scheduler.handle(nodeUpdate);
  List<Container> containers=scheduler.allocate(appAttemptId,Collections.<ResourceRequest>emptyList(),Collections.<ContainerId>emptyList(),null,null,null,null).getContainers();
  Assert.assertTrue(containers.size() == 1);
  stopResourceManager();
}
