{
  ContainerLocalizer localizer=setupContainerLocalizerForTest();
  LocalResource rsrcA=getMockRsrc(random,LocalResourceVisibility.PRIVATE);
  LocalResource rsrcB=getMockRsrc(random,LocalResourceVisibility.PRIVATE);
  LocalResource rsrcC=getMockRsrc(random,LocalResourceVisibility.APPLICATION);
  LocalResource rsrcD=getMockRsrc(random,LocalResourceVisibility.PRIVATE);
  when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE,Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE,Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE,Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE,Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE,Collections.<LocalResource>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE,null));
  doReturn(new FakeDownload(rsrcA.getResource().getFile(),true)).when(localizer).download(isA(LocalDirAllocator.class),eq(rsrcA),isA(UserGroupInformation.class));
  doReturn(new FakeDownload(rsrcB.getResource().getFile(),true)).when(localizer).download(isA(LocalDirAllocator.class),eq(rsrcB),isA(UserGroupInformation.class));
  doReturn(new FakeDownload(rsrcC.getResource().getFile(),true)).when(localizer).download(isA(LocalDirAllocator.class),eq(rsrcC),isA(UserGroupInformation.class));
  doReturn(new FakeDownload(rsrcD.getResource().getFile(),true)).when(localizer).download(isA(LocalDirAllocator.class),eq(rsrcD),isA(UserGroupInformation.class));
  assertEquals(0,localizer.runLocalization(nmAddr));
  for (  Path p : localDirs) {
    Path base=new Path(new Path(p,ContainerLocalizer.USERCACHE),appUser);
    Path privcache=new Path(base,ContainerLocalizer.FILECACHE);
    verify(spylfs).mkdir(eq(privcache),isA(FsPermission.class),eq(false));
    Path appDir=new Path(base,new Path(ContainerLocalizer.APPCACHE,appId));
    Path appcache=new Path(appDir,ContainerLocalizer.FILECACHE);
    verify(spylfs).mkdir(eq(appcache),isA(FsPermission.class),eq(false));
  }
  verify(spylfs).open(tokenPath);
  verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcA)));
  verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcB)));
  verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcC)));
  verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcD)));
  verify(nmProxy,never()).heartbeat(argThat(new ArgumentMatcher<LocalizerStatus>(){
    @Override public boolean matches(    Object o){
      LocalizerStatus status=(LocalizerStatus)o;
      return !containerId.equals(status.getLocalizerId());
    }
  }
));
}
