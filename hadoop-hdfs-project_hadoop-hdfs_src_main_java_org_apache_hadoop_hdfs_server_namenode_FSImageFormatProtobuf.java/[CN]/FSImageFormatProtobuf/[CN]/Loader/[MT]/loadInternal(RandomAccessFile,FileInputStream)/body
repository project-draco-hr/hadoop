{
  if (!FSImageUtil.checkFileFormat(raFile)) {
    throw new IOException("Unrecognized file format");
  }
  FileSummary summary=FSImageUtil.loadSummary(raFile);
  FileChannel channel=fin.getChannel();
  FSImageFormatPBINode.Loader inodeLoader=new FSImageFormatPBINode.Loader(fsn,this);
  FSImageFormatPBSnapshot.Loader snapshotLoader=new FSImageFormatPBSnapshot.Loader(fsn,this);
  ArrayList<FileSummary.Section> sections=Lists.newArrayList(summary.getSectionsList());
  Collections.sort(sections,new Comparator<FileSummary.Section>(){
    @Override public int compare(    FileSummary.Section s1,    FileSummary.Section s2){
      SectionName n1=SectionName.fromString(s1.getName());
      SectionName n2=SectionName.fromString(s2.getName());
      if (n1 == null) {
        return n2 == null ? 0 : -1;
      }
 else       if (n2 == null) {
        return -1;
      }
 else {
        return n1.ordinal() - n2.ordinal();
      }
    }
  }
);
  StartupProgress prog=NameNode.getStartupProgress();
  Step currentStep=null;
  for (  FileSummary.Section s : sections) {
    channel.position(s.getOffset());
    InputStream in=new BufferedInputStream(new LimitInputStream(fin,s.getLength()));
    in=FSImageUtil.wrapInputStreamForCompression(conf,summary.getCodec(),in);
    String n=s.getName();
switch (SectionName.fromString(n)) {
case NS_INFO:
      loadNameSystemSection(in);
    break;
case STRING_TABLE:
  loadStringTableSection(in);
break;
case INODE:
{
currentStep=new Step(StepType.INODES);
prog.beginStep(Phase.LOADING_FSIMAGE,currentStep);
inodeLoader.loadINodeSection(in);
}
break;
case INODE_REFERENCE:
snapshotLoader.loadINodeReferenceSection(in);
break;
case INODE_DIR:
inodeLoader.loadINodeDirectorySection(in);
break;
case FILES_UNDERCONSTRUCTION:
inodeLoader.loadFilesUnderConstructionSection(in);
break;
case SNAPSHOT:
snapshotLoader.loadSnapshotSection(in);
break;
case SNAPSHOT_DIFF:
snapshotLoader.loadSnapshotDiffSection(in);
break;
case SECRET_MANAGER:
{
prog.endStep(Phase.LOADING_FSIMAGE,currentStep);
Step step=new Step(StepType.DELEGATION_TOKENS);
prog.beginStep(Phase.LOADING_FSIMAGE,step);
loadSecretManagerSection(in);
prog.endStep(Phase.LOADING_FSIMAGE,step);
}
break;
case CACHE_MANAGER:
{
Step step=new Step(StepType.CACHE_POOLS);
prog.beginStep(Phase.LOADING_FSIMAGE,step);
loadCacheManagerSection(in);
prog.endStep(Phase.LOADING_FSIMAGE,step);
}
break;
default :
LOG.warn("Unrecognized section " + n);
break;
}
}
}
