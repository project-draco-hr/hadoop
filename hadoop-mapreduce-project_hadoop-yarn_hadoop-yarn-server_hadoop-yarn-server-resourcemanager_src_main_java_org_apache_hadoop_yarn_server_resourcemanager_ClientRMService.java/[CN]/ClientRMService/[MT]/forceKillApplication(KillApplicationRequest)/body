{
  ApplicationId applicationId=request.getApplicationId();
  UserGroupInformation callerUGI;
  try {
    callerUGI=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException ie) {
    LOG.info("Error getting UGI ",ie);
    RMAuditLogger.logFailure("UNKNOWN",AuditConstants.KILL_APP_REQUEST,"UNKNOWN","ClientRMService","Error getting UGI",applicationId);
    throw RPCUtil.getRemoteException(ie);
  }
  RMApp application=this.rmContext.getRMApps().get(applicationId);
  if (!checkAccess(callerUGI,application.getUser(),ApplicationACL.MODIFY_APP)) {
    RMAuditLogger.logFailure(callerUGI.getShortUserName(),AuditConstants.KILL_APP_REQUEST,"User doesn't have MODIFY_APP permissions","ClientRMService",AuditConstants.UNAUTHORIZED_USER,applicationId);
    throw RPCUtil.getRemoteException(new AccessControlException("User " + callerUGI.getShortUserName() + " cannot perform operation "+ ApplicationACL.MODIFY_APP.name()+ " on "+ applicationId));
  }
  this.rmContext.getDispatcher().getEventHandler().handle(new RMAppEvent(applicationId,RMAppEventType.KILL));
  RMAuditLogger.logSuccess(callerUGI.getShortUserName(),AuditConstants.KILL_APP_REQUEST,"ClientRMService",applicationId);
  KillApplicationResponse response=recordFactory.newRecordInstance(KillApplicationResponse.class);
  return response;
}
