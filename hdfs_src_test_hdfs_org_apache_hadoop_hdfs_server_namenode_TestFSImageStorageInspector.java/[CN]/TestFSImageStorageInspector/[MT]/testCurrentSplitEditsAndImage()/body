{
  FSImageTransactionalStorageInspector inspector=new FSImageTransactionalStorageInspector();
  StorageDirectory mockImageDir=mockDirectory(NameNodeDirType.IMAGE,false,"/foo/current/" + getImageFileName(123));
  StorageDirectory mockImageDir2=mockDirectory(NameNodeDirType.IMAGE,false,"/foo2/current/" + getImageFileName(456));
  StorageDirectory mockEditsDir=mockDirectory(NameNodeDirType.EDITS,false,"/foo3/current/" + getFinalizedEditsFileName(123,456),"/foo3/current/" + getInProgressEditsFileName(457));
  inspector.inspectDirectory(mockImageDir);
  inspector.inspectDirectory(mockEditsDir);
  inspector.inspectDirectory(mockImageDir2);
  mockLogValidation(inspector,"/foo3/current/" + getInProgressEditsFileName(457),2);
  assertEquals(2,inspector.foundEditLogs.size());
  assertEquals(2,inspector.foundImages.size());
  assertTrue(inspector.foundEditLogs.get(1).isInProgress());
  assertTrue(inspector.isUpgradeFinalized());
  TransactionalLoadPlan plan=(TransactionalLoadPlan)inspector.createLoadPlan();
  FSImageFile pickedImage=plan.image;
  assertEquals(456,pickedImage.txId);
  assertSame(mockImageDir2,pickedImage.sd);
  assertEquals(new File("/foo2/current/" + getImageFileName(456)),plan.getImageFile());
  assertArrayEquals(new File[]{new File("/foo3/current/" + getInProgressEditsFileName(457))},plan.getEditsFiles().toArray(new File[0]));
  assertEquals("[[123,456]]",inspector.getEditLogManifest(123).toString());
  assertEquals("[[123,456]]",inspector.getEditLogManifest(456).toString());
  assertEquals("[]",inspector.getEditLogManifest(457).toString());
}
