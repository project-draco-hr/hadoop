{
  try {
    final String doAsUser=getDoAsUser();
    final DelegationTokenAuthenticatedURL.Token token=generateDelegationToken(dToken);
    return actualUgi.doAs(new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        final URL url=createURL(null,null,null,null);
        LOG.debug("Cancelling delegation token {} with url:{}, as:{}",dToken,url,doAsUser);
        final DelegationTokenAuthenticatedURL authUrl=new DelegationTokenAuthenticatedURL(configurator);
        authUrl.cancelDelegationToken(url,token,doAsUser);
        return null;
      }
    }
);
  }
 catch (  Exception ex) {
    if (ex instanceof IOException) {
      throw (IOException)ex;
    }
 else {
      throw new IOException(ex);
    }
  }
}
