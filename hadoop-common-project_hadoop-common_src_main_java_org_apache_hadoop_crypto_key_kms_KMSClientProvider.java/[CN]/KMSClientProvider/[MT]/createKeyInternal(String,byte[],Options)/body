{
  checkNotEmpty(name,"name");
  checkNotNull(options,"options");
  Map<String,Object> jsonKey=new HashMap<String,Object>();
  jsonKey.put(KMSRESTConstants.NAME_FIELD,name);
  jsonKey.put(KMSRESTConstants.CIPHER_FIELD,options.getCipher());
  jsonKey.put(KMSRESTConstants.LENGTH_FIELD,options.getBitLength());
  if (material != null) {
    jsonKey.put(KMSRESTConstants.MATERIAL_FIELD,Base64.encodeBase64String(material));
  }
  if (options.getDescription() != null) {
    jsonKey.put(KMSRESTConstants.DESCRIPTION_FIELD,options.getDescription());
  }
  if (options.getAttributes() != null && !options.getAttributes().isEmpty()) {
    jsonKey.put(KMSRESTConstants.ATTRIBUTES_FIELD,options.getAttributes());
  }
  URL url=createURL(KMSRESTConstants.KEYS_RESOURCE,null,null,null);
  HttpURLConnection conn=createConnection(url,HTTP_POST);
  conn.setRequestProperty(CONTENT_TYPE,APPLICATION_JSON_MIME);
  Map response=call(conn,jsonKey,HttpURLConnection.HTTP_CREATED,Map.class);
  return parseJSONKeyVersion(response);
}
