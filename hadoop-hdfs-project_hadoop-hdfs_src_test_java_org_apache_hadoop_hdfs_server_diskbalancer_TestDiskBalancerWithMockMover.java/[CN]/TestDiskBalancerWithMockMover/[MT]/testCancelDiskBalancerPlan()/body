{
  MockMoverHelper mockMoverHelper=new MockMoverHelper().invoke();
  NodePlan plan=mockMoverHelper.getPlan();
  DiskBalancer balancer=mockMoverHelper.getBalancer();
  mockMoverHelper.getBlockMover().setSleep();
  executeSubmitPlan(plan,balancer);
  String planJson=plan.toJson();
  String planID=DigestUtils.sha512Hex(planJson);
  balancer.cancelPlan(planID);
  DiskBalancerWorkStatus status=balancer.queryWorkStatus();
  assertEquals(DiskBalancerWorkStatus.Result.PLAN_CANCELLED,status.getResult());
  executeSubmitPlan(plan,balancer);
  char first=planID.charAt(0);
  first++;
  thrown.expect(DiskBalancerException.class);
  thrown.expect(new DiskBalancerResultVerifier(DiskBalancerException.Result.NO_SUCH_PLAN));
  balancer.cancelPlan(planID.replace(planID.charAt(0),first));
  balancer.cancelPlan(planID);
  mockMoverHelper.getBlockMover().clearSleep();
  status=balancer.queryWorkStatus();
  assertEquals(DiskBalancerWorkStatus.Result.PLAN_CANCELLED,status.getResult());
}
