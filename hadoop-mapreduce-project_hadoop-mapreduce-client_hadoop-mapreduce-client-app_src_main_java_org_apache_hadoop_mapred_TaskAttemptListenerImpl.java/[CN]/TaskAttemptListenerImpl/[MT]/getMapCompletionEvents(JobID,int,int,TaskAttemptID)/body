{
  LOG.info("MapCompletionEvents request from " + taskAttemptID.toString() + ". fromEventID "+ fromEventId+ " maxEvents "+ maxEvents);
  boolean shouldReset=false;
  org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID=TypeConverter.toYarn(taskAttemptID);
  org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptCompletionEvent[] events=context.getJob(attemptID.getTaskId().getJobId()).getTaskAttemptCompletionEvents(fromEventId,maxEvents);
  taskHeartbeatHandler.progressing(attemptID);
  List<TaskCompletionEvent> mapEvents=new ArrayList<TaskCompletionEvent>();
  for (  org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptCompletionEvent event : events) {
    if (TaskType.MAP.equals(event.getAttemptId().getTaskId().getTaskType())) {
      mapEvents.add(TypeConverter.fromYarn(event));
    }
  }
  return new MapTaskCompletionEventsUpdate(mapEvents.toArray(new TaskCompletionEvent[0]),shouldReset);
}
