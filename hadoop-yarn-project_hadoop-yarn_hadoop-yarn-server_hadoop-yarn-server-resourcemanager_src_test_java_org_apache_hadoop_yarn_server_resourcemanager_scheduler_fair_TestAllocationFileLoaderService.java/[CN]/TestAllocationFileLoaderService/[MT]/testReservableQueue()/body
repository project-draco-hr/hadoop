{
  Configuration conf=new Configuration();
  conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,ALLOC_FILE);
  PrintWriter out=new PrintWriter(new FileWriter(ALLOC_FILE));
  out.println("<?xml version=\"1.0\"?>");
  out.println("<allocations>");
  out.println("<queue name=\"reservable\">");
  out.println("<reservation>");
  out.println("</reservation>");
  out.println("</queue>");
  out.println("<queue name=\"other\">");
  out.println("</queue>");
  out.println("<reservation-agent>DummyAgentName</reservation-agent>");
  out.println("<reservation-policy>AnyAdmissionPolicy</reservation-policy>");
  out.println("</allocations>");
  out.close();
  AllocationFileLoaderService allocLoader=new AllocationFileLoaderService();
  allocLoader.init(conf);
  ReloadListener confHolder=new ReloadListener();
  allocLoader.setReloadListener(confHolder);
  allocLoader.reloadAllocations();
  AllocationConfiguration allocConf=confHolder.allocConf;
  String reservableQueueName="root.reservable";
  String nonreservableQueueName="root.other";
  assertFalse(allocConf.isReservable(nonreservableQueueName));
  assertTrue(allocConf.isReservable(reservableQueueName));
  assertTrue(allocConf.getMoveOnExpiry(reservableQueueName));
  assertEquals(ReservationSchedulerConfiguration.DEFAULT_RESERVATION_WINDOW,allocConf.getReservationWindow(reservableQueueName));
  assertEquals(100,allocConf.getInstantaneousMaxCapacity(reservableQueueName),0.0001);
  assertEquals("DummyAgentName",allocConf.getReservationAgent(reservableQueueName));
  assertEquals(100,allocConf.getAverageCapacity(reservableQueueName),0.001);
  assertFalse(allocConf.getShowReservationAsQueues(reservableQueueName));
  assertEquals("AnyAdmissionPolicy",allocConf.getReservationAdmissionPolicy(reservableQueueName));
  assertEquals(ReservationSchedulerConfiguration.DEFAULT_RESERVATION_PLANNER_NAME,allocConf.getReplanner(reservableQueueName));
  assertEquals(ReservationSchedulerConfiguration.DEFAULT_RESERVATION_ENFORCEMENT_WINDOW,allocConf.getEnforcementWindow(reservableQueueName));
}
