{
  TaskAttemptID[] taskAttemptID=new TaskAttemptID[6];
  JobConf conf=new JobConf();
  conf.setSpeculativeExecution(true);
  conf.setNumMapTasks(5);
  conf.setNumReduceTasks(5);
  conf.setFloat(JobContext.SPECULATIVE_SLOWTASK_THRESHOLD,0.5f);
  FakeJobInProgress job=new FakeJobInProgress(conf,jobTracker);
  job.initTasks();
  taskAttemptID[0]=job.findReduceTask(trackers[0]);
  taskAttemptID[1]=job.findReduceTask(trackers[1]);
  taskAttemptID[2]=job.findReduceTask(trackers[2]);
  taskAttemptID[3]=job.findReduceTask(trackers[3]);
  taskAttemptID[4]=job.findReduceTask(trackers[3]);
  clock.advance(5000);
  job.finishTask(taskAttemptID[0]);
  clock.advance(1000);
  job.finishTask(taskAttemptID[1]);
  clock.advance(20000);
  clock.advanceBySpeculativeLag();
  taskAttemptID[5]=job.findReduceTask(trackers[4]);
  assertEquals(taskAttemptID[5].getTaskID().getId(),2);
  clock.advance(5000);
  job.finishTask(taskAttemptID[5]);
  taskAttemptID[5]=job.findReduceTask(trackers[4]);
  assertEquals(taskAttemptID[5].getTaskID().getId(),3);
  assertEquals("Total speculative maps",1,fakeInst.numSpeculativeMaps);
  assertEquals("Total speculative reduces",3,fakeInst.numSpeculativeReduces);
  LOG.info("Total speculative maps = " + fakeInst.numSpeculativeMaps);
  LOG.info("Total speculative reduces = " + fakeInst.numSpeculativeReduces);
}
