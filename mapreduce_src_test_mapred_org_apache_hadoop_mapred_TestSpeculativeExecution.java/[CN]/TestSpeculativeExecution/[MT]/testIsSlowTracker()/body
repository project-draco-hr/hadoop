{
  TaskAttemptID[] taskAttemptID=new TaskAttemptID[20];
  JobConf conf=new JobConf();
  conf.setSpeculativeExecution(true);
  conf.setNumMapTasks(10);
  conf.setNumReduceTasks(0);
  FakeJobInProgress job=new FakeJobInProgress(conf,jobTracker);
  job.initTasks();
  taskAttemptID[0]=job.findMapTask(trackers[0]);
  taskAttemptID[1]=job.findMapTask(trackers[0]);
  taskAttemptID[2]=job.findMapTask(trackers[0]);
  taskAttemptID[3]=job.findMapTask(trackers[1]);
  taskAttemptID[4]=job.findMapTask(trackers[1]);
  taskAttemptID[5]=job.findMapTask(trackers[1]);
  taskAttemptID[6]=job.findMapTask(trackers[2]);
  taskAttemptID[7]=job.findMapTask(trackers[2]);
  taskAttemptID[8]=job.findMapTask(trackers[2]);
  clock.advance(1000);
  job.finishTask(taskAttemptID[0]);
  job.finishTask(taskAttemptID[1]);
  job.finishTask(taskAttemptID[2]);
  clock.advance(1000);
  job.finishTask(taskAttemptID[3]);
  job.finishTask(taskAttemptID[4]);
  job.finishTask(taskAttemptID[5]);
  assertEquals("Tracker " + trackers[0] + " expected to be not slow ",job.isSlowTracker(trackers[0]),false);
  clock.advance(100000);
  job.finishTask(taskAttemptID[6]);
  job.finishTask(taskAttemptID[7]);
  job.finishTask(taskAttemptID[8]);
  assertEquals("Tracker " + trackers[2] + " expected to be slow ",job.isSlowTracker(trackers[2]),true);
  assertEquals("Total speculative maps",1,fakeInst.numSpeculativeMaps);
  assertEquals("Total speculative reduces",1,fakeInst.numSpeculativeReduces);
  LOG.info("Total speculative maps = " + fakeInst.numSpeculativeMaps);
  LOG.info("Total speculative reduces = " + fakeInst.numSpeculativeReduces);
}
