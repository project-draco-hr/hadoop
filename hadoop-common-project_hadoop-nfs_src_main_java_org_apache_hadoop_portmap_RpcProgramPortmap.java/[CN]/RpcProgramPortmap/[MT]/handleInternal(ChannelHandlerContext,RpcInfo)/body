{
  RpcCall rpcCall=(RpcCall)info.header();
  final Procedure portmapProc=Procedure.fromValue(rpcCall.getProcedure());
  int xid=rpcCall.getXid();
  byte[] data=new byte[info.data().readableBytes()];
  info.data().readBytes(data);
  XDR in=new XDR(data);
  XDR out=new XDR();
  if (portmapProc == Procedure.PMAPPROC_NULL) {
    out=nullOp(xid,in,out);
  }
 else   if (portmapProc == Procedure.PMAPPROC_SET) {
    out=set(xid,in,out);
  }
 else   if (portmapProc == Procedure.PMAPPROC_UNSET) {
    out=unset(xid,in,out);
  }
 else   if (portmapProc == Procedure.PMAPPROC_DUMP) {
    out=dump(xid,in,out);
  }
 else   if (portmapProc == Procedure.PMAPPROC_GETPORT) {
    out=getport(xid,in,out);
  }
 else   if (portmapProc == Procedure.PMAPPROC_GETVERSADDR) {
    out=getport(xid,in,out);
  }
 else {
    LOG.info("PortmapHandler unknown rpc procedure=" + portmapProc);
    RpcAcceptedReply reply=RpcAcceptedReply.getInstance(xid,RpcAcceptedReply.AcceptState.PROC_UNAVAIL,new VerifierNone());
    reply.write(out);
  }
  ChannelBuffer buf=ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap().buffer());
  RpcResponse rsp=new RpcResponse(buf,info.remoteAddress());
  RpcUtil.sendRpcResponse(ctx,rsp);
}
