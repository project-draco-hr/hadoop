{
  int runCount=0;
  MRApp app=new MRAppWithHistory(1,1,false,this.getClass().getName(),true,++runCount);
  Configuration conf=new Configuration();
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false);
  Job job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("Num tasks not correct",2,job.getTasks().size());
  Iterator<Task> it=job.getTasks().values().iterator();
  Task mapTask=it.next();
  Task reduceTask=it.next();
  app.waitForState(mapTask,TaskState.RUNNING);
  TaskAttempt mapAttempt1=mapTask.getAttempts().values().iterator().next();
  app.waitForState(mapAttempt1,TaskAttemptState.RUNNING);
  app.getContext().getEventHandler().handle(new TaskAttemptEvent(mapAttempt1.getID(),TaskAttemptEventType.TA_DONE));
  app.waitForState(mapTask,TaskState.SUCCEEDED);
  TaskAttemptCompletionEvent[] events=job.getTaskAttemptCompletionEvents(0,100);
  Assert.assertEquals("Num completion events not correct",1,events.length);
  Assert.assertEquals("Event status not correct",TaskAttemptCompletionEventStatus.SUCCEEDED,events[0].getStatus());
  app.waitForState(reduceTask,TaskState.RUNNING);
  TaskAttempt reduceAttempt=reduceTask.getAttempts().values().iterator().next();
  app.waitForState(reduceAttempt,TaskAttemptState.RUNNING);
  sendFetchFailure(app,reduceAttempt,mapAttempt1,"host");
  sendFetchFailure(app,reduceAttempt,mapAttempt1,"host");
  sendFetchFailure(app,reduceAttempt,mapAttempt1,"host");
  app.waitForState(mapTask,TaskState.RUNNING);
  app.stop();
  app=new MRAppWithHistory(1,1,false,this.getClass().getName(),false,++runCount);
  conf=new Configuration();
  conf.setBoolean(MRJobConfig.MR_AM_JOB_RECOVERY_ENABLE,true);
  conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false);
  job=app.submit(conf);
  app.waitForState(job,JobState.RUNNING);
  Assert.assertEquals("Num tasks not correct",2,job.getTasks().size());
  it=job.getTasks().values().iterator();
  mapTask=it.next();
  reduceTask=it.next();
  app.waitForState(mapTask,TaskState.RUNNING);
  mapAttempt1=mapTask.getAttempts().values().iterator().next();
  app.waitForState(mapAttempt1,TaskAttemptState.RUNNING);
  app.getContext().getEventHandler().handle(new TaskAttemptEvent(mapAttempt1.getID(),TaskAttemptEventType.TA_DONE));
  app.waitForState(mapTask,TaskState.SUCCEEDED);
  reduceAttempt=reduceTask.getAttempts().values().iterator().next();
  app.getContext().getEventHandler().handle(new TaskAttemptEvent(reduceAttempt.getID(),TaskAttemptEventType.TA_DONE));
  app.waitForState(job,JobState.SUCCEEDED);
  events=job.getTaskAttemptCompletionEvents(0,100);
  Assert.assertEquals("Num completion events not correct",2,events.length);
}
