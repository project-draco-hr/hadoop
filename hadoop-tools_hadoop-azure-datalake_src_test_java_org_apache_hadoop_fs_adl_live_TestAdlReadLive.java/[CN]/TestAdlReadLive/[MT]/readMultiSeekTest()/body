{
  final Path path=new Path("/delete14/" + UUID.randomUUID().toString().replaceAll("-",""));
  FileSystem fs=this.getFileSystem();
  final byte[] actualData=new byte[3267397];
  Random ran=new Random();
  ran.nextBytes(actualData);
  byte[] testData=null;
  fs.delete(path,true);
  FSDataOutputStream os=fs.create(path);
  os.write(actualData);
  os.close();
  FSDataInputStream bb=fs.open(path);
  byte[] data=new byte[16384];
  bb.readFully(3251013,data,0,16384);
  testData=new byte[16384];
  System.arraycopy(actualData,3251013,testData,0,16384);
  Assert.assertArrayEquals(testData,data);
  data=new byte[1921];
  bb.readFully(3265476,data,0,1921);
  testData=new byte[1921];
  System.arraycopy(actualData,3265476,testData,0,1921);
  Assert.assertArrayEquals(testData,data);
  data=new byte[3267394];
  bb.readFully(3,data,0,3267394);
  testData=new byte[3267394];
  System.arraycopy(actualData,3,testData,0,3267394);
  Assert.assertArrayEquals(testData,data);
  data=new byte[3266943];
  bb.readFully(454,data,0,3266943);
  testData=new byte[3266943];
  System.arraycopy(actualData,454,testData,0,3266943);
  Assert.assertArrayEquals(testData,data);
  data=new byte[3265320];
  bb.readFully(2077,data,0,3265320);
  testData=new byte[3265320];
  System.arraycopy(actualData,2077,testData,0,3265320);
  Assert.assertArrayEquals(testData,data);
  bb.close();
  bb=fs.open(path);
  data=new byte[3263262];
  bb.readFully(4135,data,0,3263262);
  testData=new byte[3263262];
  System.arraycopy(actualData,4135,testData,0,3263262);
  Assert.assertArrayEquals(testData,data);
  data=new byte[2992591];
  bb.readFully(274806,data,0,2992591);
  testData=new byte[2992591];
  System.arraycopy(actualData,274806,testData,0,2992591);
  Assert.assertArrayEquals(testData,data);
  data=new byte[1985665];
  bb.readFully(1281732,data,0,1985665);
  testData=new byte[1985665];
  System.arraycopy(actualData,1281732,testData,0,1985665);
  Assert.assertArrayEquals(testData,data);
  data=new byte[3267394];
  try {
    bb.readFully(2420207,data,0,3267394);
    Assert.fail("EOF expected");
  }
 catch (  IOException e) {
  }
  bb.close();
}
