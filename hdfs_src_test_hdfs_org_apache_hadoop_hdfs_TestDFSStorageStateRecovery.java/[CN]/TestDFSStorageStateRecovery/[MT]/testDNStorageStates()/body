{
  String[] baseDirs;
  for (int numDirs=1; numDirs <= 2; numDirs++) {
    conf=new HdfsConfiguration();
    conf.setInt(DFSConfigKeys.DFS_DATANODE_SCAN_PERIOD_HOURS_KEY,-1);
    conf=UpgradeUtilities.initializeStorageStateConf(numDirs,conf);
    for (int i=0; i < NUM_DN_TEST_CASES; i++) {
      boolean[] testCase=testCases[i];
      boolean shouldRecover=testCase[5];
      boolean curAfterRecover=testCase[6];
      boolean prevAfterRecover=testCase[7];
      log("DATA_NODE recovery",numDirs,i,testCase);
      createNameNodeStorageState(new boolean[]{true,true,false,false,false});
      cluster=createCluster(conf);
      baseDirs=createDataNodeStorageState(testCase);
      if (!testCase[0] && !testCase[1] && !testCase[2]&& !testCase[3]) {
        cluster.startDataNodes(conf,1,false,StartupOption.REGULAR,null);
      }
 else {
        if (shouldRecover) {
          cluster.startDataNodes(conf,1,false,StartupOption.REGULAR,null);
          checkResultDataNode(baseDirs,curAfterRecover,prevAfterRecover);
        }
 else {
          cluster.startDataNodes(conf,1,false,StartupOption.REGULAR,null);
          assertFalse(cluster.getDataNodes().get(0).isDatanodeUp());
        }
      }
      cluster.shutdown();
    }
  }
}
