{
  JsonObjectMapperParser<T> goldParser=new JsonObjectMapperParser<T>(gold,clazz,conf);
  InputStream resultStream=lfs.open(result);
  JsonObjectMapperParser<T> resultParser=new JsonObjectMapperParser<T>(resultStream,clazz);
  try {
    while (true) {
      DeepCompare goldJob=goldParser.getNext();
      DeepCompare resultJob=resultParser.getNext();
      if ((goldJob == null) || (resultJob == null)) {
        assertTrue(goldJob == resultJob);
        break;
      }
      try {
        resultJob.deepCompare(goldJob,new TreePath(null,"<root>"));
      }
 catch (      DeepInequalityException e) {
        String error=e.path.toString();
        assertFalse(fileDescription + " mismatches: " + error,true);
      }
    }
  }
  finally {
    IOUtils.cleanup(null,goldParser,resultParser);
  }
}
