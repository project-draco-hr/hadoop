{
  for (int i=0; i < 2; i++) {
    Path file=new Path("/filestatus" + i);
    DFSTestUtil.createFile(fileSys,file,1024,1024,blockSize,(short)2,seed);
  }
  stopDatanodeAndWait(1);
  nnRpc.setReplication("/filestatus0",(short)4);
  nnRpc.delete("/filestatus0",true);
  nnRpc.delete("/filestatus1",true);
  nnRpc.metaSave("metasaveAfterDelete.out.txt");
  BufferedReader reader=null;
  try {
    FileInputStream fstream=new FileInputStream(getLogFile("metasaveAfterDelete.out.txt"));
    DataInputStream in=new DataInputStream(fstream);
    reader=new BufferedReader(new InputStreamReader(in));
    reader.readLine();
    String line=reader.readLine();
    assertTrue(line.equals("Live Datanodes: 1"));
    line=reader.readLine();
    assertTrue(line.equals("Dead Datanodes: 1"));
    line=reader.readLine();
    assertTrue(line.equals("Metasave: Blocks waiting for reconstruction: 0"));
    line=reader.readLine();
    assertTrue(line.equals("Mis-replicated blocks that have been postponed:"));
    line=reader.readLine();
    assertTrue(line.equals("Metasave: Blocks being reconstructed: 0"));
    line=reader.readLine();
    assertTrue(line.equals("Metasave: Blocks 2 waiting deletion from 1 datanodes."));
    line=reader.readLine();
    line=reader.readLine();
    line=reader.readLine();
    line=reader.readLine();
    assertTrue(line.equals("Metasave: Number of datanodes: 2"));
    line=reader.readLine();
    assertFalse(line.contains("NaN"));
  }
  finally {
    if (reader != null)     reader.close();
  }
}
