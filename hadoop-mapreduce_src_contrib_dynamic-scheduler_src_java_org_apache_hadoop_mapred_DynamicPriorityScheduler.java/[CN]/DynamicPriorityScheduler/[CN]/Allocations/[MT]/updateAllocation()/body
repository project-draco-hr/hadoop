{
  String queueList="";
  totalSpending=0.0f;
  for (  BudgetQueue queue : store.getQueues()) {
    if (!infoQueues.contains(queue.name)) {
      Queue[] newQueues=new Queue[infoQueues.size() + 1];
      int i=0;
      for (      String infoQueue : infoQueues) {
        newQueues[i]=queueManager.getQueue(infoQueue);
        i++;
      }
      Queue newQueue=new Queue();
      newQueue.setName(queue.name);
      newQueues[i]=newQueue;
      queueManager.setQueues(newQueues);
      QueueInfo newQueueInfo=new QueueInfo(queue.name,null,this);
      queueManager.setSchedulerInfo(queue.name,newQueueInfo);
      infoQueues=queueManager.getLeafQueueNames();
    }
    if (!queueList.equals("")) {
      queueList+=",";
    }
    queueList+=queue.name;
    if (queue.spending <= queue.budget && (queue.used != 0 || queue.pending != 0)) {
      totalSpending+=queue.spending;
    }
  }
  conf.set(PrioritySchedulerOptions.MAPRED_QUEUE_NAMES,queueList);
  setShares();
}
