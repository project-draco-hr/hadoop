{
  startupProgress.beginPhase(LOADING_FSIMAGE);
  Step loadingFsImageInodes=new Step(INODES);
  startupProgress.beginStep(LOADING_FSIMAGE,loadingFsImageInodes);
  startupProgress.setTotal(LOADING_FSIMAGE,loadingFsImageInodes,1000L);
  startupProgress.endStep(LOADING_FSIMAGE,loadingFsImageInodes);
  Step loadingFsImageDelegationKeys=new Step(DELEGATION_KEYS);
  startupProgress.beginStep(LOADING_FSIMAGE,loadingFsImageDelegationKeys);
  startupProgress.setTotal(LOADING_FSIMAGE,loadingFsImageDelegationKeys,800L);
  startupProgress.endStep(LOADING_FSIMAGE,loadingFsImageDelegationKeys);
  startupProgress.endPhase(LOADING_FSIMAGE);
  startupProgress.beginPhase(LOADING_EDITS);
  Step loadingEditsFile=new Step("file",1000L);
  startupProgress.beginStep(LOADING_EDITS,loadingEditsFile);
  startupProgress.setTotal(LOADING_EDITS,loadingEditsFile,10000L);
  startupProgress.endStep(LOADING_EDITS,loadingEditsFile);
  startupProgress.endPhase(LOADING_EDITS);
  StartupProgressView view=startupProgress.createView();
  assertNotNull(view);
  assertEquals(1000L,view.getTotal(LOADING_FSIMAGE,loadingFsImageInodes));
  assertEquals(800L,view.getTotal(LOADING_FSIMAGE,loadingFsImageDelegationKeys));
  assertEquals(10000L,view.getTotal(LOADING_EDITS,loadingEditsFile));
}
