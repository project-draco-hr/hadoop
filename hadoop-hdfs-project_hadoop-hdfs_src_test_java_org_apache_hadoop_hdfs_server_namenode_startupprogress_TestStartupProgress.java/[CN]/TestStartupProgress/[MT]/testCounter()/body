{
  startupProgress.beginPhase(LOADING_FSIMAGE);
  Step loadingFsImageInodes=new Step(INODES);
  startupProgress.beginStep(LOADING_FSIMAGE,loadingFsImageInodes);
  incrementCounter(startupProgress,LOADING_FSIMAGE,loadingFsImageInodes,100L);
  startupProgress.endStep(LOADING_FSIMAGE,loadingFsImageInodes);
  Step loadingFsImageDelegationKeys=new Step(DELEGATION_KEYS);
  startupProgress.beginStep(LOADING_FSIMAGE,loadingFsImageDelegationKeys);
  incrementCounter(startupProgress,LOADING_FSIMAGE,loadingFsImageDelegationKeys,200L);
  startupProgress.endStep(LOADING_FSIMAGE,loadingFsImageDelegationKeys);
  startupProgress.endPhase(LOADING_FSIMAGE);
  startupProgress.beginPhase(LOADING_EDITS);
  Step loadingEditsFile=new Step("file",1000L);
  startupProgress.beginStep(LOADING_EDITS,loadingEditsFile);
  incrementCounter(startupProgress,LOADING_EDITS,loadingEditsFile,5000L);
  StartupProgressView view=startupProgress.createView();
  assertNotNull(view);
  assertEquals(100L,view.getCount(LOADING_FSIMAGE,loadingFsImageInodes));
  assertEquals(200L,view.getCount(LOADING_FSIMAGE,loadingFsImageDelegationKeys));
  assertEquals(5000L,view.getCount(LOADING_EDITS,loadingEditsFile));
  assertEquals(0L,view.getCount(SAVING_CHECKPOINT,new Step(INODES)));
  incrementCounter(startupProgress,LOADING_EDITS,loadingEditsFile,1000L);
  startupProgress.endStep(LOADING_EDITS,loadingEditsFile);
  startupProgress.endPhase(LOADING_EDITS);
  assertEquals(5000L,view.getCount(LOADING_EDITS,loadingEditsFile));
  view=startupProgress.createView();
  assertNotNull(view);
  assertEquals(6000L,view.getCount(LOADING_EDITS,loadingEditsFile));
}
