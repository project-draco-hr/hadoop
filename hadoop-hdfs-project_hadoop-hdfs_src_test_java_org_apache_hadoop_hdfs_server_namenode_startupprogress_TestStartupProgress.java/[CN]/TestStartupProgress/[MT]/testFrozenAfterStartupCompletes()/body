{
  startupProgress.beginPhase(LOADING_FSIMAGE);
  startupProgress.setFile(LOADING_FSIMAGE,"file1");
  startupProgress.setSize(LOADING_FSIMAGE,1000L);
  Step step=new Step(INODES);
  startupProgress.beginStep(LOADING_FSIMAGE,step);
  startupProgress.setTotal(LOADING_FSIMAGE,step,10000L);
  incrementCounter(startupProgress,LOADING_FSIMAGE,step,100L);
  startupProgress.endStep(LOADING_FSIMAGE,step);
  startupProgress.endPhase(LOADING_FSIMAGE);
  for (  Phase phase : EnumSet.allOf(Phase.class)) {
    if (startupProgress.getStatus(phase) != Status.COMPLETE) {
      startupProgress.beginPhase(phase);
      startupProgress.endPhase(phase);
    }
  }
  StartupProgressView before=startupProgress.createView();
  startupProgress.beginPhase(LOADING_FSIMAGE);
  startupProgress.setFile(LOADING_FSIMAGE,"file2");
  startupProgress.setSize(LOADING_FSIMAGE,2000L);
  startupProgress.beginStep(LOADING_FSIMAGE,step);
  startupProgress.setTotal(LOADING_FSIMAGE,step,20000L);
  incrementCounter(startupProgress,LOADING_FSIMAGE,step,100L);
  startupProgress.endStep(LOADING_FSIMAGE,step);
  startupProgress.endPhase(LOADING_FSIMAGE);
  startupProgress.beginPhase(LOADING_EDITS);
  Step newStep=new Step("file1");
  startupProgress.beginStep(LOADING_EDITS,newStep);
  incrementCounter(startupProgress,LOADING_EDITS,newStep,100L);
  startupProgress.endStep(LOADING_EDITS,newStep);
  startupProgress.endPhase(LOADING_EDITS);
  StartupProgressView after=startupProgress.createView();
  assertEquals(before.getCount(LOADING_FSIMAGE),after.getCount(LOADING_FSIMAGE));
  assertEquals(before.getCount(LOADING_FSIMAGE,step),after.getCount(LOADING_FSIMAGE,step));
  assertEquals(before.getElapsedTime(),after.getElapsedTime());
  assertEquals(before.getElapsedTime(LOADING_FSIMAGE),after.getElapsedTime(LOADING_FSIMAGE));
  assertEquals(before.getElapsedTime(LOADING_FSIMAGE,step),after.getElapsedTime(LOADING_FSIMAGE,step));
  assertEquals(before.getFile(LOADING_FSIMAGE),after.getFile(LOADING_FSIMAGE));
  assertEquals(before.getSize(LOADING_FSIMAGE),after.getSize(LOADING_FSIMAGE));
  assertEquals(before.getTotal(LOADING_FSIMAGE),after.getTotal(LOADING_FSIMAGE));
  assertEquals(before.getTotal(LOADING_FSIMAGE,step),after.getTotal(LOADING_FSIMAGE,step));
  assertFalse(after.getSteps(LOADING_EDITS).iterator().hasNext());
}
