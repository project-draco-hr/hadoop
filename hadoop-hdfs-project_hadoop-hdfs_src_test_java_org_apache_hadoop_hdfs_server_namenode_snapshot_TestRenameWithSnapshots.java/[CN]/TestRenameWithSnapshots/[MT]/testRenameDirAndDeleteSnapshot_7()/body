{
  fsn.getSnapshotManager().setAllowNestedSnapshots(true);
  final Path test=new Path("/test");
  final Path dir1=new Path(test,"dir1");
  final Path dir2=new Path(test,"dir2");
  hdfs.mkdirs(dir1);
  hdfs.mkdirs(dir2);
  final Path foo=new Path(dir2,"foo");
  final Path bar=new Path(foo,"bar");
  final Path file=new Path(bar,"file");
  DFSTestUtil.createFile(hdfs,file,BLOCKSIZE,REPL,SEED);
  SnapshotTestHelper.createSnapshot(hdfs,test,"s0");
  SnapshotTestHelper.createSnapshot(hdfs,test,"s1");
  hdfs.delete(file,true);
  SnapshotTestHelper.createSnapshot(hdfs,dir2,"s2");
  final Path newfoo=new Path(dir1,foo.getName());
  hdfs.rename(foo,newfoo);
  hdfs.deleteSnapshot(test,"s1");
  final Path file_s2=SnapshotTestHelper.getSnapshotPath(dir2,"s2","foo/bar/file");
  assertFalse(hdfs.exists(file_s2));
  final Path file_s0=SnapshotTestHelper.getSnapshotPath(test,"s0","dir2/foo/bar/file");
  assertTrue(hdfs.exists(file_s0));
  INodeDirectoryWithSnapshot dir1Node=(INodeDirectoryWithSnapshot)fsdir.getINode4Write(dir1.toString());
  List<DirectoryDiff> dir1DiffList=dir1Node.getDiffs().asList();
  assertEquals(1,dir1DiffList.size());
  List<INode> dList=dir1DiffList.get(0).getChildrenDiff().getList(ListType.DELETED);
  assertTrue(dList.isEmpty());
  List<INode> cList=dir1DiffList.get(0).getChildrenDiff().getList(ListType.CREATED);
  assertEquals(1,cList.size());
  INode cNode=cList.get(0);
  INode fooNode=fsdir.getINode4Write(newfoo.toString());
  assertSame(cNode,fooNode);
  final Path newbar=new Path(newfoo,bar.getName());
  INodeDirectoryWithSnapshot barNode=(INodeDirectoryWithSnapshot)fsdir.getINode4Write(newbar.toString());
  assertSame(fooNode.asDirectory(),barNode.getParent());
  List<DirectoryDiff> barDiffList=barNode.getDiffs().asList();
  assertEquals(1,barDiffList.size());
  DirectoryDiff diff=barDiffList.get(0);
  assertEquals("s0",Snapshot.getSnapshotName(diff.snapshot));
  assertEquals("file",diff.getChildrenDiff().getList(ListType.DELETED).get(0).getLocalName());
  INodeDirectoryWithSnapshot dir2Node=(INodeDirectoryWithSnapshot)fsdir.getINode4Write(dir2.toString());
  List<DirectoryDiff> dir2DiffList=dir2Node.getDiffs().asList();
  assertEquals(2,dir2DiffList.size());
  dList=dir2DiffList.get(1).getChildrenDiff().getList(ListType.DELETED);
  assertEquals(1,dList.size());
  cList=dir2DiffList.get(0).getChildrenDiff().getList(ListType.CREATED);
  assertTrue(cList.isEmpty());
  final Path foo_s2=SnapshotTestHelper.getSnapshotPath(dir2,"s2",foo.getName());
  INodeReference.WithName fooNode_s2=(INodeReference.WithName)fsdir.getINode(foo_s2.toString());
  assertSame(dList.get(0),fooNode_s2);
  assertSame(fooNode.asReference().getReferredINode(),fooNode_s2.getReferredINode());
  restartClusterAndCheckImage();
}
