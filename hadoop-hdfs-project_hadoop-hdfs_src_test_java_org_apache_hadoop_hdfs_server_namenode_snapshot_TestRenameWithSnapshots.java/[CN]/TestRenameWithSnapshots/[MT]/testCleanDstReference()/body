{
  final Path test=new Path("/test");
  final Path foo=new Path(test,"foo");
  final Path bar=new Path(foo,"bar");
  hdfs.mkdirs(bar);
  SnapshotTestHelper.createSnapshot(hdfs,test,"s0");
  final Path fileInBar=new Path(bar,"file");
  DFSTestUtil.createFile(hdfs,fileInBar,BLOCKSIZE,REPL,SEED);
  final Path foo2=new Path(test,"foo2");
  hdfs.rename(foo,foo2);
  hdfs.createSnapshot(test,"s1");
  hdfs.delete(new Path(foo2,"bar"),true);
  hdfs.delete(foo2,true);
  final Path sfileInBar=SnapshotTestHelper.getSnapshotPath(test,"s1","foo2/bar/file");
  assertTrue(hdfs.exists(sfileInBar));
  hdfs.deleteSnapshot(test,"s1");
  assertFalse(hdfs.exists(sfileInBar));
  restartClusterAndCheckImage(true);
  final Path barInS0=SnapshotTestHelper.getSnapshotPath(test,"s0","foo/bar");
  INodeDirectory barNode=fsdir.getINode(barInS0.toString()).asDirectory();
  assertEquals(0,barNode.getChildrenList(null).size());
  List<DirectoryDiff> diffList=barNode.getDiffs().asList();
  assertEquals(1,diffList.size());
  DirectoryDiff diff=diffList.get(0);
  assertEquals(0,diff.getChildrenDiff().getList(ListType.DELETED).size());
  assertEquals(0,diff.getChildrenDiff().getList(ListType.CREATED).size());
}
