{
  final Path sdir1=new Path("/dir1");
  final Path sdir2=new Path("/dir2");
  hdfs.mkdirs(sdir1);
  hdfs.mkdirs(sdir2);
  final Path foo=new Path(sdir2,"foo");
  final Path bar=new Path(foo,"bar");
  final Path bar2=new Path(foo,"bar2");
  DFSTestUtil.createFile(hdfs,bar,BLOCKSIZE,REPL,SEED);
  DFSTestUtil.createFile(hdfs,bar2,BLOCKSIZE,REPL,SEED);
  SnapshotTestHelper.createSnapshot(hdfs,sdir1,"s1");
  SnapshotTestHelper.createSnapshot(hdfs,sdir2,"s2");
  hdfs.setReplication(bar2,REPL_1);
  hdfs.delete(bar,true);
  hdfs.createSnapshot(sdir1,"s3");
  final Path newfoo=new Path(sdir1,"foo");
  hdfs.rename(foo,newfoo);
  final Path snapshotBar=SnapshotTestHelper.getSnapshotPath(sdir2,"s2","foo/bar");
  assertTrue(hdfs.exists(snapshotBar));
  final Path newBar2=new Path(newfoo,"bar2");
  assertTrue(hdfs.exists(newBar2));
  hdfs.delete(newBar2,true);
  final Path bar2_s2=SnapshotTestHelper.getSnapshotPath(sdir2,"s2","foo/bar2");
  assertTrue(hdfs.exists(bar2_s2));
  FileStatus status=hdfs.getFileStatus(bar2_s2);
  assertEquals(REPL,status.getReplication());
  final Path bar2_s3=SnapshotTestHelper.getSnapshotPath(sdir1,"s3","foo/bar2");
  assertFalse(hdfs.exists(bar2_s3));
}
