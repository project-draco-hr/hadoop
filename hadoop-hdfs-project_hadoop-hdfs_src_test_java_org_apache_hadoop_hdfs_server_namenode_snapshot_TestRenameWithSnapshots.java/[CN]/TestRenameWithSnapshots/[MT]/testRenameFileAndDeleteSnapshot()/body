{
  final Path sdir1=new Path("/dir1");
  final Path sdir2=new Path("/dir2");
  hdfs.mkdirs(sdir1);
  hdfs.mkdirs(sdir2);
  final Path foo=new Path(sdir2,"foo");
  DFSTestUtil.createFile(hdfs,foo,BLOCKSIZE,REPL,SEED);
  SnapshotTestHelper.createSnapshot(hdfs,sdir1,"s1");
  SnapshotTestHelper.createSnapshot(hdfs,sdir2,"s2");
  hdfs.createSnapshot(sdir1,"s3");
  final Path newfoo=new Path(sdir1,"foo");
  hdfs.rename(foo,newfoo);
  hdfs.setReplication(newfoo,REPL_1);
  hdfs.createSnapshot(sdir1,"s4");
  hdfs.setReplication(newfoo,REPL_2);
  FileStatus status=hdfs.getFileStatus(newfoo);
  assertEquals(REPL_2,status.getReplication());
  final Path foo_s4=SnapshotTestHelper.getSnapshotPath(sdir1,"s4","foo");
  status=hdfs.getFileStatus(foo_s4);
  assertEquals(REPL_1,status.getReplication());
  hdfs.createSnapshot(sdir1,"s5");
  final Path foo_s5=SnapshotTestHelper.getSnapshotPath(sdir1,"s5","foo");
  status=hdfs.getFileStatus(foo_s5);
  assertEquals(REPL_2,status.getReplication());
  hdfs.deleteSnapshot(sdir1,"s5");
  restartClusterAndCheckImage(true);
  assertFalse(hdfs.exists(foo_s5));
  status=hdfs.getFileStatus(foo_s4);
  assertEquals(REPL_1,status.getReplication());
  hdfs.deleteSnapshot(sdir1,"s4");
  assertFalse(hdfs.exists(foo_s4));
  Path foo_s3=SnapshotTestHelper.getSnapshotPath(sdir1,"s3","foo");
  assertFalse(hdfs.exists(foo_s3));
  foo_s3=SnapshotTestHelper.getSnapshotPath(sdir2,"s3","foo");
  assertFalse(hdfs.exists(foo_s3));
  final Path foo_s2=SnapshotTestHelper.getSnapshotPath(sdir2,"s2","foo");
  assertTrue(hdfs.exists(foo_s2));
  status=hdfs.getFileStatus(foo_s2);
  assertEquals(REPL,status.getReplication());
  INodeFileWithSnapshot snode=(INodeFileWithSnapshot)fsdir.getINode(newfoo.toString()).asFile();
  assertEquals(1,snode.getDiffs().asList().size());
  assertEquals("s2",snode.getDiffs().getLastSnapshot().getRoot().getLocalName());
  restartClusterAndCheckImage(true);
  hdfs.deleteSnapshot(sdir2,"s2");
  assertFalse(hdfs.exists(foo_s2));
  restartClusterAndCheckImage(true);
  hdfs.deleteSnapshot(sdir1,"s3");
  restartClusterAndCheckImage(true);
  hdfs.deleteSnapshot(sdir1,"s1");
  restartClusterAndCheckImage(true);
}
