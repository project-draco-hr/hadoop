{
  int length=high - low;
  if (length < 7) {
    for (int i=low; i < high; i++) {
      for (int j=i; j > low; j--) {
        I.set(dest[j - 1]);
        J.set(dest[j]);
        if (comparator.compare(I,J) > 0)         swap(dest,j,j - 1);
      }
    }
    return;
  }
  int mid=(low + high) >>> 1;
  mergeSort(dest,src,low,mid);
  mergeSort(dest,src,mid,high);
  I.set(src[mid - 1]);
  J.set(src[mid]);
  if (comparator.compare(I,J) <= 0) {
    System.arraycopy(src,low,dest,low,length);
    return;
  }
  for (int i=low, p=low, q=mid; i < high; i++) {
    if (q < high && p < mid) {
      I.set(src[p]);
      J.set(src[q]);
    }
    if (q >= high || p < mid && comparator.compare(I,J) <= 0)     dest[i]=src[p++];
 else     dest[i]=src[q++];
  }
}
