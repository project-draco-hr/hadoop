{
  if (NativeCrc32.isAvailable()) {
    NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum,type.id,sums,sumsOffset,data,dataOffset,dataLength);
    return;
  }
  int remaining=dataLength;
  while (remaining > 0) {
    int n=Math.min(remaining,bytesPerChecksum);
    summer.reset();
    summer.update(data,dataOffset,n);
    dataOffset+=n;
    remaining-=n;
    long calculated=summer.getValue();
    sums[sumsOffset++]=(byte)(calculated >> 24);
    sums[sumsOffset++]=(byte)(calculated >> 16);
    sums[sumsOffset++]=(byte)(calculated >> 8);
    sums[sumsOffset++]=(byte)(calculated);
  }
}
