{
  LOG.info("STARTING testJobHistoryMethods");
  try {
    Configuration configuration=new Configuration();
    configuration.setClass(CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,MyResolver.class,DNSToSwitchMapping.class);
    RackResolver.init(configuration);
    MRApp app=new MRAppWithHistory(1,1,true,this.getClass().getName(),true);
    app.submit(configuration);
    Job job=app.getContext().getAllJobs().values().iterator().next();
    JobId jobId=job.getID();
    LOG.info("JOBID is " + TypeConverter.fromYarn(jobId).toString());
    app.waitForState(job,JobState.SUCCEEDED);
    JobHistory jobHistory=new JobHistory();
    jobHistory.init(configuration);
    Assert.assertEquals(1,jobHistory.getAllJobs().size());
    Assert.assertEquals(1,jobHistory.getAllJobs(app.getAppID()).size());
    JobsInfo jobsinfo=jobHistory.getPartialJobs(0L,10L,null,"default",0L,System.currentTimeMillis() + 1,0L,System.currentTimeMillis() + 1,JobState.SUCCEEDED);
    Assert.assertEquals(1,jobsinfo.getJobs().size());
    Assert.assertNotNull(jobHistory.getApplicationAttemptId());
    Assert.assertEquals("application_0_0000",jobHistory.getApplicationID().toString());
    Assert.assertEquals("Job History Server",jobHistory.getApplicationName());
    Assert.assertNull(jobHistory.getEventHandler());
    Assert.assertNull(jobHistory.getClock());
    Assert.assertNull(jobHistory.getClusterInfo());
  }
  finally {
    LOG.info("FINISHED testJobHistoryMethods");
  }
}
