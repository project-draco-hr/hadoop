{
  LOG.info("STARTING testDeleteFileInfo");
  try {
    Configuration conf=new Configuration();
    conf.setClass(CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,MyResolver.class,DNSToSwitchMapping.class);
    RackResolver.init(conf);
    MRApp app=new MRAppWithHistory(1,1,true,this.getClass().getName(),true);
    app.submit(conf);
    Job job=app.getContext().getAllJobs().values().iterator().next();
    JobId jobId=job.getID();
    app.waitForState(job,JobState.SUCCEEDED);
    app.waitForState(Service.STATE.STOPPED);
    HistoryFileManager hfm=new HistoryFileManager();
    hfm.init(conf);
    HistoryFileInfo fileInfo=hfm.getFileInfo(jobId);
    hfm.initExisting();
    while (fileInfo.isMovePending()) {
      Thread.sleep(300);
    }
    Assert.assertNotNull(hfm.jobListCache.values());
    hfm.clean();
    Assert.assertFalse(fileInfo.isDeleted());
    hfm.setMaxHistoryAge(-1);
    hfm.clean();
    Assert.assertTrue("file should be deleted ",fileInfo.isDeleted());
  }
  finally {
    LOG.info("FINISHED testDeleteFileInfo");
  }
}
