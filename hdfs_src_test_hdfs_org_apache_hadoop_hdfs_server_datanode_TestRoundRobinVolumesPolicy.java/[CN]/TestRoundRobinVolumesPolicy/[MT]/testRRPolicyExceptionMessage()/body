{
  final List<FSVolume> volumes=new ArrayList<FSVolume>();
  volumes.add(Mockito.mock(FSVolume.class));
  Mockito.when(volumes.get(0).getAvailable()).thenReturn(500L);
  volumes.add(Mockito.mock(FSVolume.class));
  Mockito.when(volumes.get(1).getAvailable()).thenReturn(600L);
  RoundRobinVolumesPolicy policy=new RoundRobinVolumesPolicy();
  int blockSize=700;
  try {
    policy.chooseVolume(volumes,blockSize);
    Assert.fail("expected to throw DiskOutOfSpaceException");
  }
 catch (  DiskOutOfSpaceException e) {
    Assert.assertEquals("Not returnig the expected message","Insufficient space for an additional block. Volume with the most available space has 600 bytes free, configured block size is " + blockSize,e.getMessage());
  }
}
