{
  int exitCode=0;
  int i=startindex;
  for (; i < argv.length; i++) {
    try {
      if ("-cat".equals(cmd)) {
        cat(argv[i],true);
      }
 else       if ("-mkdir".equals(cmd)) {
        mkdir(argv[i]);
      }
 else       if ("-rm".equals(cmd)) {
        delete(argv[i],false);
      }
 else       if ("-rmr".equals(cmd)) {
        delete(argv[i],true);
      }
 else       if ("-df".equals(cmd)) {
        df(argv[i]);
      }
 else       if ("-du".equals(cmd)) {
        du(argv[i]);
      }
 else       if ("-dus".equals(cmd)) {
        dus(argv[i]);
      }
 else       if (Count.matches(cmd)) {
        new Count(argv,i,getConf()).runAll();
      }
 else       if ("-ls".equals(cmd)) {
        exitCode=ls(argv[i],false);
      }
 else       if ("-lsr".equals(cmd)) {
        exitCode=ls(argv[i],true);
      }
 else       if ("-touchz".equals(cmd)) {
        touchz(argv[i]);
      }
 else       if ("-text".equals(cmd)) {
        text(argv[i]);
      }
    }
 catch (    RemoteException e) {
      exitCode=-1;
      try {
        String[] content;
        content=e.getLocalizedMessage().split("\n");
        System.err.println(cmd.substring(1) + ": " + content[0]);
      }
 catch (      Exception ex) {
        System.err.println(cmd.substring(1) + ": " + ex.getLocalizedMessage());
      }
    }
catch (    IOException e) {
      exitCode=-1;
      String content=e.getLocalizedMessage();
      if (content != null) {
        content=content.split("\n")[0];
      }
      System.err.println(cmd.substring(1) + ": " + content);
    }
  }
  return exitCode;
}
