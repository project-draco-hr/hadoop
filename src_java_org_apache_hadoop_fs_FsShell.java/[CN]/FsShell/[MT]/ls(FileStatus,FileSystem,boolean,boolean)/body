{
  final String cmd=recursive ? "lsr" : "ls";
  final FileStatus[] items=shellListStatus(cmd,srcFs,src);
  if (items == null) {
    return 1;
  }
 else {
    int numOfErrors=0;
    if (!recursive && printHeader) {
      if (items.length != 0) {
        System.out.println("Found " + items.length + " items");
      }
    }
    int maxReplication=3, maxLen=10, maxOwner=0, maxGroup=0;
    for (int i=0; i < items.length; i++) {
      FileStatus stat=items[i];
      int replication=String.valueOf(stat.getReplication()).length();
      int len=String.valueOf(stat.getLen()).length();
      int owner=String.valueOf(stat.getOwner()).length();
      int group=String.valueOf(stat.getGroup()).length();
      if (replication > maxReplication)       maxReplication=replication;
      if (len > maxLen)       maxLen=len;
      if (owner > maxOwner)       maxOwner=owner;
      if (group > maxGroup)       maxGroup=group;
    }
    for (int i=0; i < items.length; i++) {
      FileStatus stat=items[i];
      Path cur=stat.getPath();
      String mdate=dateForm.format(new Date(stat.getModificationTime()));
      System.out.print((stat.isDir() ? "d" : "-") + stat.getPermission() + " ");
      System.out.printf("%" + maxReplication + "s ",(!stat.isDir() ? stat.getReplication() : "-"));
      if (maxOwner > 0)       System.out.printf("%-" + maxOwner + "s ",stat.getOwner());
      if (maxGroup > 0)       System.out.printf("%-" + maxGroup + "s ",stat.getGroup());
      System.out.printf("%" + maxLen + "d ",stat.getLen());
      System.out.print(mdate + " ");
      System.out.println(cur.toUri().getPath());
      if (recursive && stat.isDir()) {
        numOfErrors+=ls(stat,srcFs,recursive,printHeader);
      }
    }
    return numOfErrors;
  }
}
