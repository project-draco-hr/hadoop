{
  CommandFormat c=new CommandFormat("du",0,Integer.MAX_VALUE,"h","s");
  List<String> params;
  try {
    params=c.parse(cmd,pos);
  }
 catch (  IllegalArgumentException iae) {
    System.err.println("Usage: java FsShell " + DU_USAGE);
    throw iae;
  }
  boolean humanReadable=c.getOpt("h");
  boolean summary=c.getOpt("s");
  if (params.isEmpty()) {
    params.add(".");
  }
  List<UsagePair> usages=new ArrayList<UsagePair>();
  for (  String src : params) {
    Path srcPath=new Path(src);
    FileSystem srcFs=srcPath.getFileSystem(getConf());
    FileStatus globStatus[]=srcFs.globStatus(srcPath);
    FileStatus statusToPrint[];
    if (summary) {
      statusToPrint=globStatus;
    }
 else {
      Path statPaths[]=FileUtil.stat2Paths(globStatus,srcPath);
      try {
        statusToPrint=srcFs.listStatus(statPaths);
      }
 catch (      FileNotFoundException fnfe) {
        statusToPrint=null;
      }
    }
    if ((statusToPrint == null) || ((statusToPrint.length == 0) && (!srcFs.exists(srcPath)))) {
      throw new FileNotFoundException("Cannot access " + src + ": No such file or directory.");
    }
    if (!summary) {
      System.out.println("Found " + statusToPrint.length + " items");
    }
    for (    FileStatus stat : statusToPrint) {
      long length;
      if (summary || stat.isDir()) {
        length=srcFs.getContentSummary(stat.getPath()).getLength();
      }
 else {
        length=stat.getLen();
      }
      usages.add(new UsagePair(String.valueOf(stat.getPath()),length));
    }
  }
  printUsageSummary(usages,humanReadable);
}
