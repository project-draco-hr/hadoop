{
  if (offset + 2 >= exprLength) {
    throw new TimelineParseException("Compare op cannot be parsed for " + exprName + ".");
  }
  TimelineCompareOp compareOp=null;
  boolean keyExistFlag=true;
  if (expr.charAt(offset + 2) == TimelineParseConstants.SPACE_CHAR) {
    if (exprInLowerCase.startsWith("eq",offset)) {
      compareOp=TimelineCompareOp.EQUAL;
    }
 else     if (exprInLowerCase.startsWith("ne",offset)) {
      compareOp=TimelineCompareOp.NOT_EQUAL;
      keyExistFlag=false;
    }
 else     if (exprInLowerCase.startsWith("lt",offset)) {
      compareOp=TimelineCompareOp.LESS_THAN;
    }
 else     if (exprInLowerCase.startsWith("le",offset)) {
      compareOp=TimelineCompareOp.LESS_OR_EQUAL;
    }
 else     if (exprInLowerCase.startsWith("gt",offset)) {
      compareOp=TimelineCompareOp.GREATER_THAN;
    }
 else     if (exprInLowerCase.startsWith("ge",offset)) {
      compareOp=TimelineCompareOp.GREATER_OR_EQUAL;
    }
    offset=offset + 3;
  }
 else   if (exprInLowerCase.startsWith("ene ",offset)) {
    compareOp=TimelineCompareOp.NOT_EQUAL;
    offset=offset + 4;
  }
  if (compareOp == null) {
    throw new TimelineParseException("Compare op cannot be parsed for " + exprName + ".");
  }
  setCompareOpToCurrentFilter(compareOp,keyExistFlag);
  kvStartOffset=offset;
  currentParseState=ParseState.PARSING_VALUE;
}
