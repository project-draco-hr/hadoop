{
  return new RecordReader<IntWritable,IntWritable>(){
    private boolean done=false;
    @Override public void close() throws IOException {
    }
    @Override public IntWritable getCurrentKey() throws IOException, InterruptedException {
      return new IntWritable(0);
    }
    @Override public IntWritable getCurrentValue() throws IOException, InterruptedException {
      return new IntWritable(0);
    }
    @Override public float getProgress() throws IOException, InterruptedException {
      return done ? 0 : 1;
    }
    @Override public void initialize(    InputSplit split,    TaskAttemptContext context) throws IOException, InterruptedException {
    }
    @Override public boolean nextKeyValue() throws IOException, InterruptedException {
      if (!done) {
        done=true;
        return true;
      }
      return false;
    }
  }
;
}
