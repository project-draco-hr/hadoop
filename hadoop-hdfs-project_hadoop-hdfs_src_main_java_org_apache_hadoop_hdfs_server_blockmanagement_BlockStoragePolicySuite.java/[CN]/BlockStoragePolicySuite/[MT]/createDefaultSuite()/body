{
  final BlockStoragePolicy[] policies=new BlockStoragePolicy[1 << ID_BIT_LENGTH];
  final byte lazyPersistId=HdfsConstants.MEMORY_STORAGE_POLICY_ID;
  policies[lazyPersistId]=new BlockStoragePolicy(lazyPersistId,HdfsConstants.MEMORY_STORAGE_POLICY_NAME,new StorageType[]{StorageType.RAM_DISK,StorageType.DISK},new StorageType[]{StorageType.DISK},new StorageType[]{StorageType.DISK},true);
  final byte allssdId=HdfsConstants.ALLSSD_STORAGE_POLICY_ID;
  policies[allssdId]=new BlockStoragePolicy(allssdId,HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,new StorageType[]{StorageType.SSD},new StorageType[]{StorageType.DISK},new StorageType[]{StorageType.DISK});
  final byte onessdId=HdfsConstants.ONESSD_STORAGE_POLICY_ID;
  policies[onessdId]=new BlockStoragePolicy(onessdId,HdfsConstants.ONESSD_STORAGE_POLICY_NAME,new StorageType[]{StorageType.SSD,StorageType.DISK},new StorageType[]{StorageType.SSD,StorageType.DISK},new StorageType[]{StorageType.SSD,StorageType.DISK});
  final byte hotId=HdfsConstants.HOT_STORAGE_POLICY_ID;
  policies[hotId]=new BlockStoragePolicy(hotId,HdfsConstants.HOT_STORAGE_POLICY_NAME,new StorageType[]{StorageType.DISK},StorageType.EMPTY_ARRAY,new StorageType[]{StorageType.ARCHIVE});
  final byte warmId=HdfsConstants.WARM_STORAGE_POLICY_ID;
  policies[warmId]=new BlockStoragePolicy(warmId,HdfsConstants.WARM_STORAGE_POLICY_NAME,new StorageType[]{StorageType.DISK,StorageType.ARCHIVE},new StorageType[]{StorageType.DISK,StorageType.ARCHIVE},new StorageType[]{StorageType.DISK,StorageType.ARCHIVE});
  final byte coldId=HdfsConstants.COLD_STORAGE_POLICY_ID;
  policies[coldId]=new BlockStoragePolicy(coldId,HdfsConstants.COLD_STORAGE_POLICY_NAME,new StorageType[]{StorageType.ARCHIVE},StorageType.EMPTY_ARRAY,StorageType.EMPTY_ARRAY);
  return new BlockStoragePolicySuite(hotId,policies);
}
