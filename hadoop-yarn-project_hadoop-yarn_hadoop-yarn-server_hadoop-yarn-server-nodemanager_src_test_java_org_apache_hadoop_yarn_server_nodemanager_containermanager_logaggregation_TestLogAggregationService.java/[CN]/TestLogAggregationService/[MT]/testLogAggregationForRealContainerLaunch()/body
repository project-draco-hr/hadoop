{
  this.containerManager.start();
  File scriptFile=new File(tmpDir,"scriptFile.sh");
  PrintWriter fileWriter=new PrintWriter(scriptFile);
  fileWriter.write("\necho Hello World! Stdout! > " + new File(localLogDir,"stdout"));
  fileWriter.write("\necho Hello World! Stderr! > " + new File(localLogDir,"stderr"));
  fileWriter.write("\necho Hello World! Syslog! > " + new File(localLogDir,"syslog"));
  fileWriter.close();
  ContainerLaunchContext containerLaunchContext=recordFactory.newRecordInstance(ContainerLaunchContext.class);
  Container mockContainer=mock(Container.class);
  ApplicationId appId=recordFactory.newRecordInstance(ApplicationId.class);
  appId.setClusterTimestamp(0);
  appId.setId(0);
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(appId,1);
  ContainerId cId=BuilderUtils.newContainerId(appAttemptId,0);
  when(mockContainer.getId()).thenReturn(cId);
  when(mockContainer.getRMIdentifer()).thenReturn(super.DUMMY_RM_IDENTIFIER);
  URL resource_alpha=ConverterUtils.getYarnUrlFromPath(localFS.makeQualified(new Path(scriptFile.getAbsolutePath())));
  LocalResource rsrc_alpha=recordFactory.newRecordInstance(LocalResource.class);
  rsrc_alpha.setResource(resource_alpha);
  rsrc_alpha.setSize(-1);
  rsrc_alpha.setVisibility(LocalResourceVisibility.APPLICATION);
  rsrc_alpha.setType(LocalResourceType.FILE);
  rsrc_alpha.setTimestamp(scriptFile.lastModified());
  String destinationFile="dest_file";
  Map<String,LocalResource> localResources=new HashMap<String,LocalResource>();
  localResources.put(destinationFile,rsrc_alpha);
  containerLaunchContext.setLocalResources(localResources);
  List<String> commands=new ArrayList<String>();
  commands.add("/bin/bash");
  commands.add(scriptFile.getAbsolutePath());
  containerLaunchContext.setCommands(commands);
  Resource r=BuilderUtils.newResource(100 * 1024 * 1024,1);
  when(mockContainer.getResource()).thenReturn(r);
  when(mockContainer.getContainerToken()).thenReturn(BuilderUtils.newContainerToken(cId,"127.0.0.1",1234,user,r,System.currentTimeMillis() + 10000L,123,"password".getBytes()));
  StartContainerRequest startRequest=recordFactory.newRecordInstance(StartContainerRequest.class);
  startRequest.setContainerLaunchContext(containerLaunchContext);
  startRequest.setContainer(mockContainer);
  this.containerManager.startContainer(startRequest);
  BaseContainerManagerTest.waitForContainerState(this.containerManager,cId,ContainerState.COMPLETE);
  this.containerManager.handle(new CMgrCompletedAppsEvent(Arrays.asList(appId)));
  this.containerManager.stop();
}
