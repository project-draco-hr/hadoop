{
  logAggregationService.init(this.conf);
  logAggregationService.start();
  ApplicationId application1=BuilderUtils.newApplicationId(1234,1);
  File app1LogDir=new File(localLogDir,application1.toString());
  app1LogDir.mkdir();
  logAggregationService.handle(new LogHandlerAppStartedEvent(application1,this.user,null,this.acls));
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(application1,1);
  ContainerId container11=createContainer(appAttemptId,1,ContainerType.APPLICATION_MASTER);
  writeContainerLogs(app1LogDir,container11,new String[]{"stdout","stderr","syslog"});
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container11,0));
  logAggregationService.handle(new LogHandlerAppFinishedEvent(application1));
  logAggregationService.stop();
  assertEquals(0,logAggregationService.getNumAggregators());
  verify(logAggregationService).closeFileSystems(any(UserGroupInformation.class));
  verify(delSrvc).delete(eq(user),eq((Path)null),eq(new Path(app1LogDir.getAbsolutePath())));
  String containerIdStr=container11.toString();
  File containerLogDir=new File(app1LogDir,containerIdStr);
  int count=0;
  int maxAttempts=50;
  for (  String fileType : new String[]{"stdout","stderr","syslog"}) {
    File f=new File(containerLogDir,fileType);
    count=0;
    while ((f.exists()) && (count < maxAttempts)) {
      count++;
      Thread.sleep(100);
    }
    Assert.assertFalse("File [" + f + "] was not deleted",f.exists());
  }
  count=0;
  while ((app1LogDir.exists()) && (count < maxAttempts)) {
    count++;
    Thread.sleep(100);
  }
  Assert.assertFalse("Directory [" + app1LogDir + "] was not deleted",app1LogDir.exists());
  Path logFilePath=logAggregationService.getRemoteNodeLogFileForApp(application1,this.user);
  Assert.assertTrue("Log file [" + logFilePath + "] not found",new File(logFilePath.toUri().getPath()).exists());
  dispatcher.await();
  ApplicationEvent expectedEvents[]=new ApplicationEvent[]{new ApplicationEvent(appAttemptId.getApplicationId(),ApplicationEventType.APPLICATION_LOG_HANDLING_INITED),new ApplicationEvent(appAttemptId.getApplicationId(),ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED)};
  checkEvents(appEventHandler,expectedEvents,true,"getType","getApplicationID");
}
