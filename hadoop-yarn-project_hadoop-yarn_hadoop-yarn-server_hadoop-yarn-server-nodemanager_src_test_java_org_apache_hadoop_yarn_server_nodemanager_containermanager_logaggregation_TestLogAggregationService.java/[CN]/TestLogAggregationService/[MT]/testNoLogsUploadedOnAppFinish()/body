{
  this.delSrvc=new DeletionService(createContainerExecutor());
  delSrvc=spy(delSrvc);
  this.delSrvc.init(conf);
  this.conf.set(YarnConfiguration.NM_LOG_DIRS,localLogDir.getAbsolutePath());
  this.conf.set(YarnConfiguration.NM_REMOTE_APP_LOG_DIR,this.remoteRootLogDir.getAbsolutePath());
  LogAggregationService logAggregationService=new LogAggregationService(dispatcher,this.context,this.delSrvc,super.dirsHandler);
  logAggregationService.init(this.conf);
  logAggregationService.start();
  ApplicationId app=BuilderUtils.newApplicationId(1234,1);
  File appLogDir=new File(localLogDir,app.toString());
  appLogDir.mkdir();
  LogAggregationContext context=LogAggregationContext.newInstance("HOST*","sys*");
  logAggregationService.handle(new LogHandlerAppStartedEvent(app,this.user,null,this.acls,context));
  ApplicationAttemptId appAttemptId=BuilderUtils.newApplicationAttemptId(app,1);
  ContainerId cont=createContainer(appAttemptId,1,ContainerType.APPLICATION_MASTER);
  writeContainerLogs(appLogDir,cont,new String[]{"stdout","stderr","syslog"});
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(cont,0));
  logAggregationService.handle(new LogHandlerAppFinishedEvent(app));
  logAggregationService.stop();
  delSrvc.stop();
  verify(delSrvc,times(0)).delete(user,null);
}
