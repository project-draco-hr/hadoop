{
  Map<String,String> environment=container.getEnvironment();
  environment.put(ApplicationConstants.APPLICATION_WEB_PROXY_BASE_ENV,application.getWebProxyBase());
  ApplicationId applicationId=application.getAppAttemptId().getApplicationId();
  environment.put(ApplicationConstants.APP_SUBMIT_TIME_ENV,String.valueOf(rmContext.getRMApps().get(applicationId).getSubmitTime()));
  environment.put(ApplicationConstants.MAX_APP_ATTEMPTS_ENV,String.valueOf(rmContext.getRMApps().get(applicationId).getMaxAppAttempts()));
  if (UserGroupInformation.isSecurityEnabled()) {
    Credentials credentials=new Credentials();
    DataInputByteBuffer dibb=new DataInputByteBuffer();
    if (container.getTokens() != null) {
      dibb.reset(container.getTokens());
      credentials.readTokenStorageStream(dibb);
    }
    Token<ApplicationTokenIdentifier> applicationToken=application.getApplicationToken();
    if (applicationToken != null) {
      credentials.addToken(applicationToken.getService(),applicationToken);
    }
    DataOutputBuffer dob=new DataOutputBuffer();
    credentials.writeTokenStorageToStream(dob);
    container.setTokens(ByteBuffer.wrap(dob.getData(),0,dob.getLength()));
    SecretKey clientSecretKey=this.rmContext.getClientToAMTokenSecretManager().getMasterKey(application.getAppAttemptId());
    String encoded=Base64.encodeBase64URLSafeString(clientSecretKey.getEncoded());
    environment.put(ApplicationConstants.APPLICATION_CLIENT_SECRET_ENV_NAME,encoded);
  }
}
