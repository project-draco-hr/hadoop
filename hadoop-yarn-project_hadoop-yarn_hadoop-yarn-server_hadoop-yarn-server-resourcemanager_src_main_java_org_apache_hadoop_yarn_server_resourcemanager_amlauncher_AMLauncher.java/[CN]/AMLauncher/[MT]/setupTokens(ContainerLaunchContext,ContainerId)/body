{
  Map<String,String> environment=container.getEnvironment();
  environment.put(ApplicationConstants.APPLICATION_WEB_PROXY_BASE_ENV,application.getWebProxyBase());
  ApplicationId applicationId=application.getAppAttemptId().getApplicationId();
  environment.put(ApplicationConstants.APP_SUBMIT_TIME_ENV,String.valueOf(rmContext.getRMApps().get(applicationId).getSubmitTime()));
  for (  String tag : rmContext.getRMApps().get(applicationId).getApplicationTags()) {
    if (tag.startsWith(TimelineUtils.FLOW_ID_TAG_PREFIX + ":") || tag.startsWith(TimelineUtils.FLOW_ID_TAG_PREFIX.toLowerCase() + ":")) {
      String value=tag.substring(TimelineUtils.FLOW_ID_TAG_PREFIX.length() + 1);
      if (!value.isEmpty()) {
        environment.put(TimelineUtils.FLOW_ID_TAG_PREFIX,value);
      }
    }
    if (tag.startsWith(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX + ":") || tag.startsWith(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX.toLowerCase() + ":")) {
      String value=tag.substring(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX.length() + 1);
      if (!value.isEmpty()) {
        environment.put(TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,value);
      }
    }
  }
  Credentials credentials=new Credentials();
  DataInputByteBuffer dibb=new DataInputByteBuffer();
  ByteBuffer tokens=container.getTokens();
  if (tokens != null) {
    dibb.reset(tokens);
    credentials.readTokenStorageStream(dibb);
    tokens.rewind();
  }
  Token<AMRMTokenIdentifier> amrmToken=createAndSetAMRMToken();
  if (amrmToken != null) {
    credentials.addToken(amrmToken.getService(),amrmToken);
  }
  DataOutputBuffer dob=new DataOutputBuffer();
  credentials.writeTokenStorageToStream(dob);
  container.setTokens(ByteBuffer.wrap(dob.getData(),0,dob.getLength()));
}
