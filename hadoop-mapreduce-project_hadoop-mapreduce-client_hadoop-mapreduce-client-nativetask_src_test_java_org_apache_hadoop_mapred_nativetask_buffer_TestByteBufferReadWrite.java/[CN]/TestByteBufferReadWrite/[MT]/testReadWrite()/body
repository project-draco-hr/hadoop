{
  byte[] buff=new byte[10000];
  InputBuffer input=new InputBuffer(buff);
  MockDataTarget target=new MockDataTarget(buff);
  ByteBufferDataWriter writer=new ByteBufferDataWriter(target);
  writer.write(1);
  writer.write(new byte[]{2,2},0,2);
  writer.writeBoolean(true);
  writer.writeByte(4);
  writer.writeShort(5);
  writer.writeChar(6);
  writer.writeInt(7);
  writer.writeLong(8);
  writer.writeFloat(9);
  writer.writeDouble(10);
  writer.writeBytes("goodboy");
  writer.writeChars("hello");
  writer.writeUTF("native task");
  int length=target.getOutputBuffer().length();
  input.rewind(0,length);
  ByteBufferDataReader reader=new ByteBufferDataReader(input);
  Assert.assertEquals(1,reader.read());
  byte[] two=new byte[2];
  reader.read(two);
  Assert.assertTrue(two[0] == two[1] && two[0] == 2);
  Assert.assertEquals(true,reader.readBoolean());
  Assert.assertEquals(4,reader.readByte());
  Assert.assertEquals(5,reader.readShort());
  Assert.assertEquals(6,reader.readChar());
  Assert.assertEquals(7,reader.readInt());
  Assert.assertEquals(8,reader.readLong());
  Assert.assertTrue(reader.readFloat() - 9 < 0.0001);
  Assert.assertTrue(reader.readDouble() - 10 < 0.0001);
  byte[] goodboy=new byte["goodboy".length()];
  reader.read(goodboy);
  Assert.assertEquals("goodboy",toString(goodboy));
  char[] hello=new char["hello".length()];
  for (int i=0; i < hello.length; i++) {
    hello[i]=reader.readChar();
  }
  String helloString=new String(hello);
  Assert.assertEquals("hello",helloString);
  Assert.assertEquals("native task",reader.readUTF());
  Assert.assertEquals(0,input.remaining());
}
