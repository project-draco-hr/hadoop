{
  boolean found=false;
  if ((direction == NEXT_BLOCK && startOffset + chunkSizeToView < blockSize) || (direction == PREV_BLOCK && startOffset != 0)) {
    found=true;
    if (direction == NEXT_BLOCK) {
      startOffset=startOffset + chunkSizeToView;
    }
 else {
      startOffset=Math.max(0,startOffset - chunkSizeToView);
    }
  }
 else {
    List<LocatedBlock> blocks=dfs.getNamenode().getBlockLocations(filename,0,Long.MAX_VALUE).getLocatedBlocks();
    final long curBlockId=blockId;
    int curBlockIdx=Iterables.indexOf(blocks,new Predicate<LocatedBlock>(){
      @Override public boolean apply(      LocatedBlock b){
        return b.getBlock().getBlockId() == curBlockId;
      }
    }
);
    found=curBlockIdx != -1 && ((direction == NEXT_BLOCK && curBlockIdx < blocks.size() - 1) || (direction == PREV_BLOCK && curBlockIdx > 0));
    if (found) {
      LocatedBlock nextBlock=blocks.get(curBlockIdx + direction);
      blockId=nextBlock.getBlock().getBlockId();
      genStamp=nextBlock.getBlock().getGenerationStamp();
      startOffset=0;
      blockSize=nextBlock.getBlock().getNumBytes();
      DatanodeInfo d=JspHelper.bestNode(nextBlock,conf);
      datanodePort=d.getXferPort();
      authority=JspHelper.Url.authority(scheme,d);
    }
  }
  if (found) {
    return "///" + authority + "/browseBlock.jsp?blockId="+ blockId+ "&blockSize="+ blockSize+ "&startOffset="+ startOffset+ "&genstamp="+ genStamp+ "&filename="+ URLEncoder.encode(filename,"UTF-8")+ "&chunkSizeToView="+ chunkSizeToView+ "&datanodePort="+ datanodePort+ "&namenodeInfoPort="+ namenodeInfoPort+ JspHelper.getDelegationTokenUrlParam(tokenString)+ JspHelper.getUrlParam(JspHelper.NAMENODE_ADDRESS,nnAddr);
  }
 else {
    return null;
  }
}
