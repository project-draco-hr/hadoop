{
  long startOffset=0;
  int datanodePort;
  final Long blockId=JspHelper.validateLong(req.getParameter("blockId"));
  if (blockId == null) {
    out.print("Invalid input (blockId absent)");
    return;
  }
  String tokenString=req.getParameter(JspHelper.DELEGATION_PARAMETER_NAME);
  UserGroupInformation ugi=JspHelper.getUGI(req,conf);
  String datanodePortStr=req.getParameter("datanodePort");
  if (datanodePortStr == null) {
    out.print("Invalid input (datanodePort absent)");
    return;
  }
  datanodePort=Integer.parseInt(datanodePortStr);
  final Long genStamp=JspHelper.validateLong(req.getParameter("genstamp"));
  if (genStamp == null) {
    out.print("Invalid input (genstamp absent)");
    return;
  }
  String namenodeInfoPortStr=req.getParameter("namenodeInfoPort");
  int namenodeInfoPort=-1;
  if (namenodeInfoPortStr != null)   namenodeInfoPort=Integer.parseInt(namenodeInfoPortStr);
  final String nnAddr=StringEscapeUtils.escapeHtml(req.getParameter(JspHelper.NAMENODE_ADDRESS));
  if (nnAddr == null) {
    out.print(JspHelper.NAMENODE_ADDRESS + " url param is null");
    return;
  }
  final int chunkSizeToView=JspHelper.string2ChunkSizeToView(req.getParameter("chunkSizeToView"),getDefaultChunkSize(conf));
  String startOffsetStr=req.getParameter("startOffset");
  if (startOffsetStr == null || Long.parseLong(startOffsetStr) < 0)   startOffset=0;
 else   startOffset=Long.parseLong(startOffsetStr);
  String path=StringEscapeUtils.unescapeHtml(req.getParameter("filename"));
  if (path == null) {
    path=req.getPathInfo() == null ? "/" : req.getPathInfo();
  }
  final String filename=JspHelper.validatePath(path);
  if (filename == null) {
    out.print("Invalid input");
    return;
  }
  final String blockSizeStr=req.getParameter("blockSize");
  if (blockSizeStr == null || blockSizeStr.length() == 0) {
    out.print("Invalid input");
    return;
  }
  long blockSize=Long.parseLong(blockSizeStr);
  final DFSClient dfs=getDFSClient(ugi,nnAddr,conf);
  List<LocatedBlock> blocks=dfs.getNamenode().getBlockLocations(filename,0,Long.MAX_VALUE).getLocatedBlocks();
  String downloadUrl="/streamFile" + ServletUtil.encodePath(filename) + JspHelper.getUrlParam(JspHelper.NAMENODE_ADDRESS,nnAddr,true)+ JspHelper.getDelegationTokenUrlParam(tokenString);
  out.print("<a name=\"viewOptions\"></a>");
  out.print("<a href=\"" + downloadUrl + "\">Download this file</a><br>");
  DatanodeInfo chosenNode;
  LocatedBlock lastBlk=blocks.get(blocks.size() - 1);
  try {
    chosenNode=JspHelper.bestNode(lastBlk,conf);
  }
 catch (  IOException e) {
    out.print(e.toString());
    dfs.close();
    return;
  }
  String tailUrl="///" + JspHelper.Url.authority(req.getScheme(),chosenNode) + "/tail.jsp?filename="+ URLEncoder.encode(filename,"UTF-8")+ "&namenodeInfoPort="+ namenodeInfoPort+ "&chunkSizeToView="+ chunkSizeToView+ JspHelper.getDelegationTokenUrlParam(tokenString)+ JspHelper.getUrlParam(JspHelper.NAMENODE_ADDRESS,nnAddr)+ "&referrer="+ URLEncoder.encode(req.getRequestURL() + "?" + req.getQueryString(),"UTF-8");
  out.print("<a href=\"" + tailUrl + "\">Tail this file</a><br>");
  out.print("<form action=\"/browseBlock.jsp\" method=GET>");
  out.print("<b>Chunk size to view (in bytes, up to file's DFS block size): </b>");
  out.print("<input type=\"hidden\" name=\"blockId\" value=\"" + blockId + "\">");
  out.print("<input type=\"hidden\" name=\"blockSize\" value=\"" + blockSize + "\">");
  out.print("<input type=\"hidden\" name=\"startOffset\" value=\"" + startOffset + "\">");
  out.print("<input type=\"hidden\" name=\"filename\" value=\"" + filename + "\">");
  out.print("<input type=\"hidden\" name=\"genstamp\" value=\"" + genStamp + "\">");
  out.print("<input type=\"hidden\" name=\"datanodePort\" value=\"" + datanodePort + "\">");
  out.print("<input type=\"hidden\" name=\"namenodeInfoPort\" value=\"" + namenodeInfoPort + "\">");
  out.print("<input type=\"hidden\" name=\"" + JspHelper.NAMENODE_ADDRESS + "\" value=\""+ nnAddr+ "\">");
  out.print("<input type=\"text\" name=\"chunkSizeToView\" value=" + chunkSizeToView + " size=10 maxlength=10>");
  out.print("&nbsp;&nbsp;<input type=\"submit\" name=\"submit\" value=\"Refresh\">");
  out.print("</form>");
  out.print("<hr>");
  out.print("<a name=\"blockDetails\"></a>");
  out.print("<B>Total number of blocks: " + blocks.size() + "</B><br>");
  out.println("\n<table>");
  String nnCanonicalName=canonicalize(nnAddr);
  for (  LocatedBlock cur : blocks) {
    out.print("<tr>");
    final String blockidstring=Long.toString(cur.getBlock().getBlockId());
    blockSize=cur.getBlock().getNumBytes();
    out.print("<td>" + blockidstring + ":</td>");
    DatanodeInfo[] locs=cur.getLocations();
    for (int j=0; j < locs.length; j++) {
      String datanodeAddr=locs[j].getXferAddr();
      datanodePort=locs[j].getXferPort();
      String blockUrl="///" + JspHelper.Url.authority(req.getScheme(),locs[j]) + "/browseBlock.jsp?blockId="+ blockidstring+ "&blockSize="+ blockSize+ "&filename="+ URLEncoder.encode(filename,"UTF-8")+ "&datanodePort="+ datanodePort+ "&genstamp="+ cur.getBlock().getGenerationStamp()+ "&namenodeInfoPort="+ namenodeInfoPort+ "&chunkSizeToView="+ chunkSizeToView+ JspHelper.getDelegationTokenUrlParam(tokenString)+ JspHelper.getUrlParam(JspHelper.NAMENODE_ADDRESS,nnAddr);
      String blockInfoUrl="///" + nnCanonicalName + ":"+ namenodeInfoPort+ "/block_info_xml.jsp?blockId="+ blockidstring;
      out.print("<td>&nbsp</td><td><a href=\"" + blockUrl + "\">"+ datanodeAddr+ "</a></td><td>"+ "<a href=\""+ blockInfoUrl+ "\">View Block Info</a></td>");
    }
    out.println("</tr>");
  }
  out.println("</table>");
  out.print("<hr>");
  out.print("<br><a href=\"///" + nnCanonicalName + ":"+ namenodeInfoPort+ "/dfshealth.jsp\">Go back to DFS home</a>");
  dfs.close();
}
