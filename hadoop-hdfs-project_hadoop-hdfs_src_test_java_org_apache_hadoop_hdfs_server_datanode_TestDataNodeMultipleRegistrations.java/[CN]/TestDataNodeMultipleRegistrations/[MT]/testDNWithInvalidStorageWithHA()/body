{
  MiniDFSNNTopology top=new MiniDFSNNTopology().addNameservice(new MiniDFSNNTopology.NSConf("ns1").addNN(new MiniDFSNNTopology.NNConf("nn0").setClusterId("cluster-1")).addNN(new MiniDFSNNTopology.NNConf("nn1").setClusterId("cluster-1")));
  top.setFederation(true);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).nnTopology(top).numDataNodes(0).build();
  try {
    cluster.startDataNodes(conf,1,true,null,null);
    Thread.sleep(10000);
    DataNode dn=cluster.getDataNodes().get(0);
    assertTrue("Datanode should be running",dn.isDatanodeUp());
    assertEquals("BPOfferService should be running",1,dn.getAllBpOs().length);
    DataNodeProperties dnProp=cluster.stopDataNode(0);
    cluster.getNameNode(0).stop();
    cluster.getNameNode(1).stop();
    Configuration nn1=cluster.getConfiguration(0);
    Configuration nn2=cluster.getConfiguration(1);
    StartupOption.FORMAT.setClusterId("cluster-2");
    DFSTestUtil.formatNameNode(nn1);
    MiniDFSCluster.copyNameDirs(FSNamesystem.getNamespaceDirs(nn1),FSNamesystem.getNamespaceDirs(nn2),nn2);
    cluster.restartNameNode(0,false);
    cluster.restartNameNode(1,false);
    cluster.restartDataNode(dnProp);
    Thread.sleep(10000);
    dn=cluster.getDataNodes().get(0);
    assertFalse("Datanode should have shutdown as only service failed",dn.isDatanodeUp());
  }
  finally {
    cluster.shutdown();
  }
}
