{
  final Configuration conf=new HdfsConfiguration();
  Options fetcherOptions=new Options();
  fetcherOptions.addOption(WEBSERVICE,true,"HTTP url to reach the NameNode at").addOption(RENEWER,true,"Name of the delegation token renewer").addOption(CANCEL,false,"cancel the token").addOption(RENEW,false,"renew the token").addOption(PRINT,false,"print the token").addOption(VERBOSE,false,"print verbose output").addOption(HELP_SHORT,HELP,false,"print out help information");
  GenericOptionsParser parser=new GenericOptionsParser(conf,fetcherOptions,args);
  CommandLine cmd=parser.getCommandLine();
  final String webUrl=cmd.hasOption(WEBSERVICE) ? cmd.getOptionValue(WEBSERVICE) : null;
  final String renewer=cmd.hasOption(RENEWER) ? cmd.getOptionValue(RENEWER) : null;
  final boolean cancel=cmd.hasOption(CANCEL);
  final boolean renew=cmd.hasOption(RENEW);
  final boolean print=cmd.hasOption(PRINT);
  final boolean verbose=cmd.hasOption(VERBOSE);
  final boolean help=cmd.hasOption(HELP);
  String[] remaining=parser.getRemainingArgs();
  if (help) {
    printUsage(System.out);
    System.exit(0);
  }
  int commandCount=(cancel ? 1 : 0) + (renew ? 1 : 0) + (print ? 1 : 0);
  if (commandCount > 1) {
    System.err.println("ERROR: Only specify cancel, renew or print.");
    printUsage(System.err);
  }
  if (remaining.length != 1 || remaining[0].charAt(0) == '-') {
    System.err.println("ERROR: Must specify exactly one token file");
    printUsage(System.err);
  }
  FileSystem local=FileSystem.getLocal(conf);
  final Path tokenFile=new Path(local.getWorkingDirectory(),remaining[0]);
  UserGroupInformation.getCurrentUser().doAs(new PrivilegedExceptionAction<Object>(){
    @Override public Object run() throws Exception {
      if (print) {
        printTokens(conf,tokenFile,verbose);
      }
 else       if (cancel) {
        cancelTokens(conf,tokenFile);
      }
 else       if (renew) {
        renewTokens(conf,tokenFile);
      }
 else {
        FileSystem fs=getFileSystem(conf,webUrl);
        saveDelegationToken(conf,fs,renewer,tokenFile);
      }
      return null;
    }
  }
);
}
