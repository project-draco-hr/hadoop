{
  File baseDir=GenericTestUtils.getTestDir();
  File disk1=new File(baseDir,"disk1");
  File disk2=new File(baseDir,"disk2");
  FileUtils.deleteDirectory(disk1);
  FileUtils.deleteDirectory(disk2);
  MiniDFSCluster cluster=null;
  HdfsConfiguration conf=new HdfsConfiguration();
  conf.setStrings(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY,disk1.toURI().toString(),disk2.toURI().toString());
  try {
    cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).manageDataDfsDirs(false).build();
    cluster.waitActive();
    String originalUUID=cluster.getDataNodes().get(0).getDatanodeUuid();
    MiniDFSCluster.DataNodeProperties dn=cluster.stopDataNode(0);
    FileUtils.deleteDirectory(disk2);
    assertTrue("Failed to recreate the data directory: " + disk2,disk2.mkdirs());
    assertTrue("DataNode failed to start up: " + dn,cluster.restartDataNode(dn));
    while (!cluster.getDataNodes().get(0).isDatanodeFullyStarted()) {
      Thread.sleep(50);
    }
    assertEquals("DN generated a new UUID despite disk1 having it intact",originalUUID,cluster.getDataNodes().get(0).getDatanodeUuid());
  }
  finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
