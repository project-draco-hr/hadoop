{
  if (!recoveryMode) {
    actualHandler.handle(event);
    return;
  }
 else   if (event.getType() == TaskEventType.T_SCHEDULE) {
    TaskEvent taskEvent=(TaskEvent)event;
    if (completedTasks.get(taskEvent.getTaskID()) == null) {
      LOG.debug("Adding to pending task events " + taskEvent.getTaskID());
      pendingTaskScheduleEvents.add(taskEvent);
      return;
    }
  }
 else   if (event.getType() == ContainerAllocator.EventType.CONTAINER_REQ) {
    TaskAttemptId aId=((ContainerAllocatorEvent)event).getAttemptID();
    TaskAttemptInfo attInfo=getTaskAttemptInfo(aId);
    LOG.debug("CONTAINER_REQ " + aId);
    sendAssignedEvent(aId,attInfo);
    return;
  }
 else   if (event.getType() == CommitterEventType.TASK_ABORT) {
    TaskAttemptId aId=((CommitterTaskAbortEvent)event).getAttemptID();
    LOG.debug("TASK_CLEAN");
    actualHandler.handle(new TaskAttemptEvent(aId,TaskAttemptEventType.TA_CLEANUP_DONE));
    return;
  }
 else   if (event.getType() == ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH) {
    TaskAttemptId aId=((ContainerRemoteLaunchEvent)event).getTaskAttemptID();
    TaskAttemptInfo attInfo=getTaskAttemptInfo(aId);
    actualHandler.handle(new TaskAttemptContainerLaunchedEvent(aId,attInfo.getShufflePort()));
    sendStatusUpdateEvent(aId,attInfo);
    TaskAttemptState state=TaskAttemptState.valueOf(attInfo.getTaskStatus());
switch (state) {
case SUCCEEDED:
      TaskAttemptContext taskContext=null;
    if (newApiCommitter) {
      taskContext=new TaskAttemptContextImpl(getConfig(),attInfo.getAttemptId());
    }
 else {
      taskContext=new org.apache.hadoop.mapred.TaskAttemptContextImpl(new JobConf(getConfig()),TypeConverter.fromYarn(aId));
    }
  try {
    TaskType type=taskContext.getTaskAttemptID().getTaskID().getTaskType();
    int numReducers=taskContext.getConfiguration().getInt(MRJobConfig.NUM_REDUCES,1);
    if (type == TaskType.REDUCE || (type == TaskType.MAP && numReducers <= 0)) {
      committer.recoverTask(taskContext);
      LOG.info("Recovered output from task attempt " + attInfo.getAttemptId());
    }
 else {
      LOG.info("Will not try to recover output for " + taskContext.getTaskAttemptID());
    }
  }
 catch (  IOException e) {
    LOG.error("Caught an exception while trying to recover task " + aId,e);
    actualHandler.handle(new JobDiagnosticsUpdateEvent(aId.getTaskId().getJobId(),"Error in recovering task output " + e.getMessage()));
    actualHandler.handle(new JobEvent(aId.getTaskId().getJobId(),JobEventType.INTERNAL_ERROR));
  }
LOG.info("Sending done event to recovered attempt " + aId);
actualHandler.handle(new TaskAttemptEvent(aId,TaskAttemptEventType.TA_DONE));
break;
case KILLED:
LOG.info("Sending kill event to recovered attempt " + aId);
actualHandler.handle(new TaskAttemptEvent(aId,TaskAttemptEventType.TA_KILL));
break;
default :
LOG.info("Sending fail event to recovered attempt " + aId);
actualHandler.handle(new TaskAttemptEvent(aId,TaskAttemptEventType.TA_FAILMSG));
break;
}
return;
}
 else if (event.getType() == ContainerLauncher.EventType.CONTAINER_REMOTE_CLEANUP) {
TaskAttemptId aId=((ContainerLauncherEvent)event).getTaskAttemptID();
actualHandler.handle(new TaskAttemptEvent(aId,TaskAttemptEventType.TA_CONTAINER_CLEANED));
return;
}
actualHandler.handle(event);
}
