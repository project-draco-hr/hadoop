{
  JobConf job=new JobConf();
  job.setNumMapTasks(2);
  TaskStatus status=new TaskStatus(){
    @Override public boolean getIsMap(){
      return false;
    }
    @Override public void addFetchFailedMap(    TaskAttemptID mapTaskId){
    }
  }
;
  Progress progress=new Progress();
  TaskAttemptID reduceId=new TaskAttemptID("314159",0,TaskType.REDUCE,0,0);
  ShuffleSchedulerImpl scheduler=new ShuffleSchedulerImpl(job,status,reduceId,null,progress,null,null,null);
  JobID jobId=new JobID();
  TaskID taskId1=new TaskID(jobId,TaskType.REDUCE,1);
  scheduler.tipFailed(taskId1);
  Assert.assertEquals("Progress should be 0.5",0.5f,progress.getProgress(),0.0f);
  Assert.assertFalse(scheduler.waitUntilDone(1));
  TaskID taskId0=new TaskID(jobId,TaskType.REDUCE,0);
  scheduler.tipFailed(taskId0);
  Assert.assertEquals("Progress should be 1.0",1.0f,progress.getProgress(),0.0f);
  Assert.assertTrue(scheduler.waitUntilDone(1));
}
