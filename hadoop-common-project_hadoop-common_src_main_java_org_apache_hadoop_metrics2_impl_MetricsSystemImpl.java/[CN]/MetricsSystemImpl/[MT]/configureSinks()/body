{
  sinkConfigs=config.getInstanceConfigs(SINK_KEY);
  long confPeriodMillis=0;
  for (  Entry<String,MetricsConfig> entry : sinkConfigs.entrySet()) {
    MetricsConfig conf=entry.getValue();
    int sinkPeriod=conf.getInt(PERIOD_KEY,PERIOD_DEFAULT);
    long sinkPeriodMillis=conf.getLong(PERIOD_MILLIS_KEY,sinkPeriod * 1000);
    confPeriodMillis=confPeriodMillis == 0 ? sinkPeriodMillis : ArithmeticUtils.gcd(confPeriodMillis,sinkPeriodMillis);
    String clsName=conf.getClassName("");
    if (clsName == null)     continue;
    String sinkName=entry.getKey();
    try {
      MetricsSinkAdapter sa=newSink(sinkName,conf.getString(DESC_KEY,sinkName),conf);
      sa.start();
      sinks.put(sinkName,sa);
    }
 catch (    Exception e) {
      LOG.warn("Error creating sink '" + sinkName + "'",e);
    }
  }
  long periodSec=config.getInt(PERIOD_KEY,PERIOD_DEFAULT);
  period=confPeriodMillis > 0 ? confPeriodMillis : config.getLong(PERIOD_MILLIS_KEY,periodSec * 1000);
}
