{
  InetSocketAddress haAdminServiceAddress=conf.getSocketAddr(YarnConfiguration.RM_HA_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_HA_ADMIN_ADDRESS,YarnConfiguration.DEFAULT_RM_HA_ADMIN_PORT);
  RPC.setProtocolEngine(conf,HAServiceProtocolPB.class,ProtobufRpcEngine.class);
  HAServiceProtocolServerSideTranslatorPB haServiceProtocolXlator=new HAServiceProtocolServerSideTranslatorPB(this);
  BlockingService haPbService=HAServiceProtocolProtos.HAServiceProtocolService.newReflectiveBlockingService(haServiceProtocolXlator);
  WritableRpcEngine.ensureInitialized();
  String bindHost=haAdminServiceAddress.getHostName();
  int serviceHandlerCount=conf.getInt(YarnConfiguration.RM_HA_ADMIN_CLIENT_THREAD_COUNT,YarnConfiguration.DEFAULT_RM_HA_ADMIN_CLIENT_THREAD_COUNT);
  haAdminServer=new RPC.Builder(conf).setProtocol(HAServiceProtocolPB.class).setInstance(haPbService).setBindAddress(bindHost).setPort(haAdminServiceAddress.getPort()).setNumHandlers(serviceHandlerCount).setVerbose(false).build();
  if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,false)) {
    haAdminServer.refreshServiceAcl(conf,new RMPolicyProvider());
  }
  haAdminServer.start();
  conf.updateConnectAddr(YarnConfiguration.RM_HA_ADMIN_ADDRESS,haAdminServer.getListenerAddress());
}
