{
  configureScheduler();
  YarnConfiguration conf=getConf();
  MockRM rm=new MockRM(conf);
  try {
    rm.start();
    RMApp rmApp=rm.submitApp(200,"name","user",new HashMap<ApplicationAccessType,String>(),false,"default",-1,null,"Test",false,true);
    MockNM node=new MockNM("127.0.0.1:1234",10240,rm.getResourceTrackerService());
    node.registerNode();
    MockAM am1=MockRM.launchAndRegisterAM(rmApp,rm,node);
    ApplicationAttemptId applicationAttemptOneID=am1.getApplicationAttemptId();
    ContainerId am1ContainerID=ContainerId.newContainerId(applicationAttemptOneID,1);
    am1.allocate("127.0.0.1",1024,1,new ArrayList<ContainerId>());
    node.nodeHeartbeat(true);
    List<Container> containers=am1.allocate(new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>()).getAllocatedContainers();
    while (containers.size() != 1) {
      node.nodeHeartbeat(true);
      containers.addAll(am1.allocate(new ArrayList<ResourceRequest>(),new ArrayList<ContainerId>()).getAllocatedContainers());
      Thread.sleep(200);
    }
    node.nodeHeartbeat(applicationAttemptOneID,2,ContainerState.RUNNING);
    ContainerId runningContainerID=ContainerId.newContainerId(applicationAttemptOneID,2);
    rm.waitForState(node,runningContainerID,RMContainerState.RUNNING);
    int ALLOCATED_CONTAINER_PRIORITY=1047;
    am1.allocate("127.0.0.1",1024,1,ALLOCATED_CONTAINER_PRIORITY,new ArrayList<ContainerId>(),null);
    node.nodeHeartbeat(true);
    ContainerId allocatedContainerID=ContainerId.newContainerId(applicationAttemptOneID,3);
    rm.waitForContainerAllocated(node,allocatedContainerID);
    rm.waitForState(node,allocatedContainerID,RMContainerState.ALLOCATED);
    RMContainer allocatedContainer=rm.getResourceScheduler().getRMContainer(allocatedContainerID);
    SchedulerApplicationAttempt firstSchedulerAppAttempt=((AbstractYarnScheduler<SchedulerApplicationAttempt,SchedulerNode>)rm.getResourceScheduler()).getApplicationAttempt(applicationAttemptOneID);
    node.nodeHeartbeat(applicationAttemptOneID,1,ContainerState.COMPLETE);
    rm.waitForContainerState(am1ContainerID,RMContainerState.COMPLETED,30 * 1000);
    RMAppAttempt rmAppAttempt2=MockRM.waitForAttemptScheduled(rmApp,rm);
    ApplicationAttemptId applicationAttemptTwoID=rmAppAttempt2.getAppAttemptId();
    Assert.assertEquals(2,applicationAttemptTwoID.getAttemptId());
    Assert.assertEquals(RMContainerState.KILLED,allocatedContainer.getState());
    for (    ResourceRequest request : firstSchedulerAppAttempt.getAppSchedulingInfo().getAllResourceRequests()) {
      if (request.getPriority().getPriority() == 0) {
        Assert.assertEquals(0,request.getNumContainers());
      }
 else       if (request.getPriority().getPriority() == ALLOCATED_CONTAINER_PRIORITY) {
        Assert.assertEquals(1,request.getNumContainers());
      }
    }
    MockRM.launchAM(rmApp,rm,node);
    List<Container> transferredContainers=rm.getResourceScheduler().getTransferredContainers(applicationAttemptTwoID);
    Assert.assertEquals(1,transferredContainers.size());
    Assert.assertEquals(runningContainerID,transferredContainers.get(0).getId());
  }
  finally {
    rm.stop();
  }
}
