{
  Assert.assertEquals(6,expectedMaxVCores.length);
  Assert.assertEquals(0,scheduler.getNumClusterNodes());
  int maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[0],maxVCores);
  RMNode node1=MockNodes.newNodeInfo(0,Resources.createResource(1024,node1MaxVCores),1,"127.0.0.2");
  scheduler.handle(new NodeAddedSchedulerEvent(node1));
  Assert.assertEquals(1,scheduler.getNumClusterNodes());
  maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[1],maxVCores);
  scheduler.handle(new NodeRemovedSchedulerEvent(node1));
  Assert.assertEquals(0,scheduler.getNumClusterNodes());
  maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[2],maxVCores);
  RMNode node2=MockNodes.newNodeInfo(0,Resources.createResource(1024,node2MaxVCores),2,"127.0.0.3");
  scheduler.handle(new NodeAddedSchedulerEvent(node2));
  Assert.assertEquals(1,scheduler.getNumClusterNodes());
  maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[3],maxVCores);
  RMNode node3=MockNodes.newNodeInfo(0,Resources.createResource(1024,node3MaxVCores),3,"127.0.0.4");
  scheduler.handle(new NodeAddedSchedulerEvent(node3));
  Assert.assertEquals(2,scheduler.getNumClusterNodes());
  maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[4],maxVCores);
  scheduler.handle(new NodeRemovedSchedulerEvent(node3));
  Assert.assertEquals(1,scheduler.getNumClusterNodes());
  maxVCores=scheduler.getMaximumResourceCapability().getVirtualCores();
  Assert.assertEquals(expectedMaxVCores[5],maxVCores);
  scheduler.handle(new NodeRemovedSchedulerEvent(node2));
  Assert.assertEquals(0,scheduler.getNumClusterNodes());
}
