{
  Configuration conf=getConf();
  RMContext privateContext=new RMContextImpl(privateDispatcher,null,null,null,null,null,null,null,null,null);
  privateContext.setNodeLabelManager(Mockito.mock(RMNodeLabelsManager.class));
  privateDispatcher.register(SchedulerEventType.class,sleepHandler);
  privateDispatcher.register(SchedulerEventType.class,rm.getResourceScheduler());
  privateDispatcher.register(RMNodeEventType.class,new ResourceManager.NodeEventDispatcher(privateContext));
  ((Service)privateDispatcher).init(conf);
  ((Service)privateDispatcher).start();
  NMLivelinessMonitor nmLivelinessMonitor=new NMLivelinessMonitor(privateDispatcher);
  nmLivelinessMonitor.init(conf);
  nmLivelinessMonitor.start();
  NodesListManager nodesListManager=new NodesListManager(privateContext);
  nodesListManager.init(conf);
  RMContainerTokenSecretManager containerTokenSecretManager=new RMContainerTokenSecretManager(conf);
  containerTokenSecretManager.start();
  NMTokenSecretManagerInRM nmTokenSecretManager=new NMTokenSecretManagerInRM(conf);
  nmTokenSecretManager.start();
  ResourceTrackerService privateResourceTrackerService=new ResourceTrackerService(privateContext,nodesListManager,nmLivelinessMonitor,containerTokenSecretManager,nmTokenSecretManager);
  privateResourceTrackerService.init(conf);
  privateResourceTrackerService.start();
  rm.getResourceScheduler().setRMContext(privateContext);
  return privateResourceTrackerService;
}
