{
  final int node1MaxVCores=15;
  final int node2MaxVCores=5;
  final int node3MaxVCores=6;
  final int configuredMaxVCores=10;
  configureScheduler();
  YarnConfiguration conf=getConf();
  conf.setInt(YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,configuredMaxVCores);
  conf.setLong(YarnConfiguration.RM_WORK_PRESERVING_RECOVERY_SCHEDULING_WAIT_MS,1000 * 1000);
  MockRM rm=new MockRM(conf);
  try {
    rm.start();
    testMaximumAllocationVCoresHelper(rm.getResourceScheduler(),node1MaxVCores,node2MaxVCores,node3MaxVCores,configuredMaxVCores,configuredMaxVCores,configuredMaxVCores,configuredMaxVCores,configuredMaxVCores,configuredMaxVCores);
  }
  finally {
    rm.stop();
  }
  conf.setLong(YarnConfiguration.RM_WORK_PRESERVING_RECOVERY_SCHEDULING_WAIT_MS,0);
  rm=new MockRM(conf);
  try {
    rm.start();
    testMaximumAllocationVCoresHelper(rm.getResourceScheduler(),node1MaxVCores,node2MaxVCores,node3MaxVCores,configuredMaxVCores,configuredMaxVCores,configuredMaxVCores,node2MaxVCores,node3MaxVCores,node2MaxVCores);
  }
  finally {
    rm.stop();
  }
}
