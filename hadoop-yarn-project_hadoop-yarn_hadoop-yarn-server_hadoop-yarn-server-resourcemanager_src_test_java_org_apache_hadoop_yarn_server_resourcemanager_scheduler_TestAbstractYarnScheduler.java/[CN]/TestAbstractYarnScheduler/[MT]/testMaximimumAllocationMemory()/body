{
  final int node1MaxMemory=15 * 1024;
  final int node2MaxMemory=5 * 1024;
  final int node3MaxMemory=6 * 1024;
  final int configuredMaxMemory=10 * 1024;
  configureScheduler();
  YarnConfiguration conf=getConf();
  conf.setInt(YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,configuredMaxMemory);
  conf.setLong(YarnConfiguration.RM_WORK_PRESERVING_RECOVERY_SCHEDULING_WAIT_MS,1000 * 1000);
  MockRM rm=new MockRM(conf);
  try {
    rm.start();
    testMaximumAllocationMemoryHelper((AbstractYarnScheduler)rm.getResourceScheduler(),node1MaxMemory,node2MaxMemory,node3MaxMemory,configuredMaxMemory,configuredMaxMemory,configuredMaxMemory,configuredMaxMemory,configuredMaxMemory,configuredMaxMemory);
  }
  finally {
    rm.stop();
  }
  conf.setLong(YarnConfiguration.RM_WORK_PRESERVING_RECOVERY_SCHEDULING_WAIT_MS,0);
  rm=new MockRM(conf);
  try {
    rm.start();
    testMaximumAllocationMemoryHelper((AbstractYarnScheduler)rm.getResourceScheduler(),node1MaxMemory,node2MaxMemory,node3MaxMemory,configuredMaxMemory,configuredMaxMemory,configuredMaxMemory,node2MaxMemory,node3MaxMemory,node2MaxMemory);
  }
  finally {
    rm.stop();
  }
}
