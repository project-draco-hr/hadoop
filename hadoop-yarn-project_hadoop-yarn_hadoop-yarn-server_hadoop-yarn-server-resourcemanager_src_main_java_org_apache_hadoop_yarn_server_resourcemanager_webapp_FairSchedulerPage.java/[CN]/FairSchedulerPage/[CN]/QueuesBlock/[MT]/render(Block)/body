{
  html._(MetricsOverviewTable.class);
  UL<DIV<DIV<Hamlet>>> ul=html.div("#cs-wrapper.ui-widget").div(".ui-widget-header.ui-corner-top")._("Application Queues")._().div("#cs.ui-widget-content.ui-corner-bottom").ul();
  if (fs == null) {
    ul.li().a(_Q).$style(width(Q_MAX_WIDTH)).span().$style(Q_END)._("100% ")._().span(".q","default")._()._();
  }
 else {
    FairSchedulerInfo sinfo=new FairSchedulerInfo(fs);
    fsqinfo.qinfo=sinfo.getRootQueueInfo();
    float used=fsqinfo.qinfo.getUsedMemoryFraction();
    ul.li().$style("margin-bottom: 1em").span().$style("font-weight: bold")._("Legend:")._().span().$class("qlegend ui-corner-all").$style(Q_GIVEN).$title("The steady fair shares consider all queues, " + "both active (with running applications) and inactive.")._(STEADY_FAIR_SHARE)._().span().$class("qlegend ui-corner-all").$style(Q_INSTANTANEOUS_FS).$title("The instantaneous fair shares consider only active " + "queues (with running applications).")._(INSTANTANEOUS_FAIR_SHARE)._().span().$class("qlegend ui-corner-all").$style(Q_UNDER)._("Used")._().span().$class("qlegend ui-corner-all").$style(Q_OVER)._("Used (over fair share)")._().span().$class("qlegend ui-corner-all ui-state-default")._("Max Capacity")._()._().li().a(_Q).$style(width(Q_MAX_WIDTH)).span().$style(join(width(used),";left:0%;",used > 1 ? Q_OVER : Q_UNDER))._(".")._().span(".q","root")._().span().$class("qstats").$style(left(Q_STATS_POS))._(join(percent(used)," used"))._()._(QueueBlock.class)._();
  }
  ul._()._().script().$type("text/javascript")._("$('#cs').hide();")._()._()._(FairSchedulerAppsBlock.class);
}
