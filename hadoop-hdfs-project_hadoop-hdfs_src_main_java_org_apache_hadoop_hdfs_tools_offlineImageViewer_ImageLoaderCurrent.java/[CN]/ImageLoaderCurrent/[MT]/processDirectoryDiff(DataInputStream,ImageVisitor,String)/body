{
  v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF);
  int snapshotId=in.readInt();
  v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTID,snapshotId);
  v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CHILDREN_SIZE,in.readInt());
  boolean useRoot=in.readBoolean();
  if (!useRoot) {
    if (in.readBoolean()) {
      v.visitEnclosingElement(ImageElement.SNAPSHOT_DIFF_SNAPSHOTINODE);
      processINode(in,v,true,currentINodeName,true);
      v.leaveEnclosingElement();
    }
  }
  int createdSize=in.readInt();
  v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST,ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST_SIZE,createdSize);
  for (int i=0; i < createdSize; i++) {
    String createdNode=FSImageSerialization.readString(in);
    v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CREATED_INODE,createdNode);
  }
  v.leaveEnclosingElement();
  int deletedSize=in.readInt();
  v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST,ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST_SIZE,deletedSize);
  for (int i=0; i < deletedSize; i++) {
    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETED_INODE);
    processINode(in,v,false,currentINodeName,true);
    v.leaveEnclosingElement();
  }
  v.leaveEnclosingElement();
  v.leaveEnclosingElement();
}
