{
  unpackStorage(HADOOP22_IMAGE,HADOOP_DFS_DIR_TXT);
  File baseDir=new File(MiniDFSCluster.getBaseDirectory());
  FSImageTestUtil.corruptVersionFile(new File(baseDir,"name1/current/VERSION"),"imageMD5Digest","22222222222222222222222222222222");
  FSImageTestUtil.corruptVersionFile(new File(baseDir,"name2/current/VERSION"),"imageMD5Digest","22222222222222222222222222222222");
  final LogVerificationAppender appender=new LogVerificationAppender();
  final Logger logger=Logger.getRootLogger();
  logger.addAppender(appender);
  try {
    upgradeAndVerify(new MiniDFSCluster.Builder(upgradeConf).numDataNodes(4));
    fail("Upgrade did not fail with bad MD5");
  }
 catch (  IOException ioe) {
    String msg=StringUtils.stringifyException(ioe);
    if (!msg.contains("Failed to load an FSImage file")) {
      throw ioe;
    }
    int md5failures=appender.countExceptionsWithMessage(" is corrupt with MD5 checksum of ");
    assertEquals("Upgrade did not fail with bad MD5",1,md5failures);
  }
}
