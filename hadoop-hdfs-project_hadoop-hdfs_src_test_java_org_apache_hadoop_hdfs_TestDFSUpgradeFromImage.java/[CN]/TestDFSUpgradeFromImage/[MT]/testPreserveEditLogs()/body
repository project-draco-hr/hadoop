{
  unpackStorage(HADOOP252_IMAGE,HADOOP_DFS_DIR_TXT);
  Configuration conf=new HdfsConfiguration();
  conf=UpgradeUtilities.initializeStorageStateConf(1,conf);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).manageDataDfsDirs(false).manageNameDfsDirs(false).startupOption(StartupOption.UPGRADE).build();
  DFSInotifyEventInputStream ieis=cluster.getFileSystem().getInotifyEventStream(0);
  EventBatch batch;
  Event.CreateEvent ce;
  Event.RenameEvent re;
  batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
  assertEquals(1,batch.getEvents().length);
  assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.CREATE);
  ce=(Event.CreateEvent)batch.getEvents()[0];
  assertEquals(ce.getPath(),"/input");
  for (int i=1; i <= 5; i++) {
    batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
    assertEquals(1,batch.getEvents().length);
    assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.CREATE);
    ce=(Event.CreateEvent)batch.getEvents()[0];
    assertEquals(ce.getPath(),"/input/dir" + i);
  }
  for (int i=1; i <= 2; i++) {
    batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
    assertEquals(1,batch.getEvents().length);
    if (batch.getEvents()[0].getEventType() != Event.EventType.CREATE) {
      FSImage.LOG.debug("");
    }
    assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.CREATE);
    batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
    assertEquals(1,batch.getEvents().length);
    assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.CLOSE);
    batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
    assertEquals(1,batch.getEvents().length);
    assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.RENAME);
    re=(Event.RenameEvent)batch.getEvents()[0];
    assertEquals(re.getDstPath(),"/input/dir" + i + "/randome_file_"+ i);
  }
  long txIDBeforeRename=batch.getTxid();
  batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
  assertEquals(1,batch.getEvents().length);
  assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.RENAME);
  re=(Event.RenameEvent)batch.getEvents()[0];
  assertEquals(re.getDstPath(),"/input/dir3/randome_file_3");
  batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
  assertEquals(1,batch.getEvents().length);
  assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.UNLINK);
  assertEquals(((Event.UnlinkEvent)batch.getEvents()[0]).getPath(),"/input/dir1");
  long lastTxID=batch.getTxid();
  ieis=cluster.getFileSystem().getInotifyEventStream(txIDBeforeRename);
  batch=TestDFSInotifyEventInputStream.waitForNextEvents(ieis);
  assertEquals(1,batch.getEvents().length);
  assertTrue(batch.getEvents()[0].getEventType() == Event.EventType.RENAME);
  re=(Event.RenameEvent)batch.getEvents()[0];
  assertEquals(re.getDstPath(),"/input/dir3/randome_file_3");
  ieis=cluster.getFileSystem().getInotifyEventStream(lastTxID + 1);
  assertNull(ieis.poll());
  cluster.shutdown();
}
