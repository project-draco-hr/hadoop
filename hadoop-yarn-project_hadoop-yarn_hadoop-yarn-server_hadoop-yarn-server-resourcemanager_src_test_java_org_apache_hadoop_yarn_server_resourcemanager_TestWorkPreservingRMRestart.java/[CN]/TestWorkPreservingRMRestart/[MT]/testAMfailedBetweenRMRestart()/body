{
  MemoryRMStateStore memStore=new MemoryRMStateStore();
  conf.setLong(YarnConfiguration.RM_WORK_PRESERVING_RECOVERY_SCHEDULING_WAIT_MS,0);
  memStore.init(conf);
  rm1=new MockRM(conf,memStore);
  rm1.start();
  MockNM nm1=new MockNM("127.0.0.1:1234",8192,rm1.getResourceTrackerService());
  nm1.registerNode();
  RMApp app1=rm1.submitApp(200);
  MockAM am1=MockRM.launchAndRegisterAM(app1,rm1,nm1);
  rm2=new MockRM(conf,memStore);
  rm2.start();
  nm1.setResourceTrackerService(rm2.getResourceTrackerService());
  NMContainerStatus amContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),1,ContainerState.COMPLETE);
  NMContainerStatus runningContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),2,ContainerState.RUNNING);
  NMContainerStatus completedContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),3,ContainerState.COMPLETE);
  nm1.registerNode(Arrays.asList(amContainer,runningContainer,completedContainer),null);
  rm2.waitForState(am1.getApplicationAttemptId(),RMAppAttemptState.FAILED);
  Thread.sleep(3000);
  AbstractYarnScheduler scheduler=(AbstractYarnScheduler)rm2.getResourceScheduler();
  assertNull(scheduler.getRMContainer(runningContainer.getContainerId()));
  assertNull(scheduler.getRMContainer(completedContainer.getContainerId()));
  rm2.waitForNewAMToLaunchAndRegister(app1.getApplicationId(),2,nm1);
  MockNM nm2=new MockNM("127.1.1.1:4321",8192,rm2.getResourceTrackerService());
  NMContainerStatus previousAttemptContainer=TestRMRestart.createNMContainerStatus(am1.getApplicationAttemptId(),4,ContainerState.RUNNING);
  nm2.registerNode(Arrays.asList(previousAttemptContainer),null);
  Thread.sleep(3000);
  assertNull(scheduler.getRMContainer(previousAttemptContainer.getContainerId()));
}
