{
  final Path parent=new Path("/test/testCallGetReturnValueMultipleTimes/");
  assertTrue(fs.mkdirs(parent));
  final Path[] srcs=new Path[NUM_TESTS];
  final Path[] dsts=new Path[NUM_TESTS];
  for (int i=0; i < NUM_TESTS; i++) {
    srcs[i]=new Path(parent,"src" + i);
    dsts[i]=new Path(parent,"dst" + i);
    DFSTestUtil.createFile(fs,srcs[i],fileLen,replFactor,1);
    DFSTestUtil.createFile(fs,dsts[i],fileLen,replFactor,1);
  }
  final Map<Integer,Future<Void>> reFutures=new HashMap<Integer,Future<Void>>();
  for (int i=0; i < NUM_TESTS; i++) {
    Future<Void> retFuture=adfs.rename(srcs[i],dsts[i],Rename.OVERWRITE);
    reFutures.put(i,retFuture);
  }
  assertEquals(NUM_TESTS,reFutures.size());
  for (int i=0; i < 5; i++) {
    verifyCallGetReturnValueMultipleTimes(reFutures,srcs,dsts);
  }
}
