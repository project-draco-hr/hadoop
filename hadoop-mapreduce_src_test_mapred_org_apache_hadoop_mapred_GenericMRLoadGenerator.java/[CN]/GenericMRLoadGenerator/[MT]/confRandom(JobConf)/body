{
  job.setInputFormat(RandomInputFormat.class);
  job.setMapperClass(RandomMapOutput.class);
  final ClusterStatus cluster=new JobClient(job).getClusterStatus();
  int numMapsPerHost=job.getInt(RandomTextWriter.MAPS_PER_HOST,10);
  long numBytesToWritePerMap=job.getLong(RandomTextWriter.BYTES_PER_MAP,1 * 1024 * 1024* 1024);
  if (numBytesToWritePerMap == 0) {
    throw new IOException("Cannot have " + RandomTextWriter.BYTES_PER_MAP + " set to 0");
  }
  long totalBytesToWrite=job.getLong(RandomTextWriter.TOTAL_BYTES,numMapsPerHost * numBytesToWritePerMap * cluster.getTaskTrackers());
  int numMaps=(int)(totalBytesToWrite / numBytesToWritePerMap);
  if (numMaps == 0 && totalBytesToWrite > 0) {
    numMaps=1;
    job.setLong(RandomTextWriter.BYTES_PER_MAP,totalBytesToWrite);
  }
  job.setNumMapTasks(numMaps);
}
