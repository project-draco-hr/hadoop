{
  DFSClientFaultInjector.get().startFetchFromDatanode();
  int refetchToken=1;
  int refetchEncryptionKey=1;
  while (true) {
    CachingStrategy curCachingStrategy;
    boolean allowShortCircuitLocalReads;
synchronized (this) {
      block=getBlockAt(block.getStartOffset(),false);
      curCachingStrategy=cachingStrategy;
      allowShortCircuitLocalReads=!shortCircuitForbidden();
    }
    DatanodeInfo chosenNode=datanode.info;
    InetSocketAddress targetAddr=datanode.addr;
    BlockReader reader=null;
    try {
      Token<BlockTokenIdentifier> blockToken=block.getBlockToken();
      int len=(int)(end - start + 1);
      reader=new BlockReaderFactory(dfsClient.getConf()).setInetSocketAddress(targetAddr).setRemotePeerFactory(dfsClient).setDatanodeInfo(chosenNode).setFileName(src).setBlock(block.getBlock()).setBlockToken(blockToken).setStartOffset(start).setVerifyChecksum(verifyChecksum).setClientName(dfsClient.clientName).setLength(len).setCachingStrategy(curCachingStrategy).setAllowShortCircuitLocalReads(allowShortCircuitLocalReads).setClientCacheContext(dfsClient.getClientContext()).setUserGroupInformation(dfsClient.ugi).setConfiguration(dfsClient.getConfiguration()).build();
      int nread=reader.readAll(buf,offset,len);
      if (nread != len) {
        throw new IOException("truncated return from reader.read(): " + "excpected " + len + ", got "+ nread);
      }
      return;
    }
 catch (    ChecksumException e) {
      String msg="fetchBlockByteRange(). Got a checksum exception for " + src + " at "+ block.getBlock()+ ":"+ e.getPos()+ " from "+ chosenNode;
      DFSClient.LOG.warn(msg);
      addIntoCorruptedBlockMap(block.getBlock(),chosenNode,corruptedBlockMap);
      addToDeadNodes(chosenNode);
      throw new IOException(msg);
    }
catch (    IOException e) {
      if (e instanceof InvalidEncryptionKeyException && refetchEncryptionKey > 0) {
        DFSClient.LOG.info("Will fetch a new encryption key and retry, " + "encryption key was invalid when connecting to " + targetAddr + " : "+ e);
        refetchEncryptionKey--;
        dfsClient.clearDataEncryptionKey();
        continue;
      }
 else       if (refetchToken > 0 && tokenRefetchNeeded(e,targetAddr)) {
        refetchToken--;
        try {
          fetchBlockAt(block.getStartOffset());
        }
 catch (        IOException fbae) {
        }
        continue;
      }
 else {
        String msg="Failed to connect to " + targetAddr + " for file "+ src+ " for block "+ block.getBlock()+ ":"+ e;
        DFSClient.LOG.warn("Connection failure: " + msg,e);
        addToDeadNodes(chosenNode);
        throw new IOException(msg);
      }
    }
 finally {
      if (reader != null) {
        reader.close();
      }
    }
  }
}
