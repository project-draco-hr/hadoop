{
  WebResource r=resource();
  final ContainerId containerId=BuilderUtils.newContainerId(0,0,0,0);
  final String containerIdStr=BuilderUtils.newContainerId(0,0,0,0).toString();
  final ApplicationAttemptId appAttemptId=containerId.getApplicationAttemptId();
  final ApplicationId appId=appAttemptId.getApplicationId();
  final String appIdStr=appId.toString();
  final String filename="logfile1";
  final String logMessage="log message\n";
  nmContext.getApplications().put(appId,new ApplicationImpl(null,"user",appId,null,nmContext));
  MockContainer container=new MockContainer(appAttemptId,new AsyncDispatcher(),new Configuration(),"user",appId,1);
  container.setState(ContainerState.RUNNING);
  nmContext.getContainers().put(containerId,container);
  Path path=dirsHandler.getLogPathForWrite(ContainerLaunch.getRelativeContainerLogDir(appIdStr,containerIdStr) + "/" + filename,false);
  File logFile=new File(path.toUri().getPath());
  logFile.deleteOnExit();
  assertTrue("Failed to create log dir",logFile.getParentFile().mkdirs());
  PrintWriter pw=new PrintWriter(logFile);
  pw.print(logMessage);
  pw.close();
  ClientResponse response=r.path("ws").path("v1").path("node").path("containerlogs").path(containerIdStr).path(filename).accept(MediaType.TEXT_PLAIN).get(ClientResponse.class);
  String responseText=response.getEntity(String.class);
  assertEquals(logMessage,responseText);
  response=r.path("ws").path("v1").path("node").path("containerlogs").path(containerIdStr).path(filename).queryParam("download","true").accept(MediaType.TEXT_PLAIN).get(ClientResponse.class);
  responseText=response.getEntity(String.class);
  assertEquals(logMessage,responseText);
  assertEquals(200,response.getStatus());
  assertEquals("application/octet-stream",response.getType().toString());
  response=r.path("ws").path("v1").path("node").path("containerlogs").path(containerIdStr).path("uhhh").accept(MediaType.TEXT_PLAIN).get(ClientResponse.class);
  Assert.assertEquals(Status.NOT_FOUND.getStatusCode(),response.getStatus());
  responseText=response.getEntity(String.class);
  assertTrue(responseText.contains("Cannot find this log on the local disk."));
  nmContext.getContainers().remove(containerId);
  Assert.assertNull(nmContext.getContainers().get(containerId));
  response=r.path("ws").path("v1").path("node").path("containerlogs").path(containerIdStr).path(filename).accept(MediaType.TEXT_PLAIN).get(ClientResponse.class);
  responseText=response.getEntity(String.class);
  assertEquals(logMessage,responseText);
}
