{
  String reservationJson=loadJsonFile("delete-reservation.json");
  JSONJAXBContext jc=new JSONJAXBContext(JSONConfiguration.mapped().build(),ReservationDeleteRequestInfo.class);
  JSONUnmarshaller unmarshaller=jc.createJSONUnmarshaller();
  ReservationDeleteRequestInfo rsci=unmarshaller.unmarshalFromJSON(new StringReader(reservationJson),ReservationDeleteRequestInfo.class);
  if (this.isAuthenticationEnabled()) {
    if (rsci.getReservationId() == null) {
      throw new IOException("Incorrectly parsed the reservatinId");
    }
    rsci.setReservationId(reservationId.toString());
  }
  Thread.sleep(1000);
  ClientResponse response=constructWebResource(path).entity(rsci,MediaType.APPLICATION_JSON).accept(media).post(ClientResponse.class);
  if (!this.isAuthenticationEnabled()) {
    assertEquals(Status.UNAUTHORIZED,response.getClientResponseStatus());
    return;
  }
  System.out.println("RESPONSE:" + response);
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  assertEquals(Status.OK,response.getClientResponseStatus());
}
