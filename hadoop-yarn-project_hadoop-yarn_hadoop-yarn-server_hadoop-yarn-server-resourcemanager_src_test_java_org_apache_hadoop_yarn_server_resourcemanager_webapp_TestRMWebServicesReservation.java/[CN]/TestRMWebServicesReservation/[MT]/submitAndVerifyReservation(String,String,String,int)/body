{
  JSONJAXBContext jc=new JSONJAXBContext(JSONConfiguration.mapped().build(),ReservationSubmissionRequestInfo.class);
  JSONUnmarshaller unmarshaller=jc.createJSONUnmarshaller();
  ReservationSubmissionRequestInfo rsci=unmarshaller.unmarshalFromJSON(new StringReader(reservationJson),ReservationSubmissionRequestInfo.class);
  Thread.sleep(1000);
  ClientResponse response=constructWebResource(path).entity(rsci,MediaType.APPLICATION_JSON).accept(media).post(ClientResponse.class);
  if (!this.isAuthenticationEnabled()) {
    assertEquals(Status.UNAUTHORIZED,response.getClientResponseStatus());
    return null;
  }
  System.out.println("RESPONSE:" + response);
  assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
  JSONObject json=response.getEntity(JSONObject.class);
  assertEquals("incorrect number of elements",1,json.length());
  ReservationId rid=null;
  try {
    rid=ReservationId.parseReservationId(json.getString("reservation-id"));
    assertEquals("incorrect return value",rid.getId(),expectedId);
  }
 catch (  JSONException j) {
  }
  return rid;
}
