{
  this.conf.set(YarnConfiguration.NM_LOG_DIRS,localLogDir.getAbsolutePath());
  this.conf.set(YarnConfiguration.NM_REMOTE_APP_LOG_DIR,this.remoteRootLogDir.getAbsolutePath());
  DrainDispatcher dispatcher=createDispatcher();
  EventHandler<ApplicationEvent> appEventHandler=mock(EventHandler.class);
  dispatcher.register(ApplicationEventType.class,appEventHandler);
  LogAggregationService logAggregationService=new LogAggregationService(dispatcher,this.context,this.delSrvc,super.dirsHandler);
  logAggregationService.init(this.conf);
  logAggregationService.start();
  ApplicationId application1=BuilderUtils.newApplicationId(1234,1);
  File app1LogDir=new File(localLogDir,ConverterUtils.toString(application1));
  app1LogDir.mkdir();
  logAggregationService.handle(new LogHandlerAppStartedEvent(application1,this.user,null,ContainerLogsRetentionPolicy.ALL_CONTAINERS,this.acls));
  ApplicationAttemptId appAttemptId1=BuilderUtils.newApplicationAttemptId(application1,1);
  ContainerId container11=BuilderUtils.newContainerId(appAttemptId1,1);
  writeContainerLogs(app1LogDir,container11);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container11,0));
  ApplicationId application2=BuilderUtils.newApplicationId(1234,2);
  ApplicationAttemptId appAttemptId2=BuilderUtils.newApplicationAttemptId(application2,1);
  File app2LogDir=new File(localLogDir,ConverterUtils.toString(application2));
  app2LogDir.mkdir();
  logAggregationService.handle(new LogHandlerAppStartedEvent(application2,this.user,null,ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY,this.acls));
  ContainerId container21=BuilderUtils.newContainerId(appAttemptId2,1);
  writeContainerLogs(app2LogDir,container21);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container21,0));
  ContainerId container12=BuilderUtils.newContainerId(appAttemptId1,2);
  writeContainerLogs(app1LogDir,container12);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container12,0));
  ApplicationId application3=BuilderUtils.newApplicationId(1234,3);
  ApplicationAttemptId appAttemptId3=BuilderUtils.newApplicationAttemptId(application3,1);
  File app3LogDir=new File(localLogDir,ConverterUtils.toString(application3));
  app3LogDir.mkdir();
  logAggregationService.handle(new LogHandlerAppStartedEvent(application3,this.user,null,ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY,this.acls));
  ApplicationEvent expectedInitEvents[]=new ApplicationEvent[]{new ApplicationEvent(application1,ApplicationEventType.APPLICATION_LOG_HANDLING_INITED),new ApplicationEvent(application2,ApplicationEventType.APPLICATION_LOG_HANDLING_INITED),new ApplicationEvent(application3,ApplicationEventType.APPLICATION_LOG_HANDLING_INITED)};
  checkEvents(appEventHandler,expectedInitEvents,false,"getType","getApplicationID");
  reset(appEventHandler);
  ContainerId container31=BuilderUtils.newContainerId(appAttemptId3,1);
  writeContainerLogs(app3LogDir,container31);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container31,0));
  ContainerId container32=BuilderUtils.newContainerId(appAttemptId3,2);
  writeContainerLogs(app3LogDir,container32);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container32,1));
  ContainerId container22=BuilderUtils.newContainerId(appAttemptId2,2);
  writeContainerLogs(app2LogDir,container22);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container22,0));
  ContainerId container33=BuilderUtils.newContainerId(appAttemptId3,3);
  writeContainerLogs(app3LogDir,container33);
  logAggregationService.handle(new LogHandlerContainerFinishedEvent(container33,0));
  logAggregationService.handle(new LogHandlerAppFinishedEvent(application2));
  logAggregationService.handle(new LogHandlerAppFinishedEvent(application3));
  logAggregationService.handle(new LogHandlerAppFinishedEvent(application1));
  logAggregationService.stop();
  verifyContainerLogs(logAggregationService,application1,new ContainerId[]{container11,container12});
  verifyContainerLogs(logAggregationService,application2,new ContainerId[]{container21});
  verifyContainerLogs(logAggregationService,application3,new ContainerId[]{container31,container32});
  dispatcher.await();
  ApplicationEvent[] expectedFinishedEvents=new ApplicationEvent[]{new ApplicationEvent(application1,ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED),new ApplicationEvent(application2,ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED),new ApplicationEvent(application3,ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED)};
  checkEvents(appEventHandler,expectedFinishedEvents,false,"getType","getApplicationID");
  dispatcher.stop();
}
