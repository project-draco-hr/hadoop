{
  Map<String,List<String>> nameservices=Maps.newHashMap();
  for (  NameNodeInfo info : cluster.getNameNodeInfos()) {
    Preconditions.checkState(info.nameserviceId != null);
    List<String> nns=nameservices.get(info.nameserviceId);
    if (nns == null) {
      nns=Lists.newArrayList();
      nameservices.put(info.nameserviceId,nns);
    }
    nns.add(info.nnId);
    conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,info.nameserviceId,info.nnId),DFSUtil.createUri(HdfsConstants.HDFS_URI_SCHEME,info.nameNode.getNameNodeAddress()).toString());
    conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,info.nameserviceId,info.nnId),DFSUtil.createUri(HdfsConstants.HDFS_URI_SCHEME,info.nameNode.getNameNodeAddress()).toString());
  }
  for (  Map.Entry<String,List<String>> entry : nameservices.entrySet()) {
    conf.set(DFSUtil.addKeySuffixes(DFS_HA_NAMENODES_KEY_PREFIX,entry.getKey()),Joiner.on(",").join(entry.getValue()));
    conf.set(HdfsClientConfigKeys.Failover.PROXY_PROVIDER_KEY_PREFIX + "." + entry.getKey(),ConfiguredFailoverProxyProvider.class.getName());
  }
  conf.set(DFSConfigKeys.DFS_NAMESERVICES,Joiner.on(",").join(nameservices.keySet()));
}
