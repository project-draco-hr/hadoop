{
  final String token=getDelegationToken("test");
  ApplicationSubmissionContextInfo app=new ApplicationSubmissionContextInfo();
  String appid="application_123_0";
  app.setApplicationId(appid);
  String requestBody=getMarshalledAppInfo(app);
  URL url=new URL("http://localhost:8088/ws/v1/cluster/apps");
  HttpURLConnection conn=(HttpURLConnection)url.openConnection();
  setupConn(conn,"POST","application/xml",requestBody);
  try {
    conn.getInputStream();
    fail("we should not be here");
  }
 catch (  IOException e) {
    assertEquals(Status.UNAUTHORIZED.getStatusCode(),conn.getResponseCode());
  }
  conn=(HttpURLConnection)url.openConnection();
  conn.setRequestProperty(delegationTokenHeader,token);
  setupConn(conn,"POST",MediaType.APPLICATION_XML,requestBody);
  try {
    conn.getInputStream();
  }
 catch (  IOException ie) {
    InputStream errorStream=conn.getErrorStream();
    String error="";
    BufferedReader reader=null;
    reader=new BufferedReader(new InputStreamReader(errorStream,"UTF8"));
    for (String line; (line=reader.readLine()) != null; ) {
      error+=line;
    }
    reader.close();
    errorStream.close();
    fail("Response " + conn.getResponseCode() + "; "+ error);
  }
  boolean appExists=rm.getRMContext().getRMApps().containsKey(ConverterUtils.toApplicationId(appid));
  assertTrue(appExists);
  RMApp actualApp=rm.getRMContext().getRMApps().get(ConverterUtils.toApplicationId(appid));
  String owner=actualApp.getUser();
  assertEquals("client",owner);
}
