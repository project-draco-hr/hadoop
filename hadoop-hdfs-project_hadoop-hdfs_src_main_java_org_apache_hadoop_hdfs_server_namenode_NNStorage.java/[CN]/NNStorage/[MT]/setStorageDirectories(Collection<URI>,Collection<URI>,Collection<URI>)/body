{
  this.storageDirs.clear();
  this.removedStorageDirs.clear();
  for (  URI dirName : fsNameDirs) {
    checkSchemeConsistency(dirName);
    boolean isAlsoEdits=false;
    for (    URI editsDirName : fsEditsDirs) {
      if (editsDirName.compareTo(dirName) == 0) {
        isAlsoEdits=true;
        fsEditsDirs.remove(editsDirName);
        break;
      }
    }
    NameNodeDirType dirType=(isAlsoEdits) ? NameNodeDirType.IMAGE_AND_EDITS : NameNodeDirType.IMAGE;
    if (dirName.getScheme().compareTo("file") == 0) {
      this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),dirType,sharedEditsDirs.contains(dirName)));
    }
  }
  for (  URI dirName : fsEditsDirs) {
    checkSchemeConsistency(dirName);
    if (dirName.getScheme().compareTo("file") == 0)     this.addStorageDir(new StorageDirectory(new File(dirName.getPath()),NameNodeDirType.EDITS,sharedEditsDirs.contains(dirName)));
  }
}
