{
  super(applicationAttemptId,user,queue,activeUsersManager,rmContext);
  RMApp rmApp=rmContext.getRMApps().get(getApplicationId());
  Resource amResource;
  String partition;
  if (rmApp == null || rmApp.getAMResourceRequest() == null) {
    amResource=rmContext.getScheduler().getMinimumResourceCapability();
    partition=CommonNodeLabelsManager.NO_LABEL;
  }
 else {
    amResource=rmApp.getAMResourceRequest().getCapability();
    partition=(rmApp.getAMResourceRequest().getNodeLabelExpression() == null) ? CommonNodeLabelsManager.NO_LABEL : rmApp.getAMResourceRequest().getNodeLabelExpression();
  }
  setAppAMNodePartitionName(partition);
  setAMResource(partition,amResource);
  setPriority(appPriority);
  setAttemptRecovering(isAttemptRecovering);
  scheduler=rmContext.getScheduler();
  if (scheduler.getResourceCalculator() != null) {
    rc=scheduler.getResourceCalculator();
  }
  containerAllocator=new ContainerAllocator(this,rc,rmContext,activitiesManager);
}
