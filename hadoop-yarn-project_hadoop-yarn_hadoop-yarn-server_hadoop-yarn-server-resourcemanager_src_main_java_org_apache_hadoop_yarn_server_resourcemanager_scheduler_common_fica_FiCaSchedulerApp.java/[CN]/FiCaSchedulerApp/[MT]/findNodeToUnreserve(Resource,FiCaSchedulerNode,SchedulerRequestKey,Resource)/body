{
  NodeId idToUnreserve=getNodeIdToUnreserve(schedulerKey,minimumUnreservedResource,rc,clusterResource);
  if (idToUnreserve == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("checked to see if could unreserve for app but nothing " + "reserved that matches for this app");
    }
    return null;
  }
  FiCaSchedulerNode nodeToUnreserve=((CapacityScheduler)scheduler).getNode(idToUnreserve);
  if (nodeToUnreserve == null) {
    LOG.error("node to unreserve doesn't exist, nodeid: " + idToUnreserve);
    return null;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("unreserving for app: " + getApplicationId() + " on nodeId: "+ idToUnreserve+ " in order to replace reserved application and place it on node: "+ node.getNodeID()+ " needing: "+ minimumUnreservedResource);
  }
  Resources.addTo(getHeadroom(),nodeToUnreserve.getReservedContainer().getReservedResource());
  return nodeToUnreserve.getReservedContainer();
}
