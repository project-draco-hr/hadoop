{
  try {
    writeLock.lock();
    ApplicationResourceUsageReport report=super.getResourceUsageReport();
    Resource cluster=rmContext.getScheduler().getClusterResource();
    Resource totalPartitionRes=rmContext.getNodeLabelManager().getResourceByLabel(getAppAMNodePartitionName(),cluster);
    ResourceCalculator calc=rmContext.getScheduler().getResourceCalculator();
    if (!calc.isInvalidDivisor(totalPartitionRes)) {
      float queueAbsMaxCapPerPartition=((AbstractCSQueue)getQueue()).getQueueCapacities().getAbsoluteCapacity(getAppAMNodePartitionName());
      float queueUsagePerc=calc.divide(totalPartitionRes,report.getUsedResources(),Resources.multiply(totalPartitionRes,queueAbsMaxCapPerPartition)) * 100;
      report.setQueueUsagePercentage(queueUsagePerc);
    }
    return report;
  }
  finally {
    writeLock.unlock();
  }
}
