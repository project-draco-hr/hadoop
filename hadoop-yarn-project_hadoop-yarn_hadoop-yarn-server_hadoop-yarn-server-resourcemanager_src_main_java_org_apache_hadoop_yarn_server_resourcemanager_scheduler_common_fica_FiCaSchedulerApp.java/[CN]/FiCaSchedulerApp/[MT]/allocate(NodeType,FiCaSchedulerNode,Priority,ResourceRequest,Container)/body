{
  if (isStopped) {
    return null;
  }
  if (getTotalRequiredResources(priority) <= 0) {
    return null;
  }
  RMContainer rmContainer=new RMContainerImpl(container,this.getApplicationAttemptId(),node.getNodeID(),appSchedulingInfo.getUser(),this.rmContext,request.getNodeLabelExpression());
  ((RMContainerImpl)rmContainer).setQueueName(this.getQueueName());
  updateAMContainerDiagnostics(AMState.ASSIGNED,null);
  newlyAllocatedContainers.add(rmContainer);
  ContainerId containerId=container.getId();
  liveContainers.put(containerId,rmContainer);
  List<ResourceRequest> resourceRequestList=appSchedulingInfo.allocate(type,node,priority,request,container);
  attemptResourceUsage.incUsed(node.getPartition(),container.getResource());
  ((RMContainerImpl)rmContainer).setResourceRequests(resourceRequestList);
  rmContainer.handle(new RMContainerEvent(containerId,RMContainerEventType.START));
  if (LOG.isDebugEnabled()) {
    LOG.debug("allocate: applicationAttemptId=" + containerId.getApplicationAttemptId() + " container="+ containerId+ " host="+ container.getNodeId().getHost()+ " type="+ type);
  }
  RMAuditLogger.logSuccess(getUser(),AuditConstants.ALLOC_CONTAINER,"SchedulerApp",getApplicationId(),containerId,container.getResource());
  return rmContainer;
}
