{
  try {
    writeLock.lock();
    Map<NodeId,RMContainer> reservedContainers=this.reservedContainers.get(schedulerKey);
    if ((reservedContainers != null) && (!reservedContainers.isEmpty())) {
      for (      Map.Entry<NodeId,RMContainer> entry : reservedContainers.entrySet()) {
        NodeId nodeId=entry.getKey();
        RMContainer reservedContainer=entry.getValue();
        if (reservedContainer.hasIncreaseReservation()) {
          continue;
        }
        Resource reservedResource=reservedContainer.getReservedResource();
        if (Resources.fitsIn(rc,clusterResource,resourceNeedUnreserve,reservedResource)) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("unreserving node with reservation size: " + reservedResource + " in order to allocate container with size: "+ resourceNeedUnreserve);
          }
          return nodeId;
        }
      }
    }
    return null;
  }
  finally {
    writeLock.unlock();
  }
}
