{
  Map<NodeId,RMContainer> reservedContainers=this.reservedContainers.get(priority);
  RMContainer reservedContainer=reservedContainers.remove(node.getNodeID());
  if (reservedContainers.isEmpty()) {
    this.reservedContainers.remove(priority);
  }
  if (reservedContainer == null) {
    String errorMesssage="Application " + getApplicationId() + " is trying to unreserve "+ " on node "+ node+ ", currently has "+ reservedContainers.size()+ " at priority "+ priority+ "; currentReservation "+ currentReservation;
    LOG.warn(errorMesssage);
    throw new YarnRuntimeException(errorMesssage);
  }
  resetReReservations(priority);
  Resource resource=reservedContainer.getContainer().getResource();
  Resources.subtractFrom(currentReservation,resource);
  LOG.info("Application " + getApplicationId() + " unreserved "+ " on node "+ node+ ", currently has "+ reservedContainers.size()+ " at priority "+ priority+ "; currentReservation "+ currentReservation);
}
