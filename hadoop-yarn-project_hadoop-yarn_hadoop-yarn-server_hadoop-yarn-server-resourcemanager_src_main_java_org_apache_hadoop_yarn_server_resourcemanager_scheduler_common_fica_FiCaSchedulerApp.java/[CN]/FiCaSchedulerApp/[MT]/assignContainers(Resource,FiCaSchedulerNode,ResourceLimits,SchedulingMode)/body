{
  if (LOG.isDebugEnabled()) {
    LOG.debug("pre-assignContainers for application " + getApplicationId());
    showRequests();
  }
  if (!hasPendingResourceRequest(rc,node.getPartition(),clusterResource,schedulingMode)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Skip app_attempt=" + getApplicationAttemptId() + ", because it doesn't need more resource, schedulingMode="+ schedulingMode.name()+ " node-label="+ node.getPartition());
    }
    return CSAssignment.SKIP_ASSIGNMENT;
  }
synchronized (this) {
    for (    Priority priority : getPriorities()) {
      ContainerAllocation allocationResult=containerAllocator.allocate(clusterResource,node,schedulingMode,currentResourceLimits,priority,null);
      AllocationState allocationState=allocationResult.getAllocationState();
      if (allocationState == AllocationState.PRIORITY_SKIPPED) {
        continue;
      }
      return getCSAssignmentFromAllocateResult(clusterResource,allocationResult);
    }
  }
  return CSAssignment.SKIP_ASSIGNMENT;
}
