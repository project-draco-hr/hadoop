{
  String[] diagnostics=null;
  if (report.getDiagnosticsList() != null) {
    diagnostics=new String[report.getDiagnosticsCount()];
    int i=0;
    for (    String cs : report.getDiagnosticsList()) {
      diagnostics[i++]=cs.toString();
    }
  }
 else {
    diagnostics=new String[0];
  }
  TaskReport rep=new TaskReport(fromYarn(report.getTaskId()),report.getProgress(),report.getTaskState().toString(),diagnostics,fromYarn(report.getTaskState()),report.getStartTime(),report.getFinishTime(),fromYarn(report.getCounters()));
  List<org.apache.hadoop.mapreduce.TaskAttemptID> runningAtts=new ArrayList<org.apache.hadoop.mapreduce.TaskAttemptID>();
  for (  org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId id : report.getRunningAttemptsList()) {
    runningAtts.add(fromYarn(id));
  }
  rep.setRunningTaskAttemptIds(runningAtts);
  if (report.getSuccessfulAttempt() != null) {
    rep.setSuccessfulAttemptId(fromYarn(report.getSuccessfulAttempt()));
  }
  return rep;
}
