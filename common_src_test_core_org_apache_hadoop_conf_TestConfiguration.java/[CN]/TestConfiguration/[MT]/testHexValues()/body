{
  out=new BufferedWriter(new FileWriter(CONFIG));
  startConfig();
  appendProperty("test.hex1","0x10");
  appendProperty("test.hex2","0xF");
  appendProperty("test.hex3","-0x10");
  appendProperty("test.hex4","-0x10xyz");
  endConfig();
  Path fileResource=new Path(CONFIG);
  conf.addResource(fileResource);
  assertEquals(16,conf.getInt("test.hex1",0));
  assertEquals(16,conf.getLong("test.hex1",0));
  assertEquals(15,conf.getInt("test.hex2",0));
  assertEquals(15,conf.getLong("test.hex2",0));
  assertEquals(-16,conf.getInt("test.hex3",0));
  assertEquals(-16,conf.getLong("test.hex3",0));
  try {
    conf.getLong("test.hex4",0);
    fail("Property had invalid long value, but was read successfully.");
  }
 catch (  NumberFormatException e) {
  }
  try {
    conf.getInt("test.hex4",0);
    fail("Property had invalid int value, but was read successfully.");
  }
 catch (  NumberFormatException e) {
  }
}
