{
  boolean searchUser=true;
  boolean searchJobName=true;
  boolean searchDates=true;
  List<Calendar> soughtCalendars=null;
  if (soughtUser == null) {
    searchUser=false;
  }
  if (soughtJobNameSubstring == null) {
    searchJobName=false;
  }
  if (soughtDateStrings == null) {
    searchDates=false;
  }
 else {
    soughtCalendars=getSoughtDateAsCalendar(soughtDateStrings);
  }
  Map<JobId,Job> resultMap=new TreeMap<JobId,Job>();
  SortedMap<JobId,JobIndexInfo> allJobs=getAllJobsMetaInfo();
  for (  Map.Entry<JobId,JobIndexInfo> entry : allJobs.entrySet()) {
    JobId jobId=entry.getKey();
    JobIndexInfo indexInfo=entry.getValue();
    String jobName=indexInfo.getJobName();
    String jobUser=indexInfo.getUser();
    long finishTime=indexInfo.getFinishTime();
    if (searchUser) {
      if (!soughtUser.equals(jobUser)) {
        continue;
      }
    }
    if (searchJobName) {
      if (!jobName.contains(soughtJobNameSubstring)) {
        continue;
      }
    }
    if (searchDates) {
      boolean matchedDate=false;
      Calendar jobCal=Calendar.getInstance();
      jobCal.setTimeInMillis(finishTime);
      for (      Calendar cal : soughtCalendars) {
        if (jobCal.get(Calendar.YEAR) == cal.get(Calendar.YEAR) && jobCal.get(Calendar.MONTH) == cal.get(Calendar.MONTH) && jobCal.get(Calendar.DAY_OF_MONTH) == cal.get(Calendar.DAY_OF_MONTH)) {
          matchedDate=true;
          break;
        }
      }
      if (!matchedDate) {
        break;
      }
    }
    resultMap.put(jobId,new PartialJob(indexInfo,jobId));
  }
  return resultMap;
}
