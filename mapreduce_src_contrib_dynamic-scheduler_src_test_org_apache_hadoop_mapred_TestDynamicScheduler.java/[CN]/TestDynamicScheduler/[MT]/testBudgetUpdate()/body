{
  addQueues(QUEUES);
  setSpending("queue1",1.0f);
  setSpending("queue2",2.0f);
  setBudgets(QUEUES,new float[]{100.0f,200.0f});
  timer.runTask();
  Collection<BudgetQueue> budgetQueues=scheduler.allocations.store.getQueues();
  BudgetQueue queue1Budget=null;
  BudgetQueue queue2Budget=null;
  for (  BudgetQueue queue : budgetQueues) {
    if (queue.name.equals("queue1")) {
      queue1Budget=queue;
    }
 else {
      queue2Budget=queue;
    }
  }
  assertNotNull(queue1Budget);
  assertNotNull(queue2Budget);
  assertEquals(100.0f,queue1Budget.budget,0.1f);
  assertEquals(200.0f,queue2Budget.budget,0.1f);
  setBudgets(QUEUES,new float[]{200.0f,300.0f});
  timer.runTask();
  budgetQueues=scheduler.allocations.store.getQueues();
  for (  BudgetQueue queue : budgetQueues) {
    if (queue.name.equals("queue1")) {
      queue1Budget=queue;
    }
 else {
      queue2Budget=queue;
    }
  }
  assertEquals(300.0f,queue1Budget.budget,0.1f);
  assertEquals(500.0f,queue2Budget.budget,0.1f);
  removeQueues(QUEUES);
}
