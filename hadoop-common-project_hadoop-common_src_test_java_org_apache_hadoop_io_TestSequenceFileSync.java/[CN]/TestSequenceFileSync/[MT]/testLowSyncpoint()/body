{
  final Configuration conf=new Configuration();
  final FileSystem fs=FileSystem.getLocal(conf);
  final Path path=new Path(GenericTestUtils.getTempPath("sequencefile.sync.test"));
  final IntWritable input=new IntWritable();
  final Text val=new Text();
  SequenceFile.Writer writer=new SequenceFile.Writer(fs,conf,path,IntWritable.class,Text.class);
  try {
    writeSequenceFile(writer,NUMRECORDS);
    for (int i=0; i < 5; i++) {
      final SequenceFile.Reader reader;
      if (i % 2 == 0) {
        reader=new SequenceFile.Reader(fs,path,conf);
      }
 else {
        final FSDataInputStream in=fs.open(path);
        final long length=fs.getFileStatus(path).getLen();
        final int buffersize=conf.getInt("io.file.buffer.size",4096);
        reader=new SequenceFile.Reader(in,buffersize,0L,length,conf);
      }
      try {
        forOffset(reader,input,val,i,0,0);
        forOffset(reader,input,val,i,65,0);
        forOffset(reader,input,val,i,2000,21);
        forOffset(reader,input,val,i,0,0);
      }
  finally {
        reader.close();
      }
    }
  }
  finally {
    fs.delete(path,false);
  }
}
