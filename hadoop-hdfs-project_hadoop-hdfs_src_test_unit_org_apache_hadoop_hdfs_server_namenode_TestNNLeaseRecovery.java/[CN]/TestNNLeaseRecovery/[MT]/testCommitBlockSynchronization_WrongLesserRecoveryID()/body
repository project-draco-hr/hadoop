{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Running " + GenericTestUtils.getMethodName());
  }
  long recoveryId=2002;
  long newSize=273487234;
  Path file=spy(new Path("/" + GenericTestUtils.getMethodName() + "_test.dat"));
  DatanodeDescriptor dnd=mock(DatanodeDescriptor.class);
  PermissionStatus ps=new PermissionStatus("test","test",new FsPermission((short)0777));
  mockFileBlocks(2,HdfsServerConstants.BlockUCState.COMMITTED,HdfsServerConstants.BlockUCState.UNDER_CONSTRUCTION,file,dnd,ps,true);
  BlockInfo lastBlock=fsn.dir.getFileINode(anyString()).getLastBlock();
  when(((BlockInfoUnderConstruction)lastBlock).getBlockRecoveryId()).thenReturn(recoveryId + 100);
  try {
    fsn.commitBlockSynchronization(fsn.getExtendedBlock(lastBlock),recoveryId,newSize,true,false,new DatanodeID[1]);
  }
 catch (  IOException ioe) {
    assertTrue(ioe.getMessage().startsWith("The recovery id " + recoveryId + " does not match current recovery id "+ (recoveryId + 100)));
  }
}
