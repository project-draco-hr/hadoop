{
  err("init: server=" + server + ";port="+ port+ ";service="+ service+ ";localVMUrl="+ localVMUrl);
  String url_string=null;
  if (localVMUrl != null) {
    url_string=localVMUrl;
    err("url string for local pid = " + localVMUrl + " = "+ url_string);
  }
 else   if (!port.isEmpty() && !server.isEmpty()) {
    url_string="service:jmx:rmi:///jndi/rmi://" + server + ":"+ port+ "/jmxrmi";
  }
  if (url_string == null) {
    mbsc=ManagementFactory.getPlatformMBeanServer();
  }
 else {
    JMXServiceURL url=new JMXServiceURL(url_string);
    err("Create RMI connector and connect to the RMI connector server" + url);
    JMXConnector jmxc=JMXConnectorFactory.connect(url,null);
    err("\nGet an MBeanServerConnection");
    mbsc=jmxc.getMBeanServerConnection();
  }
  err("\nDomains:");
  String domains[]=mbsc.getDomains();
  Arrays.sort(domains);
  for (  String domain : domains) {
    err("\tDomain = " + domain);
  }
  err("\nMBeanServer default domain = " + mbsc.getDefaultDomain());
  err("\nMBean count = " + mbsc.getMBeanCount());
  ObjectName query=new ObjectName("Hadoop:service=" + service + ",*");
  hadoopObjectNames=new ArrayList<ObjectName>(5);
  err("\nQuery MBeanServer MBeans:");
  Set<ObjectName> names=new TreeSet<ObjectName>(mbsc.queryNames(query,null));
  for (  ObjectName name : names) {
    hadoopObjectNames.add(name);
    err("Hadoop service: " + name);
  }
}
