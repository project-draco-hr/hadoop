{
  Configuration config=new YarnConfiguration(conf);
  String localDirsString=prepareDirs("local",numLocalDirs);
  config.set(YarnConfiguration.NM_LOCAL_DIRS,localDirsString);
  String logDirsString=prepareDirs("log",numLogDirs);
  config.set(YarnConfiguration.NM_LOG_DIRS,logDirsString);
  config.setInt(YarnConfiguration.NM_PMEM_MB,config.getInt(YarnConfiguration.YARN_MINICLUSTER_NM_PMEM_MB,YarnConfiguration.DEFAULT_YARN_MINICLUSTER_NM_PMEM_MB));
  config.set(YarnConfiguration.NM_ADDRESS,MiniYARNCluster.getHostname() + ":0");
  config.set(YarnConfiguration.NM_LOCALIZER_ADDRESS,MiniYARNCluster.getHostname() + ":0");
  config.set(YarnConfiguration.NM_COLLECTOR_SERVICE_ADDRESS,MiniYARNCluster.getHostname() + ":0");
  WebAppUtils.setNMWebAppHostNameAndPort(config,MiniYARNCluster.getHostname(),0);
  if (!config.getBoolean(YarnConfiguration.YARN_MINICLUSTER_CONTROL_RESOURCE_MONITORING,YarnConfiguration.DEFAULT_YARN_MINICLUSTER_CONTROL_RESOURCE_MONITORING)) {
    config.setBoolean(YarnConfiguration.NM_PMEM_CHECK_ENABLED,false);
    config.setBoolean(YarnConfiguration.NM_VMEM_CHECK_ENABLED,false);
  }
  LOG.info("Starting NM: " + index);
  nodeManagers[index].init(config);
  super.serviceInit(config);
}
