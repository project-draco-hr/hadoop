{
  Properties props=new Properties();
  brokerList=conf.getString(BROKER_LIST);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Broker list " + brokerList);
  }
  props.put("bootstrap.servers",brokerList);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Kafka brokers: " + brokerList);
  }
  topic=conf.getString(TOPIC);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Kafka topic " + topic);
  }
  if (Strings.isNullOrEmpty(topic)) {
    throw new MetricsException("Kafka topic can not be null");
  }
  props.put("key.serializer","org.apache.kafka.common.serialization.ByteArraySerializer");
  props.put("value.serializer","org.apache.kafka.common.serialization.ByteArraySerializer");
  props.put("request.required.acks","0");
  hostname="null";
  try {
    hostname=InetAddress.getLocalHost().getHostName();
  }
 catch (  Exception e) {
    LOG.warn("Error getting Hostname, going to continue");
  }
  try {
    producer=new KafkaProducer<Integer,byte[]>(props);
  }
 catch (  Exception e) {
    throw new MetricsException("Error creating Producer, " + brokerList,e);
  }
}
