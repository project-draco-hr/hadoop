{
  Configuration conf=new YarnConfiguration();
  conf.setInt(MRJobConfig.MR_CLIENT_MAX_RETRIES,3);
  conf.set(MRConfig.FRAMEWORK_NAME,MRConfig.YARN_FRAMEWORK_NAME);
  conf.setBoolean(MRJobConfig.JOB_AM_ACCESS_DISABLED,!isAMReachableFromClient);
  MRClientProtocol historyServerProxy=mock(MRClientProtocol.class);
  when(historyServerProxy.getJobReport(any(GetJobReportRequest.class))).thenReturn(getJobReportResponse());
  ResourceMgrDelegate rmDelegate=mock(ResourceMgrDelegate.class);
  try {
    when(rmDelegate.getApplicationReport(jobId.getAppId())).thenThrow(new java.lang.reflect.UndeclaredThrowableException(new IOException("Connection refuced1"))).thenThrow(new java.lang.reflect.UndeclaredThrowableException(new IOException("Connection refuced2"))).thenReturn(getFinishedApplicationReport());
    ClientServiceDelegate clientServiceDelegate=new ClientServiceDelegate(conf,rmDelegate,oldJobId,historyServerProxy);
    JobStatus jobStatus=clientServiceDelegate.getJobStatus(oldJobId);
    verify(rmDelegate,times(3)).getApplicationReport(any(ApplicationId.class));
    Assert.assertNotNull(jobStatus);
  }
 catch (  YarnException e) {
    throw new IOException(e);
  }
}
