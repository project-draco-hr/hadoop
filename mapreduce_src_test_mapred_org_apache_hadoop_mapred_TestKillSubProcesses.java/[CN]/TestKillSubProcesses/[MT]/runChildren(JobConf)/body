{
  if (ProcessTree.isSetsidAvailable) {
    FileSystem fs=FileSystem.getLocal(conf);
    if (fs.exists(scriptDir)) {
      fs.delete(scriptDir,true);
    }
    fs.mkdirs(scriptDir);
    fs.setPermission(scriptDir,new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL));
    Random rm=new Random();
    Path scriptPath=new Path(scriptDirName,"_shellScript_" + rm.nextInt() + ".sh");
    String shellScript=scriptPath.toString();
    String script="umask 000\n" + "echo $$ > " + scriptDirName + "/childPidFile"+ "$1\n"+ "echo hello\n"+ "trap 'echo got SIGTERM' 15 \n"+ "if [ $1 != 0 ]\nthen\n"+ " sh "+ shellScript+ " $(($1-1))\n"+ "else\n"+ " while true\n do\n"+ "  sleep 2\n"+ " done\n"+ "fi";
    DataOutputStream file=fs.create(scriptPath);
    file.writeBytes(script);
    file.close();
    new File(scriptPath.toUri().getPath()).setExecutable(true);
    LOG.info("Calling script from map task : " + shellScript);
    Runtime.getRuntime().exec(shellScript + " " + numLevelsOfSubProcesses);
    String childPid=TestProcfsBasedProcessTree.getPidFromPidFile(scriptDirName + "/childPidFile" + 0);
    while (childPid == null) {
      LOG.warn(scriptDirName + "/childPidFile" + 0+ " is null; Sleeping...");
      try {
        Thread.sleep(500);
      }
 catch (      InterruptedException ie) {
        LOG.warn("sleep is interrupted:" + ie);
        break;
      }
      childPid=TestProcfsBasedProcessTree.getPidFromPidFile(scriptDirName + "/childPidFile" + 0);
    }
  }
}
