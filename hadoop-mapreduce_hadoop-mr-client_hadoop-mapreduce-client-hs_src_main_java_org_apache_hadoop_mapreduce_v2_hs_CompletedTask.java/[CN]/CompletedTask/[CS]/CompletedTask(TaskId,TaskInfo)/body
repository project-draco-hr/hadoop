{
  LOG.debug("HandlingTaskId: [" + taskId + "]");
  this.taskId=taskId;
  this.startTime=taskInfo.getStartTime();
  this.finishTime=taskInfo.getFinishTime();
  this.type=TypeConverter.toYarn(taskInfo.getTaskType());
  if (taskInfo.getCounters() != null)   this.counters=TypeConverter.toYarn(taskInfo.getCounters());
  if (taskInfo.getTaskStatus() != null) {
    this.state=TaskState.valueOf(taskInfo.getTaskStatus());
  }
 else {
    this.state=TaskState.KILLED;
  }
  report=RecordFactoryProvider.getRecordFactory(null).newRecordInstance(TaskReport.class);
  for (  TaskAttemptInfo attemptHistory : taskInfo.getAllTaskAttempts().values()) {
    CompletedTaskAttempt attempt=new CompletedTaskAttempt(taskId,attemptHistory);
    report.addAllDiagnostics(attempt.getDiagnostics());
    attempts.put(attempt.getID(),attempt);
    if (attemptHistory.getTaskStatus() != null && attemptHistory.getTaskStatus().equals(TaskState.SUCCEEDED.toString()) && report.getSuccessfulAttempt() == null) {
      report.setSuccessfulAttempt(TypeConverter.toYarn(attemptHistory.getAttemptId()));
    }
  }
  report.setTaskId(taskId);
  report.setStartTime(startTime);
  report.setFinishTime(finishTime);
  report.setTaskState(state);
  report.setProgress(getProgress());
  report.setCounters(getCounters());
  report.addAllRunningAttempts(new ArrayList<TaskAttemptId>(attempts.keySet()));
}
