{
  JobStatus status=job.getStatus();
  JobProfile profile=job.getProfile();
  Counters jobCounters=job.getJobCounters();
  long mapSlotSeconds=(jobCounters.getCounter(JobCounter.SLOTS_MILLIS_MAPS) + jobCounters.getCounter(JobCounter.FALLOW_SLOTS_MILLIS_MAPS)) / 1000;
  long reduceSlotSeconds=(jobCounters.getCounter(JobCounter.SLOTS_MILLIS_REDUCES) + jobCounters.getCounter(JobCounter.FALLOW_SLOTS_MILLIS_REDUCES)) / 1000;
  SummaryBuilder summary=new SummaryBuilder().add("jobId",job.getJobID()).add("submitTime",job.getStartTime()).add("launchTime",job.getLaunchTime()).add(getTaskLaunchTimesSummary(job)).add("finishTime",job.getFinishTime()).add("numMaps",job.getTasks(TaskType.MAP).length).add("numSlotsPerMap",job.getNumSlotsPerMap()).add("numReduces",job.getTasks(TaskType.REDUCE).length).add("numSlotsPerReduce",job.getNumSlotsPerReduce()).add("user",profile.getUser()).add("queue",profile.getQueueName()).add("status",JobStatus.getJobRunState(status.getRunState())).add("mapSlotSeconds",mapSlotSeconds).add("reduceSlotsSeconds",reduceSlotSeconds).add("clusterMapCapacity",cluster.getMaxMapTasks()).add("clusterReduceCapacity",cluster.getMaxReduceTasks());
  LOG.info(summary);
}
