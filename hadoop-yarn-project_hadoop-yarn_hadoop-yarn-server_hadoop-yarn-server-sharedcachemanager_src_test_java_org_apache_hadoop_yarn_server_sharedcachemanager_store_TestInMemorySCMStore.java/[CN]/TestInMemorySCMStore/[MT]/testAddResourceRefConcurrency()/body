{
  startEmptyStore();
  final String key="key1";
  final String user="user";
  String fileName="foo.jar";
  store.addResource(key,fileName);
  int count=5;
  ExecutorService exec=Executors.newFixedThreadPool(count);
  List<Future<String>> futures=new ArrayList<Future<String>>(count);
  final CountDownLatch start=new CountDownLatch(1);
  for (int i=0; i < count; i++) {
    final ApplicationId id=createAppId(i,i);
    Callable<String> task=new Callable<String>(){
      public String call() throws Exception {
        start.await();
        return store.addResourceReference(key,new SharedCacheResourceReference(id,user));
      }
    }
;
    futures.add(exec.submit(task));
  }
  start.countDown();
  Set<String> results=new HashSet<String>();
  for (  Future<String> future : futures) {
    results.add(future.get());
  }
  assertSame(1,results.size());
  assertEquals(Collections.singleton(fileName),results);
  Collection<SharedCacheResourceReference> refs=store.getResourceReferences(key);
  assertSame(count,refs.size());
  exec.shutdown();
}
