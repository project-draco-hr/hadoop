{
  Properties properties=new Properties();
  Configuration conf=new Configuration();
  JobProperties jp=new JobProperties(properties);
  assertEquals("Job Properties (default filter) store error",0,jp.getAnonymizedValue(null,conf).size());
  String key1="test-key";
  String value1="test-value";
  properties.put(key1,value1);
  String key2=MRJobConfig.USER_NAME;
  String value2="bob";
  properties.put(key2,value2);
  String key3=JobConf.MAPRED_MAP_TASK_JAVA_OPTS;
  String value3="-Xmx1G";
  properties.put(key3,value3);
  String key4=MRJobConfig.REDUCE_JAVA_OPTS;
  String value4="-Xms100m";
  properties.put(key4,value4);
  jp=new JobProperties(properties);
  conf.set(JobProperties.PARSERS_CONFIG_KEY,DefaultJobPropertiesParser.class.getName());
  Properties defaultProp=jp.getAnonymizedValue(null,conf);
  assertEquals("Job Properties (all-pass filter) store error",4,defaultProp.size());
  assertEquals("Job Properties (default filter) key#1 error",value1,getValueFromDataType(defaultProp.get(key1)));
  assertEquals("Job Properties (default filter) key#2 error",value2,getValueFromDataType(defaultProp.get(key2)));
  assertEquals("Job Properties (default filter) key#3 error",value3,getValueFromDataType(defaultProp.get(key3)));
  assertEquals("Job Properties (default filter) key#4 error",value4,getValueFromDataType(defaultProp.get(key4)));
  conf.set(JobProperties.PARSERS_CONFIG_KEY,MapReduceJobPropertiesParser.class.getName());
  Properties filteredProp=jp.getAnonymizedValue(null,conf);
  assertEquals("Job Properties (MR filter) store error",3,filteredProp.size());
  assertNull("Job Properties (MR filter) key#1 error",filteredProp.get(key1));
  assertEquals("Job Properties (MR filter) key#2 error",value2,getValueFromDataType(filteredProp.get(key2)));
  assertEquals("Job Properties (MR filter) key#3 error",value3,getValueFromDataType(filteredProp.get(key3)));
  assertEquals("Job Properties (MR filter) key#4 error",value4,getValueFromDataType(filteredProp.get(key4)));
}
