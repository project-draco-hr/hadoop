{
  Configuration conf=new Configuration();
  FileSystem lfs=FileSystem.getLocal(conf);
  Path rootTempDir=new Path(System.getProperty("test.build.data","/tmp"));
  Path tempDir=new Path(rootTempDir,"testFileNameStateWithFiles");
  tempDir=lfs.makeQualified(tempDir);
  lfs.delete(tempDir,true);
  conf.set(StatePool.DIR_CONFIG,tempDir.toString());
  conf.setBoolean(StatePool.PERSIST_CONFIG,true);
  StatePool pool=new StatePool();
  FileNameState fState=new FileNameState();
  String test1="part-00.bzip";
  String test2="file1.txt";
  WordList fileNameState=new WordList("files");
  fileNameState.add(test1);
  fileNameState.add(test2);
  fState.setDirectoryState(fileNameState);
  try {
    pool.initialize(conf);
    pool.addState(getClass(),fState);
    pool.persist();
    pool=new StatePool();
    conf.setBoolean(StatePool.RELOAD_CONFIG,true);
    pool.initialize(conf);
    State state=pool.getState(getClass());
    assertNotNull("Missing state!",state);
    assertEquals("Incorrect state class!",FileNameState.class,state.getClass());
    FileNameState newFState=(FileNameState)state;
    WordList newFileWordList=newFState.getDirectoryState();
    assertTrue("File state failed on reload",newFileWordList.contains(test1));
    assertEquals("File state indexing on reload failed",0,newFileWordList.indexOf(test1));
    assertTrue("File state failed on reload",newFileWordList.contains(test2));
    assertEquals("File state indexing on reload failed",1,newFileWordList.indexOf(test2));
  }
  finally {
    lfs.delete(tempDir,true);
  }
}
