{
  Configuration conf=mr.createJobConf();
  conf.setInt(JobContext.NUM_MAPS,1);
  Job job=Job.getInstance(conf);
  job.setNumReduceTasks(1);
  job.setSpeculativeExecution(false);
  job.setJobSetupCleanupNeeded(false);
  TaskTracker tt1=jobTracker.getTaskTracker(trackers[0]);
  TaskTracker tt2=jobTracker.getTaskTracker(trackers[1]);
  TaskTrackerStatus status1=new TaskTrackerStatus(trackers[0],JobInProgress.convertTrackerNameToHostName(trackers[0]),0,new ArrayList<TaskStatus>(),0,2,2);
  TaskTrackerStatus status2=new TaskTrackerStatus(trackers[1],JobInProgress.convertTrackerNameToHostName(trackers[1]),0,new ArrayList<TaskStatus>(),0,2,2);
  tt1.setStatus(status1);
  tt2.setStatus(status2);
  fakeJob=new FakeJobInProgress(new JobConf(job.getConfiguration()),jobTracker);
  fakeJob.setClusterSize(3);
  fakeJob.initTasks();
  FakeObjectUtilities.sendHeartBeat(jobTracker,status1,false,true,trackers[0],responseId);
  FakeObjectUtilities.sendHeartBeat(jobTracker,status2,false,true,trackers[1],responseId);
  responseId++;
  ClusterMetrics metrics=cluster.getClusterStatus();
  assertEquals("reserved map slots do not match",2,metrics.getReservedMapSlots());
  assertEquals("reserved reduce slots do not match",2,metrics.getReservedReduceSlots());
  FakeObjectUtilities.sendHeartBeat(jobTracker,status1,false,true,trackers[0],responseId);
  FakeObjectUtilities.sendHeartBeat(jobTracker,status2,false,true,trackers[1],responseId);
  responseId++;
  metrics=cluster.getClusterStatus();
  assertEquals("reserved map slots do not match",4,metrics.getReservedMapSlots());
  assertEquals("reserved reduce slots do not match",4,metrics.getReservedReduceSlots());
  TaskAttemptID mTid=fakeJob.findMapTask(trackers[1]);
  TaskAttemptID rTid=fakeJob.findReduceTask(trackers[1]);
  fakeJob.finishTask(mTid);
  fakeJob.finishTask(rTid);
  assertEquals("Job didnt complete successfully complete",fakeJob.getStatus().getRunState(),JobStatus.SUCCEEDED);
  metrics=cluster.getClusterStatus();
  assertEquals("reserved map slots do not match",0,metrics.getReservedMapSlots());
  assertEquals("reserved reduce slots do not match",0,metrics.getReservedReduceSlots());
}
