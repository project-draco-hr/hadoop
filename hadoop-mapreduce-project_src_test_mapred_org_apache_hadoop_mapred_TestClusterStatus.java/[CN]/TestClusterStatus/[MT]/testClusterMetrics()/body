{
  assertEquals("tasktracker count doesn't match",trackers.length,cluster.getClusterStatus().getTaskTrackerCount());
  List<TaskStatus> list=new ArrayList<TaskStatus>();
  int mapSlotsPerTask=2;
  addMapTaskAttemptToList(list,mapSlotsPerTask,TaskStatus.State.RUNNING);
  int reduceSlotsPerTask=1;
  addReduceTaskAttemptToList(list,reduceSlotsPerTask,TaskStatus.State.RUNNING);
  sendHeartbeats(list);
  ClusterMetrics metrics=cluster.getClusterStatus();
  assertEquals("occupied map slots do not match",mapSlotsPerTask,metrics.getOccupiedMapSlots());
  assertEquals("occupied reduce slots do not match",reduceSlotsPerTask,metrics.getOccupiedReduceSlots());
  assertEquals("map slot capacities do not match",mapSlotsPerTracker * trackers.length,metrics.getMapSlotCapacity());
  assertEquals("reduce slot capacities do not match",reduceSlotsPerTracker * trackers.length,metrics.getReduceSlotCapacity());
  assertEquals("running map tasks do not match",1,metrics.getRunningMaps());
  assertEquals("running reduce tasks do not match",1,metrics.getRunningReduces());
  assertEquals("running map tasks do not match",1,jobTracker.getClusterStatus().getMapTasks());
  assertEquals("running reduce tasks do not match",1,jobTracker.getClusterStatus().getReduceTasks());
  assertEquals("map slot capacities do not match",mapSlotsPerTracker * trackers.length,jobTracker.getClusterStatus().getMaxMapTasks());
  assertEquals("reduce slot capacities do not match",reduceSlotsPerTracker * trackers.length,jobTracker.getClusterStatus().getMaxReduceTasks());
  list.clear();
  addMapTaskAttemptToList(list,mapSlotsPerTask,TaskStatus.State.SUCCEEDED);
  addReduceTaskAttemptToList(list,reduceSlotsPerTask,TaskStatus.State.RUNNING);
  sendHeartbeats(list);
  metrics=jobTracker.getClusterMetrics();
  assertEquals(0,metrics.getOccupiedMapSlots());
  assertEquals(reduceSlotsPerTask,metrics.getOccupiedReduceSlots());
  list.clear();
  addReduceTaskAttemptToList(list,reduceSlotsPerTask,TaskStatus.State.SUCCEEDED);
  sendHeartbeats(list);
  metrics=jobTracker.getClusterMetrics();
  assertEquals(0,metrics.getOccupiedReduceSlots());
}
