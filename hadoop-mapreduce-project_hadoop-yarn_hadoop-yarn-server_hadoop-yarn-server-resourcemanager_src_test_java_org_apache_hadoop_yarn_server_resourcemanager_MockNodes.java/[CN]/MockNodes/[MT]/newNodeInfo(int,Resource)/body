{
  final String rackName="rack" + rack;
  final int nid=NODE_ID++;
  final String hostName="host" + nid;
  final int port=123;
  final NodeId nodeID=newNodeID(hostName,port);
  final String httpAddress="localhost:0";
  final NodeHealthStatus nodeHealthStatus=recordFactory.newRecordInstance(NodeHealthStatus.class);
  final Resource used=newUsedResource(perNode);
  final Resource avail=newAvailResource(perNode,used);
  return new RMNode(){
    @Override public NodeId getNodeID(){
      return nodeID;
    }
    @Override public String getNodeAddress(){
      return hostName;
    }
    @Override public String getHttpAddress(){
      return httpAddress;
    }
    @Override public Resource getTotalCapability(){
      return perNode;
    }
    @Override public String getRackName(){
      return rackName;
    }
    @Override public Node getNode(){
      throw new UnsupportedOperationException("Not supported yet.");
    }
    @Override public NodeHealthStatus getNodeHealthStatus(){
      return nodeHealthStatus;
    }
    @Override public int getCommandPort(){
      return nid;
    }
    @Override public int getHttpPort(){
      return 0;
    }
    @Override public String getHostName(){
      return hostName;
    }
    @Override public RMNodeState getState(){
      return null;
    }
    @Override public List<ApplicationId> pullAppsToCleanup(){
      return null;
    }
    @Override public List<ContainerId> pullContainersToCleanUp(){
      return null;
    }
    @Override public HeartbeatResponse getLastHeartBeatResponse(){
      return null;
    }
  }
;
}
