{
  conf=new YarnConfiguration();
  conf.setLong(YarnConfiguration.RM_AMRM_TOKEN_MASTER_KEY_ROLLING_INTERVAL_SECS,rolling_interval_sec);
  conf.setLong(YarnConfiguration.RM_AM_EXPIRY_INTERVAL_MS,am_expire_ms);
  conf.setInt(YarnConfiguration.RM_NM_HEARTBEAT_INTERVAL_MS,100);
  conf.setInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,512);
  conf.setLong(YarnConfiguration.NM_LOG_RETAIN_SECONDS,1);
  yarnCluster=new MiniYARNCluster(TestAMRMClient.class.getName(),nodeCount,1,1);
  yarnCluster.init(conf);
  yarnCluster.start();
  yarnClient=YarnClient.createYarnClient();
  yarnClient.init(conf);
  yarnClient.start();
  assertTrue("All node managers did not connect to the RM within the " + "allotted 5-second timeout",yarnCluster.waitForNodeManagersToConnect(5000L));
  nodeReports=yarnClient.getNodeReports(NodeState.RUNNING);
  assertEquals("Not all node managers were reported running",nodeCount,nodeReports.size());
  priority=Priority.newInstance(1);
  priority2=Priority.newInstance(2);
  capability=Resource.newInstance(1024,1);
  node=nodeReports.get(0).getNodeId().getHost();
  rack=nodeReports.get(0).getRackName();
  nodes=new String[]{node};
  racks=new String[]{rack};
}
