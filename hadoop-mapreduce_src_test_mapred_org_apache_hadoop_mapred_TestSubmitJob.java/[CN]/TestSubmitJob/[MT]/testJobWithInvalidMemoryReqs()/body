{
  JobConf jtConf=new JobConf();
  jtConf.setLong(MRConfig.MAPMEMORY_MB,1 * 1024L);
  jtConf.setLong(MRConfig.REDUCEMEMORY_MB,2 * 1024L);
  jtConf.setLong(JTConfig.JT_MAX_MAPMEMORY_MB,3 * 1024L);
  jtConf.setLong(JTConfig.JT_MAX_REDUCEMEMORY_MB,4 * 1024L);
  mrCluster=new MiniMRCluster(0,"file:///",0,null,null,jtConf);
  JobConf clusterConf=mrCluster.createJobConf();
  JobConf jobConf=new JobConf(clusterConf);
  jobConf.setMemoryForReduceTask(1 * 1024L);
  runJobAndVerifyFailure(jobConf,JobConf.DISABLED_MEMORY_LIMIT,1 * 1024L,"Invalid job requirements.");
  jobConf=new JobConf(clusterConf);
  jobConf.setMemoryForMapTask(1 * 1024L);
  runJobAndVerifyFailure(jobConf,1 * 1024L,JobConf.DISABLED_MEMORY_LIMIT,"Invalid job requirements.");
  jobConf=new JobConf(clusterConf);
  jobConf.setMemoryForMapTask(4 * 1024L);
  jobConf.setMemoryForReduceTask(1 * 1024L);
  runJobAndVerifyFailure(jobConf,4 * 1024L,1 * 1024L,"Exceeds the cluster's max-memory-limit.");
  jobConf=new JobConf(clusterConf);
  jobConf.setMemoryForMapTask(1 * 1024L);
  jobConf.setMemoryForReduceTask(5 * 1024L);
  runJobAndVerifyFailure(jobConf,1 * 1024L,5 * 1024L,"Exceeds the cluster's max-memory-limit.");
  mrCluster.shutdown();
  mrCluster=null;
}
