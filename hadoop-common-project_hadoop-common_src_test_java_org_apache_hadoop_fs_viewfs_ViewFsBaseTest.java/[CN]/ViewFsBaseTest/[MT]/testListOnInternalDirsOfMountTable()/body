{
  FileStatus[] dirPaths=fcView.util().listStatus(new Path("/"));
  FileStatus fs;
  Assert.assertEquals(7,dirPaths.length);
  fs=fileContextTestHelper.containsPath(fcView,"/user",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("A mount should appear as symlink",fs.isSymlink());
  fs=fileContextTestHelper.containsPath(fcView,"/data",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("A mount should appear as symlink",fs.isSymlink());
  fs=fileContextTestHelper.containsPath(fcView,"/internalDir",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("InternalDirs should appear as dir",fs.isDirectory());
  fs=fileContextTestHelper.containsPath(fcView,"/danglingLink",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("A mount should appear as symlink",fs.isSymlink());
  fs=fileContextTestHelper.containsPath(fcView,"/linkToAFile",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("A mount should appear as symlink",fs.isSymlink());
  dirPaths=fcView.util().listStatus(new Path("/internalDir"));
  Assert.assertEquals(2,dirPaths.length);
  fs=fileContextTestHelper.containsPath(fcView,"/internalDir/internalDir2",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("InternalDirs should appear as dir",fs.isDirectory());
  fs=fileContextTestHelper.containsPath(fcView,"/internalDir/linkToDir2",dirPaths);
  Assert.assertNotNull(fs);
  Assert.assertTrue("A mount should appear as symlink",fs.isSymlink());
}
