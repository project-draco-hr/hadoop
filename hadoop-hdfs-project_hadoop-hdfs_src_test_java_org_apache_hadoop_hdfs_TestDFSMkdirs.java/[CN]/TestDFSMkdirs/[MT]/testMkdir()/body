{
  Configuration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).build();
  DistributedFileSystem dfs=(DistributedFileSystem)cluster.getFileSystem();
  try {
    assertTrue(dfs.mkdir(new Path("/mkdir-" + Time.now()),FsPermission.getDefault()));
    IOException expectedException=null;
    String filePath="/mkdir-file-" + Time.now();
    writeFile(dfs,new Path(filePath));
    try {
      dfs.mkdir(new Path(filePath + "/mkdir"),FsPermission.getDefault());
    }
 catch (    IOException e) {
      expectedException=e;
    }
    assertTrue("Create a directory when parent dir exists as file using" + " mkdir() should throw ParentNotDirectoryException ",expectedException != null && expectedException instanceof ParentNotDirectoryException);
    expectedException=null;
    try {
      dfs.mkdir(new Path("/non-exist/mkdir-" + Time.now()),FsPermission.getDefault());
    }
 catch (    IOException e) {
      expectedException=e;
    }
    assertTrue("Create a directory in a non-exist parent dir using" + " mkdir() should throw FileNotFoundException ",expectedException != null && expectedException instanceof FileNotFoundException);
  }
  finally {
    dfs.close();
    cluster.shutdown();
  }
}
