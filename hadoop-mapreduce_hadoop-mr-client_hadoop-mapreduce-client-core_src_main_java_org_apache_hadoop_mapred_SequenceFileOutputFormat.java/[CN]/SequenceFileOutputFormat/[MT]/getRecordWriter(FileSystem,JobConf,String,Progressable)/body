{
  Path file=FileOutputFormat.getTaskOutputPath(job,name);
  FileSystem fs=file.getFileSystem(job);
  CompressionCodec codec=null;
  CompressionType compressionType=CompressionType.NONE;
  if (getCompressOutput(job)) {
    compressionType=getOutputCompressionType(job);
    Class<? extends CompressionCodec> codecClass=getOutputCompressorClass(job,DefaultCodec.class);
    codec=ReflectionUtils.newInstance(codecClass,job);
  }
  final SequenceFile.Writer out=SequenceFile.createWriter(fs,job,file,job.getOutputKeyClass(),job.getOutputValueClass(),compressionType,codec,progress);
  return new RecordWriter<K,V>(){
    public void write(    K key,    V value) throws IOException {
      out.append(key,value);
    }
    public void close(    Reporter reporter) throws IOException {
      out.close();
    }
  }
;
}
