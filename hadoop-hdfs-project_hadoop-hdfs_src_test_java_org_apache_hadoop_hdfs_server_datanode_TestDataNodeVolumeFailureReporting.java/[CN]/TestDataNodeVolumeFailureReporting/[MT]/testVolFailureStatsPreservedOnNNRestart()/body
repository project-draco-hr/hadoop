{
  cluster.startDataNodes(conf,2,true,null,null);
  cluster.waitActive();
  final DatanodeManager dm=cluster.getNamesystem().getBlockManager().getDatanodeManager();
  long origCapacity=DFSTestUtil.getLiveDatanodeCapacity(dm);
  long dnCapacity=DFSTestUtil.getDatanodeCapacity(dm,0);
  File dn1Vol1=new File(dataDir,"data" + (2 * 0 + 1));
  File dn2Vol1=new File(dataDir,"data" + (2 * 1 + 1));
  DataNodeTestUtils.injectDataDirFailure(dn1Vol1,dn2Vol1);
  Path file1=new Path("/test1");
  DFSTestUtil.createFile(fs,file1,1024,(short)2,1L);
  DFSTestUtil.waitReplication(fs,file1,(short)2);
  ArrayList<DataNode> dns=cluster.getDataNodes();
  DFSTestUtil.waitForDatanodeStatus(dm,3,0,2,origCapacity - (1 * dnCapacity),WAIT_FOR_HEARTBEATS);
  checkAggregateFailuresAtNameNode(true,2);
  checkFailuresAtNameNode(dm,dns.get(0),true,dn1Vol1.getAbsolutePath());
  checkFailuresAtNameNode(dm,dns.get(1),true,dn2Vol1.getAbsolutePath());
  cluster.restartNameNode(0);
  cluster.waitActive();
  DFSTestUtil.waitForDatanodeStatus(dm,3,0,2,origCapacity - (1 * dnCapacity),WAIT_FOR_HEARTBEATS);
  checkAggregateFailuresAtNameNode(true,2);
  checkFailuresAtNameNode(dm,dns.get(0),true,dn1Vol1.getAbsolutePath());
  checkFailuresAtNameNode(dm,dns.get(1),true,dn2Vol1.getAbsolutePath());
}
