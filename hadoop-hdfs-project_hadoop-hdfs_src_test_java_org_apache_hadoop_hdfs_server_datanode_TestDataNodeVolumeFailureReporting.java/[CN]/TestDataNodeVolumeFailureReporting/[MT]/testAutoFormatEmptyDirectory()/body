{
  File dn1Vol1=cluster.getStorageDir(0,0);
  File current=new File(dn1Vol1,"current");
  File currentVersion=new File(current,"VERSION");
  currentVersion.delete();
  assertTrue(cluster.restartDataNodes(true));
  cluster.waitActive();
  ArrayList<DataNode> dns=cluster.getDataNodes();
  DataNode dn=dns.get(0);
  assertFalse("DataNode should not reformat if VERSION is missing",currentVersion.exists());
  final String[] expectedFailedVolumes={dn1Vol1.getAbsolutePath()};
  DataNodeTestUtils.triggerHeartbeat(dn);
  FsDatasetSpi<?> fsd=dn.getFSDataset();
  assertEquals(expectedFailedVolumes.length,fsd.getNumFailedVolumes());
  assertArrayEquals(expectedFailedVolumes,fsd.getFailedStorageLocations());
  checkFailuresAtDataNode(dn,0,false,expectedFailedVolumes);
  final DatanodeManager dm=cluster.getNamesystem().getBlockManager().getDatanodeManager();
  long dnCapacity=DFSTestUtil.getDatanodeCapacity(dm,0);
  DFSTestUtil.waitForDatanodeStatus(dm,1,0,1,(1 * dnCapacity),WAIT_FOR_HEARTBEATS);
  checkAggregateFailuresAtNameNode(false,1);
  checkFailuresAtNameNode(dm,dns.get(0),false,dn1Vol1.getAbsolutePath());
}
