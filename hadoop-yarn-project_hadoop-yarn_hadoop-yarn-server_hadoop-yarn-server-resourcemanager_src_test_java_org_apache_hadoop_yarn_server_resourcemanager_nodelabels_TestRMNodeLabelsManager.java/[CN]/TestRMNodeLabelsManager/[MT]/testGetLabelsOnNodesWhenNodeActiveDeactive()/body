{
  mgr.addToCluserNodeLabelsWithDefaultExclusivity(toSet("p1","p2","p3"));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p2")));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1:1"),toSet("p1")));
  mgr.activateNode(toNodeId("n1:1"),SMALL_RESOURCE);
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1:1")),toSet("p1"));
  mgr.deactivateNode(toNodeId("n1:1"));
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1:1")),toSet("p1"));
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1")),toSet("p2"));
  mgr.activateNode(toNodeId("n1:2"),SMALL_RESOURCE);
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1:2")),toSet("p2"));
  mgr.deactivateNode(toNodeId("n1:2"));
  Assert.assertNull(mgr.getNodeLabels().get(toNodeId("n1:2")));
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1")),toSet("p2"));
  mgr.activateNode(toNodeId("n1:2"),SMALL_RESOURCE);
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p3")));
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1:2")),toSet("p3"));
  mgr.deactivateNode(toNodeId("n1:2"));
  Assert.assertNull(mgr.getNodeLabels().get(toNodeId("n1:2")));
  assertCollectionEquals(mgr.getNodeLabels().get(toNodeId("n1")),toSet("p3"));
}
