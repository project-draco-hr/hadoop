{
  final JobId id=newJobID(appID,i);
  final String name=newJobName();
  final JobReport report=newJobReport(id);
  final Map<TaskId,Task> tasks=newTasks(id,n,m);
  final TaskCount taskCount=getTaskCount(tasks.values());
  final Counters counters=getCounters(tasks.values());
  return new Job(){
    @Override public JobId getID(){
      return id;
    }
    @Override public String getName(){
      return name;
    }
    @Override public JobState getState(){
      return report.getJobState();
    }
    @Override public JobReport getReport(){
      return report;
    }
    @Override public Counters getCounters(){
      return counters;
    }
    @Override public Map<TaskId,Task> getTasks(){
      return tasks;
    }
    @Override public Task getTask(    TaskId taskID){
      return tasks.get(taskID);
    }
    @Override public int getTotalMaps(){
      return taskCount.maps;
    }
    @Override public int getTotalReduces(){
      return taskCount.reduces;
    }
    @Override public int getCompletedMaps(){
      return taskCount.completedMaps;
    }
    @Override public int getCompletedReduces(){
      return taskCount.completedReduces;
    }
    @Override public boolean isUber(){
      return false;
    }
    @Override public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(    int fromEventId,    int maxEvents){
      return null;
    }
    @Override public Map<TaskId,Task> getTasks(    TaskType taskType){
      throw new UnsupportedOperationException("Not supported yet.");
    }
    @Override public List<String> getDiagnostics(){
      throw new UnsupportedOperationException("Not supported yet.");
    }
    @Override public boolean checkAccess(    UserGroupInformation callerUGI,    JobACL jobOperation){
      return true;
    }
  }
;
}
