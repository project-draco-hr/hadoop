{
  Configuration conf=new Configuration();
  Token<?> token1=mock(Token.class);
  Token<?> token2=mock(Token.class);
  final long renewCycle=100;
  DelegationTokenRenewer.renewCycle=renewCycle;
  UserGroupInformation ugi=UserGroupInformation.createUserForTesting("foo",new String[]{"bar"});
  DummyFs fs=spy(new DummyFs());
  doReturn(token1).doReturn(token2).when(fs).getDelegationToken(null);
  doReturn(token1).when(fs).getRenewToken();
  doThrow(new IOException("renew failed")).when(token1).renew(conf);
  doThrow(new IOException("get failed")).when(fs).addDelegationTokens(null,null);
  TokenAspect<DummyFs> tokenAspect=new TokenAspect<DummyFs>(fs,DummyFs.TOKEN_KIND);
  fs.initialize(new URI("dummyfs://127.0.0.1:1234"),conf);
  tokenAspect.initDelegationToken(ugi);
  tokenAspect.ensureTokenInitialized();
  DelegationTokenRenewer.RenewAction<?> action=getActionFromTokenAspect(tokenAspect);
  verify(fs).setDelegationToken(token1);
  assertTrue(action.isValid());
  Thread.sleep(renewCycle * 2);
  assertSame(action,getActionFromTokenAspect(tokenAspect));
  assertFalse(action.isValid());
  tokenAspect.ensureTokenInitialized();
  verify(fs,times(2)).getDelegationToken(anyString());
  verify(fs).setDelegationToken(token2);
  assertNotSame(action,getActionFromTokenAspect(tokenAspect));
  action=getActionFromTokenAspect(tokenAspect);
  assertTrue(action.isValid());
}
