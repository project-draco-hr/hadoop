{
  LOG.info("Starting test testDecommission");
  int numNamenodes=1;
  int numDatanodes=4;
  conf.setInt(DFSConfigKeys.DFS_REPLICATION_KEY,3);
  startCluster(numNamenodes,numDatanodes,conf);
  ArrayList<ArrayList<DatanodeInfo>> namenodeDecomList=new ArrayList<ArrayList<DatanodeInfo>>(numNamenodes);
  namenodeDecomList.add(0,new ArrayList<DatanodeInfo>(numDatanodes));
  Path file1=new Path("testDecommission2.dat");
  int replicas=4;
  ArrayList<DatanodeInfo> decommissionedNodes=namenodeDecomList.get(0);
  FileSystem fileSys=cluster.getFileSystem(0);
  FSNamesystem ns=cluster.getNamesystem(0);
  writeFile(fileSys,file1,replicas);
  int deadDecomissioned=ns.getNumDecomDeadDataNodes();
  int liveDecomissioned=ns.getNumDecomLiveDataNodes();
  DatanodeInfo decomNode=decommissionNode(0,decommissionedNodes,AdminStates.DECOMMISSIONED);
  decommissionedNodes.add(decomNode);
  assertEquals(deadDecomissioned,ns.getNumDecomDeadDataNodes());
  assertEquals(liveDecomissioned + 1,ns.getNumDecomLiveDataNodes());
  DFSClient client=getDfsClient(cluster.getNameNode(0),conf);
  assertEquals("All datanodes must be alive",numDatanodes,client.datanodeReport(DatanodeReportType.LIVE).length);
  assertNull(checkFile(fileSys,file1,replicas,decomNode.getXferAddr(),numDatanodes));
  cleanupFile(fileSys,file1);
  cluster.shutdown();
  startCluster(1,4,conf);
  cluster.shutdown();
}
