{
  LOG.info("Starting test testDecommissionWithOpenfile");
  startCluster(1,7);
  FileSystem fileSys=getCluster().getFileSystem(0);
  FSNamesystem ns=getCluster().getNamesystem(0);
  String openFile="/testDecommissionWithOpenfile.dat";
  writeFile(fileSys,new Path(openFile),(short)3);
  FSDataOutputStream fdos=fileSys.append(new Path(openFile));
  LocatedBlocks lbs=NameNodeAdapter.getBlockLocations(getCluster().getNameNode(0),openFile,0,fileSize);
  DatanodeInfo[] dnInfos4LastBlock=lbs.getLastLocatedBlock().getLocations();
  DatanodeInfo[] dnInfos4FirstBlock=lbs.get(0).getLocations();
  ArrayList<String> nodes=new ArrayList<String>();
  ArrayList<DatanodeInfo> dnInfos=new ArrayList<DatanodeInfo>();
  DatanodeManager dm=ns.getBlockManager().getDatanodeManager();
  for (  DatanodeInfo datanodeInfo : dnInfos4FirstBlock) {
    DatanodeInfo found=datanodeInfo;
    for (    DatanodeInfo dif : dnInfos4LastBlock) {
      if (datanodeInfo.equals(dif)) {
        found=null;
      }
    }
    if (found != null) {
      nodes.add(found.getXferAddr());
      dnInfos.add(dm.getDatanode(found));
    }
  }
  nodes.add(dnInfos4LastBlock[0].getXferAddr());
  dnInfos.add(dm.getDatanode(dnInfos4LastBlock[0]));
  initExcludeHosts(nodes);
  refreshNodes(0);
  for (  DatanodeInfo dn : dnInfos) {
    waitNodeState(dn,AdminStates.DECOMMISSIONED);
  }
  fdos.close();
}
