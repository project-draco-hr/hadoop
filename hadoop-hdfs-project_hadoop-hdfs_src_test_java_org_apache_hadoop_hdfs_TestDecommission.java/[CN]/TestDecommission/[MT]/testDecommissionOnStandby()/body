{
  Configuration hdfsConf=new HdfsConfiguration(conf);
  hdfsConf.setInt(DFSConfigKeys.DFS_HA_TAILEDITS_PERIOD_KEY,1);
  hdfsConf.setInt(DFSConfigKeys.DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY,30000);
  hdfsConf.setInt(DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,2);
  long slowHeartbeatDNwaitTime=hdfsConf.getLong(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_DEFAULT) * 1000 * (hdfsConf.getInt(DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_KEY,DFSConfigKeys.DFS_NAMENODE_TOLERATE_HEARTBEAT_MULTIPLIER_DEFAULT) + 1);
  cluster=new MiniDFSCluster.Builder(hdfsConf).nnTopology(MiniDFSNNTopology.simpleHATopology()).numDataNodes(3).build();
  cluster.transitionToActive(0);
  cluster.waitActive();
  Path file1=new Path("testDecommissionHA.dat");
  int replicas=3;
  FileSystem activeFileSys=cluster.getFileSystem(0);
  writeFile(activeFileSys,file1,replicas);
  HATestUtil.waitForStandbyToCatchUp(cluster.getNameNode(0),cluster.getNameNode(1));
  hdfsConf.setLong(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,30);
  cluster.startDataNodes(hdfsConf,1,true,null,null,null);
  DataNode lastDN=cluster.getDataNodes().get(3);
  lastDN.getDatanodeUuid();
  DataNode firstDN=cluster.getDataNodes().get(0);
  DatanodeInfo decommissionedNodeFromANN=decommissionNode(0,firstDN.getDatanodeUuid(),null,AdminStates.DECOMMISSIONED);
  DatanodeInfo decomNodeFromSBN=decommissionNode(1,firstDN.getDatanodeUuid(),null,AdminStates.DECOMMISSIONED);
  Thread.sleep(slowHeartbeatDNwaitTime);
  recommissionNode(1,decomNodeFromSBN);
  MiniDFSCluster.DataNodeProperties LastDNprop=cluster.stopDataNode(3);
  LastDNprop.conf.setLong(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,HEARTBEAT_INTERVAL);
  cluster.restartDataNode(LastDNprop);
  MiniDFSCluster.DataNodeProperties nextToLastDNprop=cluster.stopDataNode(2);
  nextToLastDNprop.conf.setLong(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY,30);
  cluster.restartDataNode(nextToLastDNprop);
  cluster.waitActive();
  Thread.sleep(slowHeartbeatDNwaitTime);
  recommissionNode(0,decommissionedNodeFromANN);
  cluster.triggerHeartbeats();
  HATestUtil.waitForDNDeletions(cluster);
  cluster.triggerDeletionReports();
  decommissionNode(0,firstDN.getDatanodeUuid(),null,AdminStates.DECOMMISSIONED);
  decommissionNode(1,firstDN.getDatanodeUuid(),null,AdminStates.DECOMMISSIONED);
  cluster.shutdown();
}
