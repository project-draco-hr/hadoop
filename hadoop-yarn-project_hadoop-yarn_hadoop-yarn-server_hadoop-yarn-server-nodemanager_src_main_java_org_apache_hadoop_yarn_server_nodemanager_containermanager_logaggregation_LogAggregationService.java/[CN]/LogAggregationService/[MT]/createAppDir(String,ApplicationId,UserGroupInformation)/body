{
  try {
    userUgi.doAs(new PrivilegedExceptionAction<Object>(){
      @Override public Object run() throws Exception {
        FileSystem remoteFS=null;
        Path userDir=null;
        Path suffixDir=null;
        Path appDir=null;
        try {
          remoteFS=FileSystem.get(getConfig());
        }
 catch (        IOException e) {
          LOG.error("Failed to get remote FileSystem while processing app " + appId,e);
          throw e;
        }
        try {
          userDir=LogAggregationUtils.getRemoteLogUserDir(LogAggregationService.this.remoteRootLogDir,user);
          userDir=userDir.makeQualified(remoteFS.getUri(),remoteFS.getWorkingDirectory());
          createDir(remoteFS,userDir,APP_DIR_PERMISSIONS);
        }
 catch (        IOException e) {
          LOG.error("Failed to create user dir [" + userDir + "] while processing app "+ appId);
          throw e;
        }
        try {
          suffixDir=LogAggregationUtils.getRemoteLogSuffixedDir(LogAggregationService.this.remoteRootLogDir,user,LogAggregationService.this.remoteRootLogDirSuffix);
          suffixDir=suffixDir.makeQualified(remoteFS.getUri(),remoteFS.getWorkingDirectory());
          createDir(remoteFS,suffixDir,APP_DIR_PERMISSIONS);
        }
 catch (        IOException e) {
          LOG.error("Failed to create suffixed user dir [" + suffixDir + "] while processing app "+ appId);
          throw e;
        }
        try {
          appDir=LogAggregationUtils.getRemoteAppLogDir(LogAggregationService.this.remoteRootLogDir,appId,user,LogAggregationService.this.remoteRootLogDirSuffix);
          appDir=appDir.makeQualified(remoteFS.getUri(),remoteFS.getWorkingDirectory());
          createDir(remoteFS,appDir,APP_DIR_PERMISSIONS);
        }
 catch (        IOException e) {
          LOG.error("Failed to  create application log dir [" + appDir + "] while processing app "+ appId);
          throw e;
        }
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    throw new YarnRuntimeException(e);
  }
}
