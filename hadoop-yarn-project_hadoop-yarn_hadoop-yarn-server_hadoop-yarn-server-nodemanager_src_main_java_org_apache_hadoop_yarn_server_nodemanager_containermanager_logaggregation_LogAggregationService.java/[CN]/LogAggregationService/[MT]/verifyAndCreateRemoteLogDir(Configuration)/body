{
  FileSystem remoteFS=null;
  try {
    remoteFS=FileSystem.get(conf);
  }
 catch (  IOException e) {
    throw new YarnRuntimeException("Unable to get Remote FileSystem instance",e);
  }
  boolean remoteExists=true;
  try {
    FsPermission perms=remoteFS.getFileStatus(this.remoteRootLogDir).getPermission();
    if (!perms.equals(TLDIR_PERMISSIONS)) {
      LOG.warn("Remote Root Log Dir [" + this.remoteRootLogDir + "] already exist, but with incorrect permissions. "+ "Expected: ["+ TLDIR_PERMISSIONS+ "], Found: ["+ perms+ "]."+ " The cluster may have problems with multiple users.");
    }
  }
 catch (  FileNotFoundException e) {
    remoteExists=false;
  }
catch (  IOException e) {
    throw new YarnRuntimeException("Failed to check permissions for dir [" + this.remoteRootLogDir + "]",e);
  }
  if (!remoteExists) {
    LOG.warn("Remote Root Log Dir [" + this.remoteRootLogDir + "] does not exist. Attempting to create it.");
    try {
      Path qualified=this.remoteRootLogDir.makeQualified(remoteFS.getUri(),remoteFS.getWorkingDirectory());
      remoteFS.mkdirs(qualified,new FsPermission(TLDIR_PERMISSIONS));
      remoteFS.setPermission(qualified,new FsPermission(TLDIR_PERMISSIONS));
    }
 catch (    IOException e) {
      throw new YarnRuntimeException("Failed to create remoteLogDir [" + this.remoteRootLogDir + "]",e);
    }
  }
}
