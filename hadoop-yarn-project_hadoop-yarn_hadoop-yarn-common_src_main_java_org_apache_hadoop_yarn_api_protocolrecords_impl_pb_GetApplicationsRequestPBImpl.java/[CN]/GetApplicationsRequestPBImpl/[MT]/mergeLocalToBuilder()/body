{
  if (this.applicationTypes != null) {
    addLocalApplicationTypesToProto();
  }
  if (this.applicationStates != null) {
    maybeInitBuilder();
    builder.clearApplicationStates();
    Iterable<YarnApplicationStateProto> iterable=new Iterable<YarnApplicationStateProto>(){
      @Override public Iterator<YarnApplicationStateProto> iterator(){
        return new Iterator<YarnApplicationStateProto>(){
          Iterator<YarnApplicationState> iter=applicationStates.iterator();
          @Override public boolean hasNext(){
            return iter.hasNext();
          }
          @Override public YarnApplicationStateProto next(){
            return ProtoUtils.convertToProtoFormat(iter.next());
          }
          @Override public void remove(){
            throw new UnsupportedOperationException();
          }
        }
;
      }
    }
;
    builder.addAllApplicationStates(iterable);
  }
  if (this.applicationTags != null && !this.applicationTags.isEmpty()) {
    builder.addAllApplicationTags(this.applicationTags);
  }
  if (this.scope != null) {
    builder.setScope(ProtoUtils.convertToProtoFormat(scope));
  }
  if (this.start != null) {
    builder.setStartBegin(start.getMinimumLong());
    builder.setStartEnd(start.getMaximumLong());
  }
  if (this.finish != null) {
    builder.setFinishBegin(start.getMinimumLong());
    builder.setFinishEnd(start.getMaximumLong());
  }
  builder.setLimit(limit);
  if (this.users != null && !this.users.isEmpty()) {
    builder.addAllUsers(this.users);
  }
  if (this.queues != null && !this.queues.isEmpty()) {
    builder.addAllQueues(this.queues);
  }
}
