{
  long sumOfFileSizes=0;
  for (int i=0; i < sortedFileSizes.length; i++) {
    sumOfFileSizes+=sortedFileSizes[i];
  }
  FileSystem fs=FileSystem.get(jobConf);
  assertEquals("Number of distributed cache files to be generated is wrong.",sortedFileSizes.length,jobConf.getInt(GenerateDistCacheData.GRIDMIX_DISTCACHE_FILE_COUNT,-1));
  assertEquals("Total size of dist cache files to be generated is wrong.",sumOfFileSizes,jobConf.getLong(GenerateDistCacheData.GRIDMIX_DISTCACHE_BYTE_COUNT,-1));
  Path filesListFile=new Path(jobConf.get(GenerateDistCacheData.GRIDMIX_DISTCACHE_FILE_LIST));
  FileStatus stat=fs.getFileStatus(filesListFile);
  assertEquals("Wrong permissions of dist Cache files list file " + filesListFile,new FsPermission((short)0644),stat.getPermission());
  InputSplit split=new FileSplit(filesListFile,0,stat.getLen(),(String[])null);
  TaskAttemptContext taskContext=MapReduceTestUtil.createDummyMapTaskAttemptContext(jobConf);
  RecordReader<LongWritable,BytesWritable> reader=new GenerateDistCacheData.GenDCDataFormat().createRecordReader(split,taskContext);
  MapContext<LongWritable,BytesWritable,NullWritable,BytesWritable> mapContext=new MapContextImpl<LongWritable,BytesWritable,NullWritable,BytesWritable>(jobConf,taskContext.getTaskAttemptID(),reader,null,null,MapReduceTestUtil.createDummyReporter(),split);
  reader.initialize(split,mapContext);
  doValidateSetupGenDC(reader,fs,sortedFileSizes);
}
