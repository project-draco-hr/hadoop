{
  FSImageStorageInspector inspector=storage.readAndInspectDirs();
  isUpgradeFinalized=inspector.isUpgradeFinalized();
  boolean needToSave=inspector.needToSave();
  LoadPlan loadPlan=inspector.createLoadPlan();
  LOG.debug("Planning to load image using following plan:\n" + loadPlan);
  needToSave|=loadPlan.doRecovery();
  StorageDirectory sdForProperties=loadPlan.getStorageDirectoryForProperties();
  storage.readProperties(sdForProperties);
  File imageFile=loadPlan.getImageFile();
  try {
    if (LayoutVersion.supports(Feature.TXID_BASED_LAYOUT,getLayoutVersion())) {
      loadFSImage(imageFile);
    }
 else     if (LayoutVersion.supports(Feature.FSIMAGE_CHECKSUM,getLayoutVersion())) {
      String md5=storage.getDeprecatedProperty(NNStorage.DEPRECATED_MESSAGE_DIGEST_PROPERTY);
      if (md5 == null) {
        throw new InconsistentFSStateException(sdForProperties.getRoot(),"Message digest property " + NNStorage.DEPRECATED_MESSAGE_DIGEST_PROPERTY + " not set for storage directory "+ sdForProperties.getRoot());
      }
      loadFSImage(imageFile,new MD5Hash(md5));
    }
 else {
      loadFSImage(imageFile,null);
    }
  }
 catch (  IOException ioe) {
    throw new IOException("Failed to load image from " + loadPlan.getImageFile(),ioe);
  }
  long numLoaded=loadEdits(loadPlan.getEditsFiles());
  needToSave|=needsResaveBasedOnStaleCheckpoint(imageFile,numLoaded);
  editLog.setNextTxId(storage.getMostRecentCheckpointTxId() + numLoaded + 1);
  return needToSave;
}
