{
  LOG.debug("Listing beans for " + qry);
  Set<ObjectName> names=null;
  names=mBeanServer.queryNames(qry,null);
  jg.writeArrayFieldStart("beans");
  Iterator<ObjectName> it=names.iterator();
  while (it.hasNext()) {
    ObjectName oname=it.next();
    MBeanInfo minfo;
    String code;
    try {
      minfo=mBeanServer.getMBeanInfo(oname);
      code=minfo.getClassName();
      try {
        if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) {
          code=(String)mBeanServer.getAttribute(oname,"modelerType");
        }
      }
 catch (      AttributeNotFoundException e) {
      }
catch (      MBeanException e) {
        LOG.error("getting attribute modelerType of " + oname + " threw an exception",e);
      }
catch (      RuntimeException e) {
        LOG.error("getting attribute modelerType of " + oname + " threw an exception",e);
      }
catch (      ReflectionException e) {
        LOG.error("getting attribute modelerType of " + oname + " threw an exception",e);
      }
    }
 catch (    InstanceNotFoundException e) {
      continue;
    }
catch (    IntrospectionException e) {
      LOG.error("Problem while trying to process JMX query: " + qry + " with MBean "+ oname,e);
      continue;
    }
catch (    ReflectionException e) {
      LOG.error("Problem while trying to process JMX query: " + qry + " with MBean "+ oname,e);
      continue;
    }
    jg.writeStartObject();
    jg.writeStringField("name",oname.toString());
    jg.writeStringField("modelerType",code);
    MBeanAttributeInfo attrs[]=minfo.getAttributes();
    for (int i=0; i < attrs.length; i++) {
      writeAttribute(jg,oname,attrs[i]);
    }
    jg.writeEndObject();
  }
  jg.writeEndArray();
}
