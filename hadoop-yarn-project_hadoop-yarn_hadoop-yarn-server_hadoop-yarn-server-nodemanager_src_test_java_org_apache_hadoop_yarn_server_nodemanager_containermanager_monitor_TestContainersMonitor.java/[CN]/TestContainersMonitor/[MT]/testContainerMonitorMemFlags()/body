{
  ContainersMonitor cm=null;
  long expPmem=8192 * 1024 * 1024l;
  long expVmem=(long)(expPmem * 2.1f);
  cm=new ContainersMonitorImpl(mock(ContainerExecutor.class),mock(AsyncDispatcher.class),mock(Context.class));
  cm.init(getConfForCM(false,false,8192,2.1f));
  assertEquals(expPmem,cm.getPmemAllocatedForContainers());
  assertEquals(expVmem,cm.getVmemAllocatedForContainers());
  assertEquals(false,cm.isPmemCheckEnabled());
  assertEquals(false,cm.isVmemCheckEnabled());
  cm=new ContainersMonitorImpl(mock(ContainerExecutor.class),mock(AsyncDispatcher.class),mock(Context.class));
  cm.init(getConfForCM(true,false,8192,2.1f));
  assertEquals(expPmem,cm.getPmemAllocatedForContainers());
  assertEquals(expVmem,cm.getVmemAllocatedForContainers());
  assertEquals(true,cm.isPmemCheckEnabled());
  assertEquals(false,cm.isVmemCheckEnabled());
  cm=new ContainersMonitorImpl(mock(ContainerExecutor.class),mock(AsyncDispatcher.class),mock(Context.class));
  cm.init(getConfForCM(true,true,8192,2.1f));
  assertEquals(expPmem,cm.getPmemAllocatedForContainers());
  assertEquals(expVmem,cm.getVmemAllocatedForContainers());
  assertEquals(true,cm.isPmemCheckEnabled());
  assertEquals(true,cm.isVmemCheckEnabled());
  cm=new ContainersMonitorImpl(mock(ContainerExecutor.class),mock(AsyncDispatcher.class),mock(Context.class));
  cm.init(getConfForCM(false,true,8192,2.1f));
  assertEquals(expPmem,cm.getPmemAllocatedForContainers());
  assertEquals(expVmem,cm.getVmemAllocatedForContainers());
  assertEquals(false,cm.isPmemCheckEnabled());
  assertEquals(true,cm.isVmemCheckEnabled());
}
