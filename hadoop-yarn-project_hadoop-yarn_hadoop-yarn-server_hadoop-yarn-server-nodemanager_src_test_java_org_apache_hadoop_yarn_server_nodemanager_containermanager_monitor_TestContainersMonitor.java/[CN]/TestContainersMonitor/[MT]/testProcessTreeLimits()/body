{
  File procfsRootDir=new File(localDir,"proc");
  String[] pids={"100","200","300","400","500","600","700"};
  try {
    TestProcfsBasedProcessTree.setupProcfsRootDir(procfsRootDir);
    TestProcfsBasedProcessTree.setupPidDirs(procfsRootDir,pids);
    TestProcfsBasedProcessTree.ProcessStatInfo[] procs=new TestProcfsBasedProcessTree.ProcessStatInfo[7];
    procs[0]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"100","proc1","1","100","100","100000"});
    procs[1]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"200","proc2","1","200","200","200000"});
    procs[2]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"300","proc3","200","200","200","300000"});
    procs[3]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"400","proc4","200","200","200","400000"});
    procs[4]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"500","proc5","100","100","100","1500000"});
    procs[5]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"600","proc6","1","600","600","100000"});
    procs[6]=new TestProcfsBasedProcessTree.ProcessStatInfo(new String[]{"700","proc7","600","600","600","100000"});
    TestProcfsBasedProcessTree.writeStatFiles(procfsRootDir,pids,procs);
    long limit=700000;
    ContainersMonitorImpl test=new ContainersMonitorImpl(null,null,null);
    ProcfsBasedProcessTree pTree=new ProcfsBasedProcessTree("100",true,procfsRootDir.getAbsolutePath());
    pTree.getProcessTree();
    assertTrue("tree rooted at 100 should be over limit " + "after first iteration.",test.isProcessTreeOverLimit(pTree,"dummyId",limit));
    pTree=new ProcfsBasedProcessTree("200",true,procfsRootDir.getAbsolutePath());
    pTree.getProcessTree();
    assertFalse("tree rooted at 200 shouldn't be over limit " + "after one iteration.",test.isProcessTreeOverLimit(pTree,"dummyId",limit));
    pTree.getProcessTree();
    assertTrue("tree rooted at 200 should be over limit after 2 iterations",test.isProcessTreeOverLimit(pTree,"dummyId",limit));
    pTree=new ProcfsBasedProcessTree("600",true,procfsRootDir.getAbsolutePath());
    pTree.getProcessTree();
    assertFalse("tree rooted at 600 should never be over limit.",test.isProcessTreeOverLimit(pTree,"dummyId",limit));
    pTree.getProcessTree();
    assertFalse("tree rooted at 600 should never be over limit.",test.isProcessTreeOverLimit(pTree,"dummyId",limit));
  }
  finally {
    FileUtil.fullyDelete(procfsRootDir);
  }
}
