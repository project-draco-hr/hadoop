{
  WriteStableHow stableHow=request.getStableHow();
  WccAttr preOpAttr=latestAttr.getWccAttr();
  int count=request.getCount();
  WriteCtx writeCtx=addWritesToCache(request,channel,xid);
  if (writeCtx == null) {
    processOverWrite(dfsClient,request,channel,xid,iug);
  }
 else {
    boolean startWriting=checkAndStartWrite(asyncDataService,writeCtx);
    if (!startWriting) {
      waitForDump();
      if (stableHow != WriteStableHow.UNSTABLE) {
        LOG.info("Have to change stable write to unstable write: " + request.getStableHow());
        stableHow=WriteStableHow.UNSTABLE;
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("UNSTABLE write request, send response for offset: " + writeCtx.getOffset());
      }
      WccData fileWcc=new WccData(preOpAttr,latestAttr);
      WRITE3Response response=new WRITE3Response(Nfs3Status.NFS3_OK,fileWcc,count,stableHow,Nfs3Constant.WRITE_COMMIT_VERF);
      RpcProgramNfs3.metrics.addWrite(Nfs3Utils.getElapsedTime(writeCtx.startTime));
      Nfs3Utils.writeChannel(channel,response.serialize(new XDR(),xid,new VerifierNone()),xid);
      writeCtx.setReplied(true);
    }
  }
}
