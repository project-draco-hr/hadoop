{
  MiniDFSCluster.DataNodeProperties lastHost=stopDataNode(hosts[hosts.length - 1]);
  final Path file=new Path("/foo");
  DFSTestUtil.createFile(fs,file,BLOCK_STRIPED_CELL_SIZE * NUM_DATA_BLOCKS * 2,(short)1,0L);
  MiniDFSCluster.DataNodeProperties host1=stopDataNode("host1");
  cluster.restartDataNode(lastHost);
  cluster.waitActive();
  final short blockNum=(short)(NUM_DATA_BLOCKS + NUM_PARITY_BLOCKS);
  DFSTestUtil.waitForReplication(fs,file,blockNum,15 * 1000);
  cluster.restartDataNode(host1);
  cluster.waitActive();
  for (  DataNode dn : cluster.getDataNodes()) {
    if (dn.getDatanodeId().getHostName().equals("host1")) {
      DataNodeTestUtils.triggerBlockReport(dn);
      break;
    }
  }
  DFSTestUtil.waitForReplication(fs,file,blockNum,15 * 1000);
  LocatedBlocks blks=fs.getClient().getLocatedBlocks(file.toString(),0);
  LocatedStripedBlock block=(LocatedStripedBlock)blks.getLastLocatedBlock();
  for (  DatanodeInfo dn : block.getLocations()) {
    Assert.assertFalse(dn.getHostName().equals("host1"));
  }
}
