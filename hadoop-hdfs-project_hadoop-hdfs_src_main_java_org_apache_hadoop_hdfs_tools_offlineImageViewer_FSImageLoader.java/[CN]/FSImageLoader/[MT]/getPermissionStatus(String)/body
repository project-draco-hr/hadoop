{
  long id=getINodeId(path);
  FsImageProto.INodeSection.INode inode=inodes.get(id);
switch (inode.getType()) {
case FILE:
{
      FsImageProto.INodeSection.INodeFile f=inode.getFile();
      return FSImageFormatPBINode.Loader.loadPermission(f.getPermission(),stringTable);
    }
case DIRECTORY:
{
    FsImageProto.INodeSection.INodeDirectory d=inode.getDirectory();
    return FSImageFormatPBINode.Loader.loadPermission(d.getPermission(),stringTable);
  }
case SYMLINK:
{
  FsImageProto.INodeSection.INodeSymlink s=inode.getSymlink();
  return FSImageFormatPBINode.Loader.loadPermission(s.getPermission(),stringTable);
}
default :
{
return null;
}
}
}
