{
  Preconditions.checkArgument(path.startsWith("/"));
  long id=INodeId.ROOT_INODE_ID;
  for (int offset=0, next; offset < path.length(); offset=next) {
    next=path.indexOf('/',offset + 1);
    if (next == -1) {
      next=path.length();
    }
    if (offset + 1 > next) {
      break;
    }
    final String component=path.substring(offset + 1,next);
    if (component.isEmpty()) {
      continue;
    }
    final long[] children=dirmap.get(id);
    if (children == null) {
      throw new FileNotFoundException(path);
    }
    boolean found=false;
    for (    long cid : children) {
      FsImageProto.INodeSection.INode child=fromINodeId(cid);
      if (component.equals(child.getName().toStringUtf8())) {
        found=true;
        id=child.getId();
        break;
      }
    }
    if (!found) {
      throw new FileNotFoundException(path);
    }
  }
  return id;
}
