{
  long id=lookup(path);
  FsImageProto.INodeSection.INode inode=fromINodeId(id);
switch (inode.getType()) {
case FILE:
{
      FsImageProto.INodeSection.INodeFile f=inode.getFile();
      return FSImageFormatPBINode.Loader.loadAclEntries(f.getAcl(),stringTable);
    }
case DIRECTORY:
{
    FsImageProto.INodeSection.INodeDirectory d=inode.getDirectory();
    return FSImageFormatPBINode.Loader.loadAclEntries(d.getAcl(),stringTable);
  }
default :
{
  return new ArrayList<AclEntry>();
}
}
}
