{
  AppContext appCtx=mock(AppContext.class);
  JobTokenSecretManager secret=mock(JobTokenSecretManager.class);
  RMHeartbeatHandler rmHeartbeatHandler=mock(RMHeartbeatHandler.class);
  TaskHeartbeatHandler hbHandler=mock(TaskHeartbeatHandler.class);
  Dispatcher dispatcher=mock(Dispatcher.class);
  EventHandler ea=mock(EventHandler.class);
  when(dispatcher.getEventHandler()).thenReturn(ea);
  when(appCtx.getEventHandler()).thenReturn(ea);
  CheckpointAMPreemptionPolicy policy=new CheckpointAMPreemptionPolicy();
  policy.init(appCtx);
  MockTaskAttemptListenerImpl listener=new MockTaskAttemptListenerImpl(appCtx,secret,rmHeartbeatHandler,hbHandler,policy);
  Configuration conf=new Configuration();
  listener.init(conf);
  listener.start();
  JVMId id=new JVMId("foo",1,true,1);
  WrappedJvmID wid=new WrappedJvmID(id.getJobId(),id.isMap,id.getId());
  JvmContext context=new JvmContext();
  context.jvmId=id;
  JvmTask result=listener.getTask(context);
  assertNotNull(result);
  assertTrue(result.shouldDie);
  TaskAttemptId attemptID=mock(TaskAttemptId.class);
  Task task=mock(Task.class);
  listener.registerPendingTask(task,wid);
  result=listener.getTask(context);
  assertNull(result);
  listener.unregister(attemptID,wid);
  listener.registerPendingTask(task,wid);
  listener.registerLaunchedTask(attemptID,wid);
  verify(hbHandler).register(attemptID);
  result=listener.getTask(context);
  assertNotNull(result);
  assertFalse(result.shouldDie);
  result=listener.getTask(context);
  assertNotNull(result);
  assertTrue(result.shouldDie);
  listener.unregister(attemptID,wid);
  result=listener.getTask(context);
  assertNotNull(result);
  assertTrue(result.shouldDie);
  listener.stop();
  JVMId jvmid=JVMId.forName("jvm_001_002_m_004");
  assertNotNull(jvmid);
  try {
    JVMId.forName("jvm_001_002_m_004_006");
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertEquals(e.getMessage(),"TaskId string : jvm_001_002_m_004_006 is not properly formed");
  }
}
