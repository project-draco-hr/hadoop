{
  isThreadDumpCaptured=false;
  int httpTimeOut=conf.getInt(DFSConfigKeys.DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY,DFSConfigKeys.DFS_HA_ZKFC_NN_HTTP_TIMEOUT_KEY_DEFAULT);
  if (httpTimeOut == 0) {
    return;
  }
  try {
    String stacksUrl=DFSUtil.getInfoServer(localNNTarget.getAddress(),conf,DFSUtil.getHttpClientScheme(conf)) + "/stacks";
    URL url=new URL(stacksUrl);
    HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.setReadTimeout(httpTimeOut);
    conn.setConnectTimeout(httpTimeOut);
    conn.connect();
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    IOUtils.copyBytes(conn.getInputStream(),out,4096,true);
    StringBuilder localNNThreadDumpContent=new StringBuilder("-- Local NN thread dump -- \n");
    localNNThreadDumpContent.append(out);
    localNNThreadDumpContent.append("\n -- Local NN thread dump -- ");
    LOG.info(localNNThreadDumpContent);
    isThreadDumpCaptured=true;
  }
 catch (  IOException e) {
    LOG.warn("Can't get local NN thread dump due to " + e.getMessage());
  }
}
