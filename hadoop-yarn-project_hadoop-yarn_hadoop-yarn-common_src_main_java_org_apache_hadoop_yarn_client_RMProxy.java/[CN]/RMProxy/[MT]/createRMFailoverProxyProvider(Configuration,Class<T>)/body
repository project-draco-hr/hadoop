{
  Class<? extends RMFailoverProxyProvider<T>> defaultProviderClass;
  try {
    defaultProviderClass=(Class<? extends RMFailoverProxyProvider<T>>)Class.forName(YarnConfiguration.DEFAULT_CLIENT_FAILOVER_PROXY_PROVIDER);
  }
 catch (  Exception e) {
    throw new YarnRuntimeException("Invalid default failover provider class" + YarnConfiguration.DEFAULT_CLIENT_FAILOVER_PROXY_PROVIDER,e);
  }
  RMFailoverProxyProvider<T> provider=ReflectionUtils.newInstance(conf.getClass(YarnConfiguration.CLIENT_FAILOVER_PROXY_PROVIDER,defaultProviderClass,RMFailoverProxyProvider.class),conf);
  provider.init(conf,(RMProxy<T>)this,protocol);
  return provider;
}
