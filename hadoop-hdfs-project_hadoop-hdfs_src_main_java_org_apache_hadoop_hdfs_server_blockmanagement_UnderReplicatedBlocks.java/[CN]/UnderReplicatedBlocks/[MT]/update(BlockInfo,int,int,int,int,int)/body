{
  int oldReplicas=curReplicas - curReplicasDelta;
  int oldExpectedReplicas=curExpectedReplicas - expectedReplicasDelta;
  int curPri=getPriority(block,curReplicas,decommissionedReplicas,curExpectedReplicas);
  int oldPri=getPriority(block,oldReplicas,decommissionedReplicas,oldExpectedReplicas);
  if (NameNode.stateChangeLog.isDebugEnabled()) {
    NameNode.stateChangeLog.debug("UnderReplicationBlocks.update " + block + " curReplicas "+ curReplicas+ " curExpectedReplicas "+ curExpectedReplicas+ " oldReplicas "+ oldReplicas+ " oldExpectedReplicas  "+ oldExpectedReplicas+ " curPri  "+ curPri+ " oldPri  "+ oldPri);
  }
  if (oldPri != curPri) {
    remove(block,oldPri);
  }
  if (priorityQueues.get(curPri).add(block)) {
    NameNode.blockStateChangeLog.debug("BLOCK* NameSystem.UnderReplicationBlock.update: {} has only {} " + "replicas and needs {} replicas so is added to " + "neededReplications at priority level {}",block,curReplicas,curExpectedReplicas,curPri);
  }
  if (oldPri != curPri || expectedReplicasDelta != 0) {
    if (curPri == QUEUE_WITH_CORRUPT_BLOCKS && curExpectedReplicas == 1) {
      corruptReplOneBlocks++;
    }
 else     if (oldPri == QUEUE_WITH_CORRUPT_BLOCKS && curExpectedReplicas - expectedReplicasDelta == 1) {
      corruptReplOneBlocks--;
    }
  }
}
