{
  final int maxNumLevel=2;
  final int maxPerLevel=8;
  List<List<Integer>> allLists=new ArrayList<>();
  int numIndex=NUM_PARITY_BLOCKS;
  for (int i=0; i < maxNumLevel && numIndex > 1; i++) {
    List<List<Integer>> lists=combinations(NUM_DATA_BLOCKS + NUM_PARITY_BLOCKS,numIndex);
    if (lists.size() > maxPerLevel) {
      Collections.shuffle(lists);
      lists=lists.subList(0,maxPerLevel);
    }
    allLists.addAll(lists);
    numIndex--;
  }
  int[][] dnIndexSuite=new int[allLists.size()][];
  for (int i=0; i < dnIndexSuite.length; i++) {
    int[] list=new int[allLists.get(i).size()];
    for (int j=0; j < list.length; j++) {
      list[j]=allLists.get(i).get(j);
    }
    dnIndexSuite[i]=list;
  }
  return dnIndexSuite;
}
