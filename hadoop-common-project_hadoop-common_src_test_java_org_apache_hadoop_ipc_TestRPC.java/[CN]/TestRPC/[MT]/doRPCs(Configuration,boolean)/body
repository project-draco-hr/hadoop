{
  Server server;
  TestRpcService proxy=null;
  server=setupTestServer(myConf,5);
  server.refreshServiceAcl(myConf,new TestPolicyProvider());
  TestProtos.EmptyRequestProto emptyRequestProto=TestProtos.EmptyRequestProto.newBuilder().build();
  try {
    proxy=getClient(addr,conf);
    proxy.ping(null,emptyRequestProto);
    if (expectFailure) {
      fail("Expect RPC.getProxy to fail with AuthorizationException!");
    }
  }
 catch (  ServiceException e) {
    if (expectFailure) {
      RemoteException re=(RemoteException)e.getCause();
      assertTrue(re.unwrapRemoteException() instanceof AuthorizationException);
      assertEquals("RPC error code should be UNAUTHORIZED",RpcErrorCodeProto.FATAL_UNAUTHORIZED,re.getErrorCode());
    }
 else {
      throw e;
    }
  }
 finally {
    MetricsRecordBuilder rb=getMetrics(server.rpcMetrics.name());
    if (expectFailure) {
      assertCounter("RpcAuthorizationFailures",1L,rb);
    }
 else {
      assertCounter("RpcAuthorizationSuccesses",1L,rb);
    }
    assertCounter("RpcAuthenticationFailures",0L,rb);
    assertCounter("RpcAuthenticationSuccesses",0L,rb);
    stop(server,proxy);
  }
}
