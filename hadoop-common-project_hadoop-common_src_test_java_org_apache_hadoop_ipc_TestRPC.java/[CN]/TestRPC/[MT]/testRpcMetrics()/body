{
  Server server;
  TestRpcService proxy=null;
  final int interval=1;
  conf.setBoolean(CommonConfigurationKeys.RPC_METRICS_QUANTILE_ENABLE,true);
  conf.set(CommonConfigurationKeys.RPC_METRICS_PERCENTILES_INTERVALS_KEY,"" + interval);
  server=setupTestServer(conf,5);
  try {
    proxy=getClient(addr,conf);
    for (int i=0; i < 1000; i++) {
      proxy.ping(null,newEmptyRequest());
      proxy.echo(null,newEchoRequest("" + i));
    }
    MetricsRecordBuilder rpcMetrics=getMetrics(server.getRpcMetrics().name());
    assertTrue("Expected non-zero rpc queue time",getLongCounter("RpcQueueTimeNumOps",rpcMetrics) > 0);
    assertTrue("Expected non-zero rpc processing time",getLongCounter("RpcProcessingTimeNumOps",rpcMetrics) > 0);
    MetricsAsserts.assertQuantileGauges("RpcQueueTime" + interval + "s",rpcMetrics);
    MetricsAsserts.assertQuantileGauges("RpcProcessingTime" + interval + "s",rpcMetrics);
  }
  finally {
    stop(server,proxy);
  }
}
