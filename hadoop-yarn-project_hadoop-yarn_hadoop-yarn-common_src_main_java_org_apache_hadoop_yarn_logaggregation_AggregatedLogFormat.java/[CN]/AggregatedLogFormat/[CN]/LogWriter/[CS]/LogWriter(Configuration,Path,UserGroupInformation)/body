{
  try {
    this.fsDataOStream=userUgi.doAs(new PrivilegedExceptionAction<FSDataOutputStream>(){
      @Override public FSDataOutputStream run() throws Exception {
        FileContext fc=FileContext.getFileContext(conf);
        fc.setUMask(APP_LOG_FILE_UMASK);
        return fc.create(remoteAppLogFile,EnumSet.of(CreateFlag.CREATE,CreateFlag.OVERWRITE),new Options.CreateOpts[]{});
      }
    }
);
  }
 catch (  InterruptedException e) {
    throw new IOException(e);
  }
  this.writer=new TFile.Writer(this.fsDataOStream,256 * 1024,conf.get(YarnConfiguration.NM_LOG_AGG_COMPRESSION_TYPE,YarnConfiguration.DEFAULT_NM_LOG_AGG_COMPRESSION_TYPE),null,conf);
  writeVersion();
}
