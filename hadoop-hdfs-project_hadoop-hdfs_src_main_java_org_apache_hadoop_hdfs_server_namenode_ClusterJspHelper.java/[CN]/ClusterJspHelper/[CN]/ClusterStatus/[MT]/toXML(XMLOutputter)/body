{
  if (error != null) {
    createGeneralException(doc,clusterid,StringUtils.stringifyException(error));
    doc.getWriter().flush();
    return;
  }
  int size=nnList.size();
  long total=0L, free=0L, nonDfsUsed=0l;
  float dfsUsedPercent=0.0f, dfsRemainingPercent=0.0f;
  if (size > 0) {
    total=total_sum / size;
    free=free_sum / size;
    nonDfsUsed=nonDfsUsed_sum / size;
    dfsUsedPercent=DFSUtil.getPercentUsed(clusterDfsUsed,total);
    dfsRemainingPercent=DFSUtil.getPercentRemaining(free,total);
  }
  doc.startTag("cluster");
  doc.attribute("clusterId",clusterid);
  doc.startTag("storage");
  toXmlItemBlock(doc,"Total Files And Directories",Long.toString(totalFilesAndDirectories));
  toXmlItemBlock(doc,"Configured Capacity",StringUtils.byteDesc(total));
  toXmlItemBlock(doc,"DFS Used",StringUtils.byteDesc(clusterDfsUsed));
  toXmlItemBlock(doc,"Non DFS Used",StringUtils.byteDesc(nonDfsUsed));
  toXmlItemBlock(doc,"DFS Remaining",StringUtils.byteDesc(free));
  toXmlItemBlock(doc,"DFS Used%",DFSUtil.percent2String(dfsUsedPercent));
  toXmlItemBlock(doc,"DFS Remaining%",DFSUtil.percent2String(dfsRemainingPercent));
  doc.endTag();
  doc.startTag("namenodes");
  toXmlItemBlock(doc,"NamenodesCount",Integer.toString(size));
  for (  NamenodeStatus nn : nnList) {
    doc.startTag("node");
    toXmlItemBlockWithLink(doc,nn.host,nn.httpAddress,"NameNode");
    toXmlItemBlock(doc,"Blockpool Used",StringUtils.byteDesc(nn.bpUsed));
    toXmlItemBlock(doc,"Blockpool Used%",DFSUtil.percent2String(DFSUtil.getPercentUsed(nn.bpUsed,total)));
    toXmlItemBlock(doc,"Files And Directories",Long.toString(nn.filesAndDirectories));
    toXmlItemBlock(doc,"Blocks",Long.toString(nn.blocksCount));
    toXmlItemBlock(doc,"Missing Blocks",Long.toString(nn.missingBlocksCount));
    toXmlItemBlockWithLink(doc,nn.liveDatanodeCount + " (" + nn.liveDecomCount+ ")",new URL(nn.httpAddress,"/dfsnodelist.jsp?whatNodes=LIVE"),"Live Datanode (Decommissioned)");
    toXmlItemBlockWithLink(doc,nn.deadDatanodeCount + " (" + nn.deadDecomCount+ ")",new URL(nn.httpAddress,"/dfsnodelist.jsp?whatNodes=DEAD"),"Dead Datanode (Decommissioned)");
    toXmlItemBlock(doc,"Software Version",nn.softwareVersion);
    doc.endTag();
  }
  doc.endTag();
  createNamenodeExceptionMsg(doc,nnExceptions);
  doc.endTag();
  doc.getWriter().flush();
}
