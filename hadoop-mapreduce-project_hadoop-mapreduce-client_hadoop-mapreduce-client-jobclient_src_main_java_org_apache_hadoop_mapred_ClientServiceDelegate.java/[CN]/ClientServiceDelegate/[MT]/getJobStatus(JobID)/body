{
  org.apache.hadoop.mapreduce.v2.api.records.JobId jobId=TypeConverter.toYarn(oldJobID);
  String stagingDir=conf.get("yarn.apps.stagingDir");
  String jobFile=stagingDir + "/" + jobId.toString();
  JobReport report=null;
  MRClientProtocol protocol;
  GetJobReportRequest request=recordFactory.newRecordInstance(GetJobReportRequest.class);
  try {
    request.setJobId(jobId);
    protocol=getProxy(oldJobID);
    if (protocol == null) {
      return createFakeJobReport(currentAppState,jobId,jobFile);
    }
    report=getProxy(oldJobID).getJobReport(request).getJobReport();
  }
 catch (  YarnRemoteException yre) {
    LOG.warn(RPCUtil.toString(yre));
    throw yre;
  }
catch (  Exception e) {
    try {
      request.setJobId(jobId);
      protocol=getRefreshedProxy(oldJobID);
      if (protocol == null) {
        return createFakeJobReport(currentAppState,jobId,jobFile);
      }
      report=protocol.getJobReport(request).getJobReport();
    }
 catch (    YarnRemoteException yre) {
      LOG.warn(RPCUtil.toString(yre));
      throw yre;
    }
  }
  return TypeConverter.fromYarn(report,jobFile,serviceHttpAddr);
}
