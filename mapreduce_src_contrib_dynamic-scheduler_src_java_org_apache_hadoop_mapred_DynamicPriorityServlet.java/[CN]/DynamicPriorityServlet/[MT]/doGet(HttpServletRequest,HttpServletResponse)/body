{
  String query=request.getQueryString();
  int role=auth.authorize(query,request.getHeader("Authorization"),request.getParameter("user"),request.getParameter("timestamp"));
  String queue=request.getParameter("queue");
  String info="";
  if (request.getParameter("addQueue") != null) {
    checkAdmin(role,query);
    queue=request.getParameter("addQueue");
    scheduler.allocations.addQueue(queue);
    info=scheduler.allocations.getInfo(queue);
  }
  if (request.getParameter("removeQueue") != null) {
    checkAdmin(role,query);
    queue=request.getParameter("removeQueue");
    scheduler.allocations.removeQueue(queue);
    info=scheduler.allocations.getInfo(queue);
  }
  if (request.getParameter("addBudget") != null) {
    checkAdmin(role,query);
    float budget=Float.parseFloat(request.getParameter("addBudget"));
    scheduler.allocations.addBudget(queue,budget);
    info=scheduler.allocations.getInfo(queue);
  }
  if (request.getParameter("setSpending") != null) {
    checkUser(role,request,queue,query);
    float spending=Float.parseFloat(request.getParameter("setSpending"));
    scheduler.allocations.setSpending(queue,spending);
    info=scheduler.allocations.getInfo(queue);
  }
  if (request.getParameter("info") != null) {
    queue=request.getParameter("info");
    checkUser(role,request,queue,query);
    info=scheduler.allocations.getQueueInfo(queue);
  }
  if (request.getParameter("infos") != null) {
    checkAdmin(role,query);
    info=scheduler.allocations.getQueueInfos();
  }
  if (request.getParameter("price") != null) {
    info=Float.toString(scheduler.allocations.getPrice());
    info="<price>" + info + "</price>\n";
  }
  if (request.getParameter("time") != null) {
    info="<start>" + Long.toString(PriorityAuthorization.START_TIME) + "</start>\n";
    info+="<time>" + Long.toString(System.currentTimeMillis()) + "</time>\n";
  }
  if (info == null) {
    info="";
  }
  response.setContentType("text/xml");
  PrintWriter out=new PrintWriter(response.getOutputStream());
  String hostname=StringUtils.simpleHostname(jobTracker.getJobTrackerMachine());
  out.print("<QueueInfo>");
  out.printf("<host>%s</host>\n",hostname);
  out.printf("%s",info);
  out.print("</QueueInfo>\n");
  out.close();
}
