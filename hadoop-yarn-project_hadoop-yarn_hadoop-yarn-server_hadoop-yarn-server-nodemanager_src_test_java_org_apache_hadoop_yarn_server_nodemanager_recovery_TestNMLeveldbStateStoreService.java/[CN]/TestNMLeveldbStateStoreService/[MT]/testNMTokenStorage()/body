{
  RecoveredNMTokenState state=stateStore.loadNMTokenState();
  assertNull(state.getCurrentMasterKey());
  assertNull(state.getPreviousMasterKey());
  assertTrue(state.getApplicationMasterKeys().isEmpty());
  NMTokenSecretManagerForTest secretMgr=new NMTokenSecretManagerForTest();
  MasterKey currentKey=secretMgr.generateKey();
  stateStore.storeNMTokenCurrentMasterKey(currentKey);
  restartStateStore();
  state=stateStore.loadNMTokenState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertNull(state.getPreviousMasterKey());
  assertTrue(state.getApplicationMasterKeys().isEmpty());
  MasterKey prevKey=secretMgr.generateKey();
  stateStore.storeNMTokenPreviousMasterKey(prevKey);
  restartStateStore();
  state=stateStore.loadNMTokenState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  assertTrue(state.getApplicationMasterKeys().isEmpty());
  ApplicationAttemptId attempt1=ApplicationAttemptId.newInstance(ApplicationId.newInstance(1,1),1);
  MasterKey attemptKey1=secretMgr.generateKey();
  stateStore.storeNMTokenApplicationMasterKey(attempt1,attemptKey1);
  ApplicationAttemptId attempt2=ApplicationAttemptId.newInstance(ApplicationId.newInstance(2,3),4);
  MasterKey attemptKey2=secretMgr.generateKey();
  stateStore.storeNMTokenApplicationMasterKey(attempt2,attemptKey2);
  restartStateStore();
  state=stateStore.loadNMTokenState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  Map<ApplicationAttemptId,MasterKey> loadedAppKeys=state.getApplicationMasterKeys();
  assertEquals(2,loadedAppKeys.size());
  assertEquals(attemptKey1,loadedAppKeys.get(attempt1));
  assertEquals(attemptKey2,loadedAppKeys.get(attempt2));
  ApplicationAttemptId attempt3=ApplicationAttemptId.newInstance(ApplicationId.newInstance(5,6),7);
  MasterKey attemptKey3=secretMgr.generateKey();
  stateStore.storeNMTokenApplicationMasterKey(attempt3,attemptKey3);
  stateStore.removeNMTokenApplicationMasterKey(attempt1);
  attemptKey2=prevKey;
  stateStore.storeNMTokenApplicationMasterKey(attempt2,attemptKey2);
  prevKey=currentKey;
  stateStore.storeNMTokenPreviousMasterKey(prevKey);
  currentKey=secretMgr.generateKey();
  stateStore.storeNMTokenCurrentMasterKey(currentKey);
  restartStateStore();
  state=stateStore.loadNMTokenState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  loadedAppKeys=state.getApplicationMasterKeys();
  assertEquals(2,loadedAppKeys.size());
  assertNull(loadedAppKeys.get(attempt1));
  assertEquals(attemptKey2,loadedAppKeys.get(attempt2));
  assertEquals(attemptKey3,loadedAppKeys.get(attempt3));
}
