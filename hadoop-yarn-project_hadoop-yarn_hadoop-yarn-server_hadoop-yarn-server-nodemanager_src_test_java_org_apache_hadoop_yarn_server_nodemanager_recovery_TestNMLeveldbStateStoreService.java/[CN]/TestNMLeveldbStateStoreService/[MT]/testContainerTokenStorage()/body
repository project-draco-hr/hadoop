{
  RecoveredContainerTokensState state=stateStore.loadContainerTokensState();
  assertNull(state.getCurrentMasterKey());
  assertNull(state.getPreviousMasterKey());
  assertTrue(state.getActiveTokens().isEmpty());
  ContainerTokenKeyGeneratorForTest keygen=new ContainerTokenKeyGeneratorForTest(new YarnConfiguration());
  MasterKey currentKey=keygen.generateKey();
  stateStore.storeContainerTokenCurrentMasterKey(currentKey);
  restartStateStore();
  state=stateStore.loadContainerTokensState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertNull(state.getPreviousMasterKey());
  assertTrue(state.getActiveTokens().isEmpty());
  MasterKey prevKey=keygen.generateKey();
  stateStore.storeContainerTokenPreviousMasterKey(prevKey);
  restartStateStore();
  state=stateStore.loadContainerTokensState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  assertTrue(state.getActiveTokens().isEmpty());
  ContainerId cid1=BuilderUtils.newContainerId(1,1,1,1);
  Long expTime1=1234567890L;
  ContainerId cid2=BuilderUtils.newContainerId(2,2,2,2);
  Long expTime2=9876543210L;
  stateStore.storeContainerToken(cid1,expTime1);
  stateStore.storeContainerToken(cid2,expTime2);
  restartStateStore();
  state=stateStore.loadContainerTokensState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  Map<ContainerId,Long> loadedActiveTokens=state.getActiveTokens();
  assertEquals(2,loadedActiveTokens.size());
  assertEquals(expTime1,loadedActiveTokens.get(cid1));
  assertEquals(expTime2,loadedActiveTokens.get(cid2));
  ContainerId cid3=BuilderUtils.newContainerId(3,3,3,3);
  Long expTime3=135798642L;
  stateStore.storeContainerToken(cid3,expTime3);
  stateStore.removeContainerToken(cid1);
  expTime2+=246897531L;
  stateStore.storeContainerToken(cid2,expTime2);
  prevKey=currentKey;
  stateStore.storeContainerTokenPreviousMasterKey(prevKey);
  currentKey=keygen.generateKey();
  stateStore.storeContainerTokenCurrentMasterKey(currentKey);
  restartStateStore();
  state=stateStore.loadContainerTokensState();
  assertEquals(currentKey,state.getCurrentMasterKey());
  assertEquals(prevKey,state.getPreviousMasterKey());
  loadedActiveTokens=state.getActiveTokens();
  assertEquals(2,loadedActiveTokens.size());
  assertNull(loadedActiveTokens.get(cid1));
  assertEquals(expTime2,loadedActiveTokens.get(cid2));
  assertEquals(expTime3,loadedActiveTokens.get(cid3));
}
