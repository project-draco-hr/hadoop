{
  RecoveredDeletionServiceState state=stateStore.loadDeletionServiceState();
  assertTrue(state.getTasks().isEmpty());
  DeletionServiceDeleteTaskProto proto=DeletionServiceDeleteTaskProto.newBuilder().setId(7).setUser("someuser").setSubdir("some/subdir").addBasedirs("some/dir/path").addBasedirs("some/other/dir/path").setDeletionTime(123456L).addSuccessorIds(8).addSuccessorIds(9).build();
  stateStore.storeDeletionTask(proto.getId(),proto);
  restartStateStore();
  state=stateStore.loadDeletionServiceState();
  assertEquals(1,state.getTasks().size());
  assertEquals(proto,state.getTasks().get(0));
  DeletionServiceDeleteTaskProto proto2=DeletionServiceDeleteTaskProto.newBuilder().setId(8).setUser("user2").setSubdir("subdir2").setDeletionTime(789L).build();
  stateStore.storeDeletionTask(proto2.getId(),proto2);
  restartStateStore();
  state=stateStore.loadDeletionServiceState();
  assertEquals(2,state.getTasks().size());
  assertTrue(state.getTasks().contains(proto));
  assertTrue(state.getTasks().contains(proto2));
  stateStore.removeDeletionTask(proto2.getId());
  restartStateStore();
  state=stateStore.loadDeletionServiceState();
  assertEquals(1,state.getTasks().size());
  assertEquals(proto,state.getTasks().get(0));
  stateStore.removeDeletionTask(proto.getId());
  restartStateStore();
  state=stateStore.loadDeletionServiceState();
  assertTrue(state.getTasks().isEmpty());
}
