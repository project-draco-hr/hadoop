{
  String user="somebody";
  ApplicationId appId=ApplicationId.newInstance(1,1);
  Path appRsrcPath=new Path("hdfs://some/app/resource");
  LocalResourcePBImpl rsrcPb=(LocalResourcePBImpl)LocalResource.newInstance(URL.fromPath(appRsrcPath),LocalResourceType.ARCHIVE,LocalResourceVisibility.APPLICATION,123L,456L);
  LocalResourceProto appRsrcProto=rsrcPb.getProto();
  Path appRsrcLocalPath=new Path("/some/local/dir/for/apprsrc");
  stateStore.startResourceLocalization(user,appId,appRsrcProto,appRsrcLocalPath);
  LocalizedResourceProto appLocalizedProto=LocalizedResourceProto.newBuilder().setResource(appRsrcProto).setLocalPath(appRsrcLocalPath.toString()).setSize(1234567L).build();
  stateStore.finishResourceLocalization(user,appId,appLocalizedProto);
  stateStore.removeLocalizedResource(user,appId,appRsrcLocalPath);
  restartStateStore();
  verifyEmptyState();
  stateStore.startResourceLocalization(user,appId,appRsrcProto,appRsrcLocalPath);
  stateStore.removeLocalizedResource(user,appId,appRsrcLocalPath);
  restartStateStore();
  verifyEmptyState();
  Path pubRsrcPath1=new Path("hdfs://some/public/resource1");
  rsrcPb=(LocalResourcePBImpl)LocalResource.newInstance(URL.fromPath(pubRsrcPath1),LocalResourceType.FILE,LocalResourceVisibility.PUBLIC,789L,135L);
  LocalResourceProto pubRsrcProto1=rsrcPb.getProto();
  Path pubRsrcLocalPath1=new Path("/some/local/dir/for/pubrsrc1");
  stateStore.startResourceLocalization(null,null,pubRsrcProto1,pubRsrcLocalPath1);
  LocalizedResourceProto pubLocalizedProto1=LocalizedResourceProto.newBuilder().setResource(pubRsrcProto1).setLocalPath(pubRsrcLocalPath1.toString()).setSize(789L).build();
  stateStore.finishResourceLocalization(null,null,pubLocalizedProto1);
  Path pubRsrcPath2=new Path("hdfs://some/public/resource2");
  rsrcPb=(LocalResourcePBImpl)LocalResource.newInstance(URL.fromPath(pubRsrcPath2),LocalResourceType.FILE,LocalResourceVisibility.PUBLIC,789L,135L);
  LocalResourceProto pubRsrcProto2=rsrcPb.getProto();
  Path pubRsrcLocalPath2=new Path("/some/local/dir/for/pubrsrc2");
  stateStore.startResourceLocalization(null,null,pubRsrcProto2,pubRsrcLocalPath2);
  LocalizedResourceProto pubLocalizedProto2=LocalizedResourceProto.newBuilder().setResource(pubRsrcProto2).setLocalPath(pubRsrcLocalPath2.toString()).setSize(7654321L).build();
  stateStore.finishResourceLocalization(null,null,pubLocalizedProto2);
  stateStore.removeLocalizedResource(null,null,pubRsrcLocalPath2);
  Path privRsrcPath=new Path("hdfs://some/private/resource");
  rsrcPb=(LocalResourcePBImpl)LocalResource.newInstance(URL.fromPath(privRsrcPath),LocalResourceType.PATTERN,LocalResourceVisibility.PRIVATE,789L,680L,"*pattern*");
  LocalResourceProto privRsrcProto=rsrcPb.getProto();
  Path privRsrcLocalPath=new Path("/some/local/dir/for/privrsrc");
  stateStore.startResourceLocalization(user,null,privRsrcProto,privRsrcLocalPath);
  stateStore.removeLocalizedResource(user,null,privRsrcLocalPath);
  restartStateStore();
  RecoveredLocalizationState state=stateStore.loadLocalizationState();
  LocalResourceTrackerState pubts=state.getPublicTrackerState();
  assertTrue(pubts.getInProgressResources().isEmpty());
  assertEquals(1,pubts.getLocalizedResources().size());
  assertEquals(pubLocalizedProto1,pubts.getLocalizedResources().iterator().next());
  Map<String,RecoveredUserResources> userResources=state.getUserResources();
  assertTrue(userResources.isEmpty());
}
