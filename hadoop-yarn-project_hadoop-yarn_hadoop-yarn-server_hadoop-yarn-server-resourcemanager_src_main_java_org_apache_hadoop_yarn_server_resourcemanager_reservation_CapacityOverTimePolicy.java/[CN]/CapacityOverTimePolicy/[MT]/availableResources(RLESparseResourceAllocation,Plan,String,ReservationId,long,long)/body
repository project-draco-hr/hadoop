{
  Resource planTotalCapacity=plan.getTotalCapacity();
  Resource maxInsRes=Resources.multiply(planTotalCapacity,maxInst);
  NavigableMap<Long,Resource> instQuota=new TreeMap<Long,Resource>();
  instQuota.put(start,maxInsRes);
  RLESparseResourceAllocation instRLEQuota=new RLESparseResourceAllocation(instQuota,plan.getResourceCalculator());
  RLESparseResourceAllocation used=plan.getConsumptionForUserOverTime(user,start,end);
  instRLEQuota=RLESparseResourceAllocation.merge(plan.getResourceCalculator(),planTotalCapacity,instRLEQuota,used,RLEOperator.subtract,start,end);
  instRLEQuota=RLESparseResourceAllocation.merge(plan.getResourceCalculator(),planTotalCapacity,available,instRLEQuota,RLEOperator.min,start,end);
  return instRLEQuota;
}
