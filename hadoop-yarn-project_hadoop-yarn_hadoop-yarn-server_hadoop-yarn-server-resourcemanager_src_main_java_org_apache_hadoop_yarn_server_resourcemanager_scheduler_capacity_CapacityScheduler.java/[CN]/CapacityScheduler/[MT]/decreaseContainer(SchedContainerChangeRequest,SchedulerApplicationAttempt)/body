{
  RMContainer rmContainer=decreaseRequest.getRMContainer();
  if (rmContainer.getState() != RMContainerState.RUNNING) {
    LOG.info("Trying to decrease a container not in RUNNING state, container=" + rmContainer + " state="+ rmContainer.getState().name());
    return;
  }
  if (Resources.equals(decreaseRequest.getDeltaCapacity(),Resources.none())) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Decrease target resource equals to existing resource for container:" + decreaseRequest.getContainerId() + " ignore this decrease request.");
    }
    return;
  }
  Resource resourceBeforeDecrease=Resources.clone(rmContainer.getContainer().getResource());
  FiCaSchedulerApp app=(FiCaSchedulerApp)attempt;
  LeafQueue queue=(LeafQueue)attempt.getQueue();
  queue.decreaseContainer(clusterResource,decreaseRequest,app);
  this.rmContext.getDispatcher().getEventHandler().handle(new RMNodeDecreaseContainerEvent(decreaseRequest.getNodeId(),Arrays.asList(rmContainer.getContainer())));
  LOG.info("Application attempt " + app.getApplicationAttemptId() + " decreased container:"+ decreaseRequest.getContainerId()+ " from "+ resourceBeforeDecrease+ " to "+ decreaseRequest.getTargetCapacity());
}
