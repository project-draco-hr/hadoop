{
  this.conf=loadCapacitySchedulerConfiguration(configuration);
  validateConf(this.conf);
  this.minimumAllocation=this.conf.getMinimumAllocation();
  initMaximumResourceCapability(this.conf.getMaximumAllocation());
  this.calculator=this.conf.getResourceCalculator();
  this.usePortForNodeName=this.conf.getUsePortForNodeName();
  this.applications=new ConcurrentHashMap<ApplicationId,SchedulerApplication<FiCaSchedulerApp>>();
  this.labelManager=rmContext.getNodeLabelManager();
  authorizer=YarnAuthorizationProvider.getInstance(yarnConf);
  initializeQueues(this.conf);
  scheduleAsynchronously=this.conf.getScheduleAynschronously();
  asyncScheduleInterval=this.conf.getLong(ASYNC_SCHEDULER_INTERVAL,DEFAULT_ASYNC_SCHEDULER_INTERVAL);
  if (scheduleAsynchronously) {
    asyncSchedulerThread=new AsyncScheduleThread(this);
  }
  LOG.info("Initialized CapacityScheduler with " + "calculator=" + getResourceCalculator().getClass() + ", "+ "minimumAllocation=<"+ getMinimumResourceCapability()+ ">, "+ "maximumAllocation=<"+ getMaximumResourceCapability()+ ">, "+ "asynchronousScheduling="+ scheduleAsynchronously+ ", "+ "asyncScheduleInterval="+ asyncScheduleInterval+ "ms");
}
