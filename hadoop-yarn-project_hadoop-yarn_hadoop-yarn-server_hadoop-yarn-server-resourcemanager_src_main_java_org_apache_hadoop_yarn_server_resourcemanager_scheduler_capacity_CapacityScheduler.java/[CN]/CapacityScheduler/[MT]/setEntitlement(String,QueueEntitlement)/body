{
  LeafQueue queue=getAndCheckLeafQueue(inQueue);
  ParentQueue parent=(ParentQueue)queue.getParent();
  if (!(queue instanceof ReservationQueue)) {
    throw new SchedulerDynamicEditException("Entitlement can not be" + " modified dynamically since queue " + inQueue + " is not a ReservationQueue");
  }
  if (!(parent instanceof PlanQueue)) {
    throw new SchedulerDynamicEditException("The parent of ReservationQueue " + inQueue + " must be an PlanQueue");
  }
  ReservationQueue newQueue=(ReservationQueue)queue;
  float sumChilds=((PlanQueue)parent).sumOfChildCapacities();
  float newChildCap=sumChilds - queue.getCapacity() + entitlement.getCapacity();
  if (newChildCap >= 0 && newChildCap < 1.0f + CSQueueUtils.EPSILON) {
    if (Math.abs(entitlement.getCapacity() - queue.getCapacity()) == 0 && Math.abs(entitlement.getMaxCapacity() - queue.getMaximumCapacity()) == 0) {
      return;
    }
    newQueue.setEntitlement(entitlement);
  }
 else {
    throw new SchedulerDynamicEditException("Sum of child queues would exceed 100% for PlanQueue: " + parent.getQueueName());
  }
  LOG.info("Set entitlement for ReservationQueue " + inQueue + "  to "+ queue.getCapacity()+ " request was ("+ entitlement.getCapacity()+ ")");
}
