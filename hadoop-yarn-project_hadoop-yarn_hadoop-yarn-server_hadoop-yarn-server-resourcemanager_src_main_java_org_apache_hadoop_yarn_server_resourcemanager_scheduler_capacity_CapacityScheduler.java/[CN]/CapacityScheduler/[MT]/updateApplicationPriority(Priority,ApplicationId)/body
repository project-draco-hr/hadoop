{
  Priority appPriority=null;
  SchedulerApplication<FiCaSchedulerApp> application=applications.get(applicationId);
  if (application == null) {
    throw new YarnException("Application '" + applicationId + "' is not present, hence could not change priority.");
  }
  RMApp rmApp=rmContext.getRMApps().get(applicationId);
  appPriority=checkAndGetApplicationPriority(newPriority,rmApp.getUser(),rmApp.getQueue(),applicationId);
  if (application.getPriority().equals(appPriority)) {
    return;
  }
  rmApp.getApplicationSubmissionContext().setPriority(appPriority);
  ApplicationStateData appState=ApplicationStateData.newInstance(rmApp.getSubmitTime(),rmApp.getStartTime(),rmApp.getApplicationSubmissionContext(),rmApp.getUser(),rmApp.getCallerContext());
  rmContext.getStateStore().updateApplicationStateSynchronously(appState,false);
  LeafQueue queue=(LeafQueue)getQueue(rmApp.getQueue());
synchronized (queue) {
    queue.getOrderingPolicy().removeSchedulableEntity(application.getCurrentAppAttempt());
    application.setPriority(appPriority);
    queue.getOrderingPolicy().addSchedulableEntity(application.getCurrentAppAttempt());
  }
  rmContext.getSystemMetricsPublisher().appUpdated(rmApp,System.currentTimeMillis());
  LOG.info("Priority '" + appPriority + "' is updated in queue :"+ rmApp.getQueue()+ " for application: "+ applicationId+ " for the user: "+ rmApp.getUser());
}
