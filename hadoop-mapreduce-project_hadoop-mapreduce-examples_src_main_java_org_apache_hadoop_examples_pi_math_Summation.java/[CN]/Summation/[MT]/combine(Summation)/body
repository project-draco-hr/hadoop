{
  if (this.N.delta != that.N.delta || this.E.delta != that.E.delta)   throw new IllegalArgumentException("this.N.delta != that.N.delta || this.E.delta != that.E.delta" + ",\n  this=" + this + ",\n  that="+ that);
  if (this.E.limit == that.E.value && this.N.limit == that.N.value) {
    final double v=Modular.addMod(this.value,that.value);
    final Summation s=new Summation(new ArithmeticProgression(N.symbol,N.value,N.delta,that.N.limit),new ArithmeticProgression(E.symbol,E.value,E.delta,that.E.limit));
    s.setValue(v);
    return s;
  }
  return null;
}
