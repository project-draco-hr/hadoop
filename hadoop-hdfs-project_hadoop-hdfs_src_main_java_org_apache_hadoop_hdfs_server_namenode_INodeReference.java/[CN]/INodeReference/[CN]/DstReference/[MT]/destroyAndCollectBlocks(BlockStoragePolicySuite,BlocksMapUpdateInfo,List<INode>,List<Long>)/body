{
  if (removeReference(this) <= 0) {
    getReferredINode().destroyAndCollectBlocks(bsps,collectedBlocks,removedINodes,removedUCFiles);
  }
 else {
    int prior=getPriorSnapshot(this);
    Preconditions.checkState(prior != Snapshot.NO_SNAPSHOT_ID);
    int snapshot=getSelfSnapshot(prior);
    INode referred=getReferredINode().asReference().getReferredINode();
    if (referred.isFile()) {
      INodeFile file=referred.asFile();
      Preconditions.checkState(file.isWithSnapshot());
      file.getFileWithSnapshotFeature().deleteCurrentFile();
      referred.cleanSubtree(bsps,snapshot,prior,collectedBlocks,removedINodes,removedUCFiles);
    }
 else     if (referred.isDirectory()) {
      INodeDirectory dir=referred.asDirectory();
      Preconditions.checkState(dir.isWithSnapshot());
      try {
        DirectoryWithSnapshotFeature.destroyDstSubtree(bsps,dir,snapshot,prior,collectedBlocks,removedINodes,removedUCFiles);
      }
 catch (      QuotaExceededException e) {
        LOG.error("should not exceed quota while snapshot deletion",e);
      }
    }
  }
}
