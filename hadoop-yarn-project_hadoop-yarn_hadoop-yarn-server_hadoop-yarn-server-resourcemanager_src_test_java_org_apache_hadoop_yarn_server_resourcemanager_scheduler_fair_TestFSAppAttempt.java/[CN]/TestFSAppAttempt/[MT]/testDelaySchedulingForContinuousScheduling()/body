{
  FSLeafQueue queue=scheduler.getQueueManager().getLeafQueue("queue",true);
  Priority prio=Mockito.mock(Priority.class);
  Mockito.when(prio.getPriority()).thenReturn(1);
  MockClock clock=new MockClock();
  scheduler.setClock(clock);
  long nodeLocalityDelayMs=5 * 1000L;
  long rackLocalityDelayMs=6 * 1000L;
  RMContext rmContext=resourceManager.getRMContext();
  ApplicationAttemptId applicationAttemptId=createAppAttemptId(1,1);
  FSAppAttempt schedulerApp=new FSAppAttempt(scheduler,applicationAttemptId,"user1",queue,null,rmContext);
  assertEquals(NodeType.NODE_LOCAL,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
  clock.tick(4);
  assertEquals(NodeType.NODE_LOCAL,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
  clock.tick(2);
  assertEquals(NodeType.RACK_LOCAL,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
  schedulerApp.resetAllowedLocalityLevel(prio,NodeType.NODE_LOCAL);
  schedulerApp.resetSchedulingOpportunities(prio,clock.getTime());
  assertEquals(NodeType.NODE_LOCAL,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
  clock.tick(6);
  assertEquals(NodeType.RACK_LOCAL,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
  clock.tick(7);
  assertEquals(NodeType.OFF_SWITCH,schedulerApp.getAllowedLocalityLevelByTime(prio,nodeLocalityDelayMs,rackLocalityDelayMs,clock.getTime()));
}
