{
  String[] pids={"100","200","300","400"};
  File procfsRootDir=new File(TEST_ROOT_DIR,"proc");
  try {
    setupProcfsRootDir(procfsRootDir);
    setupPidDirs(procfsRootDir,pids);
    ProcessStatInfo[] procInfos=new ProcessStatInfo[4];
    procInfos[0]=new ProcessStatInfo(new String[]{"100","proc1","1","100","100","100000"});
    procInfos[1]=new ProcessStatInfo(new String[]{"200","proc2","100","100","100","200000"});
    procInfos[2]=new ProcessStatInfo(new String[]{"300","proc3","1","300","300","300000"});
    procInfos[3]=new ProcessStatInfo(new String[]{"400","proc4","100","100","100","400000"});
    writeStatFiles(procfsRootDir,pids,procInfos);
    ProcfsBasedProcessTree processTree=new ProcfsBasedProcessTree("100",true,100L,procfsRootDir.getAbsolutePath());
    processTree.getProcessTree();
    assertEquals("Cumulative memory does not match",Long.parseLong("700000"),processTree.getCumulativeVmem());
    String[] newPids={"500"};
    setupPidDirs(procfsRootDir,newPids);
    ProcessStatInfo[] newProcInfos=new ProcessStatInfo[1];
    newProcInfos[0]=new ProcessStatInfo(new String[]{"500","proc5","100","100","100","500000"});
    writeStatFiles(procfsRootDir,newPids,newProcInfos);
    processTree.getProcessTree();
    assertEquals("Cumulative memory does not include new process",Long.parseLong("1200000"),processTree.getCumulativeVmem());
    assertEquals("Cumulative memory shouldn't have included new process",Long.parseLong("700000"),processTree.getCumulativeVmem(1));
    newPids=new String[]{"600"};
    setupPidDirs(procfsRootDir,newPids);
    newProcInfos=new ProcessStatInfo[1];
    newProcInfos[0]=new ProcessStatInfo(new String[]{"600","proc6","100","100","100","600000"});
    writeStatFiles(procfsRootDir,newPids,newProcInfos);
    processTree.getProcessTree();
    assertEquals("Cumulative memory shouldn't have included new processes",Long.parseLong("700000"),processTree.getCumulativeVmem(2));
    assertEquals("Cumulative memory shouldn't have included new processes",Long.parseLong("1200000"),processTree.getCumulativeVmem(1));
    assertEquals("Getting non-zero vmem for processes older than 3 iterations",0L,processTree.getCumulativeVmem(3));
  }
  finally {
    FileUtil.fullyDelete(procfsRootDir);
  }
}
