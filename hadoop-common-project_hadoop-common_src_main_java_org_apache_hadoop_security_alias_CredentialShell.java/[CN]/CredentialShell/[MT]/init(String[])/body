{
  if (0 == args.length) {
    printCredShellUsage();
    ToolRunner.printGenericCommandUsage(System.err);
    return 1;
  }
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("create")) {
      if (i == args.length - 1) {
        printCredShellUsage();
        return 1;
      }
      String alias=args[++i];
      command=new CreateCommand(alias);
      if (alias.equals("-help")) {
        printCredShellUsage();
        return 0;
      }
    }
 else     if (args[i].equals("delete")) {
      if (i == args.length - 1) {
        printCredShellUsage();
        return 1;
      }
      String alias=args[++i];
      command=new DeleteCommand(alias);
      if (alias.equals("-help")) {
        printCredShellUsage();
        return 0;
      }
    }
 else     if (args[i].equals("list")) {
      command=new ListCommand();
    }
 else     if (args[i].equals("-provider")) {
      if (i == args.length - 1) {
        printCredShellUsage();
        return 1;
      }
      userSuppliedProvider=true;
      getConf().set(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH,args[++i]);
    }
 else     if (args[i].equals("-f") || (args[i].equals("-force"))) {
      interactive=false;
    }
 else     if (args[i].equals("-v") || (args[i].equals("-value"))) {
      value=args[++i];
    }
 else     if (args[i].equals("-help")) {
      printCredShellUsage();
      return 0;
    }
 else {
      printCredShellUsage();
      ToolRunner.printGenericCommandUsage(System.err);
      return 1;
    }
  }
  return 0;
}
