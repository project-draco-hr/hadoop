{
  HistoryServerLeveldbStateStoreService store=new HistoryServerLeveldbStateStoreService();
  store.init(conf);
  store.start();
  Version defaultVersion=store.getCurrentVersion();
  assertEquals(defaultVersion,store.loadVersion());
  Version compatibleVersion=Version.newInstance(defaultVersion.getMajorVersion(),defaultVersion.getMinorVersion() + 2);
  store.dbStoreVersion(compatibleVersion);
  assertEquals(compatibleVersion,store.loadVersion());
  store.close();
  store=new HistoryServerLeveldbStateStoreService();
  store.init(conf);
  store.start();
  assertEquals(defaultVersion,store.loadVersion());
  Version incompatibleVersion=Version.newInstance(defaultVersion.getMajorVersion() + 1,defaultVersion.getMinorVersion());
  store.dbStoreVersion(incompatibleVersion);
  store.close();
  store=new HistoryServerLeveldbStateStoreService();
  try {
    store.init(conf);
    store.start();
    fail("Incompatible version, should have thrown before here.");
  }
 catch (  ServiceStateException e) {
    assertTrue("Exception message mismatch",e.getMessage().contains("Incompatible version for state:"));
  }
  store.close();
}
