{
  Configuration conf=new Configuration();
  TestCallbackHandler callbackHandler=new TestCallbackHandler();
  @SuppressWarnings("unchecked") AMRMClient<ContainerRequest> client=mock(AMRMClientImpl.class);
  String exStr="TestException";
  YarnRemoteException mockException=mock(YarnRemoteException.class);
  when(mockException.getMessage()).thenReturn(exStr);
  when(client.allocate(anyFloat())).thenThrow(mockException);
  AMRMClientAsync<ContainerRequest> asyncClient=new AMRMClientAsync<ContainerRequest>(client,20,callbackHandler);
  asyncClient.init(conf);
  asyncClient.start();
synchronized (callbackHandler.notifier) {
    asyncClient.registerApplicationMaster("localhost",1234,null);
    while (callbackHandler.savedException == null) {
      try {
        callbackHandler.notifier.wait();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
  Assert.assertTrue(callbackHandler.savedException.getMessage().contains(exStr));
  asyncClient.stop();
  Assert.assertTrue(callbackHandler.callbackCount == 0);
}
