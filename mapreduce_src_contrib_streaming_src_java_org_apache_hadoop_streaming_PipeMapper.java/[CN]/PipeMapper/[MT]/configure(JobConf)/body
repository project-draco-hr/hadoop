{
  super.configure(job);
  SkipBadRecords.setAutoIncrMapperProcCount(job,false);
  skipping=job.getBoolean(MRJobConfig.SKIP_RECORDS,false);
  if (mapInputWriterClass_.getCanonicalName().equals(TextInputWriter.class.getCanonicalName())) {
    String inputFormatClassName=job.getClass("mapred.input.format.class",TextInputFormat.class).getCanonicalName();
    ignoreKey=job.getBoolean("stream.map.input.ignoreKey",inputFormatClassName.equals(TextInputFormat.class.getCanonicalName()));
  }
  try {
    mapOutputFieldSeparator=job.get("stream.map.output.field.separator","\t").getBytes("UTF-8");
    mapInputFieldSeparator=job.get("stream.map.input.field.separator","\t").getBytes("UTF-8");
    numOfMapOutputKeyFields=job.getInt("stream.num.map.output.key.fields",1);
  }
 catch (  UnsupportedEncodingException e) {
    throw new RuntimeException("The current system does not support UTF-8 encoding!",e);
  }
}
