{
  lines.readLine();
  String line=lines.readLine();
  if (line == null) {
    throw new IOException("Expecting a line not the end of stream");
  }
  StringTokenizer tokens=new StringTokenizer(line," \t\n\r\f%");
  this.filesystem=tokens.nextToken();
  if (!tokens.hasMoreTokens()) {
    line=lines.readLine();
    if (line == null) {
      throw new IOException("Expecting a line not the end of stream");
    }
    tokens=new StringTokenizer(line," \t\n\r\f%");
  }
switch (getOSType()) {
case OS_TYPE_AIX:
    Long.parseLong(tokens.nextToken());
  Long.parseLong(tokens.nextToken());
Integer.parseInt(tokens.nextToken());
tokens.nextToken();
tokens.nextToken();
this.mount=tokens.nextToken();
break;
case OS_TYPE_WIN:
case OS_TYPE_SOLARIS:
case OS_TYPE_MAC:
case OS_TYPE_UNIX:
default :
Long.parseLong(tokens.nextToken());
Long.parseLong(tokens.nextToken());
Long.parseLong(tokens.nextToken());
Integer.parseInt(tokens.nextToken());
this.mount=tokens.nextToken();
break;
}
}
