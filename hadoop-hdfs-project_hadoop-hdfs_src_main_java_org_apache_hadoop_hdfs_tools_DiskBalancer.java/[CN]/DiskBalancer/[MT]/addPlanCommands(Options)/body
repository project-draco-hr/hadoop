{
  Option plan=OptionBuilder.withLongOpt(PLAN).withDescription("Hostname, IP address or UUID of datanode " + "for which a plan is created.").hasArg().create();
  getPlanOptions().addOption(plan);
  opt.addOption(plan);
  Option outFile=OptionBuilder.withLongOpt(OUTFILE).hasArg().withDescription("Local path of file to write output to, if not specified " + "defaults will be used.").create();
  getPlanOptions().addOption(outFile);
  opt.addOption(outFile);
  Option bandwidth=OptionBuilder.withLongOpt(BANDWIDTH).hasArg().withDescription("Maximum disk bandwidth (MB/s) in integer to be consumed by " + "diskBalancer. e.g. 10 MB/s.").create();
  getPlanOptions().addOption(bandwidth);
  opt.addOption(bandwidth);
  Option threshold=OptionBuilder.withLongOpt(THRESHOLD).hasArg().withDescription("Percentage of data skew that is tolerated before" + " disk balancer starts working. For example, if" + " total data on a 2 disk node is 100 GB then disk"+ " balancer calculates the expected value on each disk,"+ " which is 50 GB. If the tolerance is 10% then data"+ " on a single disk needs to be more than 60 GB"+ " (50 GB + 10% tolerance value) for Disk balancer to"+ " balance the disks.").create();
  getPlanOptions().addOption(threshold);
  opt.addOption(threshold);
  Option maxError=OptionBuilder.withLongOpt(MAXERROR).hasArg().withDescription("Describes how many errors " + "can be tolerated while copying between a pair of disks.").create();
  getPlanOptions().addOption(maxError);
  opt.addOption(maxError);
  Option verbose=OptionBuilder.withLongOpt(VERBOSE).withDescription("Print out the summary of the plan on console").create();
  getPlanOptions().addOption(verbose);
  opt.addOption(verbose);
}
