{
  blockLog.debug("BLOCK* removeStoredBlock: {} from {}",block,node);
  assert(namesystem.hasWriteLock());
{
    BlockInfo storedBlock=getStoredBlock(block);
    if (storedBlock == null || !blocksMap.removeNode(storedBlock,node)) {
      blockLog.debug("BLOCK* removeStoredBlock: {} has already been" + " removed from node {}",block,node);
      return;
    }
    CachedBlock cblock=namesystem.getCacheManager().getCachedBlocks().get(new CachedBlock(block.getBlockId(),(short)0,false));
    if (cblock != null) {
      boolean removed=false;
      removed|=node.getPendingCached().remove(cblock);
      removed|=node.getCached().remove(cblock);
      removed|=node.getPendingUncached().remove(cblock);
      if (removed) {
        blockLog.debug("BLOCK* removeStoredBlock: {} removed from caching " + "related lists on node {}",block,node);
      }
    }
    BlockCollection bc=blocksMap.getBlockCollection(block);
    if (bc != null) {
      namesystem.decrementSafeBlockCount(storedBlock);
      updateNeededReplications(storedBlock,-1,0);
    }
    LightWeightLinkedSet<Block> excessBlocks=excessReplicateMap.get(node.getDatanodeUuid());
    if (excessBlocks != null) {
      if (excessBlocks.remove(block)) {
        excessBlocksCount.decrementAndGet();
        blockLog.debug("BLOCK* removeStoredBlock: {} is removed from " + "excessBlocks",block);
        if (excessBlocks.size() == 0) {
          excessReplicateMap.remove(node.getDatanodeUuid());
        }
      }
    }
    corruptReplicas.removeFromCorruptReplicasMap(block,node);
  }
}
