{
  final List<DatanodeStorageInfo> locations=getValidLocations(block);
  if (locations.size() == 0) {
    return 0;
  }
 else {
    final String[] datanodeUuids=new String[locations.size()];
    final String[] storageIDs=new String[datanodeUuids.length];
    final StorageType[] storageTypes=new StorageType[datanodeUuids.length];
    for (int i=0; i < locations.size(); i++) {
      final DatanodeStorageInfo s=locations.get(i);
      datanodeUuids[i]=s.getDatanodeDescriptor().getDatanodeUuid();
      storageIDs[i]=s.getStorageID();
      storageTypes[i]=s.getStorageType();
    }
    BlockWithLocations blkWithLocs=new BlockWithLocations(block,datanodeUuids,storageIDs,storageTypes);
    if (block.isStriped()) {
      BlockInfoStriped blockStriped=(BlockInfoStriped)block;
      byte[] indices=new byte[locations.size()];
      for (int i=0; i < locations.size(); i++) {
        indices[i]=(byte)blockStriped.getStorageBlockIndex(locations.get(i));
      }
      results.add(new StripedBlockWithLocations(blkWithLocs,indices,blockStriped.getDataBlockNum(),blockStriped.getCellSize()));
      return block.getNumBytes() / blockStriped.getDataBlockNum();
    }
 else {
      results.add(blkWithLocs);
      return block.getNumBytes();
    }
  }
}
