{
  final StoredReplicaState s;
  if (storage.getState() == State.NORMAL) {
    final DatanodeDescriptor node=storage.getDatanodeDescriptor();
    if (nodesCorrupt != null && nodesCorrupt.contains(node)) {
      s=StoredReplicaState.CORRUPT;
    }
 else     if (inStartupSafeMode) {
      s=StoredReplicaState.LIVE;
      counters.add(s,1);
      return s;
    }
 else     if (node.isDecommissionInProgress()) {
      s=StoredReplicaState.DECOMMISSIONING;
    }
 else     if (node.isDecommissioned()) {
      s=StoredReplicaState.DECOMMISSIONED;
    }
 else     if (isExcess(node,b)) {
      s=StoredReplicaState.EXCESS;
    }
 else {
      s=StoredReplicaState.LIVE;
    }
    counters.add(s,1);
    if (storage.areBlockContentsStale()) {
      counters.add(StoredReplicaState.STALESTORAGE,1);
    }
  }
 else   if (!inStartupSafeMode && storage.getState() == State.READ_ONLY_SHARED) {
    s=StoredReplicaState.READONLY;
    counters.add(s,1);
  }
 else {
    s=null;
  }
  return s;
}
