def deallocate(self, clusterDir, clusterInfo):
    status = 0
    nodeSet = self.__nodePool.newNodeSet(clusterInfo['min'], id=clusterInfo['jobid'])
    self.mapredInfo = clusterInfo['mapred']
    self.hdfsInfo = clusterInfo['hdfs']
    try:
        if self.__cfg['hod'].has_key('hadoop-ui-log-dir'):
            clusterStatus = self.check_cluster(clusterInfo)
            if ((clusterStatus != 14) and (clusterStatus != 10)):
                self.__collect_jobtracker_ui(self.__cfg['hod']['hadoop-ui-log-dir'])
        else:
            self.__log.debug('hadoop-ui-log-dir not specified. Skipping Hadoop UI log collection.')
    except HodInterruptException as h:
        pass
    except:
        self.__log.info('Exception in collecting Job tracker logs. Ignoring.')
    rmAddr = None
    if clusterInfo.has_key('ring'):
        rmAddr = clusterInfo['ring'][7:]
        if rmAddr.endswith('/'):
            rmAddr = rmAddr[:(-1)]
    if ((rmAddr is None) or (not self.__isRingMasterAlive(rmAddr))):
        self.__nodePool.finalize()
        status = 10
    else:
        xrsAddr = clusterInfo['ring']
        rmClient = hodXRClient(xrsAddr)
        self.__log.debug('calling rm.stop')
        rmClient.stopRM()
        self.__log.debug('completed rm.stop')
    tempDir = os.path.join(self.__cfg['hod']['temp-dir'], ((self.__cfg['hod']['userid'] + '.') + clusterInfo['jobid']))
    if os.path.exists(tempDir):
        shutil.rmtree(tempDir)
    return status
