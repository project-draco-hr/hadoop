def __get_ringmaster_client(self):
    ringmasterXRS = None
    ringList = self.__svcrgyClient.getServiceInfo(self.__cfg['ringmaster']['userid'], self.__nodePool.getServiceId(), 'ringmaster', 'hod')
    if (ringList and len(ringList)):
        if isinstance(ringList, list):
            ringmasterXRS = ringList[0]['xrs']
    else:
        count = 0
        waitTime = self.__cfg['hod']['allocate-wait-time']
        while (count < waitTime):
            if hodInterrupt.isSet():
                raise HodInterruptException()
            ringList = self.__svcrgyClient.getServiceInfo(self.__cfg['ringmaster']['userid'], self.__nodePool.getServiceId(), 'ringmaster', 'hod')
            if (ringList and len(ringList)):
                if isinstance(ringList, list):
                    ringmasterXRS = ringList[0]['xrs']
            if (ringmasterXRS is not None):
                break
            else:
                time.sleep(1)
                count = (count + 1)
                if ((count % self.__cfg['hod']['job-status-query-interval']) == 0):
                    if (not self.__check_job_status()):
                        break
    return ringmasterXRS
