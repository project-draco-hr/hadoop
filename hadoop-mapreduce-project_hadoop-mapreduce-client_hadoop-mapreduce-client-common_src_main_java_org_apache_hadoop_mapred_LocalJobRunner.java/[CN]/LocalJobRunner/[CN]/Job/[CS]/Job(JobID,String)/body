{
  this.systemJobDir=new Path(jobSubmitDir);
  this.systemJobFile=new Path(systemJobDir,"job.xml");
  this.id=jobid;
  JobConf conf=new JobConf(systemJobFile);
  this.localFs=FileSystem.getLocal(conf);
  String user=UserGroupInformation.getCurrentUser().getShortUserName();
  this.localJobDir=localFs.makeQualified(new Path(new Path(conf.getLocalPath(jobDir),user),jobid.toString()));
  this.localJobFile=new Path(this.localJobDir,id + ".xml");
  localDistributedCacheManager=new LocalDistributedCacheManager();
  localDistributedCacheManager.setup(conf);
  OutputStream out=localFs.create(localJobFile);
  try {
    conf.writeXml(out);
  }
  finally {
    out.close();
  }
  this.job=new JobConf(localJobFile);
  if (localDistributedCacheManager.hasLocalClasspaths()) {
    setContextClassLoader(localDistributedCacheManager.makeClassLoader(getContextClassLoader()));
  }
  profile=new JobProfile(job.getUser(),id,systemJobFile.toString(),"http://localhost:8080/",job.getJobName());
  status=new JobStatus(id,0.0f,0.0f,JobStatus.RUNNING,profile.getUser(),profile.getJobName(),profile.getJobFile(),profile.getURL().toString());
  jobs.put(id,this);
  this.start();
}
