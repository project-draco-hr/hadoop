{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutputStream dos=new DataOutputStream(baos);
  taskStatus.write(dos);
  dos.close();
  taskStatus=TaskStatus.createTaskStatus(taskStatus.getIsMap());
  taskStatus.readFields(new DataInputStream(new ByteArrayInputStream(baos.toByteArray())));
  LOG.info(taskStatus.getStateString());
  int taskIndex=mapIds.indexOf(taskId);
  if (taskIndex >= 0) {
    float numTasks=(float)this.numMapTasks;
    partialMapProgress[taskIndex]=taskStatus.getProgress();
    mapCounters[taskIndex]=taskStatus.getCounters();
    float partialProgress=0.0f;
    for (    float f : partialMapProgress) {
      partialProgress+=f;
    }
    status.setMapProgress(partialProgress / numTasks);
  }
 else {
    reduceCounters=taskStatus.getCounters();
    status.setReduceProgress(taskStatus.getProgress());
  }
  return true;
}
