{
  List<AclEntry> parsedList=AclEntry.parseAclSpec("group::rwx,user:user1:rwx,user:user2:rw-,group:group1:rw-,default:group:group1:rw-",true);
  AclEntry basicAcl=new AclEntry.Builder().setType(AclEntryType.GROUP).setPermission(FsAction.ALL).build();
  AclEntry user1Acl=new AclEntry.Builder().setType(AclEntryType.USER).setPermission(FsAction.ALL).setName("user1").build();
  AclEntry user2Acl=new AclEntry.Builder().setType(AclEntryType.USER).setPermission(FsAction.READ_WRITE).setName("user2").build();
  AclEntry group1Acl=new AclEntry.Builder().setType(AclEntryType.GROUP).setPermission(FsAction.READ_WRITE).setName("group1").build();
  AclEntry defaultAcl=new AclEntry.Builder().setType(AclEntryType.GROUP).setPermission(FsAction.READ_WRITE).setName("group1").setScope(AclEntryScope.DEFAULT).build();
  List<AclEntry> expectedList=new ArrayList<AclEntry>();
  expectedList.add(basicAcl);
  expectedList.add(user1Acl);
  expectedList.add(user2Acl);
  expectedList.add(group1Acl);
  expectedList.add(defaultAcl);
  assertEquals("Parsed Acl not correct",expectedList,parsedList);
}
