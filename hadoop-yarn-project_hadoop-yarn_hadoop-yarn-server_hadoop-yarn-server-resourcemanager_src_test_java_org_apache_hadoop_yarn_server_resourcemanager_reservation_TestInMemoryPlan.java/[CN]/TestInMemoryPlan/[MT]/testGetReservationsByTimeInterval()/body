{
  Plan plan=new InMemoryPlan(queueMetrics,policy,agent,totalCapacity,1L,resCalc,minAlloc,maxAlloc,planName,replanner,true,context);
  ReservationId reservationID=ReservationSystemTestUtil.getNewReservationId();
  int[] alloc={10,10,10,10,10,10};
  int start=100;
  ReservationAllocation rAllocation=createReservationAllocation(reservationID,start,alloc);
  Assert.assertNull(plan.getReservationById(reservationID));
  try {
    plan.addReservation(rAllocation,false);
  }
 catch (  PlanningException e) {
    Assert.fail(e.getMessage());
  }
  ReservationInterval interval=new ReservationInterval(rAllocation.getStartTime(),rAllocation.getEndTime());
  Set<ReservationAllocation> rAllocations=plan.getReservations(null,interval,"");
  Assert.assertTrue(rAllocations.size() == 1);
  Assert.assertTrue(rAllocation.compareTo((ReservationAllocation)rAllocations.toArray()[0]) == 0);
  long duration=rAllocation.getEndTime() - rAllocation.getStartTime();
  interval=new ReservationInterval(rAllocation.getStartTime() + duration * (long)0.3,rAllocation.getEndTime() - duration * (long)0.3);
  rAllocations=plan.getReservations(null,interval,"");
  Assert.assertTrue(rAllocations.size() == 1);
  Assert.assertTrue(rAllocation.compareTo((ReservationAllocation)rAllocations.toArray()[0]) == 0);
  interval=new ReservationInterval(0,rAllocation.getStartTime());
  rAllocations=plan.getReservations(null,interval,"");
  Assert.assertTrue(rAllocations.size() == 1);
  Assert.assertTrue(rAllocation.compareTo((ReservationAllocation)rAllocations.toArray()[0]) == 0);
  interval=new ReservationInterval(rAllocation.getEndTime(),Long.MAX_VALUE);
  rAllocations=plan.getReservations(null,interval,"");
  Assert.assertTrue(rAllocations.size() == 0);
  interval=new ReservationInterval(0,rAllocation.getStartTime() / 2);
  rAllocations=plan.getReservations(null,interval,"");
  Assert.assertTrue(rAllocations.size() == 0);
}
