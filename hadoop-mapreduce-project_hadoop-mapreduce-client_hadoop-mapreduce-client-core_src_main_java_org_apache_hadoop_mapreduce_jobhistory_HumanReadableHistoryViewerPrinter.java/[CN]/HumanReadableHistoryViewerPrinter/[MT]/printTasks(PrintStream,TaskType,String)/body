{
  Map<TaskID,JobHistoryParser.TaskInfo> tasks=job.getAllTasks();
  StringBuilder header=new StringBuilder();
  header.append("\n").append(status).append(" ");
  header.append(taskType).append(" task list for ").append(job.getJobId().toString());
  header.append("\nTaskId\t\tStartTime\tFinishTime\tError");
  if (TaskType.MAP.equals(taskType)) {
    header.append("\tInputSplits");
  }
  header.append("\n====================================================");
  StringBuilder taskList=new StringBuilder();
  for (  JobHistoryParser.TaskInfo task : tasks.values()) {
    if (taskType.equals(task.getTaskType()) && (status.equals(task.getTaskStatus()) || status.equalsIgnoreCase("ALL"))) {
      taskList.setLength(0);
      taskList.append(task.getTaskId());
      taskList.append("\t").append(StringUtils.getFormattedTimeWithDiff(dateFormat,task.getStartTime(),0));
      taskList.append("\t").append(StringUtils.getFormattedTimeWithDiff(dateFormat,task.getFinishTime(),task.getStartTime()));
      taskList.append("\t").append(task.getError());
      if (TaskType.MAP.equals(taskType)) {
        taskList.append("\t").append(task.getSplitLocations());
      }
      if (taskList != null) {
        ps.println(header);
        ps.println(taskList);
      }
    }
  }
}
