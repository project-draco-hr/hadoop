{
  HdfsFileStatus status=nn.getRpcServer().getFileInfo(testdir);
  long dirId=status.getFileId();
  XDR xdr_req=new XDR();
  FileHandle handle=new FileHandle(dirId);
  handle.serialize(xdr_req);
  xdr_req.writeString("fubar");
  SetAttr3 symAttr=new SetAttr3();
  symAttr.serialize(xdr_req);
  xdr_req.writeString("bar");
  SYMLINK3Response response=nfsd.symlink(xdr_req.asReadOnlyWrap(),securityHandler,new InetSocketAddress("localhost",1234));
  assertEquals("Incorrect return code:",Nfs3Status.NFS3_OK,response.getStatus());
  FileHandle handle2=response.getObjFileHandle();
  XDR xdr_req2=new XDR();
  handle2.serialize(xdr_req2);
  READLINK3Response response1=nfsd.readlink(xdr_req2.asReadOnlyWrap(),securityHandlerUnpriviledged,new InetSocketAddress("localhost",1234));
  assertEquals("Incorrect return code:",Nfs3Status.NFS3ERR_ACCES,response1.getStatus());
  READLINK3Response response2=nfsd.readlink(xdr_req2.asReadOnlyWrap(),securityHandler,new InetSocketAddress("localhost",1234));
  assertEquals("Incorrect return code:",Nfs3Status.NFS3_OK,response2.getStatus());
}
