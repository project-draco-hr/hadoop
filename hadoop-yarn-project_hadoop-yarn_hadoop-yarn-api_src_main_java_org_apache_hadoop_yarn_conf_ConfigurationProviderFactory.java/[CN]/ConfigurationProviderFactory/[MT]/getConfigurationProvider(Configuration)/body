{
  Class<? extends ConfigurationProvider> defaultProviderClass;
  try {
    defaultProviderClass=(Class<? extends ConfigurationProvider>)Class.forName(YarnConfiguration.DEFAULT_RM_CONFIGURATION_PROVIDER_CLASS);
  }
 catch (  Exception e) {
    throw new YarnRuntimeException("Invalid default configuration provider class" + YarnConfiguration.DEFAULT_RM_CONFIGURATION_PROVIDER_CLASS,e);
  }
  ConfigurationProvider configurationProvider=ReflectionUtils.newInstance(conf.getClass(YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,defaultProviderClass,ConfigurationProvider.class),conf);
  return configurationProvider;
}
