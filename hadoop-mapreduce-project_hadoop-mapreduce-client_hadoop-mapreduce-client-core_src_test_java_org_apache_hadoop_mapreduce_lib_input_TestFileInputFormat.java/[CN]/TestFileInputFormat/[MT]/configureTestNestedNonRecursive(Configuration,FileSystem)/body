{
  Path base1=new Path(TEST_ROOT_DIR,"input1");
  conf.set(org.apache.hadoop.mapreduce.lib.input.FileInputFormat.INPUT_DIR,localFs.makeQualified(base1).toString());
  conf.setBoolean(org.apache.hadoop.mapreduce.lib.input.FileInputFormat.INPUT_DIR_RECURSIVE,false);
  localFs.mkdirs(base1);
  Path inDir1=new Path(base1,"dir1");
  Path inDir2=new Path(base1,"dir2");
  Path inFile1=new Path(base1,"file1");
  Path dir1File1=new Path(inDir1,"file1");
  Path dir1File2=new Path(inDir1,"file2");
  Path dir2File1=new Path(inDir2,"file1");
  Path dir2File2=new Path(inDir2,"file2");
  localFs.mkdirs(inDir1);
  localFs.mkdirs(inDir2);
  localFs.createNewFile(inFile1);
  localFs.createNewFile(dir1File1);
  localFs.createNewFile(dir1File2);
  localFs.createNewFile(dir2File1);
  localFs.createNewFile(dir2File2);
  List<Path> expectedPaths=Lists.newArrayList(inFile1,inDir1,inDir2);
  return expectedPaths;
}
