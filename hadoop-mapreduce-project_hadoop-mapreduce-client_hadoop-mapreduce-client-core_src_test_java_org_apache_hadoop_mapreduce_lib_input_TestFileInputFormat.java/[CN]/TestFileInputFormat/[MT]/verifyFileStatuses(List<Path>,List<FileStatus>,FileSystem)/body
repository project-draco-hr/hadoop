{
  Assert.assertEquals(expectedPaths.size(),fetchedStatuses.size());
  Iterable<Path> fqExpectedPaths=Iterables.transform(expectedPaths,new Function<Path,Path>(){
    @Override public Path apply(    Path input){
      return localFs.makeQualified(input);
    }
  }
);
  Set<Path> expectedPathSet=Sets.newHashSet(fqExpectedPaths);
  for (  FileStatus fileStatus : fetchedStatuses) {
    if (!expectedPathSet.remove(localFs.makeQualified(fileStatus.getPath()))) {
      Assert.fail("Found extra fetched status: " + fileStatus.getPath());
    }
  }
  Assert.assertEquals("Not all expectedPaths matched: " + expectedPathSet.toString(),0,expectedPathSet.size());
}
