{
  this.namenode=namenode;
  this.encryptDataTransfer=encryptDataTransfer;
  final ExportedBlockKeys keys=namenode.getBlockKeys();
  this.isBlockTokenEnabled=keys.isBlockTokenEnabled();
  if (isBlockTokenEnabled) {
    long updateInterval=keys.getKeyUpdateInterval();
    long tokenLifetime=keys.getTokenLifetime();
    LOG.info("Block token params received from NN: update interval=" + StringUtils.formatTime(updateInterval) + ", token lifetime="+ StringUtils.formatTime(tokenLifetime));
    String encryptionAlgorithm=conf.get(DFSConfigKeys.DFS_DATA_ENCRYPTION_ALGORITHM_KEY);
    this.blockTokenSecretManager=new BlockTokenSecretManager(updateInterval,tokenLifetime,blockpoolID,encryptionAlgorithm);
    this.blockTokenSecretManager.addKeys(keys);
    this.blockKeyUpdater=new BlockKeyUpdater(updateInterval / 4);
    this.shouldRun=true;
  }
 else {
    this.blockTokenSecretManager=null;
    this.blockKeyUpdater=null;
  }
}
