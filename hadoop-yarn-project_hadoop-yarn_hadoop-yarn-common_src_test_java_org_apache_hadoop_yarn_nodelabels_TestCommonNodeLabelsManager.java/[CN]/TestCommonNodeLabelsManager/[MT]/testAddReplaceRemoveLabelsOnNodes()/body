{
  boolean caught=false;
  try {
    mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("node"),toSet("label")));
  }
 catch (  IOException e) {
    caught=true;
  }
  Assert.assertTrue("trying to set a label to a node but " + "label doesn't exist in repository should fail",caught);
  try {
    mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId(CommonNodeLabelsManager.NO_LABEL),toSet("label")));
  }
 catch (  IOException e) {
    caught=true;
  }
  Assert.assertTrue("trying to add a empty node but succeeded",caught);
  mgr.addToCluserNodeLabels(toSet("p1","p2","p3"));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p2")));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n2"),toSet("p3")));
  assertMapEquals(mgr.getNodeLabels(),ImmutableMap.of(toNodeId("n1"),toSet("p2"),toNodeId("n2"),toSet("p3")));
  assertMapEquals(mgr.lastNodeToLabels,ImmutableMap.of(toNodeId("n2"),toSet("p3")));
  mgr.replaceLabelsOnNode((Map)ImmutableMap.of(toNodeId("n3"),toSet("p3"),toNodeId("n1"),toSet("p1")));
  assertMapEquals(mgr.getNodeLabels(),ImmutableMap.of(toNodeId("n1"),toSet("p1"),toNodeId("n2"),toSet("p3"),toNodeId("n3"),toSet("p3")));
  assertMapEquals(mgr.lastNodeToLabels,ImmutableMap.of(toNodeId("n3"),toSet("p3"),toNodeId("n1"),toSet("p1")));
  mgr.removeLabelsFromNode(ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  assertMapEquals(mgr.getNodeLabels(),ImmutableMap.of(toNodeId("n2"),toSet("p3"),toNodeId("n3"),toSet("p3")));
  assertMapEquals(mgr.lastNodeToLabels,ImmutableMap.of(toNodeId("n1"),CommonNodeLabelsManager.EMPTY_STRING_SET));
  mgr.addLabelsToNode(ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  assertMapEquals(mgr.getNodeLabels(),ImmutableMap.of(toNodeId("n1"),toSet("p1"),toNodeId("n2"),toSet("p3"),toNodeId("n3"),toSet("p3")));
  assertMapEquals(mgr.lastNodeToLabels,ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  mgr.removeLabelsFromNode(ImmutableMap.of(toNodeId("n1"),toSet("p1"),toNodeId("n2"),toSet("p3"),toNodeId("n3"),toSet("p3")));
  Assert.assertEquals(0,mgr.getNodeLabels().size());
  assertMapEquals(mgr.lastNodeToLabels,ImmutableMap.of(toNodeId("n1"),CommonNodeLabelsManager.EMPTY_STRING_SET,toNodeId("n2"),CommonNodeLabelsManager.EMPTY_STRING_SET,toNodeId("n3"),CommonNodeLabelsManager.EMPTY_STRING_SET));
}
