{
  DummyCommonNodeLabelsManager mgr=new DummyCommonNodeLabelsManager();
  Configuration conf=new YarnConfiguration();
  conf.setBoolean(YarnConfiguration.NODE_LABELS_ENABLED,false);
  mgr.init(conf);
  mgr.start();
  boolean caught=false;
  try {
    mgr.addToCluserNodeLabels(ImmutableSet.of("x"));
  }
 catch (  IOException e) {
    assertNodeLabelsDisabledErrorMessage(e);
    caught=true;
  }
  Assert.assertTrue(caught);
  caught=false;
  try {
    mgr.removeFromClusterNodeLabels(ImmutableSet.of("x"));
  }
 catch (  IOException e) {
    assertNodeLabelsDisabledErrorMessage(e);
    caught=true;
  }
  Assert.assertTrue(caught);
  caught=false;
  try {
    mgr.addLabelsToNode(ImmutableMap.of(NodeId.newInstance("host",0),CommonNodeLabelsManager.EMPTY_STRING_SET));
  }
 catch (  IOException e) {
    assertNodeLabelsDisabledErrorMessage(e);
    caught=true;
  }
  Assert.assertTrue(caught);
  caught=false;
  try {
    mgr.removeLabelsFromNode(ImmutableMap.of(NodeId.newInstance("host",0),CommonNodeLabelsManager.EMPTY_STRING_SET));
  }
 catch (  IOException e) {
    assertNodeLabelsDisabledErrorMessage(e);
    caught=true;
  }
  Assert.assertTrue(caught);
  caught=false;
  try {
    mgr.replaceLabelsOnNode(ImmutableMap.of(NodeId.newInstance("host",0),CommonNodeLabelsManager.EMPTY_STRING_SET));
  }
 catch (  IOException e) {
    assertNodeLabelsDisabledErrorMessage(e);
    caught=true;
  }
  Assert.assertTrue(caught);
  caught=false;
  mgr.close();
}
