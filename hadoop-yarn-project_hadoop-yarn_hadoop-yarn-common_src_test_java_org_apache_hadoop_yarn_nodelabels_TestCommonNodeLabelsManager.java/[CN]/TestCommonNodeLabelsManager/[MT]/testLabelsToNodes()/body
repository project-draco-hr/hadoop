{
  mgr.addToCluserNodeLabels(toSet("p1","p2","p3"));
  mgr.addLabelsToNode(ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  Map<String,Set<NodeId>> labelsToNodes=mgr.getLabelsToNodes();
  assertLabelsToNodesEquals(labelsToNodes,ImmutableMap.of("p1",toSet(toNodeId("n1"))));
  assertLabelsToNodesEquals(labelsToNodes,transposeNodeToLabels(mgr.getNodeLabels()));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1:1"),toSet("p2"),toNodeId("n1:2"),toSet("p2")));
  labelsToNodes=mgr.getLabelsToNodes();
  assertLabelsToNodesEquals(labelsToNodes,ImmutableMap.of("p1",toSet(toNodeId("n1")),"p2",toSet(toNodeId("n1:1"),toNodeId("n1:2"))));
  assertLabelsToNodesEquals(labelsToNodes,transposeNodeToLabels(mgr.getNodeLabels()));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1"),toSet("p1")));
  labelsToNodes=mgr.getLabelsToNodes();
  assertLabelsToNodesEquals(labelsToNodes,ImmutableMap.of("p1",toSet(toNodeId("n1"),toNodeId("n1:1"),toNodeId("n1:2"))));
  assertLabelsToNodesEquals(labelsToNodes,transposeNodeToLabels(mgr.getNodeLabels()));
  mgr.replaceLabelsOnNode(ImmutableMap.of(toNodeId("n1:1"),toSet("p2")));
  mgr.addLabelsToNode(ImmutableMap.of(toNodeId("n2"),toSet("p3")));
  labelsToNodes=mgr.getLabelsToNodes();
  assertLabelsToNodesEquals(labelsToNodes,ImmutableMap.of("p1",toSet(toNodeId("n1"),toNodeId("n1:2")),"p2",toSet(toNodeId("n1:1")),"p3",toSet(toNodeId("n2"))));
  assertLabelsToNodesEquals(labelsToNodes,transposeNodeToLabels(mgr.getNodeLabels()));
  mgr.removeLabelsFromNode(ImmutableMap.of(toNodeId("n2"),toSet("p3")));
  labelsToNodes=mgr.getLabelsToNodes();
  assertLabelsToNodesEquals(labelsToNodes,ImmutableMap.of("p1",toSet(toNodeId("n1"),toNodeId("n1:2")),"p2",toSet(toNodeId("n1:1"))));
  assertLabelsToNodesEquals(labelsToNodes,transposeNodeToLabels(mgr.getNodeLabels()));
}
