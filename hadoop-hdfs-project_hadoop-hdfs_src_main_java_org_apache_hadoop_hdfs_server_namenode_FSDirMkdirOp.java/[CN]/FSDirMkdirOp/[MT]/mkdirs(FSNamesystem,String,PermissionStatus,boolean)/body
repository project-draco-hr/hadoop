{
  FSDirectory fsd=fsn.getFSDirectory();
  if (NameNode.stateChangeLog.isDebugEnabled()) {
    NameNode.stateChangeLog.debug("DIR* NameSystem.mkdirs: " + src);
  }
  if (!DFSUtil.isValidName(src)) {
    throw new InvalidPathException(src);
  }
  FSPermissionChecker pc=fsd.getPermissionChecker();
  fsd.writeLock();
  try {
    INodesInPath iip=fsd.resolvePathForWrite(pc,src);
    src=iip.getPath();
    if (fsd.isPermissionEnabled()) {
      fsd.checkTraverse(pc,iip);
    }
    final INode lastINode=iip.getLastINode();
    if (lastINode != null && lastINode.isFile()) {
      throw new FileAlreadyExistsException("Path is not a directory: " + src);
    }
    if (lastINode == null) {
      if (fsd.isPermissionEnabled()) {
        fsd.checkAncestorAccess(pc,iip,FsAction.WRITE);
      }
      if (!createParent) {
        fsd.verifyParentDir(iip,src);
      }
      fsn.checkFsObjectLimit();
      INodesInPath existing=createParentDirectories(fsd,iip,permissions,false);
      if (existing != null) {
        existing=createSingleDirectory(fsd,existing,iip.getLastLocalName(),permissions);
      }
      if (existing == null) {
        throw new IOException("Failed to create directory: " + src);
      }
      iip=existing;
    }
    return fsd.getAuditFileInfo(iip);
  }
  finally {
    fsd.writeUnlock();
  }
}
