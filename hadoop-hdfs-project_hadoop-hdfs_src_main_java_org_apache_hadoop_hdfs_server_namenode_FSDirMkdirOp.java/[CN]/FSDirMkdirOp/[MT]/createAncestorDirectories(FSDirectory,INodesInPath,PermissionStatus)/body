{
  final String last=DFSUtil.bytes2String(iip.getLastLocalName());
  INodesInPath existing=iip.getExistingINodes();
  List<String> children=iip.getPath(existing.length(),iip.length() - existing.length());
  int size=children.size();
  if (size > 1) {
    List<String> directories=children.subList(0,size - 1);
    INode parentINode=existing.getLastINode();
    existing=createChildrenDirectories(fsd,existing,directories,addImplicitUwx(parentINode.getPermissionStatus(),permission));
    if (existing == null) {
      return null;
    }
  }
  return new AbstractMap.SimpleImmutableEntry<>(existing,last);
}
