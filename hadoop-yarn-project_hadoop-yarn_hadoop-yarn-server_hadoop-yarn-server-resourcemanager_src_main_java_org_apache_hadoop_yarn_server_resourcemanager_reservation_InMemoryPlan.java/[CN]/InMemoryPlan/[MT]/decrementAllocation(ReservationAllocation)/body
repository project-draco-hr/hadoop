{
  assert(readWriteLock.isWriteLockedByCurrentThread());
  Map<ReservationInterval,ReservationRequest> allocationRequests=reservation.getAllocationRequests();
  String user=reservation.getUser();
  RLESparseResourceAllocation resAlloc=userResourceAlloc.get(user);
  for (  Map.Entry<ReservationInterval,ReservationRequest> r : allocationRequests.entrySet()) {
    resAlloc.removeInterval(r.getKey(),r.getValue());
    rleSparseVector.removeInterval(r.getKey(),r.getValue());
  }
  if (resAlloc.isEmpty()) {
    userResourceAlloc.remove(resAlloc);
  }
}
