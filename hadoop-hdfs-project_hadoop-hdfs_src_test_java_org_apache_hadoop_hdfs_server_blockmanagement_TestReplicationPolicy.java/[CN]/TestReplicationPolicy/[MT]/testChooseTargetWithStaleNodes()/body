{
  dataNodes[0].setLastUpdate(Time.now() - staleInterval - 1);
  namenode.getNamesystem().getBlockManager().getDatanodeManager().getHeartbeatManager().heartbeatCheck();
  assertTrue(namenode.getNamesystem().getBlockManager().getDatanodeManager().shouldAvoidStaleDataNodesForWrite());
  DatanodeDescriptor[] targets;
  targets=replicator.chooseTarget(filename,1,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,1);
  assertEquals(targets[0],dataNodes[1]);
  HashMap<Node,Node> excludedNodes=new HashMap<Node,Node>();
  excludedNodes.put(dataNodes[1],dataNodes[1]);
  List<DatanodeDescriptor> chosenNodes=new ArrayList<DatanodeDescriptor>();
  BlockPlacementPolicyDefault repl=(BlockPlacementPolicyDefault)replicator;
  targets=chooseTarget(repl,1,dataNodes[0],chosenNodes,excludedNodes,BLOCK_SIZE);
  assertEquals(targets.length,1);
  assertFalse(cluster.isOnSameRack(targets[0],dataNodes[0]));
  dataNodes[0].setLastUpdate(Time.now());
  namenode.getNamesystem().getBlockManager().getDatanodeManager().getHeartbeatManager().heartbeatCheck();
}
