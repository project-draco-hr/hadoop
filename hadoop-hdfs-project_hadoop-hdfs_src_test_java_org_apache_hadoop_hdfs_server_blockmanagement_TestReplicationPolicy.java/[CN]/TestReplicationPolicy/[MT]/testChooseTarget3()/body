{
  updateHeartbeatWithUsage(dataNodes[0],2 * HdfsServerConstants.MIN_BLOCKS_FOR_WRITE * BLOCK_SIZE,0L,(HdfsServerConstants.MIN_BLOCKS_FOR_WRITE - 1) * BLOCK_SIZE,0L,0L,0L,0,0);
  DatanodeStorageInfo[] targets;
  targets=chooseTarget(0);
  assertEquals(targets.length,0);
  targets=chooseTarget(1);
  assertEquals(targets.length,1);
  assertEquals(storages[1],targets[0]);
  targets=chooseTarget(2);
  assertEquals(targets.length,2);
  assertEquals(storages[1],targets[0]);
  assertFalse(isOnSameRack(targets[0],targets[1]));
  targets=chooseTarget(3);
  assertEquals(targets.length,3);
  assertEquals(storages[1],targets[0]);
  assertTrue(isOnSameRack(targets[1],targets[2]));
  assertFalse(isOnSameRack(targets[0],targets[1]));
  targets=chooseTarget(4);
  assertEquals(targets.length,4);
  assertEquals(storages[1],targets[0]);
  for (int i=1; i < 4; i++) {
    assertFalse(isOnSameRack(targets[0],targets[i]));
  }
  assertTrue(isOnSameRack(targets[1],targets[2]) || isOnSameRack(targets[2],targets[3]));
  assertFalse(isOnSameRack(targets[1],targets[3]));
  resetHeartbeatForStorages();
}
