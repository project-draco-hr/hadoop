{
  Set<Node> excludedNodes;
  DatanodeStorageInfo[] targets;
  List<DatanodeStorageInfo> chosenNodes=new ArrayList<>();
  excludedNodes=new HashSet<>();
  excludedNodes.add(dataNodes[1]);
  targets=chooseTarget(0,chosenNodes,excludedNodes);
  assertEquals(targets.length,0);
  excludedNodes.clear();
  chosenNodes.clear();
  excludedNodes.add(dataNodes[1]);
  targets=chooseTarget(1,chosenNodes,excludedNodes);
  assertEquals(targets.length,1);
  assertEquals(storages[0],targets[0]);
  excludedNodes.clear();
  chosenNodes.clear();
  excludedNodes.add(dataNodes[1]);
  targets=chooseTarget(2,chosenNodes,excludedNodes);
  assertEquals(targets.length,2);
  assertEquals(storages[0],targets[0]);
  assertFalse(isOnSameRack(targets[0],targets[1]));
  excludedNodes.clear();
  chosenNodes.clear();
  excludedNodes.add(dataNodes[1]);
  targets=chooseTarget(3,chosenNodes,excludedNodes);
  assertEquals(targets.length,3);
  assertEquals(storages[0],targets[0]);
  assertFalse(isOnSameRack(targets[0],targets[1]));
  assertTrue(isOnSameRack(targets[1],targets[2]));
  excludedNodes.clear();
  chosenNodes.clear();
  excludedNodes.add(dataNodes[1]);
  targets=chooseTarget(4,chosenNodes,excludedNodes);
  assertEquals(targets.length,4);
  assertEquals(storages[0],targets[0]);
  for (int i=1; i < 4; i++) {
    assertFalse(isOnSameRack(targets[0],targets[i]));
  }
  assertTrue(isOnSameRack(targets[1],targets[2]) || isOnSameRack(targets[2],targets[3]));
  assertFalse(isOnSameRack(targets[1],targets[3]));
  excludedNodes.clear();
  chosenNodes.clear();
  excludedNodes.add(dataNodes[1]);
  chosenNodes.add(storages[2]);
  targets=replicator.chooseTarget(filename,1,dataNodes[0],chosenNodes,true,excludedNodes,BLOCK_SIZE,TestBlockStoragePolicy.DEFAULT_STORAGE_POLICY);
  System.out.println("targets=" + Arrays.asList(targets));
  assertEquals(2,targets.length);
  int i=0;
  for (; i < targets.length && !storages[2].equals(targets[i]); i++)   ;
  assertTrue(i < targets.length);
}
