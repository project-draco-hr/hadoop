{
  int DFS_NAMENODE_REPLICATION_INTERVAL=1000;
  int HIGH_PRIORITY=0;
  Configuration conf=new Configuration();
  conf.setInt(DFSConfigKeys.DFS_NAMENODE_REPLICATION_INTERVAL_KEY,1);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build();
  try {
    cluster.waitActive();
    final LowRedundancyBlocks neededReconstruction=cluster.getNameNode().getNamesystem().getBlockManager().neededReconstruction;
    for (int i=0; i < 100; i++) {
      neededReconstruction.add(genBlockInfo(ThreadLocalRandom.current().nextLong()),2,0,0,3);
    }
    Thread.sleep(DFS_NAMENODE_REPLICATION_INTERVAL);
    neededReconstruction.add(genBlockInfo(ThreadLocalRandom.current().nextLong()),1,0,0,3);
    Thread.sleep(DFS_NAMENODE_REPLICATION_INTERVAL);
    assertFalse("Not able to clear the element from high priority list",neededReconstruction.iterator(HIGH_PRIORITY).hasNext());
  }
  finally {
    cluster.shutdown();
  }
}
