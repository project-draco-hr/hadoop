{
  Collection<DatanodeStorageInfo> nonExcess=new ArrayList<DatanodeStorageInfo>();
  nonExcess.add(storages[0]);
  nonExcess.add(storages[1]);
  nonExcess.add(storages[2]);
  nonExcess.add(storages[3]);
  List<DatanodeStorageInfo> excessReplicas=new ArrayList<>();
  BlockStoragePolicySuite POLICY_SUITE=BlockStoragePolicySuite.createDefaultSuite();
  BlockStoragePolicy storagePolicy=POLICY_SUITE.getDefaultPolicy();
  DatanodeStorageInfo excessSSD=DFSTestUtil.createDatanodeStorageInfo("Storage-excess-SSD-ID","localhost",storages[0].getDatanodeDescriptor().getNetworkLocation(),"foo.com",StorageType.SSD);
  updateHeartbeatWithUsage(excessSSD.getDatanodeDescriptor(),2 * HdfsServerConstants.MIN_BLOCKS_FOR_WRITE * BLOCK_SIZE,0L,2 * HdfsServerConstants.MIN_BLOCKS_FOR_WRITE * BLOCK_SIZE,0L,0L,0L,0,0);
  DatanodeDescriptor delHintNode=storages[0].getDatanodeDescriptor();
  List<StorageType> excessTypes=storagePolicy.chooseExcess((short)3,DatanodeStorageInfo.toStorageTypes(nonExcess));
  excessReplicas=replicator.chooseReplicasToDelete(nonExcess,3,excessTypes,storages[3].getDatanodeDescriptor(),delHintNode);
  assertTrue(excessReplicas.size() > 0);
  assertTrue(excessReplicas.contains(storages[0]));
  DatanodeStorageInfo excessStorage=DFSTestUtil.createDatanodeStorageInfo("Storage-excess-ID","localhost",delHintNode.getNetworkLocation(),"foo.com",StorageType.ARCHIVE);
  nonExcess.add(excessStorage);
  excessTypes=storagePolicy.chooseExcess((short)3,DatanodeStorageInfo.toStorageTypes(nonExcess));
  excessReplicas=replicator.chooseReplicasToDelete(nonExcess,3,excessTypes,storages[3].getDatanodeDescriptor(),null);
  assertTrue(excessReplicas.contains(excessStorage));
  nonExcess.clear();
  nonExcess.add(excessSSD);
  nonExcess.add(storages[3]);
  nonExcess.add(storages[4]);
  nonExcess.add(storages[5]);
  excessTypes=storagePolicy.chooseExcess((short)3,DatanodeStorageInfo.toStorageTypes(nonExcess));
  excessReplicas=replicator.chooseReplicasToDelete(nonExcess,3,excessTypes,storages[3].getDatanodeDescriptor(),storages[5].getDatanodeDescriptor());
  assertTrue(excessReplicas.size() == 0);
}
