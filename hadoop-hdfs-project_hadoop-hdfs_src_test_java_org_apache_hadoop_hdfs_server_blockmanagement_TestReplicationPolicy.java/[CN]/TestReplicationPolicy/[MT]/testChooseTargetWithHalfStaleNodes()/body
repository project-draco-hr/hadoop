{
  namenode.getNamesystem().getBlockManager().getDatanodeManager().setAvoidStaleDataNodesForWrite(true);
  for (int i=0; i < 3; i++) {
    dataNodes[i].setLastUpdate(Time.now() - staleInterval - 1);
  }
  DatanodeDescriptor[] targets;
  targets=replicator.chooseTarget(filename,0,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,0);
  targets=replicator.chooseTarget(filename,1,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,1);
  assertFalse(containsWithinRange(targets[0],dataNodes,0,2));
  targets=replicator.chooseTarget(filename,2,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,2);
  assertFalse(containsWithinRange(targets[0],dataNodes,0,2));
  assertFalse(containsWithinRange(targets[1],dataNodes,0,2));
  targets=replicator.chooseTarget(filename,3,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,3);
  assertTrue(containsWithinRange(targets[0],dataNodes,3,5));
  assertTrue(containsWithinRange(targets[1],dataNodes,3,5));
  assertTrue(containsWithinRange(targets[2],dataNodes,3,5));
  targets=replicator.chooseTarget(filename,4,dataNodes[0],new ArrayList<DatanodeDescriptor>(),BLOCK_SIZE);
  assertEquals(targets.length,4);
  assertTrue(containsWithinRange(dataNodes[3],targets,0,3));
  assertTrue(containsWithinRange(dataNodes[4],targets,0,3));
  assertTrue(containsWithinRange(dataNodes[5],targets,0,3));
  namenode.getNamesystem().getBlockManager().getDatanodeManager().setAvoidStaleDataNodesForWrite(false);
  for (int i=0; i < dataNodes.length; i++) {
    dataNodes[i].setLastUpdate(Time.now());
  }
}
