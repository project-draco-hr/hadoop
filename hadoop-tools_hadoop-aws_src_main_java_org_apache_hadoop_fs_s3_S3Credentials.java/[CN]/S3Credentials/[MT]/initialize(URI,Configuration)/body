{
  if (uri.getHost() == null) {
    throw new IllegalArgumentException("Invalid hostname in URI " + uri);
  }
  String userInfo=uri.getUserInfo();
  if (userInfo != null) {
    int index=userInfo.indexOf(':');
    if (index != -1) {
      accessKey=userInfo.substring(0,index);
      secretAccessKey=userInfo.substring(index + 1);
    }
 else {
      accessKey=userInfo;
    }
  }
  String scheme=uri.getScheme();
  String accessKeyProperty=String.format("fs.%s.awsAccessKeyId",scheme);
  String secretAccessKeyProperty=String.format("fs.%s.awsSecretAccessKey",scheme);
  if (accessKey == null) {
    accessKey=conf.getTrimmed(accessKeyProperty);
  }
  if (secretAccessKey == null) {
    secretAccessKey=conf.getTrimmed(secretAccessKeyProperty);
  }
  if (accessKey == null && secretAccessKey == null) {
    throw new IllegalArgumentException("AWS " + "Access Key ID and Secret Access " + "Key must be specified as the "+ "username or password "+ "(respectively) of a " + scheme + " URL, or by setting the "+ accessKeyProperty+ " or "+ secretAccessKeyProperty+ " properties (respectively).");
  }
 else   if (accessKey == null) {
    throw new IllegalArgumentException("AWS " + "Access Key ID must be specified " + "as the username of a " + scheme + " URL, or by setting the "+ accessKeyProperty+ " property.");
  }
 else   if (secretAccessKey == null) {
    throw new IllegalArgumentException("AWS " + "Secret Access Key must be " + "specified as the password of a " + scheme + " URL, or by setting the "+ secretAccessKeyProperty+ " property.");
  }
}
