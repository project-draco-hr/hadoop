{
  RMContainer container=getResourceScheduler().getRMContainer(containerId);
  int timeoutSecs=0;
  while (container == null && timeoutSecs++ < timeoutMillisecs / 100) {
    for (    MockNM nm : nms) {
      nm.nodeHeartbeat(true);
    }
    container=getResourceScheduler().getRMContainer(containerId);
    System.out.println("Waiting for container " + containerId + " to be allocated.");
    Thread.sleep(100);
    if (timeoutMillisecs <= timeoutSecs * 100) {
      return false;
    }
  }
  Assert.assertNotNull("Container shouldn't be null",container);
  while (!containerState.equals(container.getState()) && timeoutSecs++ < timeoutMillisecs / 100) {
    System.out.println("Container : " + containerId + " State is : "+ container.getState()+ " Waiting for state : "+ containerState);
    for (    MockNM nm : nms) {
      nm.nodeHeartbeat(true);
    }
    Thread.sleep(100);
    if (timeoutMillisecs <= timeoutSecs * 100) {
      return false;
    }
  }
  System.out.println("Container State is : " + container.getState());
  Assert.assertEquals("Container state is not correct (timedout)",containerState,container.getState());
  return true;
}
