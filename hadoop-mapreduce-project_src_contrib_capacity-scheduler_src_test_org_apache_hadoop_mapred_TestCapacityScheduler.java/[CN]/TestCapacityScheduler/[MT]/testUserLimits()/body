{
  String[] qs={"default","q2"};
  taskTrackerManager.addQueues(qs);
  ArrayList<FakeQueueInfo> queues=new ArrayList<FakeQueueInfo>();
  queues.add(new FakeQueueInfo("default",50.0f,true,25));
  queues.add(new FakeQueueInfo("q2",50.0f,true,25));
  taskTrackerManager.setFakeQueues(queues);
  scheduler.start();
  taskTrackerManager.submitJobAndInit(JobStatus.PREP,10,10,"q2","u1");
  Map<String,String> expectedTaskStrings=new HashMap<String,String>();
  populateExpectedStrings(expectedTaskStrings,"attempt_test_0001_m_000001_0 on tt1","attempt_test_0001_r_000001_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",expectedTaskStrings);
  taskTrackerManager.submitJobAndInit(JobStatus.PREP,10,10,"q2","u2");
  checkAssignment(taskTrackerManager,scheduler,"tt1","attempt_test_0002_m_000001_0 on tt1");
  populateExpectedStrings(expectedTaskStrings,"attempt_test_0001_m_000002_0 on tt2","attempt_test_0002_r_000001_0 on tt2");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt2",expectedTaskStrings);
  checkAssignment(taskTrackerManager,scheduler,"tt2","attempt_test_0002_m_000002_0 on tt2");
}
