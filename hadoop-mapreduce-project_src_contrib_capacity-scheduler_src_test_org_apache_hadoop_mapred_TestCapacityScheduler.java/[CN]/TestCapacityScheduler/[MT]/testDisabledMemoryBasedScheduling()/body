{
  LOG.debug("Starting the scheduler.");
  taskTrackerManager=new FakeTaskTrackerManager(1,1,1);
  taskTrackerManager.addQueues(new String[]{"default"});
  ArrayList<FakeQueueInfo> queues=new ArrayList<FakeQueueInfo>();
  queues.add(new FakeQueueInfo("default",100.0f,true,25));
  taskTrackerManager.setFakeQueues(queues);
  scheduler.setTaskTrackerManager(taskTrackerManager);
  scheduler.start();
  LOG.debug("Submit one high memory job of 1 3GB map task " + "and 1 1GB reduce task.");
  JobConf jConf=new JobConf();
  jConf.setMemoryForMapTask(3 * 1024L);
  jConf.setMemoryForReduceTask(1 * 1024L);
  jConf.setNumMapTasks(1);
  jConf.setNumReduceTasks(1);
  jConf.setQueueName("default");
  jConf.setUser("u1");
  taskTrackerManager.submitJobAndInit(JobStatus.RUNNING,jConf);
  Map<String,String> expectedStrings=new HashMap<String,String>();
  expectedStrings.put(CapacityTestUtils.MAP,"attempt_test_0001_m_000001_0 on tt1");
  expectedStrings.put(CapacityTestUtils.REDUCE,"attempt_test_0001_r_000001_0 on tt1");
  checkMultipleTaskAssignment(taskTrackerManager,scheduler,"tt1",expectedStrings);
}
