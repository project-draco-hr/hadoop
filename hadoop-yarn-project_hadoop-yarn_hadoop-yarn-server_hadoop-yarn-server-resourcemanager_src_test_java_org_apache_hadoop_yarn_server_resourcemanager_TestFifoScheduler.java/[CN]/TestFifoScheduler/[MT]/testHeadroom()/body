{
  Configuration conf=new Configuration();
  conf.setClass(YarnConfiguration.RM_SCHEDULER,FifoScheduler.class,ResourceScheduler.class);
  MockRM rm=new MockRM(conf);
  rm.start();
  FifoScheduler fs=(FifoScheduler)rm.getResourceScheduler();
  RMNode n1=MockNodes.newNodeInfo(0,MockNodes.newResource(4 * GB),1);
  fs.handle(new NodeAddedSchedulerEvent(n1));
  ApplicationId appId1=BuilderUtils.newApplicationId(100,1);
  ApplicationAttemptId appAttemptId1=BuilderUtils.newApplicationAttemptId(appId1,1);
  SchedulerEvent event1=new AppAddedSchedulerEvent(appAttemptId1,"queue","user");
  fs.handle(event1);
  ApplicationId appId2=BuilderUtils.newApplicationId(200,2);
  ApplicationAttemptId appAttemptId2=BuilderUtils.newApplicationAttemptId(appId2,1);
  SchedulerEvent event2=new AppAddedSchedulerEvent(appAttemptId2,"queue","user");
  fs.handle(event2);
  List<ContainerStatus> emptyStatus=new ArrayList<ContainerStatus>();
  List<ContainerId> emptyId=new ArrayList<ContainerId>();
  List<ResourceRequest> emptyAsk=new ArrayList<ResourceRequest>();
  List<ResourceRequest> ask1=new ArrayList<ResourceRequest>();
  ask1.add(BuilderUtils.newResourceRequest(BuilderUtils.newPriority(0),ResourceRequest.ANY,BuilderUtils.newResource(GB,1),1));
  fs.allocate(appAttemptId1,ask1,emptyId);
  List<ResourceRequest> ask2=new ArrayList<ResourceRequest>();
  ask2.add(BuilderUtils.newResourceRequest(BuilderUtils.newPriority(0),ResourceRequest.ANY,BuilderUtils.newResource(2 * GB,1),1));
  fs.allocate(appAttemptId2,ask2,emptyId);
  fs.handle(new NodeUpdateSchedulerEvent(n1));
  Allocation allocation1=fs.allocate(appAttemptId1,emptyAsk,emptyId);
  Assert.assertEquals("Allocation headroom",1 * GB,allocation1.getResourceLimit().getMemory());
  Allocation allocation2=fs.allocate(appAttemptId2,emptyAsk,emptyId);
  Assert.assertEquals("Allocation headroom",1 * GB,allocation2.getResourceLimit().getMemory());
  rm.stop();
}
