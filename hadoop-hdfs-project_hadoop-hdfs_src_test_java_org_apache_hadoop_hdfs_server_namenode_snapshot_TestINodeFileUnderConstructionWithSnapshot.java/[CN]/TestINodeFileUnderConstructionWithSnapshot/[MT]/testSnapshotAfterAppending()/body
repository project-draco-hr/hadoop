{
  Path file=new Path(dir,"file");
  SnapshotTestHelper.createSnapshot(hdfs,dir,"s0");
  DFSTestUtil.createFile(hdfs,file,BLOCKSIZE,REPLICATION,seed);
  DFSTestUtil.appendFile(hdfs,file,BLOCKSIZE);
  INodeFile fileNode=(INodeFile)fsdir.getINode(file.toString());
  hdfs.createSnapshot(dir,"s1");
  hdfs.setReplication(file,(short)(REPLICATION - 1));
  DFSTestUtil.appendFile(hdfs,file,BLOCKSIZE);
  fileNode=(INodeFile)fsdir.getINode(file.toString());
  assertEquals(REPLICATION - 1,fileNode.getFileReplication());
  assertEquals(BLOCKSIZE * 3,fileNode.computeFileSize(true));
  hdfs.createSnapshot(dir,"s2");
  DFSTestUtil.appendFile(hdfs,file,BLOCKSIZE);
  fileNode=(INodeFile)fsdir.getINode(file.toString());
  assertEquals(REPLICATION - 1,fileNode.getFileReplication());
  assertEquals(BLOCKSIZE * 4,fileNode.computeFileSize(true));
}
