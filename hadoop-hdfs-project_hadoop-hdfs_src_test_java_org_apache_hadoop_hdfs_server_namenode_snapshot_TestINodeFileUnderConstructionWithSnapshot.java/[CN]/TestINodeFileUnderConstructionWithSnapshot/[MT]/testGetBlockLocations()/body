{
  final Path root=new Path("/");
  final Path file=new Path("/file");
  DFSTestUtil.createFile(hdfs,file,BLOCKSIZE,REPLICATION,seed);
  SnapshotTestHelper.createSnapshot(hdfs,root,"s1");
  final Path fileInSnapshot=SnapshotTestHelper.getSnapshotPath(root,"s1",file.getName());
  FileStatus status=hdfs.getFileStatus(fileInSnapshot);
  assertEquals(BLOCKSIZE,status.getLen());
  DFSTestUtil.appendFile(hdfs,file,BLOCKSIZE - 1);
  status=hdfs.getFileStatus(fileInSnapshot);
  assertEquals(BLOCKSIZE,status.getLen());
  status=hdfs.getFileStatus(file);
  assertEquals(BLOCKSIZE * 2 - 1,status.getLen());
  LocatedBlocks blocks=DFSClientAdapter.callGetBlockLocations(cluster.getNameNodeRpc(),fileInSnapshot.toString(),0,Long.MAX_VALUE);
  List<LocatedBlock> blockList=blocks.getLocatedBlocks();
  assertEquals(BLOCKSIZE,blocks.getFileLength());
  assertEquals(1,blockList.size());
  LocatedBlock lastBlock=blocks.getLastLocatedBlock();
  assertEquals(0,lastBlock.getStartOffset());
  assertEquals(BLOCKSIZE,lastBlock.getBlockSize());
  SnapshotTestHelper.createSnapshot(hdfs,root,"s2");
  final Path fileInSnapshot2=SnapshotTestHelper.getSnapshotPath(root,"s2",file.getName());
  HdfsDataOutputStream out=appendFileWithoutClosing(file,BLOCKSIZE);
  out.hsync(EnumSet.of(SyncFlag.UPDATE_LENGTH));
  status=hdfs.getFileStatus(fileInSnapshot2);
  assertEquals(BLOCKSIZE * 2 - 1,status.getLen());
  status=hdfs.getFileStatus(file);
  assertEquals(BLOCKSIZE * 3 - 1,status.getLen());
  blocks=DFSClientAdapter.callGetBlockLocations(cluster.getNameNodeRpc(),fileInSnapshot2.toString(),0,Long.MAX_VALUE);
  assertFalse(blocks.isUnderConstruction());
  assertTrue(blocks.isLastBlockComplete());
  blockList=blocks.getLocatedBlocks();
  assertEquals(BLOCKSIZE * 2 - 1,blocks.getFileLength());
  assertEquals(2,blockList.size());
  lastBlock=blocks.getLastLocatedBlock();
  assertEquals(BLOCKSIZE,lastBlock.getStartOffset());
  assertEquals(BLOCKSIZE,lastBlock.getBlockSize());
  blocks=DFSClientAdapter.callGetBlockLocations(cluster.getNameNodeRpc(),fileInSnapshot2.toString(),BLOCKSIZE,0);
  blockList=blocks.getLocatedBlocks();
  assertEquals(1,blockList.size());
  blocks=DFSClientAdapter.callGetBlockLocations(cluster.getNameNodeRpc(),file.toString(),0,Long.MAX_VALUE);
  blockList=blocks.getLocatedBlocks();
  assertEquals(3,blockList.size());
  assertTrue(blocks.isUnderConstruction());
  assertFalse(blocks.isLastBlockComplete());
  lastBlock=blocks.getLastLocatedBlock();
  assertEquals(BLOCKSIZE * 2,lastBlock.getStartOffset());
  assertEquals(BLOCKSIZE - 1,lastBlock.getBlockSize());
  out.close();
}
