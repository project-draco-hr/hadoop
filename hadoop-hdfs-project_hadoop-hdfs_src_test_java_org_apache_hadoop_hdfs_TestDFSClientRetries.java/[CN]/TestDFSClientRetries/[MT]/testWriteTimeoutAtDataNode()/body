{
  final int writeTimeout=100;
  conf.setInt(DFSConfigKeys.DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY,writeTimeout);
  final int blockSize=10 * 1024 * 1024;
  conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY,blockSize);
  conf.setInt(DFSConfigKeys.DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_KEY,1);
  final int bufferSize=4096;
  conf.setInt(CommonConfigurationKeys.IO_FILE_BUFFER_SIZE_KEY,bufferSize);
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(3).build();
  try {
    cluster.waitActive();
    FileSystem fs=cluster.getFileSystem();
    Path filePath=new Path("/testWriteTimeoutAtDataNode");
    OutputStream out=fs.create(filePath,true,bufferSize);
    writeData(out,2 * blockSize);
    out.close();
    byte[] buf=new byte[1024 * 1024];
    InputStream in=fs.open(filePath,bufferSize);
    IOUtils.readFully(in,buf,0,bufferSize / 2);
    for (int i=0; i < 10; i++) {
      Thread.sleep(2 * writeTimeout);
      IOUtils.readFully(in,buf,0,buf.length);
    }
    in.close();
  }
  finally {
    cluster.shutdown();
  }
}
