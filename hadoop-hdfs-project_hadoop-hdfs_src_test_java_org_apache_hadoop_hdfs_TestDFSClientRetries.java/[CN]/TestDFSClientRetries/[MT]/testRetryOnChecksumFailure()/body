{
  HdfsConfiguration conf=new HdfsConfiguration();
  MiniDFSCluster cluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).build();
  try {
    final short REPL_FACTOR=1;
    final long FILE_LENGTH=512L;
    cluster.waitActive();
    FileSystem fs=cluster.getFileSystem();
    Path path=new Path("/corrupted");
    DFSTestUtil.createFile(fs,path,FILE_LENGTH,REPL_FACTOR,12345L);
    DFSTestUtil.waitReplication(fs,path,REPL_FACTOR);
    ExtendedBlock block=DFSTestUtil.getFirstBlock(fs,path);
    int blockFilesCorrupted=cluster.corruptBlockOnDataNodes(block);
    assertEquals("All replicas not corrupted",REPL_FACTOR,blockFilesCorrupted);
    InetSocketAddress nnAddr=new InetSocketAddress("localhost",cluster.getNameNodePort());
    DFSClient client=new DFSClient(nnAddr,conf);
    DFSInputStream dis=client.open(path.toString());
    byte[] arr=new byte[(int)FILE_LENGTH];
    for (int i=0; i < 2; ++i) {
      try {
        dis.read(arr,0,(int)FILE_LENGTH);
        fail("Expected ChecksumException not thrown");
      }
 catch (      Exception ex) {
        GenericTestUtils.assertExceptionContains("Checksum error",ex);
      }
    }
  }
  finally {
    cluster.shutdown();
  }
}
