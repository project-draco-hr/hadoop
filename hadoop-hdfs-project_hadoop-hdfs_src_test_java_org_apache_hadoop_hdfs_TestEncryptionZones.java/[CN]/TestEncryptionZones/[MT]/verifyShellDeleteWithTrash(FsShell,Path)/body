{
  try {
    Path trashDir=shell.getCurrentTrashDir(path);
    Path checkTrash=trashDir;
    while (!checkTrash.isRoot() && !checkTrash.getName().equals(".Trash")) {
      checkTrash=checkTrash.getParent();
    }
    assertEquals("No .Trash component found in trash dir " + trashDir,".Trash",checkTrash.getName());
    final Path trashFile=new Path(shell.getCurrentTrashDir(path) + "/" + path);
    String[] argv=new String[]{"-rm","-r",path.toString()};
    int res=ToolRunner.run(shell,argv);
    assertEquals("rm failed",0,res);
    assertTrue("File not in trash : " + trashFile,fs.exists(trashFile));
  }
 catch (  IOException ioe) {
    fail(ioe.getMessage());
  }
 finally {
    if (fs.exists(path)) {
      fs.delete(path,true);
    }
  }
}
