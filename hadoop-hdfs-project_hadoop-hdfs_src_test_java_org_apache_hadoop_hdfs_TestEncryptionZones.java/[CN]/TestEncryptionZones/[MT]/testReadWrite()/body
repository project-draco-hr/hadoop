{
  final HdfsAdmin dfsAdmin=new HdfsAdmin(FileSystem.getDefaultUri(conf),conf);
  final Path baseFile=new Path("/base");
  final int len=8192;
  DFSTestUtil.createFile(fs,baseFile,len,(short)1,0xFEED);
  final Path zone=new Path("/zone");
  fs.mkdirs(zone);
  dfsAdmin.createEncryptionZone(zone,TEST_KEY,NO_TRASH);
  final Path encFile1=new Path(zone,"myfile");
  DFSTestUtil.createFile(fs,encFile1,len,(short)1,0xFEED);
  verifyFilesEqual(fs,baseFile,encFile1,len);
  assertNumZones(1);
  String keyName=dfsAdmin.listEncryptionZones().next().getKeyName();
  cluster.getNamesystem().getProvider().rollNewVersion(keyName);
  verifyFilesEqual(fs,baseFile,encFile1,len);
  final Path encFile2=new Path(zone,"myfile2");
  DFSTestUtil.createFile(fs,encFile2,len,(short)1,0xFEED);
  FileEncryptionInfo feInfo1=getFileEncryptionInfo(encFile1);
  FileEncryptionInfo feInfo2=getFileEncryptionInfo(encFile2);
  assertFalse("EDEKs should be different",Arrays.equals(feInfo1.getEncryptedDataEncryptionKey(),feInfo2.getEncryptedDataEncryptionKey()));
  assertNotEquals("Key was rolled, versions should be different",feInfo1.getEzKeyVersionName(),feInfo2.getEzKeyVersionName());
  verifyFilesEqual(fs,encFile1,encFile2,len);
}
