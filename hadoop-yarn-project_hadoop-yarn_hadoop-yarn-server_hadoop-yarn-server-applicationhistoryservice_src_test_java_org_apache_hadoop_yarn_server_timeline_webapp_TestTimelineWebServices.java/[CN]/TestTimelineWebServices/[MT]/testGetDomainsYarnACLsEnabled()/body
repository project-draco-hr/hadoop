{
  AdminACLsManager oldAdminACLsManager=timelineACLsManager.setAdminACLsManager(adminACLsManager);
  try {
    WebResource r=resource();
    ClientResponse response=r.path("ws").path("v1").path("timeline").path("domain").queryParam("user.name","owner_1").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    Assert.assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    TimelineDomains domains=response.getEntity(TimelineDomains.class);
    Assert.assertEquals(2,domains.getDomains().size());
    for (int i=0; i < domains.getDomains().size(); ++i) {
      verifyDomain(domains.getDomains().get(i),i == 0 ? "domain_id_4" : "domain_id_1",true);
    }
    response=r.path("ws").path("v1").path("timeline").path("domain").queryParam("owner","owner_1").queryParam("user.name","tester").accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    Assert.assertEquals(MediaType.APPLICATION_JSON_TYPE,response.getType());
    domains=response.getEntity(TimelineDomains.class);
    Assert.assertEquals(2,domains.getDomains().size());
    for (int i=0; i < domains.getDomains().size(); ++i) {
      verifyDomain(domains.getDomains().get(i),i == 0 ? "domain_id_4" : "domain_id_1",false);
    }
  }
  finally {
    timelineACLsManager.setAdminACLsManager(oldAdminACLsManager);
  }
}
