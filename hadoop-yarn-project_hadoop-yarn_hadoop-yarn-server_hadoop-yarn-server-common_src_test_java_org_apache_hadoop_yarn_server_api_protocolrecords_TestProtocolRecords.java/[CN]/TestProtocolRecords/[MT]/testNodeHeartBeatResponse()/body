{
  NodeHeartbeatResponse record=Records.newRecord(NodeHeartbeatResponse.class);
  Map<ApplicationId,ByteBuffer> appCredentials=new HashMap<ApplicationId,ByteBuffer>();
  Credentials app1Cred=new Credentials();
  Token<DelegationTokenIdentifier> token1=new Token<DelegationTokenIdentifier>();
  token1.setKind(new Text("kind1"));
  app1Cred.addToken(new Text("token1"),token1);
  Token<DelegationTokenIdentifier> token2=new Token<DelegationTokenIdentifier>();
  token2.setKind(new Text("kind2"));
  app1Cred.addToken(new Text("token2"),token2);
  DataOutputBuffer dob=new DataOutputBuffer();
  app1Cred.writeTokenStorageToStream(dob);
  ByteBuffer byteBuffer1=ByteBuffer.wrap(dob.getData(),0,dob.getLength());
  appCredentials.put(ApplicationId.newInstance(1234,1),byteBuffer1);
  record.setSystemCredentialsForApps(appCredentials);
  NodeHeartbeatResponse proto=new NodeHeartbeatResponsePBImpl(((NodeHeartbeatResponsePBImpl)record).getProto());
  Assert.assertEquals(appCredentials,proto.getSystemCredentialsForApps());
}
