{
  ThreadFactory tf=new ThreadFactoryBuilder().setNameFormat("ContainerLauncher #%d").setDaemon(true).build();
  launcherPool=new ThreadPoolExecutor(INITIAL_POOL_SIZE,Integer.MAX_VALUE,1,TimeUnit.HOURS,new LinkedBlockingQueue<Runnable>(),tf);
  eventHandlingThread=new Thread(new Runnable(){
    @Override public void run(){
      ContainerLauncherEvent event=null;
      while (!Thread.currentThread().isInterrupted()) {
        try {
          event=eventQueue.take();
        }
 catch (        InterruptedException e) {
          LOG.error("Returning, interrupted : " + e);
          return;
        }
        int poolSize=launcherPool.getCorePoolSize();
        if (poolSize != limitOnPoolSize) {
          int numNodes=allNodes.size();
          int idealPoolSize=Math.min(limitOnPoolSize,numNodes);
          if (poolSize <= idealPoolSize) {
            int newPoolSize=idealPoolSize + INITIAL_POOL_SIZE;
            LOG.info("Setting ContainerLauncher pool size to " + newPoolSize);
            launcherPool.setCorePoolSize(newPoolSize);
          }
        }
        launcherPool.execute(new EventProcessor(event));
      }
    }
  }
);
  eventHandlingThread.setName("ContainerLauncher Event Handler");
  eventHandlingThread.start();
  super.start();
}
