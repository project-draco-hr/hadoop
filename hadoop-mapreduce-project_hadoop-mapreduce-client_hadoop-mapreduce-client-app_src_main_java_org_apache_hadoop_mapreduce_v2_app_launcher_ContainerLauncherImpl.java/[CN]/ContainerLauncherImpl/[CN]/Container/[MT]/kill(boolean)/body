{
  if (this.state == ContainerState.PREP) {
    this.state=ContainerState.KILLED_BEFORE_LAUNCH;
  }
 else   if (!isCompletelyDone()) {
    LOG.info("KILLING " + taskAttemptID);
    ContainerManagementProtocolProxyData proxy=null;
    try {
      proxy=getCMProxy(this.containerMgrAddress,this.containerID);
      if (dumpThreads) {
        final SignalContainerRequest request=SignalContainerRequest.newInstance(containerID,SignalContainerCommand.OUTPUT_THREAD_DUMP);
        proxy.getContainerManagementProtocol().signalToContainer(request);
      }
      List<ContainerId> ids=new ArrayList<ContainerId>();
      ids.add(this.containerID);
      StopContainersRequest request=StopContainersRequest.newInstance(ids);
      StopContainersResponse response=proxy.getContainerManagementProtocol().stopContainers(request);
      if (response.getFailedRequests() != null && response.getFailedRequests().containsKey(this.containerID)) {
        throw response.getFailedRequests().get(this.containerID).deSerialize();
      }
    }
 catch (    Throwable t) {
      String message="cleanup failed for container " + this.containerID + " : "+ StringUtils.stringifyException(t);
      context.getEventHandler().handle(new TaskAttemptDiagnosticsUpdateEvent(this.taskAttemptID,message));
      LOG.warn(message);
    }
 finally {
      if (proxy != null) {
        cmProxy.mayBeCloseProxy(proxy);
      }
    }
    this.state=ContainerState.DONE;
  }
  context.getEventHandler().handle(new TaskAttemptEvent(this.taskAttemptID,TaskAttemptEventType.TA_CONTAINER_CLEANED));
}
