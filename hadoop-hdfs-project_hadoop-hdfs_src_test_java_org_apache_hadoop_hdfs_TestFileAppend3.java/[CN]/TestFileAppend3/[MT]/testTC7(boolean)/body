{
  final short repl=2;
  final Path p=new Path("/TC7/foo" + (appendToNewBlock ? "0" : "1"));
  System.out.println("p=" + p);
  final int len1=(int)(BLOCK_SIZE / 2);
{
    FSDataOutputStream out=fs.create(p,false,buffersize,repl,BLOCK_SIZE);
    AppendTestUtil.write(out,0,len1);
    out.close();
  }
  DFSTestUtil.waitReplication(fs,p,repl);
  final LocatedBlocks locatedblocks=fs.dfs.getNamenode().getBlockLocations(p.toString(),0L,len1);
  assertEquals(1,locatedblocks.locatedBlockCount());
  final LocatedBlock lb=locatedblocks.get(0);
  final ExtendedBlock blk=lb.getBlock();
  assertEquals(len1,lb.getBlockSize());
  DatanodeInfo[] datanodeinfos=lb.getLocations();
  assertEquals(repl,datanodeinfos.length);
  final DataNode dn=cluster.getDataNode(datanodeinfos[0].getIpcPort());
  final File f=DataNodeTestUtils.getBlockFile(dn,blk.getBlockPoolId(),blk.getLocalBlock());
  final RandomAccessFile raf=new RandomAccessFile(f,"rw");
  AppendTestUtil.LOG.info("dn=" + dn + ", blk="+ blk+ " (length="+ blk.getNumBytes()+ ")");
  assertEquals(len1,raf.length());
  raf.setLength(0);
  raf.close();
  final int len2=(int)BLOCK_SIZE;
{
    FSDataOutputStream out=appendToNewBlock ? fs.append(p,EnumSet.of(CreateFlag.APPEND,CreateFlag.NEW_BLOCK),4096,null) : fs.append(p);
    AppendTestUtil.write(out,len1,len2);
    out.close();
  }
  AppendTestUtil.check(fs,p,len1 + len2);
}
