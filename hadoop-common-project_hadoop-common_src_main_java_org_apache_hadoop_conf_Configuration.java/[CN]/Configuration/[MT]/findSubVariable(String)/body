{
  int[] result={-1,-1};
  int matchStart;
  int leftBrace;
  match_loop:   for (matchStart=1, leftBrace=eval.indexOf('{',matchStart); leftBrace > 0 && leftBrace + "{c".length() < eval.length(); leftBrace=eval.indexOf('{',matchStart)) {
    int matchedLen=0;
    if (eval.charAt(leftBrace - 1) == '$') {
      int subStart=leftBrace + 1;
      for (int i=subStart; i < eval.length(); i++) {
switch (eval.charAt(i)) {
case '}':
          if (matchedLen > 0) {
            result[SUB_START_IDX]=subStart;
            result[SUB_END_IDX]=subStart + matchedLen;
            break match_loop;
          }
case ' ':
case '$':
        matchStart=i + 1;
      continue match_loop;
default :
    matchedLen++;
}
}
break match_loop;
}
 else {
matchStart=leftBrace + 1;
}
}
return result;
}
