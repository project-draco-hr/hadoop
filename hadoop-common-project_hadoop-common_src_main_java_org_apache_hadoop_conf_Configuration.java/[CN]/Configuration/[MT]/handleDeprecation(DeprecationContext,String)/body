{
  if (null != name) {
    name=name.trim();
  }
  ArrayList<String> names=new ArrayList<String>();
  if (isDeprecated(name)) {
    DeprecatedKeyInfo keyInfo=deprecations.getDeprecatedKeyMap().get(name);
    if (keyInfo != null) {
      if (!keyInfo.getAndSetAccessed()) {
        logDeprecation(keyInfo.getWarningMessage(name));
      }
      for (      String newKey : keyInfo.newKeys) {
        if (newKey != null) {
          names.add(newKey);
        }
      }
    }
  }
  if (names.size() == 0) {
    names.add(name);
  }
  for (  String n : names) {
    String deprecatedKey=deprecations.getReverseDeprecatedKeyMap().get(n);
    if (deprecatedKey != null && !getOverlay().containsKey(n) && getOverlay().containsKey(deprecatedKey)) {
      getProps().setProperty(n,getOverlay().getProperty(deprecatedKey));
      getOverlay().setProperty(n,getOverlay().getProperty(deprecatedKey));
    }
  }
  return names.toArray(new String[names.size()]);
}
