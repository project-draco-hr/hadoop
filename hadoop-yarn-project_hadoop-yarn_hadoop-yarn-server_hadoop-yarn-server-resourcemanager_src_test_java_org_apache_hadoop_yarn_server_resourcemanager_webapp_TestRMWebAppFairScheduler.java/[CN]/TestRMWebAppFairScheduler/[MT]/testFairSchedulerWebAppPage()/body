{
  List<RMAppState> appStates=Arrays.asList(RMAppState.NEW,RMAppState.NEW_SAVING,RMAppState.SUBMITTED);
  final RMContext rmContext=mockRMContext(appStates);
  Injector injector=WebAppTests.createMockInjector(RMContext.class,rmContext,new Module(){
    @Override public void configure(    Binder binder){
      try {
        ResourceManager mockRmWithFairScheduler=mockRm(rmContext);
        binder.bind(ResourceManager.class).toInstance(mockRmWithFairScheduler);
        binder.bind(ApplicationBaseProtocol.class).toInstance(mockRmWithFairScheduler.getClientRMService());
      }
 catch (      IOException e) {
        throw new IllegalStateException(e);
      }
    }
  }
);
  FairSchedulerPage fsViewInstance=injector.getInstance(FairSchedulerPage.class);
  fsViewInstance.render();
  WebAppTests.flushOutput(injector);
}
