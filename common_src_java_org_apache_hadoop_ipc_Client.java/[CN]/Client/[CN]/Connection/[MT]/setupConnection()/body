{
  short ioFailures=0;
  short timeoutFailures=0;
  while (true) {
    try {
      this.socket=socketFactory.createSocket();
      this.socket.setTcpNoDelay(tcpNoDelay);
      if (UserGroupInformation.isSecurityEnabled()) {
        KerberosInfo krbInfo=remoteId.getProtocol().getAnnotation(KerberosInfo.class);
        if (krbInfo != null && krbInfo.clientPrincipal() != null) {
          String host=SecurityUtil.getHostFromPrincipal(remoteId.getTicket().getUserName());
          InetAddress localAddr=NetUtils.getLocalInetAddress(host);
          if (localAddr != null) {
            this.socket.bind(new InetSocketAddress(localAddr,0));
          }
        }
      }
      NetUtils.connect(this.socket,remoteId.getAddress(),20000);
      if (rpcTimeout > 0) {
        pingInterval=rpcTimeout;
      }
      this.socket.setSoTimeout(pingInterval);
      return;
    }
 catch (    SocketTimeoutException toe) {
      handleConnectionFailure(timeoutFailures++,45,toe);
    }
catch (    IOException ie) {
      handleConnectionFailure(ioFailures++,maxRetries,ie);
    }
  }
}
